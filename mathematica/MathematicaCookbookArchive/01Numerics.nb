(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    159554,       5472]
NotebookOptionsPosition[    127952,       4519]
NotebookOutlinePosition[    135719,       4704]
CellTagsIndexPosition[    135140,       4688]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "CHAPTER ",
 
 CounterBox["ChapterLabel"]
}], "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 1}},
 FontColor->GrayLevel[0],
 CellTags->"chNumerics"],

Cell["Numerics", "ChapterTitle"],

Cell["\<\
Jenny I\[CloseCurlyQuote]ve got your number
I need to make you mine
Jenny don\[CloseCurlyQuote]t change your number
Eight six seven five three oh nine
Eight six seven five three oh nine
Eight six seven five three oh nine
Eight six seven five three oh nine\
\>", "Epigraph",
 CellChangeTimes->{{3.469461209438631*^9, 3.4694612159293537`*^9}, 
   3.469461513404765*^9, 3.475324896340334*^9},
 FontColor->GrayLevel[0]],

Cell["Tommy Tutone, \[OpenCurlyDoubleQuote]867-5309/Jenny\
\[CloseCurlyDoubleQuote]", "EpigraphAuthor",
 CellChangeTimes->{{3.470502634108251*^9, 3.470502653955915*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introduction"
}], "Heading1",
 FontColor->GrayLevel[0],
 CellTags->"IntroductionCh1"],

Cell[CellGroupData[{

Cell["Numerical Types", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.4693842128382807`*^9, 3.469384212847484*^9}, {
  3.469386396808319*^9, 3.4693863969498043`*^9}}],

Cell["\<\
Mathematics is a huge, almost all-encompassing subject, and the average \
layperson often fails to appreciate the types of exotic objects that are in \
the mathematician\[CloseCurlyQuote]s domain. Yet every person on the street \
perceives math is about numbers. So even though numbers only scratch the \
surface of math and Mathematica, it makes sense to begin with their \
representation.\
\>", "Text",
 CellChangeTimes->{{3.469386419331682*^9, 3.4693864495180273`*^9}, 
   3.4694615276725817`*^9, {3.46953345902002*^9, 3.46953346704525*^9}, {
   3.46953350876116*^9, 3.469533527402236*^9}, {3.4699822711841373`*^9, 
   3.469982276530407*^9}, 3.485522218970203*^9},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 StyleBox["Mathematica supports four numerical types",
  FontTracking->"Plain"],
 StyleBox[": ",
  FontTracking->"SemiCondensed"],
 StyleBox["Integer", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", ",
  FontTracking->"SemiCondensed"],
 StyleBox["Rational", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", ",
  FontTracking->"SemiCondensed"],
 StyleBox["Real", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", and ",
  FontTracking->"SemiCondensed"],
 StyleBox["Complex", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[".",
  FontTracking->"SemiCondensed"],
 " ",
 "In the following examples we use Mathematica\[CloseCurlyQuote]s comment \
notation ",
 StyleBox["(*", "Literal"],
 StyleBox["comment", "LiteralItalic",
  FontFamily->"WriTheSansMonoCond BoldItalic"],
 StyleBox["*)", "Literal"],
 "."
}], "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4693863212993813`*^9, 3.469386322432013*^9}, {
   3.469461233931425*^9, 3.4694612362696247`*^9}, 3.469969933343955*^9, 
   3.4700568092079687`*^9},
 FontColor->GrayLevel[0]],

Cell["\<\
1        (*The integer one*)
1 / 2    (*The rational one half*)
1.2 *^ 8  (*The real 1.2 x 10^8*)
3 + 2 I  (*The complex number 3+2i*)\
\>", "Code",
 CellChangeTimes->{{3.4693863355049133`*^9, 3.4693863387602873`*^9}, {
   3.469386542765583*^9, 3.4693865467533484`*^9}, 3.469970052676691*^9, 
   3.4855209636872168`*^9, {3.485521072093069*^9, 3.485521073243477*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "There is no need to take my word that these expressions have the specified \
types. You can ask Mathematica to tell you using the function ",
 StyleBox["Head[]", "UserInput",
  AutoStyleOptions->{
  "StringStyle"->{
   FontColor -> GrayLevel[0.4], ShowAutoStyles -> False, ShowSyntaxStyles -> 
    False, AutoNumberFormatting -> False}}],
 ", which returns the head of an expression (i.e., head of a list). "
}], "Text",
 CellChangeTimes->{{3.46938663081885*^9, 3.4693866597450743`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Head", "[", "1", "]"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[2]:="],

Cell[BoxData["Integer"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"1", "/", "2"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[3]:="],

Cell[BoxData["Rational"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"1.2*^", " ", "8"}], "]"}]], "Input",
 CellChangeTimes->{{3.485521100594284*^9, 3.485521101996413*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[4]:="],

Cell[BoxData["Real"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"3", " ", "+", " ", 
   RowBox[{"2", " ", "I"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[5]:="],

Cell[BoxData["Complex"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[TextData[{
 "Although Mathematica does not internally store numbers as lists, it \
provides the illusion that a number has a head indicating its type. This is \
consistent with the fact that everything in Mathematica is an expression and \
every expression must have a head.",
 " ",
 "It is also common for Mathematica to use the head to indicate type when \
constructing more complex objects. See ",
 ButtonBox["Recipe 1.5",
  BaseStyle->"Hyperlink",
  ButtonData->"WorkingWithIntervals"],
 ", for example. If you are confused by this, for now, just think of ",
 StyleBox["Head", "Literal"],
 " as returning a type name when presented with an ",
 StyleBox["atomic expression", "Technical Italic"],
 " (expressions that can\[CloseCurlyQuote]t be divided into subexpressions).  "
}], "Text",
 CellChangeTimes->{
  3.469386933710775*^9, {3.469387008903839*^9, 3.469387025008699*^9}, {
   3.4693870947477293`*^9, 3.469387101217778*^9}, {3.469387202382028*^9, 
   3.4693872043918247`*^9}, 3.46946154850356*^9, 3.470056817140768*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exact and Approximate Results", "Heading2"],

Cell[TextData[{
 "Mathematica is unique in comparison to most mathematical tools and \
programming languages in that it will usually produce exact results unless \
you tell it otherwise. The following examples show the difference between \
exact and approximate results. Recipes ",
 ButtonBox["1.1",
  BaseStyle->"Hyperlink",
  ButtonData->"ControllingPrecisionAndAccuracy"],
 " and ",
 ButtonBox["1.2",
  BaseStyle->"Hyperlink",
  ButtonData->"MixingDifferentNumericTypes"],
 " show you how to make Mathematica use the appropriate form."
}], "Text",
 CellChangeTimes->{{3.469387040563136*^9, 3.469387042542403*^9}, {
  3.469387306701676*^9, 3.469387307961646*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
Exact results are displayed in their entirety when possible or symbolically \
when full display would be impossible due to the infinity of the exact \
representation.\
\>", "Text",
 CellChangeTimes->{{3.469387341711574*^9, 3.4693873874242697`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3", " ", "^", " ", "1000"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[6]:="],

Cell[BoxData[\
"13220708194808066368904552597521443659654220327521481676649203682268285973467\
048995407783138506080619639097776968725823559509545821006189118653427252579536\
740276202251983208038780147742289648412743904001175886180411289478156230944380\
615661730540866744905061781254803444055470543970388958174653682549161362208302\
685637785822902284163983078878969185564040848989376093732421718463599386955167\
650189405881090604260896714388641028143503856487471658320106143661321731027689\
02855220001"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[6]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "2", "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[7]:="],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[7]="]
}, Open  ]],

Cell[TextData[{
 "Approximate numeric results are represented in machine precision floating \
point by default. On most modern computers, this means ",
 StyleBox["double\[Hyphen]precision", "Technical Italic"],
 " floating\[Hyphen]point",
 " ",
 "numbers, which contain a total of 64 binary bits, typically yielding 16 \
decimal digits of mantissa. You can also specify numbers with greater than \
machine precision (see ",
 ButtonBox["Recipe 1.1",
  BaseStyle->"Hyperlink",
  ButtonData->"ControllingPrecisionAndAccuracy"],
 ") but there is a performance cost: Mathematica must switch from the native \
hardware-based floating-point algorithms to software-based ones."
}], "Text",
 CellChangeTimes->{{3.469387414857811*^9, 3.469387415454878*^9}, {
   3.4694503133297*^9, 3.469450366810794*^9}, {3.470060320953928*^9, 
   3.470060323224807*^9}, 3.4753249373794403`*^9, 3.485522220146285*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"3.", " ", "^", " ", "1000"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[8]:="],

Cell[BoxData["1.32207081948080731983939078909243007166386436944773524`15.\
653559774527023*^477"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "2.", "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[9]:="],

Cell[BoxData["1.4142135623730951`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[TextData[{
 "By adding a decimal point to a number, you force Mathematica to treat it as \
approximate. These approximate numbers will be machine precision by default, \
but there are several ways to force higher precision. Recipes ",
 ButtonBox["1.1",
  BaseStyle->"Hyperlink",
  ButtonData->"ControllingPrecisionAndAccuracy"],
 " and ",
 ButtonBox["1.2",
  BaseStyle->"Hyperlink",
  ButtonData->"MixingDifferentNumericTypes"],
 " in this chapter will elaborate on these differences."
}], "Text",
 CellChangeTimes->{{3.469450426546689*^9, 3.469450471387185*^9}, {
  3.469451428050598*^9, 3.469451430450727*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Expressions", "Heading2"],

Cell[TextData[{
 "The previous examples show simple numerical expressions. In practice, \
Mathematica follows general mathematical notation, but in many cases this \
means that there ",
 StyleBox["are multiple ways to express the same thing. \
Let\[CloseCurlyQuote]s consider each of the common oper",
  FontTracking->"Extended"],
 "ations that arise in algebra. There are several ways to express \
multiplication, division, and other arithmetic operations. A single space \
between expressions (e.g., v",
 StyleBox["ariables, numbers) implies multiplication, as is the typical \
convention among mathe",
  FontTracking->"Extended"],
 "maticians. You can evaluate typeset mathematics using special symbols, such \
as \[Times]. You can also use ",
 StyleBox["Full Form", "Technical Italic"],
 " (e.g., ",
 StyleBox["Plus", "Literal"],
 ", ",
 StyleBox["Times", "Literal"],
 ", ",
 StyleBox["Divide", "Literal"],
 "), but for arithmetic this is unnecessarily verbose."
}], "Text",
 CellChangeTimes->{{3.4694514531666813`*^9, 3.469451548248316*^9}, {
  3.469461441687478*^9, 3.469461443113277*^9}, {3.469970142501593*^9, 
  3.4699701495290127`*^9}, {3.470059041119211*^9, 3.470059055090707*^9}, {
  3.470502747105735*^9, 3.4705027671690893`*^9}, {3.475325152058535*^9, 
  3.475325152949585*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", " ", "+", " ", "8"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.47532513525548*^9},
 FontColor->GrayLevel[0],
 CellLabel->"In[10]:="],

Cell[BoxData["17"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[10]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plus", "[", 
  RowBox[{"9", ",", "8"}], "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[11]:="],

Cell[BoxData["17"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"9", " ", "\[Times]", " ", "8"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[12]:="],

Cell[BoxData["72"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "9"}], ";", 
  RowBox[{"b", "=", "8"}], ";"}], "\n", 
 RowBox[{"a", " ", "b", "  "}]}], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[13]:="],

Cell[BoxData["72"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[14]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Times", "[", 
  RowBox[{"9", ",", "8"}], "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[15]:="],

Cell[BoxData["72"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[15]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"8", "/", "9"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[16]:="],

Cell[BoxData[
 FractionBox["8", "9"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["8", "9"]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[17]:="],

Cell[BoxData[
 FractionBox["8", "9"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[17]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Divide", "[", 
  RowBox[{"8", ",", "9"}], "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[18]:="],

Cell[BoxData[
 FractionBox["8", "9"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[18]="]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The various representations are known as \[OpenCurlyDoubleQuote]forms\
\[CloseCurlyDoubleQuote] in Mathematica (e.g., ",
 StyleBox["InputForm", "Literal"],
 ", ",
 StyleBox["OutputForm", "Literal"],
 ", ",
 StyleBox["TraditionalForm", "Literal"],
 ", etc.). ",
 ButtonBox["Recipe 1.7",
  BaseStyle->"Hyperlink",
  ButtonData->"Displaying Numbers in Alternate Forms"],
 " shows you how to control what form is used for output of results. \
Controlling what form is used for input is a function of using the various \
features of the Mathematica frontend (palettes, shortcut keys, etc.). This \
book will not discuss the use of the frontend, since its main focus is \
programming, and there are numerous other resources (the best being the \
integrated help system) for mastering the frontend. "
}], "Text",
 CellChangeTimes->{{3.469451602820876*^9, 3.469451613774344*^9}, {
   3.469451673847674*^9, 3.469451680500824*^9}, {3.4694517197586193`*^9, 
   3.469451764473219*^9}, {3.4694517983496437`*^9, 3.469451880688202*^9}, 
   3.475327902071393*^9, 3.475327959580213*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical Approximations", "Heading2"],

Cell[TextData[{
 "Mathematica is famous for its symbolic abilities; however, when it comes to \
numerical methods it is also no slouch! The core functions for numerical \
solutions are ",
 StyleBox["NSum", "Literal"],
 ", ",
 StyleBox["NProduct", "Literal"],
 ", ",
 StyleBox["NSolve", "Literal"],
 ", ",
 StyleBox["NIntegrate", "Literal"],
 ", and ",
 StyleBox["NDSolve", "Literal"],
 ". These are covered in Chapters ",
 ButtonBox["10",
  BaseStyle->"Hyperlink",
  ButtonData->{"Algebra.nb", "chAlgebra"}],
 " and ",
 ButtonBox["12",
  BaseStyle->"Hyperlink",
  ButtonData->{"Calculus.nb", "chCalculus"}],
 "."
}], "Text",
 CellChangeTimes->{{3.469451892746006*^9, 3.4694519558491*^9}, {
  3.470502812890471*^9, 3.470502820290228*^9}, {3.470502858054599*^9, 
  3.470502863924317*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Controlling Precision and Accuracy"
}], "Heading1",
 FontColor->GrayLevel[0],
 CellTags->"ControllingPrecisionAndAccuracy"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want numerical results that are to a specified numerical precision and \
accuracy.\
\>", "Text",
 CellChangeTimes->{3.469453423321755*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use ",
 StyleBox["N[]", "Literal"],
 " to convert from exact to approximate form while controlling precision and \
accuracy to the desired amount. "
}], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"1", "/", "5"}], "]"}], " "}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[19]:="],

Cell[BoxData["0.2`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[19]="],

Cell["", "PageBreak",
 PageBreakBelow->True,
 CellChangeTimes->{{3.470057091143457*^9, 3.470057124185248*^9}, 
   3.47006199240009*^9},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "You can explicitly specify the precision as a second argument to ",
 StyleBox["N[]", "Literal"],
 "."
}], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"1", "/", "17"}], ",", "10"}], "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[20]:="],

Cell[BoxData["0.05882352941176470588235294117647058824`10."], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[20]="]
}, Open  ]],

Cell["\<\
You can also explicitly specify both the precision and accuracy, but this is \
less common. You might do this to guarantee a fixed number of decimal places \
independent of the size of the actual number. \
\>", "Text",
 CellChangeTimes->{{3.469453029947714*^9, 3.469453075764736*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"17", ",", 
     RowBox[{"1", "/", "17"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Infinity", ",", "10"}], "}"}]}], "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "17.`11.230448921378274", ",", 
   "0.05882352941176470588235294117647058824`8.769551078621733"}], 
  "}"}]], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[21]="]
}, Open  ]]
}, Open  ]],

Cell["\<\
To drive this point home, I ask you to consider the following. The first \
column uses fixed precision, whereas the second uses infinite precision and \
fixed accuracy.\
\>", "Text",
 CellChangeTimes->{{3.469453126229938*^9, 3.469453148562974*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"With", " ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"10", "^", "n"}], "+", " ", 
         RowBox[{"1", "/", "17"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"N", "[", 
         RowBox[{"x", ",", " ", "10"}], "]"}], ",", " ", 
        RowBox[{"N", "[", 
         RowBox[{"x", ",", " ", 
          RowBox[{"{", 
           RowBox[{"Infinity", ",", "10"}], "}"}]}], "]"}]}], "}"}]}], "]"}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[22]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {"1.05882352941176470588235294117647058824`10.", 
     "1.05882352941176470588235294117647058824`10.024823583725032"},
    {"10.05882352941176470588235294117647058824`10.", 
     "10.05882352941176470588235294117647058824`11.00254718901388"},
    {"100.05882352941176470588235294117647058824`10.", 
     "100.05882352941176470588235294117647058824`12.000255392234294"},
    {"1000.05882352941176470588235294117647058824`10.", 
     "1000.05882352941176470588235294117647058824`13.000025545982885"},
    {"10000.05882352941176470588235294117647058824`10.", 
     "10000.05882352941176470588235294117647058824`14.000002554665908"},
    {"100000.05882352941176470588235294117647058824`10.", 
     "100000.05882352941176470588235294117647058824`15.000000255467267"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[22]//TableForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "For most purposes, treat precision as the total number of digits in the \
decimal representation of a number and accuracy as the total number of digits \
after the decimal. As such, precision is a measure of relative uncertainty \
(given a precision ",
 StyleBox["p", "Emphasis"],
 " a larger number will have more uncertainty than a smaller number). \
Accuracy is an absolute measure of uncertainty because the number of places \
after the decimal is independent of the magnitude of the number. Typically \
you only need to control precision in most applications. "
}], "Text",
 CellChangeTimes->{{3.469464855503683*^9, 3.469464866393331*^9}, {
   3.4694648986609993`*^9, 3.4694648991272182`*^9}, 3.469543021028946*^9, {
   3.469544851863765*^9, 3.469544857556773*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 StyleBox["There are two common syntaxes for using ",
  FontTracking->"Extended"],
 StyleBox["N[]", "Literal",
  FontTracking->"Extended"],
 StyleBox[". You already saw the functional ",
  FontTracking->"Extended"],
 StyleBox["syntax in the solution section. The second uses Mathematica\
\[CloseCurlyQuote]s postfix notation. See ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["the sidebar \[OpenCurlyDoubleQuote]Mathematica \
Expressions\[CloseCurlyDoubleQuote] on page 6",
  BaseStyle->"Hyperlink",
  ButtonData->"MathematicaExpressionsSidebar"],
  FontTracking->"Plain"],
 StyleBox[" for a discussion of postfix",
  FontTracking->"Plain"],
 StyleBox[" and other notations.",
  FontTracking->"Extended"]
}], "Text",
 CellChangeTimes->{{3.4694614567741137`*^9, 3.469461468325389*^9}, 
   3.4694649055078897`*^9, 3.469465008845429*^9, {3.469466746124797*^9, 
   3.469466761669689*^9}, {3.469466862970755*^9, 3.469466867753065*^9}, {
   3.4695541585426273`*^9, 3.4695541586614847`*^9}, {3.475328071250616*^9, 
   3.4753280730692663`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", "2", "]"}], " ", "//", "N"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[29]:="],

Cell[BoxData["1.4142135623730951`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[29]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mathematica Expressions", "SidebarTitle", "ProductionPageBreak",
 CellMargins->{{0, 0}, {-0.25, 5}},
 FontColor->GrayLevel[0],
 CellTags->"MathematicaExpressionsSidebar"],

Cell["", "SidebarTitleSpacer",
 CellMargins->{{0, 0}, {-0.25, -1}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica contains quite a bit of syntactic sugar that gives \
users the flexibility to enter expressions in a variety of ways. Developers \
of traditional languages (C+, Java, Ruby, etc.) ",
  FontTracking->"SemiCondensed"],
 StyleBox["are not typically used to this much flexibility. The flexibility \
stems partly from ",
  FontTracking->"Plain"],
 StyleBox["mathematics itself, which often provides many notations to express \
the same concepts. It ",
  FontTracking->"SemiCondensed"],
 StyleBox["also derives from Mathematica\[CloseCurlyQuote]s aim to be a \
platform for publishing mathematical ideas as",
  FontTracking->"Plain"],
 StyleBox[" much as a computer-aided mathematics tool and programming \
language.",
  FontTracking->"SemiCondensed"]
}], "SidebarBody",
 CellChangeTimes->{{3.469453209388139*^9, 3.4694532726748657`*^9}, {
   3.469453311459539*^9, 3.469453321203046*^9}, {3.469453430345146*^9, 
   3.4694534316722193`*^9}, 3.469460478388282*^9},
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell["\<\
At this point in the book, I do not go over all possible ways Mathematica can \
display input and output. Rather, I introduce the reader to four basic \
syntaxes for Mathematica expressions. This was a point of confusion for me \
when I first learned Mathematica, so I believe it is best to attend to it now.\
\>", "SidebarBody",
 CellChangeTimes->{{3.469453329889399*^9, 3.469453360933964*^9}, {
  3.4694534432671413`*^9, 3.4694535475639057`*^9}},
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell["Functional notation", "SidebarListVariableTerm",
 CellMargins->{{0, 0}, {-0.25, -1}},
 CellChangeTimes->{{3.469453587833147*^9, 3.4694535893716*^9}, 
   3.469460829536414*^9},
 FontFamily->"Birka Italic",
 FontSize->9.5,
 FontSlant->"Plain",
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "This is the most common notation. When we use ",
 StyleBox["N[value,precision]", "Literal"],
 ", we are using the functional notation for ",
 StyleBox["N", "Literal"],
 "."
}], "SidebarListVariableDescription",
 CellChangeTimes->{{3.469453587833147*^9, 3.4694535893645287`*^9}, {
  3.4694608493945513`*^9, 3.469460864376726*^9}},
 FontSize->9.5,
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell["Infix notation", "SidebarListVariableTerm",
 CellMargins->{{0, 0}, {-0.25, -1}},
 CellChangeTimes->{{3.469453598022924*^9, 3.4694535993972673`*^9}, 
   3.469460831513834*^9},
 FontFamily->"Birka Italic",
 FontSize->9.5,
 FontSlant->"Plain",
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "Infix notation is most common for operators such as ",
 StyleBox["+", "Literal"],
 ", ",
 StyleBox["-", "Literal"],
 ", ",
 StyleBox["*", "Literal"],
 ", etc. However, infix notation can be used for any function ",
 StyleBox["f", "Literal"],
 " by using the syntax ",
 StyleBox["~f~", "Literal"],
 "."
}], "SidebarListVariableDescription",
 CellChangeTimes->{{3.469453598022924*^9, 3.4694535993890257`*^9}, {
  3.4694608850095663`*^9, 3.469460886092222*^9}},
 FontSize->9.5,
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell["Postfix notation", "SidebarListVariableTerm",
 CellMargins->{{0, 0}, {-0.25, -1}},
 CellChangeTimes->{{3.4694536032957993`*^9, 3.469453604740078*^9}, 
   3.4694608328339033`*^9},
 FontFamily->"Birka Italic",
 FontSize->9.5,
 FontSlant->"Plain",
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "Some operators, like ",
 StyleBox["!", "Literal"],
 " for ",
 StyleBox["Factorial[]", "Literal"],
 ", use postfix notation, but as we already saw with ",
 StyleBox["N", "Literal"],
 ", postfix notation can be generally applied for function ",
 StyleBox["f", "Literal"],
 " using ",
 StyleBox["//f", "Literal"],
 ". "
}], "SidebarListVariableDescription",
 CellChangeTimes->{{3.4694536032957993`*^9, 3.469453604733204*^9}, {
  3.469460922207781*^9, 3.4694609354189043`*^9}},
 FontSize->9.5,
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell["Prefix notation", "SidebarListVariableTerm",
 CellMargins->{{0, 0}, {-0.25, -1}},
 CellChangeTimes->{{3.469453607887258*^9, 3.469453609469934*^9}, 
   3.4694608344815187`*^9},
 FontFamily->"Birka Italic",
 FontSize->9.5,
 FontSlant->"Plain",
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "Some operators, like ",
 StyleBox["-", "Literal"],
 " (unary ",
 StyleBox["Minus", "Literal"],
 "), use prefix notation, but there is also a general way to use prefix \
notation for any function ",
 StyleBox["f", "Literal"],
 " using the syntax ",
 StyleBox["f@", "Literal"],
 "."
}], "SidebarListVariableDescription",
 CellChangeTimes->{{3.469453607887258*^9, 3.469453609461525*^9}, {
   3.469460992521776*^9, 3.469461004856638*^9}, 3.46954483082266*^9, {
   3.4699708029654827`*^9, 3.469970803381535*^9}, 3.469970965215065*^9},
 FontSize->9.5,
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "Here are some examples using ",
 StyleBox["N", "Literal"],
 ". Notice that when you use prefix or postfix and need to supply an \
argument, you must use Mathematica\[CloseCurlyQuote]s syntax for pure \
functions where ",
 StyleBox["#", "Literal"],
 " is used as a placeholder for the input and ",
 StyleBox["&", "Literal"],
 " is added as a postfix operator alias for ",
 StyleBox["Function[]", "Literal"],
 ". "
}], "SidebarBody",
 CellChangeTimes->{
  3.4694610672235737`*^9, {3.4694610972744703`*^9, 3.4694611321687317`*^9}, 
   3.4694611712778378`*^9},
 FontColor->GrayLevel[0]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"1", "/", "2"}], ",", "10"}], "]"}], " ", 
  RowBox[{"(*", "Function", "*)"}]}]], "SidebarInput",
 CellMargins->{{0, 0}, {-0.25, -1}},
 CellChangeTimes->{{3.475328009019651*^9, 3.4753280094909*^9}},
 FontColor->GrayLevel[0],
 CellLabel->""],

Cell[BoxData["0.5`10."], "SidebarOutput",
 FontColor->GrayLevel[0],
 CellLabel->""]
}, Open  ]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{"2", " ", "~", "N", "~", " ", "10", "  ", 
   RowBox[{"(*", "Infix", "*)"}]}]}]], "SidebarInput",
 CellMargins->{{0, 0}, {-0.25, -2}},
 CellChangeTimes->{{3.475328013547184*^9, 3.475328014939489*^9}},
 FontColor->GrayLevel[0],
 CellLabel->""],

Cell[BoxData["0.5`10."], "SidebarOutput",
 FontColor->GrayLevel[0],
 CellLabel->""]
}, Open  ]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "2"}], "//", "N", " ", 
  RowBox[{"(*", "Postfix", "*)"}]}]], "SidebarInput",
 CellMargins->{{0, 0}, {-0.25, -2}},
 CellChangeTimes->{
  3.469464826871963*^9, {3.4753280196602793`*^9, 3.475328019956352*^9}},
 FontColor->GrayLevel[0],
 CellLabel->""],

Cell[BoxData["0.5`"], "SidebarOutput",
 FontColor->GrayLevel[0],
 CellLabel->""]
}, Open  ]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"1", "/", "2"}], " ", "//", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "10"}], "]"}], "&"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Postfix", " ", "with", " ", "argument"}], 
   "*)"}]}]], "SidebarInput",
 CellMargins->{{0, 0}, {-0.25, -2}},
 CellChangeTimes->{{3.469464799344865*^9, 3.469464825332621*^9}, {
  3.475328023198913*^9, 3.4753280235408697`*^9}},
 FontColor->GrayLevel[0],
 CellLabel->""],

Cell[BoxData["0.5`10."], "SidebarOutput",
 FontColor->GrayLevel[0],
 CellLabel->""]
}, Open  ]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "1"}], "/", "2", " ", 
  RowBox[{"(*", "Prefix", "*)"}]}]], "SidebarInput",
 CellMargins->{{0, 0}, {-0.25, -2}},
 CellChangeTimes->{{3.469464793330308*^9, 3.469464794557951*^9}, {
  3.476541368601142*^9, 3.476541368955022*^9}},
 FontColor->GrayLevel[0],
 CellLabel->""],

Cell[BoxData["0.5`"], "SidebarOutput",
 FontColor->GrayLevel[0],
 CellLabel->""]
}, Open  ]],

Cell["", "SidebarSpacer",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"#", ",", "10"}], "]"}], "&"}], "@", "1"}], "/", "2", " ", 
  RowBox[{"(*", 
   RowBox[{"Prefix", " ", "with", " ", "argument"}], "*)"}]}]], "SidebarInput",\

 CellMargins->{{0, 0}, {-0.25, -2}},
 CellChangeTimes->{
  3.469464790548376*^9, 3.4694648232493668`*^9, {3.4753280287726793`*^9, 
   3.475328029188547*^9}},
 FontColor->GrayLevel[0],
 CellLabel->""],

Cell[BoxData["0.5`10."], "SidebarOutput",
 FontColor->GrayLevel[0],
 CellLabel->""]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SidebarEnd",
 FontColor->GrayLevel[0]],

Cell[TextData[StyleBox["It is common to use this notation to force \
Mathematica to convert an exact or symbolic result to an approximate result \
as the last step in a computation. When you use postfix notation, you can \
explicitly specify the precision, but it is a bit awkward.",
 FontTracking->"Plain"]], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.469466320220702*^9, 3.469466335533318*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sqrt", "[", "2", "]"}], " ", "//", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "10"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[30]:="],

Cell[BoxData["1.41421356237309504880168872420969807857`10."], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[30]="]
}, Open  ]],

Cell[TextData[{
 "When you don\[CloseCurlyQuote]t specify precision, Mathematica uses ",
 StyleBox["MachinePrecision", "Literal"],
 ", which is a built-in symbol that denotes the precision native to your \
computer\[CloseCurlyQuote]s floating-point ",
 StyleBox["capabilities. The numerical value of ",
  FontTracking->"Extended"],
 StyleBox["MachinePrecision", "Literal",
  FontTracking->"Extended"],
 StyleBox[" is stored in a variable",
  FontTracking->"Extended"],
 " ",
 StyleBox["$MachinePrecision", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.46946156586528*^9, 3.469461570369836*^9}, {
   3.469466362383992*^9, 3.469466396979492*^9}, 3.469468203134691*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData["$MachinePrecision"], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[31]:="],

Cell[BoxData["15.954589770191003`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[31]="]
}, Open  ]],

Cell[TextData[{
 "There is another notation that is less common but you may come across it in \
Mathe",
 StyleBox["matica output. If a literal number is displayed with a trailing ",
  FontTracking->"Plain"],
 StyleBox["`", "Literal",
  FontTracking->"Plain"],
 StyleBox[" (backtick) followed",
  FontTracking->"Plain"],
 " ",
 StyleBox["op",
  FontTracking->"Plain"],
 "tionally by a number, this indicates the number is either in machine \
precision or is in the precision specified by the number following the \
backtick."
}], "Text",
 CellChangeTimes->{{3.469469267763548*^9, 3.469469301055297*^9}, {
   3.470060398491658*^9, 3.470060400587819*^9}, 3.485522221172683*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"20`", "  ", 
  RowBox[{"(*", 
   RowBox[{"20", " ", "in", " ", "machine", " ", "precision"}], 
   "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.469469308458393*^9, 3.469469309789359*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[32]:="],

Cell[BoxData["20.`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[32]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"20`20", " ", 
  RowBox[{"(*", 
   RowBox[{
   "20", " ", "with", " ", "high", " ", "precision", " ", "of", " ", "20", 
    " ", "digits"}], "*)"}], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.469469310860689*^9, 3.469469312431966*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[33]:="],

Cell[BoxData["20.`20."], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[33]="]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "In a complex expression with a lot of high-precision numbers, you can avoid \
specifying each precision individually by using ",
 StyleBox["SetPrecision[]", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.469469328101976*^9, 3.469469339629945*^9}, 
   3.469469421258636*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetPrecision", "[", 
   RowBox[{
    RowBox[{"20.", " ", "+", " ", 
     RowBox[{
      RowBox[{"1", "/", "3"}], " ", "*", " ", 
      RowBox[{"12.3", " ", "/", " ", "37.8"}]}], " ", "+", " ", "Pi"}], ",", 
    " ", "20"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "All", " ", "numbers", " ", "will", " ", "be", " ", "set", " ", "to", " ", 
    "a", " ", "precision", " ", "of", " ", "20."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.4694694462951393`*^9, 3.4694694484032393`*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[34]:="],

Cell[BoxData["23.25005826205540060414023173507302999496`20."], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[34]="]
}, Open  ]],

Cell[TextData[{
 " ",
 "You may find it surprising that ",
 StyleBox["$MachinePrecision", "Literal"],
 " is not an integer. The reason stems from the formal definition of ",
 StyleBox["precision,", "Emphasis"],
 " which is derived from considering a number ",
 StyleBox["x", "Literal",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSlant->"Italic"],
 " and its uncertainty ",
 StyleBox["dx", "Literal",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSlant->"Italic"],
 " and using ",
 StyleBox["the expression ",
  FontTracking->"SemiCondensed"],
 StyleBox["- Log[10, dx/x", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox["]. Accuracy is defined as ",
  FontTracking->"SemiCondensed"],
 StyleBox["- Log[10, dx]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". ",
  FontTracking->"SemiCondensed"]
}], "Note",
 CellChangeTimes->{
  3.4694694655474453`*^9, 3.469816249195881*^9, 3.469816555808001*^9, {
   3.469817673855255*^9, 3.469817682062416*^9}, {3.469818023809746*^9, 
   3.4698180251650057`*^9}, 3.48552222379531*^9},
 FontColor->GrayLevel[0]],

Cell["\<\
If you have an expression and need to know the precision or accuracy, you can \
use the following functions.\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{3.4694695201518106`*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "2.", "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[35]:="],

Cell[BoxData["MachinePrecision"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[35]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "2`20", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.470057635198485*^9},
 FontColor->GrayLevel[0],
 CellLabel->"In[36]:="],

Cell[BoxData["20.000000000000007`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[36]="]
}, Open  ]],

Cell["Exact results have infinite precision.", "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Precision", "[", 
   RowBox[{"Sqrt", "[", "2", "]"}], "]"}], " "}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[37]:="],

Cell[BoxData["\[Infinity]"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[37]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", 
  RowBox[{"Sqrt", "[", "2.", "]"}], "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[38]:="],

Cell[BoxData["MachinePrecision"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[38]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accuracy", "[", "2.", "]"}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[39]:="],

Cell[BoxData["15.653559774527023`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[39]="]
}, Open  ]],

Cell["\<\
You are not guaranteed the accuracy you specify if the precision is too small.\
\>", "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Accuracy", "[", 
   RowBox[{"N", "[", 
    RowBox[{"30", ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "20"}], "}"}]}], "]"}], "]"}], " "}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[40]:="],

Cell[BoxData["18.52287874528034`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[40]="]
}, Open  ]],

Cell["With enough precision, however, you will get accuracy.", "Text",
 CellChangeTimes->{{3.469469544628982*^9, 3.469469552306068*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Accuracy", "[", 
   RowBox[{"N", "[", 
    RowBox[{"30", ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "20"}], "}"}]}], "]"}], "]"}], " "}]], "Input",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[41]:="],

Cell[BoxData["20.000000000000007`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[41]="]
}, Open  ]],

Cell["And precision can even be specified as infinite!", "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Accuracy", "[", 
   RowBox[{"N", "[", 
    RowBox[{"30", ",", 
     RowBox[{"{", 
      RowBox[{"Infinity", ",", "20"}], "}"}]}], "]"}], "]"}], " "}]], "Input",\

 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"In[42]:="],

Cell[BoxData["20.000000000000007`"], "Output",
 InitializationCell->True,
 FontColor->GrayLevel[0],
 CellLabel->"Out[42]="]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Mathematica also defines two internal variables: ",
 StyleBox["$MinPrecision", "Literal"],
 ", whose default value is zero, and ",
 StyleBox["$MaxPrecision", "Literal"],
 ", whose default value is plus infinity.  "
}], "Text",
 CellChangeTimes->{{3.469469566423064*^9, 3.469469577857875*^9}, {
  3.469971437873206*^9, 3.469971440542137*^9}, {3.4855212311475153`*^9, 
  3.4855212384185266`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"$MinPrecision", ",", " ", "$MaxPrecision"}], "}"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[43]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "\[Infinity]"}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[43]="]
}, Open  ]],

Cell[TextData[{
 "You can control precision within a complex calculation (without using ",
 StyleBox["N[]", "Literal"],
 " on every intermediate result) by changing these values; however, you \
should only do so within a ",
 StyleBox["Block", "Literal"],
 " (a local context). For example, compare the difference between a \
calculation with automatic precision for intermediate results to the same \
calculation ",
 StyleBox["with fixed precision (obtained by making ",
  FontTracking->"Extended"],
 StyleBox["$MinPrecision", "Literal",
  FontTracking->"Extended"],
 StyleBox[" == ",
  FontTracking->"Extended"],
 StyleBox["$MaxPrecision", "Literal",
  FontTracking->"Extended"],
 StyleBox["). Note ",
  FontTracking->"Extended"],
 "that we must still start out the calculation with base values of at least \
",
 StyleBox["$MinPrecision", "Literal"],
 ", otherwise the value will revert to the lowest precision, as explained in ",
 ButtonBox["Recipe 1.2",
  BaseStyle->"Hyperlink",
  ButtonData->"MixingDifferentNumericTypes"],
 ". "
}], "Text",
 CellChangeTimes->{
  3.4694699274792137`*^9, {3.469470282060031*^9, 3.469470282514599*^9}, {
   3.469541029186551*^9, 3.4695410291890297`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetPrecision", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", " ", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], " ", "+", " ", 
        RowBox[{"Sqrt", "[", "3", "]"}]}], "]"}]}], ")"}], " ", "/", " ", 
    RowBox[{"2", "^", "25"}]}], ",", "32"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[44]:="],

Cell[BoxData["7.226780742612584668840452114475909173757079254802456`31.\
593545504204474*^-7"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[44]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"$MinPrecision", " ", "=", " ", "32"}], ",", " ", 
     RowBox[{"$MaxPrecision", "=", "32"}]}], "}"}], ",", " ", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], " ", "+", " ", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "]"}]}], ")"}], "/", 
      RowBox[{"2", "^", "25"}]}], ",", "32"}], "]"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[45]:="],

Cell[BoxData["7.226780742612584668840452114475909173757079254802456`32.*^-7"],\
 "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[45]="]
}, Open  ]],

Cell["\<\
However, unless you have a very specific reason to control precision \
yourself, it is generally best to let Mathematica automatically handle this \
for you. \
\>", "Text",
 CellChangeTimes->{{3.4694703240064993`*^9, 3.469470348443431*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "The Wolfram documentation for ",
 StyleBox["N[]", "Literal"],
 " is here: ",
 StyleBox[ButtonBox["http://bit.ly/XVe2E",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/XVe2E"], None},
  ButtonNote->"http://bit.ly/XVe2E"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.469470374705278*^9, {3.469814553240045*^9, 3.469814553244143*^9}, 
   3.4699714931663313`*^9},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 StyleBox["Discussions of precision and accuracy can be found at",
  FontTracking->"Extended"],
 " ",
 StyleBox[ButtonBox["http://bit.ly/15qq2N",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/15qq2N"], None},
  ButtonNote->"http://bit.ly/15qq2N"], "URL"],
 " and ",
 StyleBox[ButtonBox["http://bit.ly/icrh1",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/icrh1"], None},
  ButtonNote->"http://bit.ly/icrh1"], "URL"],
 ". "
}], "Text",
 CellChangeTimes->{{3.469814564524722*^9, 3.469814564527432*^9}, {
   3.469818800895061*^9, 3.469818802006575*^9}, {3.4698188347158413`*^9, 
   3.4698188347938004`*^9}, {3.4698188915050507`*^9, 
   3.4698188916013517`*^9}, {3.469818982403716*^9, 3.469818983569364*^9}, 
   3.469819129560607*^9, {3.469878901534564*^9, 3.4698789268984737`*^9}, {
   3.470059219692402*^9, 3.470059221959546*^9}, {3.47005946887679*^9, 
   3.470059574944412*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 StyleBox["The most thorough discussions of precision and accuracy in \
Mathematica can be found in Chapter 8 of ",
  FontTracking->"SemiCondensed"],
 StyleBox["An Introduction to Programming with Mathematica", "CitationTitle",
  FontTracking->"SemiCondensed"],
 StyleBox[" (Cambridge University Press) and ",
  FontTracking->"SemiCondensed"],
 StyleBox["The Mathematica GuideBook for Numerics", "CitationTitle",
  FontTracking->"SemiCondensed"],
 StyleBox[" (Springer). ",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{
  3.469470483177505*^9, 3.4699715108742523`*^9, {3.470057710803257*^9, 
   3.4700577118338346`*^9}, {3.475328489489676*^9, 3.475328496471092*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 "A nice essay by David Goldberg called \[OpenCurlyDoubleQuote]What Every \
Computer Scientist Should Know About Floating-Point Arithmetic\
\[CloseCurlyDoubleQuote] can be found at ",
 StyleBox[ButtonBox["http://bit.ly/1EJ23y",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/1EJ23y"], None},
  ButtonNote->"http://bit.ly/1EJ23y"], "URL"],
 ". "
}], "Text",
 CellChangeTimes->{{3.469814531826174*^9, 3.4698145318291473`*^9}, {
  3.469971551291471*^9, 3.4699715595171967`*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Mixing Different Numerical Types"
}], "Heading1",
 CellChangeTimes->{{3.46947052010783*^9, 3.469470520461844*^9}},
 FontColor->GrayLevel[0],
 CellTags->"MixingDifferentNumericTypes"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You need to predict what Mathematica will do with expressions containing \
mixed types and representations. \
\>", "Text",
 CellChangeTimes->{3.469470529071044*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[StyleBox["The general rule of thumb is that the least precise \
type will determine the type of the result. ",
 FontTracking->"SemiCondensed"]], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell["Mixing exact values and symbols", "Heading3",
 CellChangeTimes->{{3.475328530802116*^9, 3.4753285364647713`*^9}}],

Cell["\<\
When expressions containing exact numeric values (integers and rationals) are \
mixed with symbols, Mathematica will keep all results in the most general \
form, possibly reducing rationals to integers but leaving symbolic values in \
symbolic form.\
\>", "Text",
 CellChangeTimes->{{3.469470540463138*^9, 3.469470559476918*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "Pi"}], ")"}], "/", "3"}], " ", "+", " ", 
  RowBox[{"Pi", "/", "3"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[46]:="],

Cell[BoxData["\[Pi]"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[46]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "Pi", " ", "E"}], "]"}], " ", "/", " ", "1"}], "/", 
    "2"}], " ", 
   RowBox[{"E", "^", "2"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{"\[ExponentialE]", " ", 
  SqrtBox[
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", " ", "\[ExponentialE]", " ", "\[Pi]"}], 
     "]"}]}]]}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[47]="]
}, Open  ]],

Cell["Mixing exact values and approximate values", "Heading3",
 CellChangeTimes->{{3.4753286354403973`*^9, 3.475328643685461*^9}}],

Cell["\<\
When an approximate value is used in an otherwise symbolic expression, it \
forces Mathematica to convert to approximate values.\
\>", "Text",
 CellChangeTimes->{3.469472251963212*^9, 3.469472312363693*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2.0", " ", "Pi"}], ")"}], "/", "3"}], " ", "+", " ", 
  RowBox[{"Pi", "/", "3"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[48]:="],

Cell[BoxData["3.141592653589793`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[48]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.", " ", "+", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "Pi"}], ")"}], "/", "3"}], " ", "+", " ", 
  RowBox[{"Pi", "/", "3"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[49]:="],

Cell[BoxData["4.141592653589793`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[49]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mixing values of different precision and accuracy", "Heading3",
 CellChangeTimes->{{3.469472321662012*^9, 3.469472323608585*^9}, {
  3.475328646519073*^9, 3.4753286574542313`*^9}}],

Cell["\<\
When you mix values of different precision and accuracy, the lower precision \
and accuracy will determine the result. For multiplication, the precision of \
the result will be exactly the minimum of the precision of each term, whereas \
the accuracy will be somewhat less. \
\>", "Text",
 CellChangeTimes->{{3.4694723327315807`*^9, 3.469472350216968*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "=", " ", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], ",", "30"}], "]"}], " ", "*", " ", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "3", "]"}], ",", "10"}], "]"}]}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[50]:="],

Cell[BoxData["2.44948974278317809819728407470589139197`10."], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[50]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "x", "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[51]:="],

Cell[BoxData["10.000000000000004`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[51]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accuracy", "[", "x", "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[52]:="],

Cell[BoxData["9.610924374808176`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[52]="]
}, Open  ]],

Cell["\<\
For addition, the accuracy of the result will be exactly the minimum of the \
accuracy of each term; the precision will be somewhat more. \
\>", "Text",
 CellChangeTimes->{3.469472374862315*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", "=", " ", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "5", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Infinity", ",", "30"}], "}"}]}], "]"}], " ", "+", " ", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "7", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Infinity", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[53]:="],

Cell[BoxData["4.88181928856438028691078942237053666115`10.688581698999268"], \
"Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", "x", "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[54]:="],

Cell[BoxData["10.688581698999268`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[54]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Accuracy", "[", "x", "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[55]:="],

Cell[BoxData["10.000000000000004`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[55]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Discussion", "Heading2", "ProductionPageBreak"],

Cell["\<\
 When mixing exact values with inexact values, it is possible to gain \
precision. \
\>", "Text",
 CellChangeTimes->{3.469472391833305*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", "2", "]"}], ",", "20"}], "]"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[56]:="],

Cell[BoxData["20.000000000000007`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[56]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Precision", "[", 
  RowBox[{"2", " ", "+", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], ",", "20"}], "]"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[57]:="],

Cell[BoxData["20.38277568533787`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[57]="]
}, Open  ]],

Cell["\<\
The gain in precision will be greater when the magnitude of the exact number \
dominates that of the inexact number, as we see in this generated table.\
\>", "Text",
 CellChangeTimes->{{3.4694724226552467`*^9, 3.469472431100089*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "^", "n"}], " ", "+", " ", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"Sqrt", "[", "2", "]"}], ",", "20"}], "]"}]}], ",", 
       RowBox[{"Precision", "[", 
        RowBox[{
         RowBox[{"2", "^", "n"}], " ", "+", " ", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", "2", "]"}], ",", "20"}], "]"}]}], "]"}]}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Result\>\"", ",", " ", "\"\<Precision\>\""}], "}"}]}], 
     "}"}]}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.46997171270989*^9, 3.469971754178177*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[2]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Result\"\>",
       HoldForm], 
      TagBox["\<\"Precision\"\>",
       HoldForm]},
     {"2.41421356237309504880168872420969807857`20.232260687505875", 
      "20.232260687505875`"},
     {"3.41421356237309504880168872420969807857`20.382775685337865", 
      "20.382775685337865`"},
     {"5.41421356237309504880168872420969807857`20.583020384583463", 
      "20.583020384583463`"},
     {"9.41421356237309504880168872420969807857`20.823269048263953", 
      "20.823269048263953`"},
     {"17.41421356237309504880168872420969807857`21.090388868373473", 
      "21.090388868373473`"},
     {"33.41421356237309504880168872420969807857`21.37341624618403", 
      "21.37341624618403`"},
     {"65.41421356237309504880168872420969807857`21.66515712665467", 
      "21.66515712665467`"},
     {"129.41421356237309504880168872420969807857`21.96146697968084", 
      "21.96146697968084`"},
     {"257.41421356237309504880168872420969807857`22.26011752570484", 
      "22.26011752570484`"},
     {"513.41421356237309504880168872420969807857`22.55995288985026", 
      "22.55995288985026`"},
     {"1025.41421356237309504880168872420969807857`22.860384335195274", 
      "22.860384335195274`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {None, {"Result", "Precision"}}]]]], "Output",\

 CellChangeTimes->{{3.469971694200268*^9, 3.469971702753429*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"Out[2]//TableForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "The most thorough discussions of Mathematica\[CloseCurlyQuote]s numerical \
rules can be found in Chapter 8 of ",
 StyleBox["An Introduction to Programming with Mathematica", 
  "CitationTitle"],
 " and ",
 StyleBox["The Mathematica GuideBook for Numerics", "CitationTitle"],
 ".  "
}], "Text",
 CellChangeTimes->{
  3.469472695413294*^9, {3.469473224823618*^9, 3.4694732431537933`*^9}, {
   3.475328685217224*^9, 3.475328693519165*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Representing Numbers in Other Bases"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{3.46947325240911*^9},
 FontColor->GrayLevel[0],
 CellTags->"RepresentingNumbersInOtherBases"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
Your application calls for a different numerical base than 10. \
\>", "Text",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Mathematica uses notation of the form ",
 StyleBox["base", "LiteralItalic",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSlant->"Italic"],
 StyleBox["^^", "LiteralItalic"],
 StyleBox["digits", "LiteralItalic",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSlant->"Italic"],
 " to represent numbers in different bases. There must not be any internal \
whitespace in this representation."
}], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2^^101", "    ", 
  RowBox[{"(*", "Binary", "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.475328704324992*^9, 3.475328704661915*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[59]:="],

Cell[BoxData["5"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[59]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"16^^FFFF", "   ", 
  RowBox[{"(*", "Hexidecimal", "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.475328707814375*^9, 3.4753287082821074`*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[60]:="],

Cell[BoxData["65535"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[60]="]
}, Open  ]],

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "In addition to expressing numbers in other bases, you can convert numbers \
to other bases with ",
 StyleBox["BaseForm[", "Literal"],
 StyleBox["digits, base", "LiteralItalic"],
 StyleBox["]", "Literal"],
 ". The base must be an integer between 2 and 36 when using either ",
 StyleBox["^^", "Literal"],
 " or ",
 StyleBox["BaseForm[]", "Literal"],
 ". Mathematica uses the",
 StyleBox[" letters ",
  FontTracking->"SemiCondensed"],
 StyleBox["a", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" through ",
  FontTracking->"SemiCondensed"],
 StyleBox["z", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" to repre",
  FontTracking->"SemiCondensed"],
 "sent digits higher than 10. "
}], "Text",
 CellChangeTimes->{
  3.469473416945961*^9, {3.469473493669848*^9, 3.469473498938035*^9}, 
   3.469971880364501*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"2^^1010101", ",", " ", "16"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[61]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"55\"\>", "\<\"16\"\>"],
   85,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[61]//BaseForm="]
}, Open  ]],

Cell[TextData[{
 "If you do math in another base, the output will still default to decimal, \
but you can use ",
 StyleBox["BaseForm", "Literal"],
 " to convert the output of a function to hex."
}], "Text",
 CellChangeTimes->{{3.469473605305974*^9, 3.4694736106898527`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"16^^A0", " ", "+", " ", "16^^0F"}], " ", "//", " ", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[62]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"af\"\>", "\<\"16\"\>"],
   175,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[62]//BaseForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hash", "[", 
   RowBox[{"\"\<Hello, my name is Sal\>\"", ",", " ", "\"\<MD5\>\""}], "]"}], 
  " ", "//", " ", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[63]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"a275144453239f0279228469f2296881\"\>", "\<\"16\"\>"],
   215942845111042389367089348906595215489,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[63]//BaseForm="]
}, Open  ]],

Cell["\<\
You can also convert real and complex numbers to other bases.\
\>", "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"123.777", " ", "//", " ", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[64]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"7b.c6f\"\>", "16"],
   123.777,
   AutoDelete->True],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[64]//BaseForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"12.1", " ", "+", " ", 
   RowBox[{"67.2", "I"}]}], " ", "//", " ", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[65]:="],

Cell[BoxData[
 TagBox[
  RowBox[{
   InterpretationBox[
    SubscriptBox["\<\"c.199a\"\>", "16"],
    12.1,
    AutoDelete->True], "+", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["\<\"43.333\"\>", "16"],
     67.2,
     AutoDelete->True], " ", "\[ImaginaryI]"}]}],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[65]//BaseForm="]
}, Open  ]],

Cell["See Also", "Heading2",
 CellChangeTimes->{3.4698756461834507`*^9}],

Cell[TextData[{
 ButtonBox["Recipe 1.5",
  BaseStyle->"Hyperlink",
  ButtonData->"WorkingWithIntervals"],
 " shows how to extract digits of a number in alternate bases. "
}], "Text",
 CellChangeTimes->{{3.469540908868083*^9, 3.4695409088703747`*^9}, 
   3.469875646183981*^9, {3.470056664998747*^9, 3.470056665011217*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Extracting the Digits of a Number"
}], "Heading1",
 FontColor->GrayLevel[0],
 CellTags->"ExtractingTheDigitsOfANumber"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 StyleBox["You want to extract the individual digits of a",
  FontTracking->"Plain"],
 StyleBox[" number to manipulate them i",
  FontTracking->"SemiCondensed"],
 StyleBox["ndividually",
  FontTracking->"Plain"],
 StyleBox[".",
  FontTracking->"SemiCondensed"]
}], "Text",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "The functions ",
 StyleBox["IntegerDigits[]", "Literal"],
 " and ",
 StyleBox["RealDigits[]", "Literal"],
 " make this task easy."
}], "Text",
 FontColor->GrayLevel[0]],

Cell[TextData[{
 StyleBox["IntegerDigits[]", "Literal"],
 " returns a list of digits in base 10. See",
 StyleBox[" ",
  FontColor->GrayLevel[0]],
 ButtonBox["the \[OpenCurlyDoubleQuote]Discussion\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->"Discussion1.4"],
 " section, next, for additional options."
}], "Text",
 CellChangeTimes->{{3.469541143310075*^9, 3.469541143584984*^9}, 
   3.469541225861624*^9, {3.469541388135092*^9, 3.469541390915001*^9}, {
   3.469545975008621*^9, 3.469545975011181*^9}, {3.475328730347633*^9, 
   3.475328740905066*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"IntegerDigits", "[", "12345", "]"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[66]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[66]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["RealDigits[]", "Literal"],
 " returns a two-item list with the first item being the digits in base 10 \
and the second being the position of the decimal point. See ",
 ButtonBox["the \[OpenCurlyDoubleQuote]Discussion\[CloseCurlyDoubleQuote]",
  BaseStyle->"Hyperlink",
  ButtonData->"Discussion1.4"],
 " section for additional options. First consider the digits display with ",
 StyleBox["N[]", "Literal"],
 " alone."
}], "Text",
 CellChangeTimes->{{3.4695414069523153`*^9, 3.4695414184263897`*^9}, {
  3.469545992427683*^9, 3.469545992430325*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"1", "/", "31"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[67]:="],

Cell[BoxData["0.03225806451612903`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[67]="]
}, Open  ]],

Cell[TextData[{
 "Notice how ",
 StyleBox["RealDigits[]", "Literal"],
 " automatically extracts more precision to return the number of digits \
necessary to get to the point at which they begin to repeat in the decimal \
expansion. "
}], "Text",
 CellChangeTimes->{{3.469541502187169*^9, 3.469541504071755*^9}, {
  3.469541600063114*^9, 3.469541614116989*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"1", "/", "31"}], "]"}], ",", "10"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[68]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "2", ",", "5", ",", "8", ",", "0", ",", "6", ",", "4",
      ",", "5", ",", "1", ",", "6", ",", "1", ",", "2", ",", "9", ",", "0", 
     ",", "3"}], "}"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[68]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellTags->"Discussion1.4"],

Cell[TextData[{
 "Both",
 " ",
 StyleBox["RealDigits[]", "Literal"],
 " and ",
 StyleBox["IntegerDigits[]", "Literal"],
 " take the desired base and the number of desired digits (length) as \
optional second and third arguments, respectively."
}], "Text",
 CellChangeTimes->{{3.469541756258417*^9, 3.4695417676032257`*^9}, 
   3.470056882085228*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"12", "!"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[69]:="],

Cell[BoxData["479001600"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[69]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{
    RowBox[{"12", "!"}], ",", "10", ",", " ", "5"}], "]"}], "  "}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[70]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "6", ",", "0", ",", "0"}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[70]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"12", "!"}], "//", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"Consider", " ", 
    RowBox[{"12", "!"}], " ", "in", " ", "base", " ", "16."}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.4699719789332943`*^9, 3.469971985796509*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[71]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"1c8cfc00\"\>", "\<\"16\"\>"],
   479001600,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[71]//BaseForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{
    RowBox[{"12", "!"}], ",", " ", "16"}], "]"}], "     ", 
  RowBox[{"(*", 
   RowBox[{
   "Notice", " ", "how", " ", "IntegerDigits", " ", "with", " ", "base", " ", 
    "16", " ", "gives", " ", "the", " ", "digit", " ", "values", " ", "in", 
    " ", "base", " ", "10."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.469541903250115*^9, 3.4695419048049107`*^9}, {
  3.469972001623127*^9, 3.469972009446987*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "8", ",", "12", ",", "15", ",", "12", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[72]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerDigits", "[", 
   RowBox[{
    RowBox[{"12", "!"}], ",", " ", "16"}], "]"}], " ", "//", " ", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "But", " ", "you", " ", "can", " ", "easily", " ", "force", " ", "them", 
    " ", "to", " ", "base", " ", "16."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.46954190625533*^9, 3.4695419075095778`*^9}, 
   3.469972025047289*^9},
 FontColor->GrayLevel[0],
 CellLabel->"In[73]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     SubscriptBox["\<\"1\"\>", "\<\"16\"\>"],
     1,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"c\"\>", "\<\"16\"\>"],
     12,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"8\"\>", "\<\"16\"\>"],
     8,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"c\"\>", "\<\"16\"\>"],
     12,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"f\"\>", "\<\"16\"\>"],
     15,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"c\"\>", "\<\"16\"\>"],
     12,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"0\"\>", "\<\"16\"\>"],
     0,
     Editable->False], ",", 
    InterpretationBox[
     SubscriptBox["\<\"0\"\>", "\<\"16\"\>"],
     0,
     Editable->False]}], "}"}],
  BaseForm[#, 16]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[73]//BaseForm="],

Cell[TextData[{
 StyleBox["RealDigits", "Literal"],
 " can take an additional fourth argument that specifies where in the decimal \
expansion to start. If ",
 StyleBox["b", "LiteralItalic"],
 " is the base, then the fourth argument ",
 StyleBox["n", "LiteralItalic"],
 " means to start ",
 StyleBox["the counting at the coefficient signified",
  FontTracking->"Plain"],
 StyleBox[" by ",
  FontTracking->"SemiCondensed"],
 StyleBox["b^n", "LiteralItalic",
  FontTracking->"SemiCondensed"],
 StyleBox[". The following examples",
  FontTracking->"SemiCondensed"],
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["should clarify.",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.469541858915091*^9, 3.469541859710381*^9}, {
   3.4695422681348753`*^9, 3.469542293984722*^9}, {3.469542331478348*^9, 
   3.469542331914723*^9}, 3.469972029917604*^9, {3.47532878605989*^9, 
   3.47532878720382*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Pi", ",", "10"}], "]"}], "            ", 
  RowBox[{"(*", 
   RowBox[{"Pi", " ", "to", " ", "10", " ", "digits", " ", "of", " ", 
    RowBox[{"precision", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.469541986579214*^9, 3.469541988201639*^9}, 
   3.469972039079281*^9},
 FontColor->GrayLevel[0],
 CellLabel->"In[74]:="],

Cell[BoxData["3.1415926535897932384626433832795028842`10."], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[74]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"RealDigits", "[", 
   RowBox[{"Pi", ",", "10", ",", "3"}], "]"}], "   ", 
  RowBox[{"(*", 
   RowBox[{"Extract", " ", "first", " ", "three", " ", 
    RowBox[{"digits", ".", " ", "Decimal"}], " ", "place", " ", "is", " ", 
    "indicated", " ", "as", " ", "1."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.469541989274184*^9, 3.469541990361322*^9}, 
   3.469972089849572*^9},
 FontColor->GrayLevel[0],
 CellLabel->"In[75]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", "1"}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[75]="]
}, Open  ]],

Cell[TextData[{
 "Start at ",
 StyleBox["10^-2 = 0.01", "Literal"],
 ", or the second digit after the decimal."
}], "Text",
 CellChangeTimes->{{3.469542400744584*^9, 3.469542416282682*^9}, {
  3.4753287934757843`*^9, 3.4753287953796673`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RealDigits", "[", 
   RowBox[{"Pi", ",", "10", ",", " ", "3", ",", " ", 
    RowBox[{"-", "2"}]}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Extract", " ", "third", " ", "to", " ", "fifth", " ", 
     RowBox[{"digit", ".", " ", "Decimal"}], " ", "place", " ", "is", " ", 
     "indicated", " ", "as"}], " ", "-", "2."}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.469541993602315*^9, 3.469541995354712*^9}, {
  3.469542445633478*^9, 3.4695424520692863`*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[76]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[76]="]
}, Open  ]],

Cell[TextData[{
 "Start at ",
 StyleBox["10^-5 = 0.00001", "Literal"],
 ", or the fifth digit after the decimal."
}], "Text",
 CellChangeTimes->{{3.469542466187615*^9, 3.469542482314333*^9}, {
  3.4753288012844763`*^9, 3.475328802428029*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"Pi", ",", "10", ",", " ", "3", ",", " ", 
   RowBox[{"-", "5"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[77]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "6"}], "}"}], ",", 
   RowBox[{"-", "4"}]}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[77]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"Pi", ",", "10"}], "]"}], " ", "//", " ", 
  RowBox[{
   RowBox[{"BaseForm", "[", 
    RowBox[{"#", ",", "2"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[78]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"11.0010010000111111011010101000100\"\>", "2"],
   3.1415926536`10.,
   AutoDelete->True],
  BaseForm[#, 2]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[78]//BaseForm="]
}, Open  ]],

Cell["Here we get the digits of pi in base 2.", "Text",
 CellChangeTimes->{{3.469542499717867*^9, 3.469542510036484*^9}, 
   3.4753288079170713`*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RealDigits", "[", 
  RowBox[{"Pi", ",", "2", ",", " ", "5", ",", " ", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[79]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[79]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Here is an interesting application in which ",
  FontTracking->"Extended"],
 StyleBox["IntegerDigits", "Literal",
  FontTracking->"Extended"],
 StyleBox[" is combined with the Tu",
  FontTracking->"Extended"],
 "ples function and a",
 StyleBox[" bit of pattern matching to get all ",
  FontTracking->"Extended"],
 StyleBox["n", "LiteralItalic",
  FontTracking->"Extended"],
 StyleBox[" digits without calling ",
  FontTracking->"Extended"],
 StyleBox["Inte", "Literal",
  FontTracking->"Extended"],
 StyleBox["gerDigits[]", "Literal"],
 " more than once. We used ",
 StyleBox["Short", "Literal"],
 " to elide the full list. (",
 StyleBox["Short", "Literal"],
 " places ",
 StyleBox["<<n>>", "LiteralItalic"],
 " in the output to indicate ",
 StyleBox["n", "LiteralItalic"],
 " missing items.)"
}], "Text",
 CellChangeTimes->{
  3.469546050196714*^9, {3.469546093358739*^9, 3.469546094770512*^9}, {
   3.4695478984523373`*^9, 3.469547942328233*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tuples", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", "43210", "]"}], ",", "4"}], "]"}], " ", "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "4"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[80]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "579", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "4", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "4", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "4", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "3", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
  Short[#, 4]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[80]//Short="],

Cell[TextData[{
 "If you do not want the cases with leading zeros, you can use ",
 StyleBox["DeleteCases", "Literal"],
 " as follows."
}], "Text",
 CellChangeTimes->{3.4695570738224*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", "43210", "]"}], ",", "4"}], "]"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"z__", "/;", 
       RowBox[{"z", "==", "0"}]}], ",", " ", "n__"}], "}"}]}], "]"}], " ", "//",
   " ", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "4"}], "]"}], "&"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[81]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "4", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "3", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "454", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "4", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "4", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "4", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "3", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "3", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "2", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "2", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}],
  Short[#, 4]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[81]//Short="]
}, Open  ]],

Cell[TextData[{
 "The inverse of ",
 StyleBox["IntegerDigits[]", "Literal"],
 " is ",
 StyleBox["FromDigits[]", "Literal"],
 ". ",
 " "
}], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FromDigits", "[", 
  RowBox[{"IntegerDigits", "[", "987654321", "]"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[82]:="],

Cell[BoxData["987654321"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[82]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FromDigits", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"987654321", ",", "2"}], "]"}], ",", "2"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Base", " ", "2"}], "*)"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[83]:="],

Cell[BoxData["987654321"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[83]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["FromDigits[]", "Literal"],
 " has the added capability of converting strings and roman numerals."
}], "Text",
 CellChangeTimes->{3.469557153696072*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FromDigits", "[", "\"\<4750\>\"", "]"}], " ", "+", " ", 
  "1"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[84]:="],

Cell[BoxData["4751"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[84]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FromDigits", "[", 
   RowBox[{"\"\<MMXIX\>\"", ",", "\"\<Roman\>\""}], "]"}], " ", "-", " ", 
  "10"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[85]:="],

Cell[BoxData["2009"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[85]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["IntegerString[]", "Literal"],
 " is used to convert back to string form. I use ",
 StyleBox["InputForm", "Literal"],
 " only so the quotes are displayed."
}], "Text", "ProductionPageBreak",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerString", "[", "4750", "]"}], "//", "InputForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[86]:="],

Cell["\"4750\"", "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[86]//InputForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"IntegerString", "[", 
   RowBox[{"2009", ",", "\"\<Roman\>\""}], "]"}], "//", 
  "InputForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[87]:="],

Cell["\"MMIX\"", "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[87]//InputForm="]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Working with Intervals"
}], "Heading1",
 FontColor->GrayLevel[0],
 CellTags->"WorkingWithIntervals"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You need to compute with data subject to measurement errors and you need the \
greatest possible estimate on the final error.\
\>", "Text",
 CellChangeTimes->{3.469557207946411*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "As an alternative to doing math directly on numbers, Mathematica allows you \
to do math on ",
 StyleBox["intervals", "Technical Italic"],
 " that define the uncertainty in a value. "
}], "Text",
 CellChangeTimes->{{3.469557351937398*^9, 3.469557352221195*^9}, 
   3.4695573943266*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "error1", ",", "error2", ",", "mass", ",", " ", "velocity", ",", 
    "kineticEnergy"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"error1", " ", "=", " ", "0.01"}], ";", " ", 
  RowBox[{"error2", " ", "=", " ", "0.005"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", 
   RowBox[{"Interval", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.10", "-", "error1"}], ",", 
      RowBox[{"1.10", "+", "error1"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"velocity", " ", "=", " ", 
   RowBox[{"Interval", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"7.50", " ", "-", " ", "error2"}], ",", " ", 
      RowBox[{"7.50", " ", "+", " ", "error2"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"kineticEnergy", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", "mass", " ", 
   RowBox[{"velocity", " ", "^", " ", "2"}]}]}]}], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"30.61538862499998`", ",", "31.260388875000025`"}], "}"}], 
  "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[92]="]
}, Open  ]],

Cell[TextData[{
 "By representing them as intervals, we express the idea that there are some \
known er",
 StyleBox["rors in the measurement of the value of mass and velocity. We \
would like to under\[DiscretionaryHyphen]s",
  FontTracking->"Plain"],
 "tand what that means in terms of the value we compute for kinetic energy. "
}], "Text",
 CellChangeTimes->{{3.469557439310104*^9, 3.46955749328935*^9}, {
  3.4699722189764767`*^9, 3.469972222434536*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
You can see that the resulting error range is magnified by the combination of \
each error and the squaring.\
\>", "Text",
 CellChangeTimes->{{3.4695575089347878`*^9, 3.469557509444004*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Subtract", " ", "@@", " ", 
   RowBox[{"kineticEnergy", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], " ", "//", " ", "Abs", "  ", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "computes", " ", "the", " ", "size", " ", "of", " ", "the", 
    " ", 
    RowBox[{"interval", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.469557519246415*^9, 3.4695575359995203`*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[93]:="],

Cell[BoxData["0.6450002500000451`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[93]="]
}, Open  ]],

Cell["\<\
If there were only a single interval of uncertainty, the range would be \
smaller.\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.469557550311553*^9, 3.469557576957056*^9}, 
   3.46955763946164*^9, 3.469972251713879*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "error1", ",", "mass", ",", " ", "velocity", ",", "kineticEnergy"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"error1", " ", "=", " ", "0.01"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mass", " ", "=", " ", 
   RowBox[{"Interval", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.10", "-", "error1"}], ",", 
      RowBox[{"1.10", "+", "error1"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"velocity", " ", "=", " ", "7.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"kineticEnergy", " ", "=", " ", 
  RowBox[{
   RowBox[{"1", "/", "2"}], " ", "mass", " ", 
   RowBox[{"velocity", "^", "2"}]}]}]}], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[94]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"30.656249999999993`", ",", "31.218750000000014`"}], "}"}], 
  "]"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4700580187674007`*^9},
 FontColor->GrayLevel[0],
 CellLabel->"Out[98]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Subtract", " ", "@@", " ", 
   RowBox[{"kineticEnergy", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], " ", "//", " ", "Abs"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[99]:="],

Cell[BoxData["0.5625000000000213`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[99]="]
}, Open  ]],

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "Intervals are objects with head ",
 StyleBox["Interval", "Literal"],
 " and a sequence of one or more lists that represent segments of the \
interval. Typically there is one list, but non-overlapping",
 " ",
 "intervals can be expressed using two or more lists."
}], "Text",
 CellChangeTimes->{{3.469557698642324*^9, 3.469557713069172*^9}, {
  3.470059895199114*^9, 3.470059907623082*^9}, {3.48552222471166*^9, 
  3.48552222552696*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[100]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[100]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[101]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[101]="]
}, Open  ]],

Cell["\<\
Intervals will automatically reorder themselves so that the least value is \
first.\
\>", "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"2", ",", "1"}], "}"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[102]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[102]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[103]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[103]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Naturally, the standard mathematical",
  FontTracking->"Plain"],
 StyleBox[" ",
  FontTracking->"SemiCondensed"],
 StyleBox["operations",
  FontTracking->"Plain"],
 StyleBox[" for scalars work o",
  FontTracking->"SemiCondensed"],
 StyleBox["n intervals as well.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{3.4695577453617477`*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "]"}], " ", "+", " ", 
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], "]"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[104]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"4", ",", "6"}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[104]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "]"}], "  ", 
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Implied", " ", "multiplication"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.469557886940445*^9, 3.469557888648787*^9}},
 FontColor->GrayLevel[0],
 CellLabel->"In[105]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "8"}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[105]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], "]"}], " ", "/", " ", 
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], "]"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[106]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{
    FractionBox["1", "4"], ",", 
    FractionBox["2", "3"]}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[106]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Interval", "[", 
   RowBox[{"{", 
    RowBox[{"1.0", ",", "2.0"}], "}"}], "]"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[107]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{"0.9999999999999998`", ",", "1.4142135623730954`"}], "}"}], 
  "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[107]="]
}, Open  ]],

Cell[TextData[{
 "There are also functions specifically for working with intervals. ",
 StyleBox["IntervalUnion[] ", "Literal"],
 "gives the interval representing set of all points of the input intervals. \
",
 StyleBox["IntervalIntersection[]", "Literal"],
 " gives the interval in common among the inputs and ",
 StyleBox["IntervalMemberQ[]", "Literal"],
 " tests if a value belongs to an interval."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.469557917969769*^9, 3.469557932967608*^9}, {
  3.475328876175768*^9, 3.475328886522624*^9}},
 FontColor->GrayLevel[0]],

Cell["\<\
There are some cases in which Mathematica functions can return intervals. \
Consider the problem of finding the limit of an oscillating function at a \
critical value.  \
\>", "Text",
 CellChangeTimes->{{3.469557971394904*^9, 3.4695579822960033`*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}]}], ",", " ", 
   RowBox[{"x", " ", "\[Rule]", " ", "Infinity"}]}], "]"}]}], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[108]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], ",", 
    FractionBox["3", "2"]}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[109]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"1", "/", "x"}], "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", 
     RowBox[{"Cos", "[", "x", "]"}]}]}], ",", " ", 
   RowBox[{"x", " ", "\[Rule]", " ", "0"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[110]:="],

Cell[BoxData[
 RowBox[{"Interval", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["3", "2"]}], ",", 
    FractionBox["5", "2"]}], "}"}], "]"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[110]="]
}, Open  ]],

Cell["See Also", "Heading2"],

Cell[TextData[{
 "Papers and FAQs (as well as a movie) related to the theory of interval math \
can be found",
 " ",
 "at ",
 StyleBox[ButtonBox["http://bit.ly/lbXoE",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/lbXoE"], None},
  ButtonNote->"http://bit.ly/lbXoE"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.469461585037067*^9, 3.469558044078184*^9, {3.46981473885067*^9, 
   3.46981473885365*^9}, 3.47005677235614*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Converting Between Numerical Types"
}], "Heading1",
 CellChangeTimes->{{3.469972325623949*^9, 3.469972326180645*^9}},
 FontColor->GrayLevel[0],
 CellTags->"ConvertingBetweenNumericTypes"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You have a number of one type and need it represented in another type. \
\>", "Text",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell["\<\
Conversion from rational to integer happens automatically, when possible.\
\>", "Text",
 CellChangeTimes->{{3.469558313736511*^9, 3.4695583335347013`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", 
  RowBox[{"4", "/", "2"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[111]:="],

Cell[BoxData["Integer"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[111]="]
}, Open  ]],

Cell[TextData[{
 "Conversion of rational to integer can be forced by using ",
 StyleBox["Floor[]", "Literal"],
 ", ",
 StyleBox["Ceiling[]", "Literal"],
 ", and ",
 StyleBox["Round[]", "Literal"],
 ". (Numbers of the form ",
 StyleBox["x", "UserInput",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontWeight->"Plain",
  FontSlant->"Italic"],
 StyleBox[".5", "Literal"],
 " are rounded toward the nearest even integer.)"
}], "Text",
 CellChangeTimes->{{3.469558385669785*^9, 3.469558388378811*^9}, {
  3.46955841843326*^9, 3.4695584704921427`*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Floor", "[", 
  RowBox[{"5", "/", "2"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[112]:="],

Cell[BoxData["2"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[112]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ceiling", "[", 
  RowBox[{"5", "/", "2"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[113]:="],

Cell[BoxData["3"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[113]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"5", "/", "2"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[114]:="],

Cell[BoxData["2"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[114]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"7", "/", "2"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[115]:="],

Cell[BoxData["4"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[115]="],

Cell[TextData[{
 "We already saw in ",
 ButtonBox["Recipe 1.1",
  BaseStyle->"Hyperlink",
  ButtonData->"ControllingPrecisionAndAccuracy"],
 " how ",
 StyleBox["N[]", "Literal"],
 " can be used to convert exact values and symbolic constants to approximate \
real numbers. ",
 StyleBox["Rationalize[]", "Literal"],
 " is how you convert from approximate values to exact."
}], "Text",
 CellChangeTimes->{{3.469558501833424*^9, 3.469558531180313*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Rationalize", "[", "3.14159", "]"}], " "}]], "Input",
 CellChangeTimes->{3.470056787682823*^9},
 FontColor->GrayLevel[0],
 CellLabel->"In[116]:="],

Cell[BoxData[
 FractionBox["314159", "100000"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[116]="]
}, Open  ]],

Cell[TextData[{
 "The single argument version of ",
 StyleBox["Rationalize", "Literal"],
 " will only succeed if a sufficiently close (see ",
 ButtonBox["\[OpenCurlyDoubleQuote]Discussion\[CloseCurlyDoubleQuote] \
section, next",
  BaseStyle->"Hyperlink",
  ButtonData->"Discussion1.6"],
 ") rational number exists."
}], "Text",
 CellChangeTimes->{{3.4695585597968683`*^9, 3.469558574328987*^9}, {
  3.469558652004571*^9, 3.4695586520083017`*^9}, {3.4753289550550957`*^9, 
  3.47532895624492*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Rationalize", "[", "3.1415927", "]"}], " "}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[117]:="],

Cell[BoxData["3.1415927`"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[117]="]
}, Open  ]],

Cell["\<\
You can provide a second argument specifying your tolerance for error, in \
which case the operation will always succeed.\
\>", "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rationalize", "[", 
   RowBox[{"3.1415927", ",", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "8"}]}]}], "]"}], " "}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[118]:="],

Cell[BoxData[
 FractionBox["121033", "38526"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[118]="]
}, Open  ]],

Cell["\<\
And you can force an exact rational by indicating a maximum error of zero.\
\>", "Text",
 CellChangeTimes->{{3.4695586661136007`*^9, 3.469558666772606*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", 
  RowBox[{"3.1415927", ",", "0"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[119]:="],

Cell[BoxData[
 FractionBox["31415927", "10000000"]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[119]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellTags->"Discussion1.6"],

Cell[TextData[{
 "On the surface, the solutions here are rather simple. In day-to-day usage, \
numeric ",
 StyleBox["conversion will not present many challenges. However, there are \
subtle issues and",
  FontTracking->"Plain"],
 " ",
 StyleBox["int",
  FontTracking->"Plain"],
 "eresting theory underlying the apparent simplicity. Let\[CloseCurlyQuote]s \
consider rounding. Suppose you need to round a set of numbers, but the \
numbers still must satisfy some constraint after the rounding. Consider \
percentages or probabilities. One would want percentages to still add to 100 \
and probabilities to still sum to 1. Another con",
 StyleBox["text is in statistics, where we want to round while preserving \
certain statistical proper",
  FontTracking->"Extended"],
 "ties, such as the variance. Various forms of stochastic rounding can be \
used in these cases. One form of stochastic rounding that gives good results \
is the ",
 StyleBox["unbiased rounding rule", "Technical Italic"],
 ". According to this rule, a number of the form ",
 StyleBox["x.v", "LiteralItalic"],
 " is rounded up",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{
  3.4694615921947727`*^9, {3.469558752335477*^9, 3.469558883635583*^9}, {
   3.469558926363755*^9, 3.4695589542574673`*^9}, {3.469972368923335*^9, 
   3.469972370968134*^9}, 3.470058576395419*^9, {3.470060479512994*^9, 
   3.470060491783609*^9}, 3.470502926162828*^9, {3.47065809670608*^9, 
   3.470658117228259*^9}, {3.48552222643443*^9, 3.4855222274657497`*^9}},
 FontColor->GrayLevel[0]],

Cell[TextData[{
 StyleBox["with the probability ",
  FontTracking->"Extended"],
 StyleBox["v", "LiteralItalic",
  FontTracking->"Extended"],
 StyleBox["/10", "Literal",
  FontTracking->"Extended"],
 StyleBox[" and rounded down w",
  FontTracking->"Extended"],
 StyleBox["ith probability ",
  FontTracking->"Plain"],
 StyleBox["(10-", "Literal",
  FontTracking->"Plain"],
 StyleBox["v", "LiteralItalic",
  FontTracking->"Plain"],
 StyleBox[")/10", "Literal",
  FontTracking->"Plain"],
 StyleBox[". So, for",
  FontTracking->"Plain"],
 StyleBox[" example, 10.5 would have equal probability of going to 10 as to \
11, whereas 10.85",
  FontTracking->"SemiCondensed"],
 StyleBox[" would have probability of 0.85 of rounding up and 0.15 of \
rounding down.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.4694615921947727`*^9, {3.469558752335477*^9, 3.469558883635583*^9}, {
   3.469558926363755*^9, 3.4695589542574673`*^9}, {3.469972368923335*^9, 
   3.469972370968134*^9}, 3.470058576395419*^9, {3.470060479512994*^9, 
   3.470060491783609*^9}, 3.470502926162828*^9, {3.47065809670608*^9, 
   3.4706581197188683`*^9}, {3.475328976804082*^9, 3.475328992140956*^9}, {
   3.476543142122472*^9, 3.476543145635004*^9}},
 FontColor->GrayLevel[0]],

Cell[BoxData[
 RowBox[{
  RowBox[{"UnbiasedRound", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"whole", "=", 
       RowBox[{"Floor", "[", "x", "]"}]}], ",", " ", "v"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{"v", " ", "=", " ", 
      RowBox[{"10", " ", "*", " ", 
       RowBox[{"(", 
        RowBox[{"x", " ", "-", " ", "whole"}], ")"}]}]}], ";", " ", 
     RowBox[{"whole", " ", "+", " ", 
      RowBox[{"Floor", "[", " ", 
       RowBox[{
        RowBox[{"v", "/", "10"}], "+", 
        RowBox[{"RandomReal", "[", "]"}]}], "]"}]}]}]}], "]"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[120]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"UnbiasedRound", "[", "10.5", "]"}], ",", " ", 
   RowBox[{"{", "20", "}"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[121]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "11", ",", "10", ",", "11", ",", "10", ",", "10", ",", "10", ",",
    "11", ",", "11", ",", "11", ",", "10", ",", "11", ",", "11", ",", "10", 
   ",", "10", ",", "11", ",", "11", ",", "11", ",", "11", ",", "11"}], 
  "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[121]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"UnbiasedRound", "[", "10.1", "]"}], ",", " ", 
   RowBox[{"{", "20", "}"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[122]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "10", ",",
    "10", ",", "10", ",", "10", ",", "10", ",", "11", ",", "10", ",", "10", 
   ",", "10", ",", "10", ",", "11", ",", "10", ",", "10", ",", "10"}], 
  "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[122]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"UnbiasedRound", "[", "10.8", "]"}], ",", " ", 
   RowBox[{"{", "20", "}"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[123]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "11", ",", "11", ",", "11", ",", "10", ",", "11", ",", "11", ",", "11", ",",
    "11", ",", "11", ",", "10", ",", "11", ",", "10", ",", "11", ",", "11", 
   ",", "10", ",", "11", ",", "11", ",", "11", ",", "11", ",", "11"}], 
  "}"}]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[123]="]
}, Open  ]],

Cell["\<\
The main disadvantage of stochastic rounding is that the results are not \
repeatable.\
\>", "Text",
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell["See Also", "Heading2"],

Cell[TextData[{
 StyleBox["An Examination of the Effects of Rounding on the Quality and \
Confidentiality of Tabular Data", "CitationTitle"],
 " by Lawrence H. Cox and Jay J. Kim (",
 StyleBox[ButtonBox["http://bit.ly/I7JdA",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/I7JdA"], None},
  ButtonNote->"http://bit.ly/I7JdA"], "URL"],
 ")."
}], "Text",
 CellChangeTimes->{{3.469814773169511*^9, 3.469814773172359*^9}, {
   3.469972461253661*^9, 3.4699724656674013`*^9}, 3.47005859179233*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Displaying Numbers in Alternate Forms"
}], "Heading1",
 FontColor->GrayLevel[0],
 CellTags->"Displaying Numbers in Alternate Forms"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You don\[CloseCurlyQuote]t like the format that Mathematica chooses to \
display a particular numerical result.\
\>", "Text",
 CellChangeTimes->{3.46946160000212*^9},
 FontColor->GrayLevel[0]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use one of the alternative forms: ",
 StyleBox["AccountingForm", "Literal"],
 ", ",
 StyleBox["EngineeringForm", "Literal"],
 ", ",
 StyleBox["NumberForm", "Literal"],
 ", ",
 StyleBox["PaddedForm", "Literal"],
 ", and ",
 StyleBox["ScientificForm", "Literal"],
 ". The default form is usually the most compact way to represent the number, \
but if you are outputting values that have specific user expectations or if \
you are trying to convey a specific accuracy, you may want to force a \
different form."
}], "Text",
 CellChangeTimes->{{3.469558984856472*^9, 3.469559000373889*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"number", " ", "=", " ", 
  RowBox[{"3.50", " ", "*", " ", "1000000"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[124]:="],

Cell[BoxData["3.5`*^6"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[124]="]
}, Open  ]],

Cell[TextData[{
 "Accounting form does not use scientific notation and shows negative numbers \
in parentheses. Here it is traditional to use the form as a postfix (",
 StyleBox["//", "Literal"],
 ") operation."
}], "Text",
 CellChangeTimes->{3.469559012249391*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"number", "//", " ", "AccountingForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[125]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"3500000.\"\>",
   3.5*^6,
   AutoDelete->True],
  AccountingForm]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[125]//AccountingForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "number"}], "//", "AccountingForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[126]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"(3500000.)\"\>",
   -3.5*^6,
   AutoDelete->True],
  AccountingForm]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[126]//AccountingForm="]
}, Open  ]],

Cell[TextData[{
 "Alternatively, ",
 StyleBox["NumberForm", "Literal"],
 " allows you to control the digits of precision and the number of digits \
after the decimal."
}], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NumberForm", "[", 
  RowBox[{"number", ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4"}], "}"}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[127]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   RowBox[{"\<\"3.5000\"\>", "\[Times]", 
    SuperscriptBox["10", "\<\"6\"\>"]}],
   3.5*^6,
   AutoDelete->True],
  NumberForm[#, {6, 4}]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[127]//NumberForm="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "Forms have an extensive set of options to provide fine-grained control over \
the output. Here I use ",
 StyleBox["AccountingForm", "Literal"],
 " to display a column of numbers. ",
 StyleBox["DigitBlock", "Literal"],
 " specifies the grouping factor and ",
 StyleBox["NumberPadding", "Literal"],
 " allows control of the characters used to pad out the display on the left \
(shown here as spaces) and right (shown as zeros)."
}], "Text",
 CellChangeTimes->{{3.4695592617185097`*^9, 3.46955933592864*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccountingForm", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{"100000.00", ",", "1000000.00", ",", "10000000.00"}], "}"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1"}], "}"}], ",", 
   RowBox[{"DigitBlock", "\[Rule]", "3"}], ",", 
   RowBox[{"NumberPadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\< \>\"", ",", "\"\<0\>\""}], "}"}]}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[128]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\"    100,000.00\"\>",
       100000.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"  1,000,000.00\"\>",
       1.*^6,
       AutoDelete->True]},
     {
      InterpretationBox["\<\" 10,000,000.00\"\>",
       1.*^7,
       AutoDelete->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  AccountingForm[#, {9, 1}, DigitBlock -> 3, 
   NumberPadding -> {" ", "0"}]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[128]//AccountingForm="]
}, Open  ]],

Cell[TextData[{
 "Contrast this to ",
 StyleBox["AccountingForm", "Literal"],
 " without the options."
}], "Text",
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AccountingForm", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"{", 
    RowBox[{"100000.00", ",", "1000000.00", ",", "10000000.00"}], "}"}], 
   "]"}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[129]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      InterpretationBox["\<\"100000.\"\>",
       100000.,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"1000000.\"\>",
       1.*^6,
       AutoDelete->True]},
     {
      InterpretationBox["\<\"10000000.\"\>",
       1.*^7,
       AutoDelete->True]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  AccountingForm]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[129]//AccountingForm="]
}, Open  ]],

Cell[TextData[{
 StyleBox["PaddedForm", "Literal"],
 " is convenient when all you want to do is pad out a number with specific \
characters on the left and right. This is often a useful operation prior to \
conversion to a string to generate fixed-length identifiers. "
}], "Text",
 CellChangeTimes->{3.4695593558398438`*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PaddedForm", "[", 
  RowBox[{"10", ",", "8", ",", 
   RowBox[{"NumberPadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[130]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox["\<\"000000010\"\>",
   10,
   Editable->False],
  PaddedForm[#, 8, NumberPadding -> {"0", ""}]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[130]//PaddedForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"id", " ", "=", " ", 
  RowBox[{"ToString", "[", 
   RowBox[{"PaddedForm", "[", 
    RowBox[{"10", ",", "8", ",", 
     RowBox[{"NumberPadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<0\>\"", ",", "\"\<\>\""}], "}"}]}]}], "]"}], 
   "]"}]}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[131]:="],

Cell[BoxData["\<\"000000010\"\>"], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[131]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["EngineeringForm", "Literal"],
 " forces exponents in multiples of three, provided an exponent of at least \
three is required. "
}], "Text",
 CellChangeTimes->{{3.469559427896681*^9, 3.469559442181231*^9}, 
   3.469972487291916*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "10.0", ",", "100.0", ",", "1000.0", ",", "10000.0", ",", "100000.0", ",", 
    "1000000.0"}], "}"}], " ", "//", "EngineeringForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[132]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox["\<\"10.\"\>",
     10.,
     AutoDelete->True], ",", 
    InterpretationBox["\<\"100.\"\>",
     100.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"3\"\>"]}],
     1000.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"10.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"3\"\>"]}],
     10000.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"100.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"3\"\>"]}],
     100000.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"6\"\>"]}],
     1.*^6,
     AutoDelete->True]}], "}"}],
  EngineeringForm]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[132]//EngineeringForm="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ScientificForm", "Literal"],
 " always shows numbers with one digit before the decimal and adjusts the \
exponent accordingly."
}], "Text",
 CellChangeTimes->{3.469559454057246*^9},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "10.0", ",", "100.0", ",", "1000.0", ",", "10000.0", ",", "100000.0", ",", 
    "1000000.0"}], "}"}], "//", "ScientificForm"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[133]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"1\"\>"]}],
     10.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"2\"\>"]}],
     100.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"3\"\>"]}],
     1000.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"4\"\>"]}],
     10000.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"5\"\>"]}],
     100000.,
     AutoDelete->True], ",", 
    InterpretationBox[
     RowBox[{"\<\"1.\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"6\"\>"]}],
     1.*^6,
     AutoDelete->True]}], "}"}],
  ScientificForm]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[133]//ScientificForm="]
}, Open  ]],

Cell[TextData[{
 "You can use the option ",
 StyleBox["NumberFormat", "Literal"],
 " to get precise control of the display. ",
 StyleBox["NumberFormat", "Literal"],
 " specifies a function (see ",
 ButtonBox["Chapter 2",
  BaseStyle->"Hyperlink",
  ButtonData->{"FunctionalProgramming.nb", None}],
 " for details) that accepts up to three arguments for the mantissa, base, \
and exponent. Here is an example that displays numbers like a calculator \
might. Here, the function uses ",
 StyleBox["Row", "Literal"],
 " to format the mantissa and exponent (it ignores the base)."
}], "Text",
 CellChangeTimes->{{3.469559407706896*^9, 3.469559423929401*^9}, 
   3.469559506907126*^9, {3.469559580122992*^9, 3.46955968044734*^9}, 
   3.469559843764492*^9, {3.469559983215808*^9, 3.469559985150413*^9}, {
   3.469560042270754*^9, 3.469560042275896*^9}, {3.469972502400003*^9, 
   3.469972511268819*^9}},
 FontColor->GrayLevel[0]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ScientificForm", "[", 
  RowBox[{
   RowBox[{"1.77", " ", 
    RowBox[{"10", "^", "5"}]}], ",", 
   RowBox[{"NumberFormat", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Row", "[", 
       RowBox[{"{", 
        RowBox[{"#1", ",", "\"\<E\>\"", ",", "#3"}], "}"}], "]"}], "&"}], 
     ")"}]}]}], "]"}]], "Input",
 FontColor->GrayLevel[0],
 CellLabel->"In[134]:="],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   TemplateBox[{"\"1.77\"","\"E\"","\"5\""},
    "Row",
    DisplayFunction->(
     RowBox[{#, "\[InvisibleSpace]", #2, "\[InvisibleSpace]", #3}]& ),
    InterpretationFunction->(RowBox[{"Row", "[", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3}], "}"}], "]"}]& )],
   177000.,
   Editable->False],
  ScientificForm[#, NumberFormat -> (Row[{#, "E", #3}]& )]& ]], "Output",
 FontColor->GrayLevel[0],
 CellLabel->"Out[134]//ScientificForm="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "You can find information and examples on all these forms and their options \
in the Wolfram documentation under ",
 StyleBox["tutorial/OutputFormatsForNumbers", "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.469879021106721*^9, 3.469879080039537*^9}, {
   3.469972535829645*^9, 3.469972538478053*^9}, 3.4700567935167522`*^9, {
   3.470658825281081*^9, 3.470658827766884*^9}},
 FontColor->GrayLevel[0]]
}, Open  ]]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.470658192549618*^9, 3.470658192559349*^9}}]
},
AutoGeneratedPackage->None,
WindowToolbars->"EditBar",
CellGrouping->Manual,
WindowSize->{1044, 756},
WindowMargins->{{258, Automatic}, {Automatic, 22}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{None, None, None}, {None, None, None}},
PageFooters->{{
   Cell[
    TextData[{
      CounterBox["Page"], 
      "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]Chapter ", 
      CounterBox["ChapterLabel"], ":\[ThickSpace]\[ThickSpace]", "Numerics"}],
     "Footer"], None, None}, {None, None, 
   Cell[
    TextData[{
      CounterBox[
      "Page", CounterFunction :> (
        Part[{"", 
          "1.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "1.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "1.1\[ThickSpace]\[ThickSpace]Controlling Precision and Accuracy\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.1\[ThickSpace]\[ThickSpace]Controlling Precision and Accuracy\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.1\[ThickSpace]\[ThickSpace]Controlling Precision and Accuracy\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.1\[ThickSpace]\[ThickSpace]Controlling Precision and Accuracy\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.1\[ThickSpace]\[ThickSpace]Controlling Precision and Accuracy\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.2\[ThickSpace]\[ThickSpace]Mixing Different Numerical Types\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.2\[ThickSpace]\[ThickSpace]Mixing Different Numerical Types\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.2\[ThickSpace]\[ThickSpace]Mixing Different Numerical Types\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.3\[ThickSpace]\[ThickSpace]Representing Numbers in Other Bases\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.4\[ThickSpace]\[ThickSpace]Extracting the Digits of a Number\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.4\[ThickSpace]\[ThickSpace]Extracting the Digits of a Number\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.4\[ThickSpace]\[ThickSpace]Extracting the Digits of a Number\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.5\[ThickSpace]\[ThickSpace]Working with Intervals\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "1.5\[ThickSpace]\[ThickSpace]Working with Intervals\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "1.6\[ThickSpace]\[ThickSpace]Converting Between Numerical Types\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.6\[ThickSpace]\[ThickSpace]Converting Between Numerical Types\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.7\[ThickSpace]\[ThickSpace]Displaying Numbers in Alternate Forms\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.7\[ThickSpace]\[ThickSpace]Displaying Numbers in Alternate Forms\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "1.7\[ThickSpace]\[ThickSpace]Displaying Numbers in Alternate Forms\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"}, # - CurrentValue[
          InputNotebook[], PrintingStartingPageNumber] + 1]& )], 
      CounterBox["Page"]}], "Footer"]}},
PageHeaderLines->{False, False},
PageFooterLines->{True, True},
PrintingOptions->{"CellBackgroundHalftoneAngle"->Automatic,
"CellBackgroundHalftoneDensity"->Automatic,
"FacingPages"->True,
"FirstPageFace"->"Right",
"FirstPageFooter"->True,
"FirstPageHeader"->False,
"GraphicsPrintingFormat"->"Automatic",
"IncludePostScriptResourceDirectives"->True,
"IncludeSpecialFonts"->True,
"Magnification"->1.,
"OpacityRenderingMethod"->Automatic,
"PageFooterMargins"->{24, 24},
"PageHeaderMargins"->{36, 36},
"PageSize"->{504, 661.5},
"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->Automatic,
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->True,
"PrintSelectionHighlighting"->False,
"PrintingMargins"->{{72, 72}, {72, 54}},
"RasterizationResolution"->"Automatic",
"RestPagesFooter"->True,
"RestPagesHeader"->True,
"UnixShellPrintingCommand"->Automatic,
"UsePostScriptOutputFile"->False,
"UseUnixShellPrintingCommand"->False,
"VertexColorRenderingMethod"->Automatic},
CellLabelAutoDelete->False,
$CellContext`TrackCellChangeTimes -> False,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "ora.nb"]]}, Visible -> False, 
  FrontEndVersion -> "7.0 for Mac OS X x86 (32-bit) (February 18, 2009)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "chNumerics"->{
  Cell[545, 20, 173, 7, 63, "ChapterLabel",
   CounterAssignments->{{"ChapterLabel", 1}},
   CellTags->"chNumerics"]},
 "IntroductionCh1"->{
  Cell[1404, 51, 198, 10, 63, "Heading1",
   CellTags->"IntroductionCh1"]},
 "ControllingPrecisionAndAccuracy"->{
  Cell[16596, 555, 236, 10, 63, "Heading1",
   CellTags->"ControllingPrecisionAndAccuracy"]},
 "MathematicaExpressionsSidebar"->{
  Cell[23958, 801, 176, 3, 36, "SidebarTitle",
   CellTags->"MathematicaExpressionsSidebar"]},
 "MixingDifferentNumericTypes"->{
  Cell[48610, 1653, 295, 11, 63, "Heading1",
   CellTags->"MixingDifferentNumericTypes"]},
 "RepresentingNumbersInOtherBases"->{
  Cell[59757, 2052, 296, 10, 63, "Heading1",
   CellTags->"RepresentingNumbersInOtherBases"]},
 "ExtractingTheDigitsOfANumber"->{
  Cell[65788, 2292, 232, 10, 63, "Heading1",
   CellTags->"ExtractingTheDigitsOfANumber"]},
 "Discussion1.4"->{
  Cell[69463, 2430, 58, 1, 75, "Heading2",
   CellTags->"Discussion1.4"]},
 "WorkingWithIntervals"->{
  Cell[91002, 3155, 213, 10, 63, "Heading1",
   CellTags->"WorkingWithIntervals"]},
 "ConvertingBetweenNumericTypes"->{
  Cell[103801, 3638, 300, 11, 63, "Heading1",
   CellTags->"ConvertingBetweenNumericTypes"]},
 "Discussion1.6"->{
  Cell[109040, 3856, 58, 1, 75, "Heading2",
   CellTags->"Discussion1.6"]},
 "Displaying Numbers in Alternate Forms"->{
  Cell[115127, 4042, 245, 10, 63, "Heading1",
   CellTags->"Displaying Numbers in Alternate Forms"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"chNumerics", 133674, 4648},
 {"IntroductionCh1", 133815, 4652},
 {"ControllingPrecisionAndAccuracy", 133929, 4655},
 {"MathematicaExpressionsSidebar", 134059, 4658},
 {"MixingDifferentNumericTypes", 134188, 4661},
 {"RepresentingNumbersInOtherBases", 134317, 4664},
 {"ExtractingTheDigitsOfANumber", 134447, 4667},
 {"Discussion1.4", 134559, 4670},
 {"WorkingWithIntervals", 134661, 4673},
 {"ConvertingBetweenNumericTypes", 134781, 4676},
 {"Discussion1.6", 134895, 4679},
 {"Displaying Numbers in Alternate Forms", 135015, 4682}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 173, 7, 63, "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 1}},
 CellTags->"chNumerics"],
Cell[721, 29, 32, 0, 63, "ChapterTitle"],
Cell[756, 31, 425, 11, 113, "Epigraph"],
Cell[1184, 44, 195, 3, 60, "EpigraphAuthor"],
Cell[CellGroupData[{
Cell[1404, 51, 198, 10, 63, "Heading1",
 CellTags->"IntroductionCh1"],
Cell[CellGroupData[{
Cell[1627, 65, 167, 2, 75, "Heading2WithHeadAbove"],
Cell[1797, 69, 703, 12, 63, "Text"],
Cell[2503, 83, 1126, 34, 48, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[3632, 119, 402, 9, 109, "Code"],
Cell[4037, 130, 531, 11, 46, "Text"],
Cell[CellGroupData[{
Cell[4593, 145, 124, 4, 49, "Input"],
Cell[4720, 151, 83, 2, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4840, 158, 129, 4, 49, "Input"],
Cell[4972, 164, 84, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5093, 171, 199, 5, 49, "Input"],
Cell[5295, 178, 80, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5412, 185, 163, 5, 49, "Input"],
Cell[5578, 192, 83, 2, 54, "Output"]
}, Open  ]],
Cell[5676, 197, 1059, 21, 84, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6772, 223, 49, 0, 75, "Heading2"],
Cell[6824, 225, 691, 16, 63, "Text"],
Cell[7518, 243, 284, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[7827, 253, 111, 3, 49, "Input"],
Cell[7941, 258, 568, 9, 193, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8546, 272, 106, 3, 49, "Input"],
Cell[8655, 277, 88, 3, 64, "Output"]
}, Open  ]],
Cell[8758, 283, 917, 18, 82, "Text"],
Cell[CellGroupData[{
Cell[9700, 305, 112, 3, 49, "Input"],
Cell[9815, 310, 157, 3, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10009, 318, 107, 3, 49, "Input"],
Cell[10119, 323, 95, 2, 54, "Output"]
}, Open  ]],
Cell[10229, 328, 643, 15, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10909, 348, 41, 0, 75, "Heading2"],
Cell[10953, 350, 1318, 29, 102, "Text"],
Cell[CellGroupData[{
Cell[12296, 383, 177, 5, 49, "Input",
 InitializationCell->True],
Cell[12476, 390, 106, 3, 54, "Output",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[12607, 397, 157, 5, 49, "Input",
 InitializationCell->True],
Cell[12767, 404, 79, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12883, 411, 143, 4, 49, "Input",
 InitializationCell->True],
Cell[13029, 417, 79, 2, 54, "Output"]
}, Open  ]],
Cell[13123, 422, 218, 7, 73, "Input",
 InitializationCell->True],
Cell[13344, 431, 79, 2, 54, "Output"],
Cell[CellGroupData[{
Cell[13448, 437, 158, 5, 49, "Input",
 InitializationCell->True],
Cell[13609, 444, 79, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13725, 451, 126, 4, 49, "Input",
 InitializationCell->True],
Cell[13854, 457, 98, 3, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13989, 465, 124, 4, 75, "Input",
 InitializationCell->True],
Cell[14116, 471, 98, 3, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14251, 479, 159, 5, 49, "Input",
 InitializationCell->True],
Cell[14413, 486, 98, 3, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[14538, 493, 1113, 23, 84, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15688, 521, 44, 0, 75, "Heading2"],
Cell[15735, 523, 812, 26, 46, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16596, 555, 236, 10, 63, "Heading1",
 CellTags->"ControllingPrecisionAndAccuracy"],
Cell[CellGroupData[{
Cell[16857, 569, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[16900, 571, 178, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17115, 581, 28, 0, 75, "Heading2"],
Cell[17146, 583, 204, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[17375, 593, 173, 6, 49, "Input",
 InitializationCell->True],
Cell[17551, 601, 108, 3, 54, "Output",
 InitializationCell->True],
Cell[17662, 606, 161, 4, 4, "PageBreak",
 PageBreakBelow->True],
Cell[17826, 612, 157, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[18008, 621, 180, 6, 49, "Input",
 InitializationCell->True],
Cell[18191, 629, 148, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[18354, 635, 320, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[18699, 645, 288, 10, 49, "Input",
 InitializationCell->True],
Cell[18990, 657, 238, 8, 54, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[19255, 669, 284, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[19564, 679, 746, 24, 73, "Input"],
Cell[20313, 705, 1314, 28, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21664, 738, 30, 0, 75, "Heading2"],
Cell[21697, 740, 814, 14, 82, "Text"],
Cell[22514, 756, 1081, 25, 46, "Text"],
Cell[CellGroupData[{
Cell[23620, 785, 163, 5, 49, "Input",
 InitializationCell->True],
Cell[23786, 792, 123, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23958, 801, 176, 3, 36, "SidebarTitle",
 CellTags->"MathematicaExpressionsSidebar"],
Cell[24137, 806, 93, 2, 5, "SidebarTitleSpacer"],
Cell[CellGroupData[{
Cell[24255, 812, 1020, 21, 45, "SidebarBody"],
Cell[25278, 835, 51, 1, 4, "SidebarSpacer"],
Cell[25332, 838, 484, 8, 30, "SidebarBody"],
Cell[25819, 848, 51, 1, 4, "SidebarSpacer"],
Cell[25873, 851, 273, 7, 14, "SidebarListVariableTerm"],
Cell[26149, 860, 389, 10, 15, "SidebarListVariableDescription"],
Cell[26541, 872, 51, 1, 4, "SidebarSpacer"],
Cell[26595, 875, 272, 7, 14, "SidebarListVariableTerm"],
Cell[26870, 884, 518, 16, 15, "SidebarListVariableDescription"],
Cell[27391, 902, 51, 1, 4, "SidebarSpacer"],
Cell[27445, 905, 276, 7, 14, "SidebarListVariableTerm"],
Cell[27724, 914, 533, 16, 15, "SidebarListVariableDescription"],
Cell[28260, 932, 51, 1, 4, "SidebarSpacer"],
Cell[28314, 935, 273, 7, 14, "SidebarListVariableTerm"],
Cell[28590, 944, 589, 16, 15, "SidebarListVariableDescription"],
Cell[29182, 962, 51, 1, 4, "SidebarSpacer"],
Cell[29236, 965, 600, 16, 31, "SidebarBody"],
Cell[29839, 983, 51, 1, 4, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[29915, 988, 309, 9, 36, "SidebarInput"],
Cell[30227, 999, 83, 2, 54, "SidebarOutput"]
}, Open  ]],
Cell[30325, 1004, 51, 1, 4, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[30401, 1009, 286, 7, 35, "SidebarInput"],
Cell[30690, 1018, 83, 2, 54, "SidebarOutput"]
}, Open  ]],
Cell[30788, 1023, 51, 1, 4, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[30864, 1028, 293, 8, 35, "SidebarInput"],
Cell[31160, 1038, 80, 2, 54, "SidebarOutput"]
}, Open  ]],
Cell[31255, 1043, 51, 1, 4, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[31331, 1048, 443, 13, 37, "SidebarInput"],
Cell[31777, 1063, 83, 2, 54, "SidebarOutput"]
}, Open  ]],
Cell[31875, 1068, 51, 1, 4, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[31951, 1073, 313, 8, 35, "SidebarInput"],
Cell[32267, 1083, 80, 2, 54, "SidebarOutput"]
}, Open  ]],
Cell[32362, 1088, 51, 1, 4, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[32438, 1093, 441, 14, 37, "SidebarInput"],
Cell[32882, 1109, 83, 2, 54, "SidebarOutput"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[33016, 1117, 48, 1, 38, "SidebarEnd"],
Cell[33067, 1120, 432, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[33524, 1130, 209, 7, 49, "Input"],
Cell[33736, 1139, 121, 2, 54, "Output"]
}, Open  ]],
Cell[33872, 1144, 697, 17, 48, "Text"],
Cell[CellGroupData[{
Cell[34594, 1165, 120, 3, 49, "Input",
 InitializationCell->True],
Cell[34717, 1170, 123, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[34855, 1176, 700, 18, 65, "Text"],
Cell[CellGroupData[{
Cell[35580, 1198, 284, 8, 49, "Input",
 InitializationCell->True],
Cell[35867, 1208, 108, 3, 54, "Output",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[36000, 1215, 331, 9, 51, "Input",
 InitializationCell->True],
Cell[36334, 1226, 111, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[36472, 1233, 321, 8, 27, "Text"],
Cell[CellGroupData[{
Cell[36818, 1245, 571, 15, 73, "Input"],
Cell[37392, 1262, 122, 2, 54, "Output"]
}, Open  ]],
Cell[37529, 1267, 1079, 30, 42, "Note"],
Cell[38611, 1299, 225, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[38861, 1308, 140, 4, 49, "Input",
 InitializationCell->True],
Cell[39004, 1314, 120, 3, 54, "Output",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[39149, 1321, 184, 5, 49, "Input",
 InitializationCell->True],
Cell[39336, 1328, 96, 2, 54, "Output"]
}, Open  ]],
Cell[39447, 1333, 80, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[39552, 1338, 189, 6, 49, "Input",
 InitializationCell->True],
Cell[39744, 1346, 115, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[39896, 1354, 171, 5, 49, "Input",
 InitializationCell->True],
Cell[40070, 1361, 120, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[40227, 1369, 139, 4, 49, "Input",
 InitializationCell->True],
Cell[40369, 1375, 123, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[40507, 1381, 128, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[40660, 1388, 266, 9, 49, "Input",
 InitializationCell->True],
Cell[40929, 1399, 122, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[41066, 1405, 162, 2, 25, "Text"],
Cell[CellGroupData[{
Cell[41253, 1411, 266, 9, 49, "Input",
 InitializationCell->True],
Cell[41522, 1422, 123, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]],
Cell[41660, 1428, 90, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[41775, 1433, 274, 10, 49, "Input",
 InitializationCell->True],
Cell[42052, 1445, 123, 3, 54, "Output",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[42202, 1452, 438, 10, 46, "Text"],
Cell[CellGroupData[{
Cell[42665, 1466, 151, 4, 49, "Input"],
Cell[42819, 1472, 133, 4, 54, "Output"]
}, Open  ]],
Cell[42967, 1479, 1217, 31, 108, "Text"],
Cell[CellGroupData[{
Cell[44209, 1514, 401, 12, 49, "Input"],
Cell[44613, 1528, 155, 3, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44805, 1536, 612, 18, 49, "Input"],
Cell[45420, 1556, 140, 3, 57, "Output"]
}, Open  ]],
Cell[45575, 1562, 276, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[45876, 1572, 28, 0, 75, "Heading2"],
Cell[45907, 1574, 426, 14, 27, "Text"],
Cell[46336, 1590, 957, 24, 25, "Text"],
Cell[47296, 1616, 727, 16, 44, "Text"],
Cell[48026, 1634, 535, 13, 44, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48610, 1653, 295, 11, 63, "Heading1",
 CellTags->"MixingDifferentNumericTypes"],
Cell[CellGroupData[{
Cell[48930, 1668, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[48973, 1670, 200, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49210, 1680, 28, 0, 75, "Heading2"],
Cell[49241, 1682, 192, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[49458, 1689, 119, 1, 75, "Heading3"],
Cell[49580, 1692, 365, 7, 44, "Text"],
Cell[CellGroupData[{
Cell[49970, 1703, 206, 7, 49, "Input"],
Cell[50179, 1712, 82, 2, 54, "Output"]
}, Open  ]],
Cell[50276, 1717, 289, 10, 49, "Input"],
Cell[50568, 1729, 265, 9, 84, "Output"]
}, Open  ]],
Cell[50848, 1741, 130, 1, 75, "Heading3"],
Cell[50981, 1744, 242, 5, 24, "Text"],
Cell[CellGroupData[{
Cell[51248, 1753, 208, 7, 49, "Input"],
Cell[51459, 1762, 95, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51591, 1769, 227, 7, 49, "Input"],
Cell[51821, 1778, 95, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51953, 1785, 186, 2, 75, "Heading3"],
Cell[52142, 1789, 392, 7, 44, "Text"],
Cell[CellGroupData[{
Cell[52559, 1800, 320, 10, 49, "Input"],
Cell[52882, 1812, 121, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53040, 1819, 112, 3, 49, "Input"],
Cell[53155, 1824, 96, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53288, 1831, 111, 3, 49, "Input"],
Cell[53402, 1836, 95, 2, 54, "Output"]
}, Open  ]],
Cell[53512, 1841, 230, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[53767, 1850, 440, 14, 49, "Input"],
Cell[54210, 1866, 138, 3, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54385, 1874, 112, 3, 49, "Input"],
Cell[54500, 1879, 96, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54633, 1886, 111, 3, 49, "Input"],
Cell[54747, 1891, 96, 2, 54, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[54882, 1898, 53, 0, 75, "Heading2"],
Cell[54938, 1900, 175, 5, 24, "Text"],
Cell[CellGroupData[{
Cell[55138, 1909, 198, 6, 49, "Input"],
Cell[55339, 1917, 96, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55472, 1924, 229, 7, 49, "Input"],
Cell[55704, 1933, 95, 2, 54, "Output"]
}, Open  ]],
Cell[55814, 1938, 269, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[56108, 1947, 980, 29, 74, "Input"],
Cell[57091, 1978, 2090, 51, 286, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59218, 2034, 28, 0, 75, "Heading2"],
Cell[59249, 2036, 481, 12, 44, "Text"]
}, Open  ]]
}, Open  ]],
Cell[59757, 2052, 296, 10, 63, "Heading1",
 CellTags->"RepresentingNumbersInOtherBases"],
Cell[CellGroupData[{
Cell[60078, 2066, 40, 0, 46, "Heading2WithHeadAbove"],
Cell[60121, 2068, 113, 3, 25, "Text"]
}, Open  ]],
Cell[60249, 2074, 28, 0, 75, "Heading2"],
Cell[60280, 2076, 457, 12, 45, "Text"],
Cell[CellGroupData[{
Cell[60762, 2092, 230, 6, 49, "Input",
 InitializationCell->True],
Cell[60995, 2100, 78, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61110, 2107, 238, 6, 49, "Input",
 InitializationCell->True],
Cell[61351, 2115, 82, 2, 54, "Output"]
}, Open  ]],
Cell[61448, 2120, 30, 0, 75, "Heading2"],
Cell[61481, 2122, 870, 26, 47, "Text"],
Cell[CellGroupData[{
Cell[62376, 2152, 149, 4, 49, "Input"],
Cell[62528, 2158, 209, 8, 56, "Output"]
}, Open  ]],
Cell[62752, 2169, 300, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[63077, 2180, 233, 7, 49, "Input"],
Cell[63313, 2189, 210, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63560, 2202, 291, 9, 49, "Input"],
Cell[63854, 2213, 276, 8, 56, "Output"]
}, Open  ]],
Cell[64145, 2224, 111, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[64281, 2231, 196, 6, 49, "Input"],
Cell[64480, 2239, 211, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64728, 2252, 248, 8, 49, "Input"],
Cell[64979, 2262, 368, 14, 56, "Output"]
}, Open  ]],
Cell[65362, 2279, 72, 1, 75, "Heading2"],
Cell[65437, 2282, 348, 8, 24, "Text"],
Cell[65788, 2292, 232, 10, 63, "Heading1",
 CellTags->"ExtractingTheDigitsOfANumber"],
Cell[CellGroupData[{
Cell[66045, 2306, 40, 0, 46, "Heading2WithHeadAbove"],
Cell[66088, 2308, 314, 10, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66439, 2323, 28, 0, 75, "Heading2"],
Cell[66470, 2325, 186, 7, 27, "Text"],
Cell[66659, 2334, 598, 14, 27, "Text"],
Cell[CellGroupData[{
Cell[67282, 2352, 138, 4, 51, "Input"],
Cell[67423, 2358, 153, 4, 54, "Output"]
}, Open  ]],
Cell[67591, 2365, 601, 13, 48, "Text"],
Cell[CellGroupData[{
Cell[68217, 2382, 128, 4, 49, "Input"],
Cell[68348, 2388, 97, 2, 54, "Output"]
}, Open  ]],
Cell[68460, 2393, 386, 9, 46, "Text"],
Cell[CellGroupData[{
Cell[68871, 2406, 192, 6, 51, "Input"],
Cell[69066, 2414, 348, 10, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69463, 2430, 58, 1, 75, "Heading2",
 CellTags->"Discussion1.4"],
Cell[69524, 2433, 375, 11, 46, "Text"],
Cell[CellGroupData[{
Cell[69924, 2448, 95, 3, 49, "Input"],
Cell[70022, 2453, 86, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70145, 2460, 196, 6, 51, "Input"],
Cell[70344, 2468, 153, 4, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70534, 2477, 396, 12, 49, "Input"],
Cell[70933, 2491, 222, 8, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71192, 2504, 531, 13, 74, "Input"],
Cell[71726, 2519, 194, 6, 54, "Output"]
}, Open  ]],
Cell[71935, 2528, 536, 15, 51, "Input"],
Cell[72474, 2545, 998, 38, 56, "Output"],
Cell[73475, 2585, 940, 25, 48, "Text"],
Cell[CellGroupData[{
Cell[74440, 2614, 382, 10, 51, "Input"],
Cell[74825, 2626, 120, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74982, 2633, 465, 11, 51, "Input"],
Cell[75450, 2646, 182, 6, 54, "Output"]
}, Open  ]],
Cell[75647, 2655, 268, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[75940, 2666, 556, 13, 51, "Input"],
Cell[76499, 2681, 201, 7, 54, "Output"]
}, Open  ]],
Cell[76715, 2691, 268, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[77008, 2702, 187, 5, 51, "Input"],
Cell[77198, 2709, 201, 7, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77436, 2721, 243, 8, 49, "Input"],
Cell[77682, 2731, 246, 8, 54, "Output"]
}, Open  ]],
Cell[77943, 2742, 175, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[78143, 2749, 186, 5, 51, "Input"],
Cell[78332, 2756, 221, 7, 54, "Output"]
}, Open  ]],
Cell[78568, 2766, 1001, 30, 67, "Text"],
Cell[79572, 2798, 284, 9, 51, "Input"],
Cell[79859, 2809, 3931, 99, 147, "Output"],
Cell[83793, 2910, 212, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[84030, 2920, 487, 17, 51, "Input"],
Cell[84520, 2939, 3931, 99, 170, "Output"]
}, Open  ]],
Cell[88466, 3041, 173, 8, 27, "Text"],
Cell[CellGroupData[{
Cell[88664, 3053, 161, 4, 51, "Input"],
Cell[88828, 3059, 86, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88951, 3066, 288, 9, 51, "Input"],
Cell[89242, 3077, 86, 2, 54, "Output"]
}, Open  ]],
Cell[89343, 3082, 204, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[89572, 3091, 160, 5, 51, "Input"],
Cell[89735, 3098, 81, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89853, 3105, 198, 6, 51, "Input"],
Cell[90054, 3113, 81, 2, 54, "Output"]
}, Open  ]],
Cell[90150, 3118, 242, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[90417, 3128, 151, 4, 51, "Input"],
Cell[90571, 3134, 87, 2, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90695, 3141, 190, 6, 51, "Input"],
Cell[90888, 3149, 87, 2, 51, "Output"]
}, Open  ]]
}, Open  ]],
Cell[91002, 3155, 213, 10, 63, "Heading1",
 CellTags->"WorkingWithIntervals"],
Cell[CellGroupData[{
Cell[91240, 3169, 40, 0, 46, "Heading2WithHeadAbove"],
Cell[91283, 3171, 217, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91537, 3181, 28, 0, 75, "Heading2"],
Cell[91568, 3183, 329, 8, 25, "Text"],
Cell[CellGroupData[{
Cell[91922, 3195, 1055, 30, 144, "Input"],
Cell[92980, 3227, 197, 6, 54, "Output"]
}, Open  ]],
Cell[93192, 3236, 483, 10, 44, "Text"],
Cell[93678, 3248, 226, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[93929, 3257, 451, 12, 51, "Input"],
Cell[94383, 3271, 96, 2, 54, "Output"]
}, Open  ]],
Cell[94494, 3276, 268, 6, 25, "Text"],
Cell[CellGroupData[{
Cell[94787, 3286, 810, 25, 144, "Input"],
Cell[95600, 3313, 292, 9, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95941, 3328, 219, 6, 51, "Input"],
Cell[96163, 3336, 96, 2, 54, "Output"]
}, Open  ]],
Cell[96274, 3341, 30, 0, 75, "Heading2"],
Cell[96307, 3343, 480, 11, 45, "Text"],
Cell[CellGroupData[{
Cell[96812, 3358, 159, 5, 49, "Input"],
Cell[96974, 3365, 160, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97171, 3375, 233, 8, 49, "Input"],
Cell[97407, 3385, 234, 8, 54, "Output"]
}, Open  ]],
Cell[97656, 3396, 133, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[97814, 3404, 159, 5, 49, "Input"],
Cell[97976, 3411, 160, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98173, 3421, 233, 8, 49, "Input"],
Cell[98409, 3431, 234, 8, 54, "Output"]
}, Open  ]],
Cell[98658, 3442, 398, 13, 25, "Text"],
Cell[CellGroupData[{
Cell[99081, 3459, 278, 9, 49, "Input"],
Cell[99362, 3470, 160, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99559, 3480, 413, 12, 49, "Input"],
Cell[99975, 3494, 160, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100172, 3504, 278, 9, 49, "Input"],
Cell[100453, 3515, 206, 7, 77, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100696, 3527, 196, 6, 49, "Input"],
Cell[100895, 3535, 199, 6, 54, "Output"]
}, Open  ]],
Cell[101109, 3544, 577, 12, 48, "Text"],
Cell[101689, 3558, 287, 6, 44, "Text"],
Cell[101979, 3566, 413, 12, 73, "Input"],
Cell[102395, 3580, 227, 8, 76, "Output"],
Cell[CellGroupData[{
Cell[102647, 3592, 380, 12, 49, "Input"],
Cell[103030, 3606, 227, 8, 76, "Output"]
}, Open  ]],
Cell[103272, 3617, 28, 0, 75, "Heading2"],
Cell[103303, 3619, 473, 15, 24, "Text"],
Cell[CellGroupData[{
Cell[103801, 3638, 300, 11, 63, "Heading1",
 CellTags->"ConvertingBetweenNumericTypes"],
Cell[CellGroupData[{
Cell[104126, 3653, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[104169, 3655, 121, 3, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104327, 3663, 28, 0, 75, "Heading2"],
Cell[104358, 3665, 191, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[104574, 3673, 131, 4, 49, "Input"],
Cell[104708, 3679, 85, 2, 56, "Output"]
}, Open  ]],
Cell[104808, 3684, 578, 17, 46, "Text"],
Cell[CellGroupData[{
Cell[105411, 3705, 132, 4, 49, "Input"],
Cell[105546, 3711, 79, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105662, 3718, 134, 4, 51, "Input"],
Cell[105799, 3724, 79, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105915, 3731, 132, 4, 49, "Input"],
Cell[106050, 3737, 79, 2, 54, "Output"]
}, Open  ]],
Cell[106144, 3742, 132, 4, 49, "Input"],
Cell[106279, 3748, 79, 2, 54, "Output"],
Cell[106361, 3752, 474, 13, 46, "Text"],
Cell[CellGroupData[{
Cell[106860, 3769, 186, 5, 49, "Input"],
Cell[107049, 3776, 109, 3, 77, "Output"]
}, Open  ]],
Cell[107173, 3782, 523, 13, 27, "Text"],
Cell[CellGroupData[{
Cell[107721, 3799, 146, 4, 49, "Input"],
Cell[107870, 3805, 88, 2, 54, "Output"]
}, Open  ]],
Cell[107973, 3810, 171, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[108169, 3818, 217, 7, 49, "Input"],
Cell[108389, 3827, 108, 3, 77, "Output"]
}, Open  ]],
Cell[108512, 3833, 192, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[108729, 3841, 146, 4, 49, "Input"],
Cell[108878, 3847, 113, 3, 77, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109040, 3856, 58, 1, 75, "Heading2",
 CellTags->"Discussion1.6"],
Cell[109101, 3859, 1570, 34, 121, "Text"],
Cell[110674, 3895, 1252, 33, 46, "Text"],
Cell[111929, 3930, 689, 20, 73, "Input"],
Cell[CellGroupData[{
Cell[112643, 3954, 206, 6, 49, "Input"],
Cell[112852, 3962, 338, 8, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113227, 3975, 206, 6, 49, "Input"],
Cell[113436, 3983, 338, 8, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113811, 3996, 206, 6, 49, "Input"],
Cell[114020, 4004, 338, 8, 54, "Output"]
}, Open  ]],
Cell[114373, 4015, 136, 4, 25, "Text"]
}, Open  ]],
Cell[114524, 4022, 28, 0, 75, "Heading2"],
Cell[114555, 4024, 535, 13, 24, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115127, 4042, 245, 10, 63, "Heading1",
 CellTags->"Displaying Numbers in Alternate Forms"],
Cell[CellGroupData[{
Cell[115397, 4056, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[115440, 4058, 202, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115679, 4068, 28, 0, 75, "Heading2"],
Cell[115710, 4070, 630, 17, 65, "Text"],
Cell[CellGroupData[{
Cell[116365, 4091, 157, 4, 49, "Input"],
Cell[116525, 4097, 85, 2, 57, "Output"]
}, Open  ]],
Cell[116625, 4102, 291, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[116941, 4113, 124, 3, 51, "Input"],
Cell[117068, 4118, 192, 7, 68, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117297, 4130, 137, 4, 25, "Input"],
Cell[117437, 4136, 195, 7, 41, "Output"]
}, Open  ]],
Cell[117647, 4146, 205, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[117877, 4156, 191, 6, 25, "Input"],
Cell[118071, 4164, 261, 9, 41, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[118381, 4179, 30, 0, 47, "Heading2"],
Cell[118414, 4181, 549, 12, 90, "Text"],
Cell[CellGroupData[{
Cell[118988, 4197, 485, 14, 43, "Input"],
Cell[119476, 4213, 641, 22, 78, "Output"]
}, Open  ]],
Cell[120132, 4238, 140, 5, 28, "Text"],
Cell[CellGroupData[{
Cell[120297, 4247, 241, 7, 25, "Input"],
Cell[120541, 4256, 560, 21, 78, "Output"]
}, Open  ]],
Cell[121116, 4280, 351, 7, 70, "Text"],
Cell[CellGroupData[{
Cell[121492, 4291, 256, 7, 25, "Input"],
Cell[121751, 4300, 216, 7, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122004, 4312, 338, 10, 25, "Input"],
Cell[122345, 4324, 95, 2, 25, "Output"]
}, Open  ]],
Cell[122455, 4329, 285, 7, 50, "Text"],
Cell[CellGroupData[{
Cell[122765, 4340, 249, 7, 25, "Input"],
Cell[123017, 4349, 906, 32, 43, "Output"]
}, Open  ]],
Cell[123938, 4384, 234, 6, 50, "Text"],
Cell[CellGroupData[{
Cell[124197, 4394, 243, 7, 25, "Input"],
Cell[124443, 4403, 1038, 36, 43, "Output"]
}, Open  ]],
Cell[125496, 4442, 922, 20, 110, "Text"],
Cell[CellGroupData[{
Cell[126443, 4466, 398, 13, 25, "Input"],
Cell[126844, 4481, 496, 14, 41, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127389, 4501, 28, 0, 47, "Heading2"],
Cell[127420, 4503, 419, 9, 50, "Text"]
}, Open  ]]
}, Open  ]],
Cell[127866, 4516, 82, 1, 28, "Text"]
}
]
*)

(* End of internal cache information *)
