(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[   1195630,      23468]
NotebookOptionsPosition[   1156950,      22487]
NotebookOutlinePosition[   1170094,      22749]
CellTagsIndexPosition[   1169039,      22724]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "CHAPTER ",
 
 CounterBox["ChapterLabel"]
}], "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 14}},
 CellTags->"chFinance"],

Cell["Financial Engineering", "ChapterTitle",
 CellChangeTimes->{{3.424818634078125*^9, 3.424818652890625*^9}}],

Cell["\<\
I\[CloseCurlyQuote]ve got the brains, you\[CloseCurlyQuote]ve got the looks
Let\[CloseCurlyQuote]s make lots of money
You\[CloseCurlyQuote]ve got the brawn, I\[CloseCurlyQuote]ve got the brains
Let\[CloseCurlyQuote]s make lots of money\
\>", "Epigraph",
 CellChangeTimes->{
  3.465988864575*^9, {3.465988933866*^9, 3.465988948012*^9}, {
   3.465991124111*^9, 3.465991137734*^9}}],

Cell["\<\
Pet Shop Boys, \[OpenCurlyDoubleQuote]Opportunities (Let\[CloseCurlyQuote]s \
Make\[LineSeparator]Lots of Money)\[CloseCurlyDoubleQuote]\
\>", "EpigraphAuthor",
 CellChangeTimes->{{3.46598889504*^9, 3.4659888993710003`*^9}, {
   3.4659911440480003`*^9, 3.465991171861*^9}, {3.473179405184464*^9, 
   3.473179426160719*^9}, {3.473442205602466*^9, 3.473442220671157*^9}, 
   3.47403944362971*^9, 3.476114702237136*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introduction"
}], "Heading1",
 CellChangeTimes->{{3.4256831195625*^9, 3.425683124125*^9}}],

Cell["\<\
Financial engineering (also known as computational finance) is the use of \
computers to create mathematical models and simulations that attempt to price \
financial instruments, model their sensitivity to changes in the market, \
hedge against these changes, and measure and manage risk. This is a \
high-stakes game, where there can be great reward for getting things right \
but even greater loss if you get things wrong. This became acutely evident \
during the financial crisis that started around July 2007. It might be \
tempting to conclude that attempts to bring mathematical rigor to the chaos \
of the market is foolhardy, but this would be like concluding that \
traditional engineering is foolhardy because a plane crashed or a bridge \
fell. Such failings are human failings, not mathematical ones. They only \
point to the need to use computational tools more diligently and more \
responsibly.\
\>", "Text",
 CellChangeTimes->{{3.47317948850353*^9, 3.473179613841774*^9}, 
   3.474214807021291*^9}],

Cell[TextData[{
 "One goal for this chapter was to create a variety of recipes with a range \
of difficulties. This means that there are some recipes that may seem trivial \
and others that a novice might find difficult. Almost every recipe tries to \
demonstrate techniques that are unique to ",
 StyleBox["Mathematica",
  FontSize->10.199996948242188`],
 "; I hope readers of every skill level will take away techniques that they \
can apply to financial problems that interest them. "
}], "Text",
 CellChangeTimes->{{3.473180093738269*^9, 3.473180094913563*^9}, {
  3.473180745026764*^9, 3.47318077605247*^9}}],

Cell[TextData[{
 "Mathematica has unique characteristics lacking in many other tools commonly \
used in the financial industry. As of version 6, Mathematica has integrated \
financial data that is essential to testing your models. This ",
 StyleBox["is a big plus; having worked in the indus",
  FontTracking->"SemiCondensed"],
 "try, I have seen how hard it can be for ",
 StyleBox["quan", "Techical Italic"],
 StyleBox["ts", "Techical Italic",
  FontTracking->"Extended"],
 StyleBox[" (quantitative analysts) to get data eas",
  FontTracking->"Extended"],
 "ily that is i",
 StyleBox["mmediately usable. This may seem counterintuitive; it seems that \
in",
  FontTracking->"Extended"],
 "vestment banks and hedge funds would be swim",
 StyleBox["ming in data. They are, but you of",
  FontTracking->"SemiCondensed"],
 "ten must exert great effort to access it because of technical, logistical, \
and political barriers. ",
 ButtonBox["Recipe 14.1",
  BaseStyle->"Hyperlink",
  ButtonData->"FinancialData"],
 " explains how to use ",
 StyleBox["FinancialData", "Literal"],
 " to get access to historical and delayed market data. Unfortunately, ",
 StyleBox["FinancialData", "Literal"],
 " is still incomplete. As of version 7, it concentrates mainly on equities, \
commodities, and currency data. There is nothing related to government, \
municipal, or corporate bonds; options; or interest rates. Luckily, \
Mathematica will import data from other sources; ",
 ButtonBox["Recipe 14.2",
  BaseStyle->"Hyperlink",
  ButtonData->"Importing Financial Data From Web Sites"],
 " shows an example of that."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.4731807866365013`*^9, 3.473180883390033*^9}, {
  3.473180936180697*^9, 3.473180938231855*^9}, {3.473180978141374*^9, 
  3.473181005033454*^9}, {3.473181045596648*^9, 3.4731810519712543`*^9}, {
  3.474039525177883*^9, 3.474039539103137*^9}, {3.474039591128806*^9, 
  3.474039632355241*^9}}],

Cell[TextData[{
 "Another important feature of Mathematica is its ability to find exact \
solutions using its unparalleled symbolic capabilities. Exact solutions, when \
you can get them, overcome the errors and inaccuracies introduced by \
numerical methods, especially around the boundaries of a solution. For \
example, when computing Greeks it is advantageous if you can compute a \
symbolic derivative (",
 StyleBox["D", "Literal"],
 ") rather than a numerical one (",
 StyleBox["ND", "Literal"],
 "). ",
 ButtonBox["Recipe 14.6",
  BaseStyle->"Hyperlink",
  ButtonData->"Black Scholes for European Option Pricing"],
 " shows how the symbolic capabilities of Mathematica can be used to compute \
and visualize the Greeks for European style options. See the ",
 ButtonBox["introductory sidebar on page 551",
  BaseStyle->"Hyperlink",
  ButtonData->"Sidebar 1"],
 " if this is all Greek to you!"
}], "Text",
 CellChangeTimes->{{3.4731819006301813`*^9, 3.473181925479658*^9}, {
  3.473182815323656*^9, 3.4731828153277063`*^9}, {3.474039653217043*^9, 
  3.4740396535936337`*^9}, {3.4761147310965023`*^9, 3.476114733583762*^9}}],

Cell[TextData[{
 "Performance is important in financial engineering, and getting Mathematica \
to perform well can be tricky for the novice. Recipes ",
 ButtonBox["14.8",
  BaseStyle->"Hyperlink",
  ButtonData->"Speeding Up NDSolve When Solving Black-Scholes"],
 ", ",
 ButtonBox["14.9,",
  BaseStyle->"Hyperlink",
  ButtonData->"Developing an Explicit Finite Difference Method"],
 " and ",
 ButtonBox["14.10",
  BaseStyle->"Hyperlink",
  ButtonData->"Compiling"],
 " show how to use some of the optimized special functions that execute at \
machine speed and how to use ",
 StyleBox["Compile", "Literal"],
 " to eliminate the overhead of handwritten int",
 StyleBox["erpreted code. When writ",
  FontTracking->"SemiCondensed"],
 "ing numerically intense financial functions, you s",
 StyleBox["hould try to compile as much as pos",
  FontTracking->"Extended"],
 "sible, but there are cases where functions cannot be compiled fully and \
where doing so may influence results."
}], "Text",
 CellChangeTimes->{{3.455571731364624*^9, 3.455571855792404*^9}, 
   3.47318283373138*^9, {3.47318287898724*^9, 3.473182969194028*^9}, 
   3.4740396642179956`*^9}],

Cell[TextData[{
 "Finally, Mathematica has some of the best visualization tools for checking \
your models and developing an intuition for their behaviors across dif",
 StyleBox["ferent regions of the solu",
  FontTracking->"SemiCondensed"],
 "tion. Almost every recipe includes 2D or 3D plots, but ",
 ButtonBox["Recipe 14.12",
  BaseStyle->"Hyperlink",
  ButtonData->"Visualizing Trees"],
 " shows how you can use lower-level graphics primitives to create useful \
diagrams."
}], "Text",
 CellChangeTimes->{
  3.4675846199992*^9, {3.4731841263996353`*^9, 3.473184137364214*^9}, {
   3.473184176315569*^9, 3.473184195064052*^9}}],

Cell[CellGroupData[{

Cell["\<\
A Brief Introduction to Computational Finance for the Nonquant\
\>", "SidebarTitle", "ProductionPageBreak",
 CellChangeTimes->{{3.4731821885951014`*^9, 3.4731821886023693`*^9}, {
  3.47318421244566*^9, 3.473184217039728*^9}},
 CellTags->"Sidebar 1"],

Cell["", "SidebarTitleSpacer"],

Cell[TextData[{
 "It is impossible to do justice to thi",
 StyleBox["s topic in a few paragraphs, but since this is a",
  FontTracking->"SemiCondensed"],
 " general purpose book and computational finance is littered with specific \
terminology, I attempt to define some basic ideas that are assumed in the \
recipes in the book. The references below can help you dig deeper."
}], "SidebarBody",
 CellChangeTimes->{{3.473182212763232*^9, 3.473182212767627*^9}, {
  3.473184226474882*^9, 3.473184292217269*^9}}],

Cell["", "SidebarSpacer"],

Cell[TextData[{
 StyleBox["Bonds", "Techical Italic",
  FontTracking->"Plain"],
 StyleBox[" are debt instruments that allow the lending of money under set \
terms. Typically, the issuer (borrower) of a bond is obligated to pay the \
holder (lender) interest in the form of fixed payments at specified dates \
(the ",
  FontTracking->"Plain"],
 StyleBox["coupon", "Techical Italic",
  FontTracking->"Plain"],
 StyleBox["). A wide variety of terms are associated with various bonds that \
influence the computation of price, yield, risk characteristics, and so \
forth. Some bonds may be convertible to a different security (e.g., common \
stock) and ",
  FontTracking->"Plain"],
 StyleBox["some may be callable (the issuer can cancel their obligation by \
paying back the holder before the bonds expire). A fixed-rate bond is \
initially issued at a set price for a standardized amount (e.g., 1000 \
\[Times] $100.00) at a set interest rate (e.g., 6%). After the bond is \
issued, its price fluctuates (based on factors such as interest rates, credit \
ratings, and so forth). The change in price alters the \
bond\[CloseCurlyQuote]s yield or effective interest rate, since the interest \
remains fixed. So, for example, if the bond was issued at $100 but falls to \
$95, its yield would increase because a buyer would be getting the same ",
  FontTracking->"SemiCondensed"],
 StyleBox["interest payments for less up-front cost. ",
  FontTracking->"Plain"],
 StyleBox["Thus, price and yield have an inverse relation.",
  FontTracking->"SemiCondensed"]
}], "SidebarBody",
 CellChangeTimes->{{3.4731843106417303`*^9, 3.473184508045849*^9}}],

Cell["", "SidebarSpacer"],

Cell[TextData[{
 "An ",
 StyleBox["option", "Techical Italic"],
 " on a security is a contract that gives the holder the right (but not the \
obligation) to buy or sell that stock at a specific price (the strike price) \
on a specific date. The owner of a ",
 StyleBox["call", "Techical Italic"],
 " has the right to buy; the owner of a ",
 StyleBox["put", "Techical Italic"],
 " has the right to sell to the buyer. In contrast, the seller of a call is \
obligated to sell the security at the strike if it is ",
 StyleBox["exercised", "Techical Italic"],
 " by the owner, and the seller of the put is obligated to buy. It would only \
make sense for an owner of an option to exercise it if it were ",
 StyleBox["in the money,", "Techical Italic"],
 " if the option\[CloseCurlyQuote]s strike were favorable relative to the \
market price of the underlying security. For example, a call for IBM at \
strike $100 would be favorable to the call owner if IBM were trading at $120 \
when the call was exercised: there would be an immediate profit of $20 less \
transaction fees."
}], "SidebarBody",
 CellChangeTimes->{{3.47318546732051*^9, 3.47318556635606*^9}, {
  3.474039761933094*^9, 3.474039767070229*^9}, {3.476114748184327*^9, 
  3.476114754489855*^9}}],

Cell["", "SidebarSpacer"],

Cell[TextData[{
 StyleBox["Options come in different flavors. European options can only be \
exercised at the expiration date. These are the simplest to model. American \
options can be exercised ",
  FontTracking->"Plain"],
 StyleBox["at any time up to expiration. If the underlying security pays \
dividends, it creates further complications that must be accounted for in the \
model. There are also more exotic flavors ",
  FontTracking->"SemiCondensed"],
 StyleBox["of options, such as Asian and Bermudian, that you can read about \
in the references. ",
  FontTracking->"Plain"]
}], "SidebarBody",
 CellChangeTimes->{{3.473185590990883*^9, 3.4731856050942907`*^9}}],

Cell["", "SidebarSpacer"],

Cell[TextData[{
 "The ",
 StyleBox["Greeks", "Techical Italic"],
 " are important measures for an options trader. The Greeks are computed as \
derivatives of the option\[CloseCurlyQuote]s pricing function with respect to \
various parameters. For example, ",
 StyleBox["delta", "Techical Italic"],
 " is the derivative with respect to the price of the underlying security. \
Thus, delta measures the sensitivity of the option\[CloseCurlyQuote]s price \
with respect to changes in the underlying. ",
 StyleBox["Gamma", "Techical Italic"],
 " is a second derivative with respect to price and measures the sensitivity \
of delta. Other important Greeks are ",
 StyleBox["theta", "Techical Italic"],
 " (time), ",
 StyleBox["rho", "Techical Italic"],
 " (interest rates), and ",
 StyleBox["vega", "Techical Italic"],
 " (volatility). These are discussed in ",
 ButtonBox["Recipe 14.6",
  BaseStyle->"Hyperlink",
  ButtonData->"Black Scholes for European Option Pricing"],
 "."
}], "SidebarBody",
 CellChangeTimes->{{3.4675823697682*^9, 3.4675823876562*^9}, {
  3.473182325144005*^9, 3.4731823251537933`*^9}, {3.47318561185927*^9, 
  3.473185731964714*^9}, {3.4761147731117887`*^9, 3.476114794369554*^9}}]
}, Open  ]],

Cell["", "SidebarEnd"],

Cell[CellGroupData[{

Cell["See Also", "Heading2", "ProductionPageBreak"],

Cell[TextData[{
 "The classic text in this area is ",
 StyleBox["Options, Futures, and Other Derivatives", "CitationTitle"],
 " by John C. Hull (Prentice Hall)."
}], "Text",
 CellChangeTimes->{{3.473185764602624*^9, 3.4731857776755247`*^9}, 
   3.474214865317399*^9}],

Cell[TextData[{
 "The ",
 StyleBox["Wilmott Journal", "CitationTitle"],
 " and magazine discuss modern ideas in quantitative finance:\[LineSeparator]",
 StyleBox[ButtonBox["http://bit.ly/rm9hO",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/rm9hO"], None},
  ButtonNote->"http://bit.ly/rm9hO"], "URL"],
 StyleBox[".", "URL"]
}], "Text",
 CellChangeTimes->{
  3.4675855241217003`*^9, {3.473185864128583*^9, 3.47318589345719*^9}, {
   3.473443615403387*^9, 3.473443618673512*^9}}],

Cell["\<\
If you have more of a passing interest, Wikipedia has good definitions and \
basic\[LineSeparator]explanations of most of the ideas discussed here.\
\>", "Text",
 CellChangeTimes->{{3.455556990284021*^9, 3.455556990286151*^9}, {
  3.4731859095969687`*^9, 3.473185927495883*^9}, {3.473443599464531*^9, 
  3.4734436025531683`*^9}, {3.474039998412314*^9, 3.474039999080421*^9}}],

Cell[TextData[{
 "An excellent book that teaches Mathematica programming in parallel with \
financial engineering is ",
 StyleBox["Computational Financial Mathematics Using Mathematica", 
  "CitationTitle"],
 " by Srdjan Stojanovi",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    StyleBox["c",
     FontSlant->"Plain"], "\.b4",
    DiacriticalPositioning->True], TraditionalForm]]],
 " (Springer). "
}], "Text",
 CellChangeTimes->{{3.455556992556168*^9, 3.455557068711422*^9}, {
   3.455557129914225*^9, 3.4555572457916594`*^9}, {3.473185936961248*^9, 
   3.473185958510848*^9}, 3.473186016717512*^9, {3.473186070631016*^9, 
   3.4731860937165203`*^9}, {3.474040161909227*^9, 3.4740401707852373`*^9}, {
   3.474040204516605*^9, 3.4740402136023912`*^9}, 3.474214882604352*^9, {
   3.4742913082791767`*^9, 3.4742913342075167`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Leveraging Mathematica",
 "\[CloseCurlyQuote]",
 "s Bundled Financial Data"
}], "Heading1",
 CellChangeTimes->{{3.45362695259375*^9, 3.453626969140625*^9}},
 CellTags->"FinancialData"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["You need financial data to test your mathematical models.", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use Mathematica\[CloseCurlyQuote]s curated financial data, ",
 StyleBox["FinancialData", "Literal"],
 ". This is a data source that you can query to extract quite a variety of \
up-to-date data (15-minute delayed and historical) on a variety of security \
types, what Mathematica calls ",
 StyleBox["\"Groups\"", "Literal"],
 ". To see the available groups, execute the following. If this is the first \
time you are doing this, you will see the status message ",
 StyleBox["\"Initializing Financial Indices\"", "Literal"],
 ", and the groups will display."
}], "Text",
 CellChangeTimes->{
  3.4555583556464*^9, {3.473186169500105*^9, 3.473186304254327*^9}, {
   3.474040951948249*^9, 3.474040952138071*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", "\"\<Groups\>\"", "]"}]], "Input",
 CellLabel->"In[1]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Currencies\"\>", ",", "\<\"Exchanges\"\>", 
   ",", "\<\"ExchangeTradedFunds\"\>", ",", "\<\"Futures\"\>", 
   ",", "\<\"Indices\"\>", ",", "\<\"MutualFunds\"\>", ",", "\<\"Sectors\"\>",
    ",", "\<\"Stocks\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4675855473767*^9, 3.472400113617711*^9, 
  3.47316533912918*^9},
 CellLabel->"Out[1]="]
}, Open  ]],

Cell["\<\
The next thing you will want to find is the available properties of the data.\
\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", "\"\<Properties\>\"", "]"}]], "Input",
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Ask\"\>", ",", "\<\"AskSize\"\>", ",", "\<\"Average200Day\"\>",
    ",", "\<\"Average50Day\"\>", ",", "\<\"AverageVolume3Month\"\>", 
   ",", "\<\"Bid\"\>", ",", "\<\"BidSize\"\>", 
   ",", "\<\"BookValuePerShare\"\>", ",", "\<\"Change\"\>", 
   ",", "\<\"Change200Day\"\>", ",", "\<\"Change50Day\"\>", 
   ",", "\<\"ChangeHigh52Week\"\>", ",", "\<\"ChangeLow52Week\"\>", 
   ",", "\<\"CIK\"\>", ",", "\<\"Close\"\>", ",", "\<\"Company\"\>", 
   ",", "\<\"CumulativeFractionalChange\"\>", ",", "\<\"CumulativeReturn\"\>",
    ",", "\<\"CUSIP\"\>", ",", "\<\"Dividend\"\>", 
   ",", "\<\"DividendPerShare\"\>", ",", "\<\"DividendYield\"\>", 
   ",", "\<\"EarningsPerShare\"\>", ",", "\<\"EBITDA\"\>", 
   ",", "\<\"Exchange\"\>", ",", "\<\"FloatShares\"\>", 
   ",", "\<\"ForwardEarnings\"\>", ",", "\<\"ForwardPERatio\"\>", 
   ",", "\<\"FractionalChange\"\>", ",", "\<\"FractionalChange200Day\"\>", 
   ",", "\<\"FractionalChange50Day\"\>", 
   ",", "\<\"FractionalChangeHigh52Week\"\>", 
   ",", "\<\"FractionalChangeLow52Week\"\>", ",", "\<\"High\"\>", 
   ",", "\<\"High52Week\"\>", ",", "\<\"ISIN\"\>", 
   ",", "\<\"LastTradeSize\"\>", ",", "\<\"LatestTrade\"\>", 
   ",", "\<\"Lookup\"\>", ",", "\<\"Low\"\>", ",", "\<\"Low52Week\"\>", 
   ",", "\<\"MarketCap\"\>", ",", "\<\"Name\"\>", ",", "\<\"Open\"\>", 
   ",", "\<\"PEGRatio\"\>", ",", "\<\"PERatio\"\>", ",", "\<\"Price\"\>", 
   ",", "\<\"PriceTarget\"\>", ",", "\<\"PriceToBookRatio\"\>", 
   ",", "\<\"PriceToSalesRatio\"\>", ",", "\<\"QuarterForwardEarnings\"\>", 
   ",", "\<\"Range\"\>", ",", "\<\"Range52Week\"\>", ",", "\<\"RawClose\"\>", 
   ",", "\<\"RawHigh\"\>", ",", "\<\"RawLow\"\>", ",", "\<\"RawOpen\"\>", 
   ",", "\<\"RawRange\"\>", ",", "\<\"Return\"\>", ",", "\<\"Sector\"\>", 
   ",", "\<\"SEDOL\"\>", ",", "\<\"ShortRatio\"\>", ",", "\<\"SICCode\"\>", 
   ",", "\<\"StandardName\"\>", ",", "\<\"Symbol\"\>", 
   ",", "\<\"Volatility20Day\"\>", ",", "\<\"Volatility50Day\"\>", 
   ",", "\<\"Volume\"\>", ",", "\<\"Website\"\>", 
   ",", "\<\"YearEarningsEstimate\"\>", ",", "\<\"YearPERatioEstimate\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4675855474316998`*^9, 3.4724001137425117`*^9, 
  3.473165339297573*^9},
 CellLabel->"Out[2]="]
}, Open  ]],

Cell["\<\
Now you can retrieve data for a specific symbol. By default, you will get the \
current price, but you can also ask for data from a specific date or within a \
date range.\
\>", "Text",
 CellChangeTimes->{{3.473186314295513*^9, 3.4731863315066*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", 
  RowBox[{"\"\<IBM\>\"", ",", "\"\<Price\>\""}], "]"}]], "Input",
 CellLabel->"In[3]:="],

Cell[BoxData["127.17`"], "Output",
 CellChangeTimes->{3.4675855476442003`*^9, 3.4724001143509126`*^9, 
  3.473165339830894*^9},
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"FinancialData", "[", 
     RowBox[{"\"\<IBM\>\"", ",", "\"\<Price\>\"", ",", "\"\<Jan 1,2005\>\""}],
      "]"}], ",", 
    RowBox[{"FinancialData", "[", 
     RowBox[{
     "\"\<AAPL\>\"", ",", "\"\<Price\>\"", ",", "\"\<Jan 1,2005\>\""}], 
     "]"}]}], "}"}], "]"}]], "Input",
 CellLabel->"In[4]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxVnHVgVNfWxYM7BHd3D1DcglM0MxnJSCbBKRQv7i4t7pTiVjS4Q3B391Cg
cJBixSl8yV575XuTf947vTP3/u466+y9jwzWbq3ztwsICEgYEJD4Y9z/1nkS
1Soo9v8EOzZXiPuLbf8aKe1fBtxvtD5TbHvrFGl3fHdwsrd4bPtetLSdKWt2
X3qtzpONKV5Ju1amuC/EtscNk3bl9bH/oXFse1OUtNN5i8XeIbZ9O0baueKa
3jpPNiULjGvb/9lheTY6b2y7XLC0b8bdPmVs+2aAfD7F3Ni/eXWebE4svPYF
+vnNZYTXPkf5NocJr73XtVjAZbHta/mkHRJ7t5o96jzZkiBE2h1jv55nR2y7
pPDa3fq8LXbhtXuVb8tQ4bVPjfu4Nbb9rbu0N2p7a7FF0j4V27Q8j21bz0v7
Uey3i72PbQ8WfvsO5du6EvxvYi+/O1TnybbCoqf9rfJuayl62v9uH/cX2x4A
/qmN4gSNbS8D/8w8cQLEts+Cf6u2tzeHnkfY7hvs97zti4XfkUift/0U+OOo
AwJi2+/ATz/sWAA9xQ4DY9vHwdslTq6ase034J2k/b8zN3hnqz92/g49J6i+
O4/E+PHufBXo15+7coB3mPLsqg+9B+vzdh2CniG8/gJ6dlN/7c4KPww6Hft3
JrZdZ4rf/XZ3Bn8T5dn9FHq20v7ckwl61lW99tQCf1Z9nz0dhd/2RP2zZ7rw
245of+9NL3raLql+e6uLnraLer+97cHP8bB3CvhzKM++KtCzjOqxrw30zKTj
cd9E8GZTP+3b7s+77z54U2p/7Y+Enuzv/RNET9s1fZ/9W8DL/th/F7zT9fPR
KYTX1kr9Fz1W9LSl1f6O3ih6hr7V942+Jfyha1X/A0mFP7S36nMgSPgt11W/
A+tFT8sVff6BG6KnZYr218FEwh9yQJ9/sLTwW6pqPDjoFH5LPeU9eFX0tHD8
HgoQP1h+U55DJYTf8kL9dMgm/JY/9X6Hhgi/hePn0H+ir+W0fv9wUdHXclL1
PWwBP+PX4UHKr/Hm8Arht0zS60cKib6WIarfkZairyW7Pv9If/BnU32OLBX+
kFd6vyNnwJ9e9TjaTPS1ODXeHu0DfW3ql6OLwM/xffSk8FsD2P4X/PTrsV7Q
97r669gf0HeD+vXYMfDv0vc/9gb83/T9jucC/1fV//hh6LlIn3f8JXifq54n
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
9eKE3fDDbR1/Ex4hvnH95ddA+Jn1zq+TEN/0/Jz5dQf8Qd5f/wI/9fotDfjD
NX/8Vhl+Zv3xWwz8y/3MiSnhX86vJ/4A/zJ+T/QJr0fP15mJd5Dv9HyamZRM
9PQyfkwqh3zH+n2SB7zMf5NGIz9zvXpyYtHTS/9PLoN8Rz9MDhM/eEoq/+SR
4Gf9P3kd+BmvppREvgtV/aY4RE8v19emDAM/9zemrMZ4ZP045TL05n7a1FDR
08PzTVMHI18z30xdKfxu1gNTL6B+Yz099Yvwuzj/nTYA87UxbC8TfZ1cL512
VvgdjI/TPgm/nesv0wsKv5380xeLvg6uZ04/Jfo6eD5r+nvht3M+MiOf8DtY
f81oIvyOfPr5GSdEXwfPk814K/raV+l4m5lb+G08XzazkfDbOB+e2UP4bVxf
mflK9OV5dDMrh+hrp96z6gu/neuts7qCn+v7s+YKv4PPn51V9HXQf7PriL4O
5ovZPwu/nflt9izht3G/fHa08NuZP+bUFn1tzF9zfhJ9bVwvmDMd/L+qH+bs
FX6bnu80cx4LP39PZOa2F315XtjMnSL68jy0mbtL+K1c35v7UPgt3M+bl074
rdzPmDdR9A3lfsa87aJv6GGNZ/P+Aj/P2/xeSXhtAfIX294ielr193fm93ui
Z/x5xPkphDeU43V+BeG1sv6fHy688edZ5t+Gnox3fySFH3he448g+EF/P2b+
cIM3Wnn+GA1e5tMFiaAnx/uC0vAD54cLnMJvZ3xZMEL4bez/BWuF38b1rYUl
RE8bz/8stIueoTxPuHCo8PP3YGbhJejLen+RVfo/lOeZFg2CngPYXgFe9uei
z+Dj+Z3F/UU/O/2zeKnoF39eY/EZ4bNzv3nxR/iV+WJJAejL+eWSRaKfneed
lpyCfqwvlryDXzmfXJoXvJwfLv0RvIwHS99AL+4HLMuF8c96d1lDjC/G42Xd
wUt9lr2U/naw3lyeXfRzcP19eT3hdervkczyrsLr4Hmb5XOC8HntvxVZEL/Y
/yuCMf5Zv6zojPFP/62YifjF+mfFfuF3Mj6urCV6OplfV3YUPR3cr145Tfid
5F+5R/idPE+78m/w51O/rpos+jnCVJ9VO8HL+e6qB+h/+uXPtMJr53nDP38T
PW1cL/1zG/RswvZ99D/z2+pUwYhfqtfqitCb+8+rt4iedv39mll9F/mA9fOa
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
1AVvPmn/Hypoqf4=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJxVnHV8VEcXhlOcFi3uDgWKlVIoGg+EeLIbT3aTbDYJLVrc3b24Fy0Uiru7
u2vQMi0tVrzAl7znPfy+5J92fnv33uc+c+bcMzN3CemQUMnh4uKSzcUlx+vM
/7o9XG2vn/E/rq2WJGf+ZbRH29B+HfzX0PKbM9obJmS2XSu6ZP5ltG/tRrvK
pc9bdFzk9nBN3ieZbbfAmK9e7B2f0R4xAO0WHRdmHJHRXrs66/HX09GO5edr
cxfC8V0aZv5ltBu4oj3meMbfiYz2VRe0l+OEbg/X5QCvWw/yrasLXrc5PN+6
CPC6zd2ccUCFjPalimivzvy4k9vD9Z8FZbbds5NnfW3wuhck/3oLeN0zWzE1
M9r9wevej+db/6FjZtvj+xkZfzPdHm74aj7adp9VRXvdzmiHnEb7j8xm64x2
X/B76P1tWAp+jw0Zp//qpdvDjdXg02M7LpjRDoRPTz3/xl7g9/idfBsXgd9j
2ueZQjLaJ8Hv6Udfm/zh06sGr7+pO3x6l76dAdg7o70A/N7D9fNj4Pd6Tr5N
L8DvtY7tzXPh0ytU24fB662+Nj8Dr3dz8m8pB17vlvS1ZRZ8erfPuJzPqoz2
Afj0dmU8bXlSKMv5tpYGr+f98pknyGh7gtfLSd6t++DTy8bvb/0bPj092J/b
SiAePH6jj21u4Pf4k/GzrR34PStn6H+xL6P9J3x6an9vLyo+e9HX9pbg91Tf
21PA76XjYftk8a3H7ygsPq+w/3Y0E59pvP6OZOH35njbMQH8XupjZxP49NL7
2ZkIn57p+vlY8Hol8/s7NwnvBcbTztvC2ylzeIS4PdxlE5+jM5rBjzLao+DT
86l+vl54a5Fv103hPUTfu/MK70325+7h8On5gtfbvQY+vcIgIKN9TeJ3KPtv
Ty7wuy/g+NhTH/xu2j97VsGn2yn2/54r8OmuvHuzSz7Yw+/vrQN+d+2PveHg
d9tNP3svwqd7X+aDfS6IB/eSzBf7akl+eMP+2RcGfrcD5N3XD/zuuXn/+95L
fmjM6+2vIflBx9P+YMkPkzk+9vcR/nA9fgn43TUfHagKv+59OF4OBMKveyP6
PNBT8ttJjpcDC8HvVoj568AJ4U9g/B70g1+3g4yHg93E7yp+/+B88Lv9RZ8H
jwr/p+P/Tc/SPtRF8ttt+j40B349NJ4PHZL8dpfxeegZ+D3jeH+Hy8p49KG/
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
9t+CheJP51sLToDPupvjdcFr8IXr/PGXyjLe9Pu/zJf+1vcTfzkGfxZ9n+SX
F8Kr9e7CCuAN0/d7FrYBb5g+Pxc+g69Qff9gUVnwhun7P4u8wWstwftf1DE9
a/sx+tvK3zuZxaXgz6rzs8Ue0t96/sXtJT5d6WfxdPBaR5BvSXEZP3x/3ixx
hc9wXS9b0k7iVfdnlkwBfwR//2KW7BqQJR6XtpTxP5/nW5oi8arviyydJONf
66Ol2yVedX9+6QPJX/p+z7LxEp/6PtKyLRKf05gPlt2V/l9GH78WkPg8zvv/
dYyMd30f4teN4nMCffx6G7xWvd7yL6T/db9teSPxHcr4XL5e+l/rpeU3xWcJ
8qzIY5Pzcfyv+Ab8Vn1fZEUM+D+9X7DiGnyG6frebzll/Ot6xW/1JH51/eS3
SPBH6Hrsb0MkfnW9eWU2+Azn7x/Myq/Fp+63rQwHf6Tun68cCP5I3Y9cuQL8
kbpfv6qmPM/0+6vC4BdvuWX6W9UP/FE6n1+1DPzRun+/6qw8LzaS9/dg+I3S
fPt7b/iN0uf374vBH/01/f5+Cvwx/D2F+f0t+GP4frtZ3QN+Y3X+sfoX+IXl
TL7Vx8Efq/Xp6lfgj9X9mzXz4DOOv9cya47CZ6y+T7TmX/DG6nhbWx68cTG8
3lr8Us41Tn2vPQSfn/Y/1z6Fz7iOHA/ryoA3Tvff13mBN16f/+s6gPfT/ue6
f+Azvi7H4/qSq7N8vt4d/PH8PaZZ/yP443W8rZ8G/nj+fsBsKCb12SD25wYk
BlfbVJ5/Q5rUZzo+NvwMfpvO1zfslPpM56cbW8Cn7Rueb6MT8RCv88eNE8Ef
q/XLxm3Cr+Nx433xz99jmk1J8Buv72tuGge/8fy9lNm0GfzxGl+b7oI/nr/v
Mpvzi3+Nz80b4NOm662b04V3Ac+/5XPw2u6Qf8u34LW94f1uWQef9nYcr1tu
wKdd15e25gavfS7je2sD8Np1PrI1GrwJxRi/W6/C56f91G054NPO3/+abXUR
D5/Wv7ZFgN+u+w/bBoPfXoHHb/9M6vVs9Le9Nnzav+D5t1ulXtf90O0DwG/T
/LV9ufDr83pHTfi063rEjlCJB91/3dFX+Pn7OLNjqfD3pv8dZ4Rf39/fGQS/
9l08fmcv+LWfYH7ZuUj4r5Jv50nhH8Dxsau7+Azl+XctkPjV31/sOi68Ol/a
9bK+3D+P311ReHX+sHuu+NT8vPuI+Dysnz8Hb4K+/7GnHHgTdPzu8QFvgu6v
7zkIn4nlON72PIHPhCf0tbc0+BP1ebXXE/yJ/P2i2dsB/Ikf9fO/4TNJ3x/d
VwI+k1x4vX1uT6TNeN73A/iTIpnP900Ff9IPzG/7i8Jnkvre30rmn2sY//tT
wZ+0kL72T5b5Z1/ez/4d4E9azfs50Bx+k/T3KweS4Tcpiv13YILw/8rxc2Ar
+B35Gf8H7gm/7i8eTITfxGfsj4Nj4TdpAO/34Cbhn0wfB+8I/1Fe71A+8Du0
/w+Ngl+H5qtDG+DXofXdoVvC/zfv73Be8Dt0f+FwQ/A73Ojn8Fr4deRifjx8
XfxqfjqSC/xJi+n3SH3hP6OfR4Hf0YY8R7PDp2MOjz9aR3h1/fhohPBO1OMH
gdeh66HHXMSnvl9+rBZ8flrPOmYBb/I2jt9j/cHrLEyeY7+C16nvGx7/Cj6d
LtoOgU8n//0ec7wP4uHTfuLxJeBP1vnj8dPgTz7G653AL99cnZ70faInfDr1
eX5iIfidtdmfJ06AP3kW4+/Ea/A7y/L7J7vBp1PXv07Oh0+n5qOTx4Rf1+tO
vhB+3X84VUH4T9HXqbnw69T911OH68v59Phnwm84nk6XFf4zPP60t/Dr/uDp
A+J3G/lPP4bfFK3/z5QCf6q+/3DGA/yp+vuyM+3Bn9qP+fLMI/hN1f2ws8Xh
N0X3t8+6gT9F91fPtgN/ir5vdHaK8Ovz+1wR+HXqeDzXUvzqevS5lKAsPs5N
En5Xjs9z28Gf4svxeb4Z/KZqPXLeAb+p8eQ9P174dX/0/Bbwp7Zifjt/D/yp
43j/FxLgN/U84+PCGPjFv/qQ+f0LG8Gfquv/F26DP7UQ/V78Avwp+nuhiyPF
r67HXlwvfvX9nYs3hV/XJy99I7xf8v4urRGf+j7HpWvwmTKP8XM5J3hThvN+
L9cDb4quP1yOBG+KzhcvX5bxpvXBlWwSzzo+r3wN3hR9P/1KOHhTxjI/XBkI
3hQL7+/KR4kHrbev1pJ48OLnV8OE38b+u9pP4kHnB1eXCf+PPP+1GvCZcojn
uxYMn6n6/LzWG/ypul9xbTH403R/6noA+j+tC4+/3gM+03Q96fov4E3T/enr
J8CbFs7r3egKf2k6nm/Mg7+04+y/G0fBlxZP/zf+BV9aCPP/zfLgS+vP892c
A39pHuS5eUj6W3+PdvOp8IZx/NwqI7x16OOWl8TrDm3/A19p+r5oeknh7c7r
pbsLbzb09/8AHX8lBQ==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->NCache[{3313699200, 50.}, {3.3136992*^9, 50.}],
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {{{
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"2005\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"2006\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"2007\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"2008\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"2009\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"2010\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3321302400, 3.3213024*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3329164800, 3.3291648*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3337113600, 3.3371136*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3352838400, 3.3528384*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3360700800, 3.3607008*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3368649600, 3.3686496*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3384374400, 3.3843744*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3392236800, 3.3922368*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3400185600, 3.4001856*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3415996800, 3.4159968*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3423859200, 3.4238592*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3431808000, 3.431808*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3447532800, 3.4475328*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3455395200, 3.4553952*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3463344000, 3.463344*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}, {{
       NCache[3313526400, 3.3135264*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3345062400, 3.3450624*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3376598400, 3.3765984*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3408134400, 3.4081344*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3439756800, 3.4397568*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3471292800, 3.4712928*^9], 
       FormBox["\"\"", TraditionalForm], {0.020601132958329826`, 0}}, {
       NCache[3321302400, 3.3213024*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3329164800, 3.3291648*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3337113600, 3.3371136*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3352838400, 3.3528384*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3360700800, 3.3607008*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3368649600, 3.3686496*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3384374400, 3.3843744*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3392236800, 3.3922368*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3400185600, 3.4001856*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3415996800, 3.4159968*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3423859200, 3.4238592*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3431808000, 3.431808*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3447532800, 3.4475328*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3455395200, 3.4553952*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}, {
       NCache[3463344000, 3.463344*^9], 
       FormBox["\"\"", TraditionalForm], {0.012360679774997897`, 0}}}}},
  GridLines->NCache[{{{3313526400, 
       GrayLevel[0.8]}, {3345062400, 
       GrayLevel[0.8]}, {3376598400, 
       GrayLevel[0.8]}, {3408134400, 
       GrayLevel[0.8]}, {3439756800, 
       GrayLevel[0.8]}, {3471292800, 
       GrayLevel[0.8]}}, None}, {{{3.3135264*^9, 
       GrayLevel[0.8]}, {3.3450624*^9, 
       GrayLevel[0.8]}, {3.3765984*^9, 
       GrayLevel[0.8]}, {3.4081344*^9, 
       GrayLevel[0.8]}, {3.4397568*^9, 
       GrayLevel[0.8]}, {3.4712928*^9, 
       GrayLevel[0.8]}}, None}],
  ImageSize->{305., Automatic},
  PlotRange->{{3.3136992*^9, 3.4730208*^9}, {31.65, 215.04}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->None]], "Output",
 CellChangeTimes->{3.4675855496117*^9, 3.472400115505315*^9, 
  3.473165341004465*^9},
 CellLabel->"Out[4]=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfXdclleWPyPFEmdmZ2brzOzu7OzOlpnd3/52dva3+89ri5rE9ERTNMYY
kxhji7333sVOlSKggiJIUUBUBBWxgAW7KCIKoihgN3N+93uee+77vPBASCLo
7O7z+byU533Kveece/o599W+Iz//dHDfkQP69f3FC8P7fvn5gH4jftF16HB1
yvt7Xl7f+zcvL6/9v/DyUX+T+tP+A8dv8cPLqy3/+j7NnDmTpk6dSitWrKAH
Dx7Q3Llzad26dXxpUFAQLVq0iL766ivKyMjga/Pz871+re9NSUnhe/G5dOkS
paam8t83b96ka9eu0eTJk2nnzp10//59mjNnDq1atcrrN3xvW4/32q+t/d7T
p0/TmTNnftOIVxYUFNDEiRPp1KlTdOPGDVq4cCFFRUV5/eYbTnXv3r083NLS
0kZNFUdeXh5VVFTYn+vl7QlpDA234ggLC6Ps7GyaPn06paenk7+/PyUlJVFC
QgJt3bqVhzFo0CD9+h/w62JiYvjex48f04ABA+jKlSs8hLFjx/Kr+/fvT5GR
kQyG8PBwOnHixK81sO2vtl9+7Ngxj1cDamPGjPlNI946cOBAun37Ng0ZMoQm
TZpExcXFFBoaSocOHfr1N5xwdHQ0VVZW0ogRIxo1YRyrV69mPNufe/ny5Rae
IBdsbN68mecNQsRbMeCcnBy6evUqfw/KAOjUiDW1+FJmZiZGROfPn+fR4mwL
+vLLL738eATTpk3j72fMmEGfffYZZvBrh9eqG8zlGKz9tTjwvcJ2o1+L6w8c
OEDvvvsuvf766/W9tqHZYsRr1qyhTp06mbXh8FozdIG1/ZkKh14ewG5Lixcv
5suHDRtGgYGBdPToUT4HFK9du5aysrJo48aNNG/ePLpw4YIQGeB+/fp1MAcq
LCyk4cOHM2FNmDCBRo4cSffu3aPBgwdjJdPu3bt58jU1NTJp+1vtlys69Hgr
jpKSEuZBv27Eq/EMEN7QoUN58eM548ePt8O7sRMeNWoUX6eWSqNejQXcrVs3
hrn9uQo3tegbrAKrDG+qrq5mDOHK3//+98zB8B0whpWEJ6vRGI5WVlbG58D1
cIBlAIAA0rlz55gaYmNjmapmz56N5xpqsb/Xfm3t94Kpazw26r27du1iaObm
5jIvWrBgAa1cudLxvQ3Nd8eOHTRlyhTat29fo96LA1xIcRD7c4WD8/e/bfjv
7/M/ELO/YllrnVBPELlrLeS65557wufa/Dd5x9M654uf37PhkL+2Y67ibMkf
LFT/O2OOV6v3160+Hz4X4BpGIV3HUMmhM08aJP+Lxie8AL8GjfiEdh37v2h8
ts41Do2+HmiMeH0yffXosdKPiFH8oPoubfpkEW35Yhk9fvjobxwe87tGnvuP
Rp5r3LC97cNW5/DTm87vLjDXtdRPu191h7YMWkahL46juH6LaP+qBH29L20b
F8wX45oTW3Ko+tpNr798hua4L3MPBXUapWdn/Xz04KG5zk9fdzbtoIGFL/9s
SQ9q7tFaNWdB7Y4ZkRT28gQ6t+Ow10/1fQcPHqwzn6879x+NPNfYOeKe3ytr
O9t/s5lj4dZ9deZYvP+kmaOPQKTdMDoen22btzedyzxi7v2zZ2aePvZ76F5V
jZBswuAVvMrsUz0Utr0WOr0p/LWJdc4dXLvNvOZPn5mp+npMFcfGPvM0an2p
/FQxn0seGUDBXcbQlUNn9H2tmWT3r06klNEBdDQui3bP30C75sbQuh7TrLm3
G64I25p7fP+lfxBz37cq0ZB1QUwmffX4KxvL8qWqskrKDUiiY7G76fzOfLAi
S49SPD22z3yzfPE5EJLCSxh/H4nOpE2fLqKwVybQpb0nvP78acDAppn71Zn5
nYrbYLpC6HmhqVSYsM9j8jai5o/ix3rybdUiSPP47oLm7Y/uP+DfWDg4H9Rx
JPh2cyz1xum3nvcIXTx+8Ii2DPAXZYkCO47QtNyKJaz9ADtMGLScwl6dSCcS
cnz4ES1p+4RQA42QF8Zaj1K/ywsvef1xM0z/m3B0D5CpnyeT9hv21UpTRPqU
cHNda33d3cpq5up2iRf2ykRz3Y+f8XkW57qlVAstq9Z1n27wptAuC+LWlevm
dtFDA9oPN7fz9J91vCrWU2u+fszGjm7czWKsSk0SyuORdRnf1y87l3FYUEzr
P5yHvw2qk0esZl8SrvzhMz11a0VvHbqSNvaeS9HvzKDd8zYYSVRy8IwnHvUS
kGf84Bmd21/pc1CINS2a8V89duGpjd9Hn6mpqeHQjBx37tzR33393P6af7ak
uI8XMm42919CsfrvwE4j6WbRNXMfaHT/qkR6eOe+WZvNNVdvPU74WuFT/fDD
D6mqqoo++eQT9s0mJSWZ5de4OfvQnRtVvCxBs1kLNhhl7PRlZU88gmLFYDiZ
uM9xumIv3Coup9slzLYarVt/FxAgLgn3N4KDcDnPmjWLLx4+fLh1DTshrD/l
YV5/yz/9eKB2BWKj0qYi35oi7FcUUVzcymE8f6FBd/tKBQV1GPFN9YzGTruF
expm2ohNIB6xdOlSBgECNjgU9huN+V/qc8qar2M3xH/uzyv866Z+/UyJ4dQl
eaeaA+P79u3jIEFwcDA9fPiQevfuzYsgOjq60VP/W31ux/TIOlMv2nPMXNey
galnL91kCCeq+/Smn7ofPXr0iIqKivgDGYhA2oULFxrL3v5On4MxUdtOThkV
SJdyTnztrGFQyqzXdhvflLNurESSaT1++Ih1YjsyFWLMdX4O98r4Ac0r+eeU
vTnauIrCX51krvuTZ2Cef69RcP3UZWX/BtHelQmQwDLc9b1mNzhVmULV1RtU
duIS7VuZYNOfJ9CNc1f4isaayk051X/Sd0a/P8tQG7jrjQuljtQpOvDDu/cp
+PlRHpR90uYpepbmVlVaAV3fzG/3go2OcxO758aFq8yvlOJoWPKxuKw6SuTG
3vPMvc/C8vy1vvPR/Ye0+bMlHNKBmVtTfsuRTmW+kW9MsQyAnrMNXM5nHqFA
rXQKfs/vcnt0n4X5WoFwH4pTJrvgNvqdmU5TbaVfUrB+p7k05v3Z0MUMaMJe
Hl8Lxb6UOHi5Ip8bFNJlDK19aTy8Yk1P2h4x1roT9lXIXeyhTZXmn7OeUs+s
sxZu9Lg+/vOl+vrWTCw2S5ci357Kfr7i3EJ+yKnkXMOntwxcZp7dWGO4Kf05
Ag8Ytfb5pU8Kc4SHYBo+nTPb82jd29PMYrb5fYwXTVkhlDou2O0wUKrnlcNn
xQAK1X6fkM5jWCQ+fvT4iYPl268LX7p69AIlDllJkW9a6zt//c4GwOJDx+P2
uMHYzog7QNfzdb5Kd5/qAXGIOF/9sGOb7I+xfu9dseUnzwBk/kXPNG1ymMyS
bl0u93G4VGYKOgnpPJoiXptMd29WUeasKE0zrSj8tUm08cN5dHqboqW3ppkY
APzKQc+Pcqs3bp+ZvOpwZEYtX403BavXyHU/eoagFWXzmeWFbmsIWptsrLj8
ZDH4pllhV46c5YsVSZopxyu7/7oy/uxggPe9NrhgMwc/P9rjOoUJunzgFF0/
ffmZAJd1nR8VFFylzz7dTFsTT/IXNTUP6O7dhz/VEwJYgjqNZBBt/XJVQ9AE
mUKI71QzxaEEspk9Yg+IVaWMCtAC2ofuV9+hiDcms2JWmn++pX7jwzv3+TF4
oxJyIs7LCi+aNzbWh9T08GtJixfuofauAPq03yYqPHGNOrQLoOc7BtHNm3cN
PWi/JP/3Ez3NGJsKqwArrkHbK/hQxocmST/K8d/swcY2fbIYsWcfLf2V2UXr
P5hjAU79jWi8KIQpIwPqmHa75214BiHqQ4kJJxiinTsFUb++sS3wj5rIlMlp
fN3ly5WUlnaGotYd4csA8LTtZwSu8DWKhrD2pXH1wfVuZbU2Bn1ZUCrhym6u
6ms3ISkNkYpICFS8V1GmyOSQ4DyaPDGNYj9ZpBBjwRN6zrMHT28aNyaVAQUw
+vBPbxo6JKHOufz8UnPvH2loFmUdc+spU8K9HV4jr16vFFRPGdGS17EcWNfC
SeL6LTSsIUBBP6rHdLqcd9rI9l27zsvwqN8rqyQ8kD4lgpMx+DUKx/j7xvnS
xrr7/48+V1paRdOn7aCdmee9nBjad1N72+pz1dUP6IUuwQzcthrE/kuza4G4
Nd27VcMyF5NKmxJGG9QShmxNm7SWNo1eCfFs3nP3ZjXbNWqpG7GumIeBcXV5
JVMznnWNF8IwkWdFe46aV/vogQYHHzBg7uxaRUvbj6alrpH0epcAullepWTg
OTav8bjTKbnfFM6BAbn86Hd7RDUazt9GsRaIp6edNUTdRkO8U4dAPue/JNtY
kGtW76d3ukdR2NqDxoK0RxmFQR6JyuAXJA5ZYeLO4BN2HlyUddQIQKgMch4u
5O2T1hreLepEeXkNjRiWRAO/iAdcfDG4FtTBtUZdiXEOH7aVKovLzOqAwlZ5
qYyZ+fcd5t4Q/C8W3aSRI5Ih2r89nX8D+N++fY8+/2wzdX97nVcLDf8PP9hg
cGKda0ldOgcZsvvow41afMZBTJrcqxNKlMo1+KjVZAwiKLC1cSUxfqVMmOgp
wjVpkyzdOeqdGZIbAXvqYOg2DjTiAMuXMEZw51H8PY6BA7aoq61pQMg8uPfQ
FnH0oW1jg5GjobTG0epZuxob7BHs3Lhxh0aNTAE1Nil2fqinff/+Iyh2rIyc
OX2dkraepGX+ObQp7hjdunWPdu48T1lZRTR/7i6Dvf37L9V6tg+P+9WXw+jF
riE0elSKt770rTci6HLxLX2RNYx7t2soqLPd7daGF1DN9VvM8gHxeS/NpNFf
JtJXX/2eapTFkpFxlq5fr7bowI8e3XvAHA+PwvHgwWO83U9Lrr05F+mdHlFM
Im+8Fi7j7q8U2k2fLbHJIl8PtwEbgasSDUdoHM58aNWqfYYi1UicxOGTQps4
1sPDDppXRkYckkvvKWKcNClNryj89KUPelpFV9l7LrKCUll51zw6ts+8WmvG
jxfBGg0N/O7uWkwd2wdYGPWjmOh8GQ0TTUryKTp69KpMGqD3VCFa0quvhPFS
GfRFAt/26NFXdCD3Mp06Ve4lhNL9zUhaXSu2AnVVJu7k66wfJ7705dBEHscr
L69lukxMKHQE6JNCjGUZ+VG3F0P5vVD2QfiXL9+CytpGA2TunEyDt/HjtllP
asVBNRjizJOUCZAwIdzgYLVruEjr4a5ptdimDwMWAMURHHhATr//XjSdPXOd
v1LSTrS5SUo7vXLltnua6hyEj+dTvRnpq2ox04yp7vSaxqLDMr9bM6W8/NJa
fs+LXd0gevzYGrm6x+s/nxAqRPAoW4uWL8uh3P3FOp/Zh156IcTA/7VXwlrq
6b7YNVhhq5LGjE72YuGr+KOiecXpTEyXOeXA3uGQynz7MpelUa0weBpGs11j
6XnXKv0Mb3rvnSgD2tb63PAvk5it2cEI3aPL80Ee8vBl1zJZEfw7YsAq2rM4
jh7cuaeuUZZKY3Hwa40DwHr+vN00a0amEsr3Wcg+3zGQ/P2zWSH64vN4x6xD
eBCrSm94/fsTxs+smdZaUMvT5JuvWrnXAMxXc5yPP4qlq6W3adOm46xM4Cgu
rhRmD4kjZDRh/DZhKK+4llM/11wa5JphmP3LXQLZYFwwfzeroUqdMEp4hOKo
x49fA2pMygLe6rkyWsuqYI34zZdD6EhkBlKgWcGGIVNTXukYqKgfMz504cIN
Q5WDByb46Ff1VGsY2usopa3Nn5fE9yCuA7UE7jxYq799wkjp3Ws9D+PtNyPN
ObCY2gzioz4blRA6RA8fPjaCHbxm6pQMG/K8lT5hueBHjUgy55a5tCHe198w
ob59Ys07WunrnlemPiS7e3xtWCc5o/gaVieu7+1aQCNcU9lQ+dw1Sxy2oigf
37THTNFJnaofK0gWqaIvBmzh9YLfeF0X9Zr2Si331ZOEQEUSC+wh2J3Itn3S
KJGpfvJxnD7nS4sXZWleGqIk8hG6dLFSqy0+lJx0UqEhXY2/mqLWHbYw9hxN
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "TopOfPage"],

Cell[TextData[{
 StyleBox["FinancialData", "Literal"],
 " has a rich interface that allows you to perform many types of queries. \
First, let\[CloseCurlyQuote]s see how you can use the interface to find what \
is available. Suppose you are curious to see what coverage there is for a \
specific symbol."
}], "Text",
 CellChangeTimes->{
  3.4675824026521997`*^9, 3.473186372791568*^9, {3.47404099263241*^9, 
   3.474040993012226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", 
  RowBox[{"\"\<IBM\>\"", ",", "\"\<Properties\>\""}], "]"}]], "Input",
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Ask\"\>", ",", "\<\"AskSize\"\>", ",", "\<\"Average200Day\"\>",
    ",", "\<\"Average50Day\"\>", ",", "\<\"AverageVolume3Month\"\>", 
   ",", "\<\"Bid\"\>", ",", "\<\"BidSize\"\>", 
   ",", "\<\"BookValuePerShare\"\>", ",", "\<\"Change\"\>", 
   ",", "\<\"Change200Day\"\>", ",", "\<\"Change50Day\"\>", 
   ",", "\<\"ChangeHigh52Week\"\>", ",", "\<\"ChangeLow52Week\"\>", 
   ",", "\<\"CIK\"\>", ",", "\<\"Close\"\>", ",", "\<\"Company\"\>", 
   ",", "\<\"CumulativeFractionalChange\"\>", ",", "\<\"CumulativeReturn\"\>",
    ",", "\<\"CUSIP\"\>", ",", "\<\"Dividend\"\>", 
   ",", "\<\"DividendPerShare\"\>", ",", "\<\"DividendYield\"\>", 
   ",", "\<\"EarningsPerShare\"\>", ",", "\<\"EBITDA\"\>", 
   ",", "\<\"Exchange\"\>", ",", "\<\"FloatShares\"\>", 
   ",", "\<\"ForwardEarnings\"\>", ",", "\<\"ForwardPERatio\"\>", 
   ",", "\<\"FractionalChange\"\>", ",", "\<\"FractionalChange200Day\"\>", 
   ",", "\<\"FractionalChange50Day\"\>", 
   ",", "\<\"FractionalChangeHigh52Week\"\>", 
   ",", "\<\"FractionalChangeLow52Week\"\>", ",", "\<\"High\"\>", 
   ",", "\<\"High52Week\"\>", ",", "\<\"ISIN\"\>", 
   ",", "\<\"LastTradeSize\"\>", ",", "\<\"LatestTrade\"\>", 
   ",", "\<\"Lookup\"\>", ",", "\<\"Low\"\>", ",", "\<\"Low52Week\"\>", 
   ",", "\<\"MarketCap\"\>", ",", "\<\"Name\"\>", ",", "\<\"Open\"\>", 
   ",", "\<\"PEGRatio\"\>", ",", "\<\"PERatio\"\>", ",", "\<\"Price\"\>", 
   ",", "\<\"PriceTarget\"\>", ",", "\<\"PriceToBookRatio\"\>", 
   ",", "\<\"PriceToSalesRatio\"\>", ",", "\<\"QuarterForwardEarnings\"\>", 
   ",", "\<\"Range\"\>", ",", "\<\"Range52Week\"\>", ",", "\<\"RawClose\"\>", 
   ",", "\<\"RawHigh\"\>", ",", "\<\"RawLow\"\>", ",", "\<\"RawOpen\"\>", 
   ",", "\<\"RawRange\"\>", ",", "\<\"Return\"\>", ",", "\<\"Sector\"\>", 
   ",", "\<\"SEDOL\"\>", ",", "\<\"ShortRatio\"\>", ",", "\<\"SICCode\"\>", 
   ",", "\<\"StandardName\"\>", ",", "\<\"Symbol\"\>", 
   ",", "\<\"Volatility20Day\"\>", ",", "\<\"Volatility50Day\"\>", 
   ",", "\<\"Volume\"\>", ",", "\<\"Website\"\>", 
   ",", "\<\"YearEarningsEstimate\"\>", ",", "\<\"YearPERatioEstimate\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4675855497567*^9, 3.472400115598915*^9, 
  3.473165341200152*^9},
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[TextData[{
 "One difficulty is that every security is not guaranteed to have every \
property populated. There seem to be two possibilities wh",
 StyleBox["en a property is not present. You may",
  FontTracking->"Extended"],
 " g",
 StyleBox["et ",
  FontTracking->"SemiCondensed"],
 StyleBox["Missing[\"NotAvailable\"]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" or you may",
  FontTracking->"SemiCondensed"],
 StyleBox[" get an unevaluated expression like",
  FontTracking->"Plain"],
 StyleBox[" ",
  FontTracking->"Extended"],
 StyleBox["Fi", "Literal",
  FontTracking->"Extended"],
 StyleBox["nancial\[DiscretionaryHyphen]Data[\"IBM\", \
\"CumulativeFractionalChange\"]", "Literal"],
 ". One way to see what properties are populated and also get a sample of the \
associated data is to execute the following (I elide the results with ",
 StyleBox["Short", "Literal"],
 ")."
}], "Text",
 CellChangeTimes->{{3.473443634169067*^9, 3.473443648050609*^9}, {
  3.4761148145107317`*^9, 3.476114827224347*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sec", "=", "\"\<IBM\>\""}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Select", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"prop", ",", 
          RowBox[{"FinancialData", "[", 
           RowBox[{"sec", ",", "prop"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"prop", ",", 
          RowBox[{"FinancialData", "[", 
           RowBox[{"sec", ",", "\"\<Properties\>\""}], "]"}]}], "}"}]}], 
       "]"}], ",", 
      RowBox[{
       RowBox[{"FreeQ", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"_", ",", 
           RowBox[{
            RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}], "|", 
            RowBox[{"HoldPattern", "[", 
             RowBox[{"FinancialData", "[", "__", "]"}], "]"}]}]}], "}"}]}], 
        "]"}], "&"}]}], "]"}]}], "]"}], "//", "Short"}]], "Input",
 CellLabel->"In[6]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Average200Day\"\>", ",", "122.097`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"Average50Day\"\>", ",", "129.82`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "54", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"YearEarningsEstimate\"\>", ",", "11.08`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\<\"YearPERatioEstimate\"\>", ",", "11.64`"}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.4675855884392*^9, 3.4724001316513433`*^9, 
  3.4731653543581553`*^9},
 CellLabel->"Out[6]//Short="]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s look at other types of financial data and see some of \
the additional capabilities that are provided. Industry sectors are \
especially useful for studying and comparing different industries\
\[CloseCurlyQuote] performance.\
\>", "Text",
 CellChangeTimes->{{3.473186396163293*^9, 3.473186407725573*^9}, {
  3.473187091493202*^9, 3.4731871052858953`*^9}, {3.4740410339173317`*^9, 
  3.474041043365142*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"FinancialData", "[", "\"\<Sectors\>\"", "]"}], "]"}]], "Input",
 CellLabel->"In[7]:="],

Cell[BoxData["169"], "Output",
 CellChangeTimes->{3.4675855889692*^9, 3.4724001319321437`*^9, 
  3.473165354709531*^9},
 CellLabel->"Out[7]="]
}, Open  ]],

Cell[TextData[{
 "There are 169 sectors. Here I use a pattern to find those with the string \
",
 StyleBox["\"Service\"", "Literal"],
 " in the name."
}], "Text",
 CellChangeTimes->{{3.473187118311015*^9, 3.473187126769348*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"FinancialData", "[", "\"\<Sectors\>\"", "]"}], ",", 
   RowBox[{
    RowBox[{"StringMatchQ", "[", 
     RowBox[{"#", ",", 
      RowBox[{"__", "~~", "\"\<Service\>\"", "~~", "__"}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CommunicationsServicesNotElsewhere\"\>", 
   ",", "\<\"LegalServices\"\>", ",", "\<\"MiscellaneousBusinessServices\"\>",
    ",", "\<\"MiscellaneousHealthAndAlliedServicesNot\"\>", 
   ",", "\<\"OilNaturalGasFieldServices\"\>", 
   ",", "\<\"RefrigerationServiceMachinery\"\>", 
   ",", "\<\"ResearchDevelopmentAndTestingServices\"\>", 
   ",", "\<\"TruckingAndCourierServicesExceptAir\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4675855892592*^9, 3.472400132056944*^9, 
  3.473165354802951*^9},
 CellLabel->"Out[8]="],

Cell[TextData[{
 "Given a sector, you can ask for its members. You can also use ",
 StyleBox["\"Members\"", "Literal"],
 " with an\[LineSeparator]index, such as the S&P 500, or an exchange like the \
New York Stock Exchange (NYSE). Here I pick 10 ",
 StyleBox["OilNaturalGasFieldServices", "Literal"],
 " members at random."
}], "Text",
 CellChangeTimes->{
  3.473187161115309*^9, {3.4731878241699333`*^9, 3.473187850750712*^9}, {
   3.473443657518433*^9, 3.473443659323019*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<OilNaturalGasFieldServices\>\"", ",", "\"\<Members\>\""}], 
    "]"}], ",", "10"}], "]"}]], "Input",
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"DE:HRL\"\>", ",", "\<\"PK:ONXC\"\>", ",", "\<\"PK:ASRPF\"\>", 
   ",", "\<\"F:SJR\"\>", ",", "\<\"PK:VTHC\"\>", ",", "\<\"F:DG1\"\>", 
   ",", "\<\"NYSE:WG\"\>", ",", "\<\"TO:POU\"\>", ",", "\<\"TO:POU\"\>", 
   ",", "\<\"DE:DO1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4675855906967*^9, 3.4724001326653447`*^9, 
  3.473165355439747*^9},
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FinancialData", "[", 
        RowBox[{"#", ",", "\"\<Price\>\""}], "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"FinancialData", "[", 
       RowBox[{"\"\<OilNaturalGasFieldServices\>\"", ",", "\"\<Members\>\""}],
        "]"}]}], "]"}], ",", "NumberQ"}], "]"}], "]"}]], "Input",
 CellLabel->"In[10]:="],

Cell[BoxData["13.024973202614378`"], "Output",
 CellChangeTimes->{3.4675856457467003`*^9, 3.4724001822422323`*^9, 
  3.473165391324292*^9},
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["FinancialData", "Literal"],
 " provides information on 153 currencies. You can get the exchange rate by \
using a string or list notation."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"FinancialData", "[", "\"\<Currencies\>\"", "]"}], "]"}]], "Input",
 CellLabel->"In[11]:="],

Cell[BoxData["153"], "Output",
 CellChangeTimes->{3.4675856458992*^9, 3.472400182398232*^9, 
  3.473165391547247*^9},
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", "\"\<USD/EUR\>\"", "]"}]], "Input",
 CellLabel->"In[12]:="],

Cell[BoxData["0.7065`"], "Output",
 CellChangeTimes->{3.4675856461092*^9, 3.4724001825698323`*^9, 
  3.473165391644158*^9},
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<USD\>\"", ",", "\"\<EUR\>\""}], "}"}], "]"}]], "Input",
 CellLabel->"In[13]:="],

Cell[BoxData["0.7065`"], "Output",
 CellChangeTimes->{3.4675856463392*^9, 3.4724001826946325`*^9, 
  3.4731653917417088`*^9},
 CellLabel->"Out[13]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["FinancialData", "Literal"],
 " does not provide a notation to get more than a single property at a time, \
which is unfortunate. You can use ",
 StyleBox["Outer", "Literal"],
 " to get this behavior, but it seems it could be done more efficiently if \
this were native to ",
 StyleBox["FinancialData", "Literal"],
 ". First I extract U.S. oil and gas service companies using ",
 StyleBox["FinancialData", "Literal"],
 "\[CloseCurlyQuote]",
 "s ability to list the members of a sector. "
}], "Text",
 CellChangeTimes->{{3.473187887343443*^9, 3.473187922512868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"americanOilGasCos", " ", "=", " ", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"FinancialData", "[", 
      RowBox[{"\"\<OilNaturalGasFieldServices\>\"", ",", "\"\<Members\>\""}], 
      "]"}], ",", 
     RowBox[{
      RowBox[{"StringMatchQ", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "\"\<AMEX:\>\"", "|", " ", "\"\<NYSE:\>\"", " ", "|", " ", 
           "\"\<NASDAQ:\>\""}], ")"}], "~~", "__"}]}], "]"}], "&"}]}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[14]:="],

Cell[TextData[{
 "Then, using ",
 StyleBox["Outer", "Literal"],
 ", I extract the market cap and a price. Recalling that market cap ",
 StyleBox["equals ",
  FontTracking->"Extended"],
 StyleBox["share price * shares outstanding", "Techical Italic",
  FontTracking->"Extended"],
 StyleBox[", it is easy to compute a share-weighted aver",
  FontTracking->"Extended"],
 "age price for the sector by summing the market cap and dividing by the sum \
of the shares outstanding. I put this in a ",
 StyleBox["function ",
  FontTracking->"Extended"],
 StyleBox["sharedWeightedAvg", "Literal",
  FontTracking->"Extended"],
 StyleBox[" so we can reuse it",
  FontTracking->"Extended"],
 " later."
}], "Text",
 CellChangeTimes->{{3.473187939909636*^9, 3.473187980490362*^9}, 
   3.47404136790739*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sharedWeightedAvg", "[", 
   RowBox[{"symbols_List", ",", "price_"}], "]"}], " ", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", " ", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"Outer", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"FinancialData", "[", 
             RowBox[{"#1", ",", "#2"}], "]"}], "&"}], ",", " ", "symbols", 
           ",", 
           RowBox[{"{", 
            RowBox[{"\"\<MarketCap\>\"", ",", "price"}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{
         RowBox[{"And", "@@", 
          RowBox[{"(", 
           RowBox[{"NumberQ", " ", "/@", " ", "#"}], ")"}]}], "&"}]}], 
       "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Total", "[", "data", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "/", 
      RowBox[{"Total", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Divide", "@@", "#"}], "&"}], " ", "/@", " ", "data"}], 
       "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sharedWeightedAvg", "[", 
  RowBox[{"americanOilGasCos", ",", "\"\<Close\>\""}], "]"}]}], "Input",
 CellLabel->"In[15]:="],

Cell[BoxData["33.618977275318414`"], "Output",
 CellChangeTimes->{3.4675856659342003`*^9, 3.4724002016248655`*^9, 
  3.47316540453227*^9},
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 "You can add as many properties as you need to the second argument of ",
 StyleBox["Outer", "Literal"],
 ". As usual, it is a good idea to filter out invalid data, as I do here by \
using ",
 StyleBox["Select", "Literal"],
 " and testing for numeric values in both entries using ",
 StyleBox["And @@ (NumberQ /@ #) &", "Literal"],
 " as the filter function."
}], "Text",
 CellChangeTimes->{{3.4731879914908657`*^9, 3.473188001627235*^9}}],

Cell[TextData[{
 "You can use ",
 StyleBox["\"Members\" ", "Literal"],
 "with indices and exchanges. Here I get the share-weighted average for the \
Dow Jones Industrial Average (DJIA) stocks."
}], "Text",
 CellChangeTimes->{{3.473188026094592*^9, 3.473188056420372*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sharedWeightedAvg", "[", 
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<^DJI\>\"", ",", "\"\<Members\>\""}], "]"}], ",", 
   "\"\<Close\>\""}], "]"}]], "Input",
 CellLabel->"In[17]:="],

Cell[BoxData["35.33890152021317`"], "Output",
 CellChangeTimes->{3.4675856835792*^9, 3.4724002151812887`*^9, 
  3.473165413955063*^9},
 CellLabel->"Out[17]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", "\"\<Exchanges\>\"", "]"}]], "Input",
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AMEX\"\>", ",", "\<\"Amsterdam\"\>", 
   ",", "\<\"AustraliaASX\"\>", ",", "\<\"Barcelona\"\>", 
   ",", "\<\"Berlin\"\>", ",", "\<\"Bilbao\"\>", ",", "\<\"Bombay\"\>", 
   ",", "\<\"Brussels\"\>", ",", "\<\"BuenosAires\"\>", ",", "\<\"Cairo\"\>", 
   ",", "\<\"CBOE\"\>", ",", "\<\"CBOT\"\>", ",", "\<\"CME\"\>", 
   ",", "\<\"Colombo\"\>", ",", "\<\"COMEX\"\>", ",", "\<\"Copenhagen\"\>", 
   ",", "\<\"Dusseldorf\"\>", ",", "\<\"Eurex\"\>", ",", "\<\"Euronext\"\>", 
   ",", "\<\"Frankfurt\"\>", ",", "\<\"Hamburg\"\>", ",", "\<\"Hanover\"\>", 
   ",", "\<\"HongKong\"\>", ",", "\<\"IndiaNSE\"\>", ",", "\<\"Ireland\"\>", 
   ",", "\<\"Jakarta\"\>", ",", "\<\"KCBT\"\>", ",", "\<\"KoreaKOSDAQ\"\>", 
   ",", "\<\"KoreaKSE\"\>", ",", "\<\"Lisbon\"\>", ",", "\<\"LondonIOB\"\>", 
   ",", "\<\"LSE\"\>", ",", "\<\"Madrid\"\>", ",", "\<\"MadridCATS\"\>", 
   ",", "\<\"MexicoBMV\"\>", ",", "\<\"Milan\"\>", ",", "\<\"Munich\"\>", 
   ",", "\<\"NASDAQ\"\>", ",", "\<\"NewZealandNZX\"\>", ",", "\<\"NYBOT\"\>", 
   ",", "\<\"NYMEX\"\>", ",", "\<\"NYSE\"\>", ",", "\<\"Oslo\"\>", 
   ",", "\<\"OTCBB\"\>", ",", "\<\"Paris\"\>", ",", "\<\"PhilippinesPSE\"\>", 
   ",", "\<\"Pinksheets\"\>", ",", "\<\"Prague\"\>", ",", "\<\"RussiaRTS\"\>",
    ",", "\<\"Santiago\"\>", ",", "\<\"SaoPaulo\"\>", ",", "\<\"Shanghai\"\>",
    ",", "\<\"Shenzhen\"\>", ",", "\<\"Singapore\"\>", 
   ",", "\<\"Stockholm\"\>", ",", "\<\"Stuttgart\"\>", 
   ",", "\<\"SwitzerlandSWX\"\>", ",", "\<\"TaiwanOTC\"\>", 
   ",", "\<\"TaiwanTSEC\"\>", ",", "\<\"TelAviv\"\>", ",", "\<\"Toronto\"\>", 
   ",", "\<\"TSXVenture\"\>", ",", "\<\"Valencia\"\>", ",", "\<\"Vienna\"\>", 
   ",", "\<\"Xetra\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4675856846842003`*^9, 3.4724002156960897`*^9, 
  3.473165414522561*^9},
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[TextData[{
 "A special property called ",
 StyleBox["\"Lookup\"", "Literal"],
 " allows you to search using patterns. Here I search for New York Mercantile \
Exchange (NYMEX) symbols that begin with ",
 StyleBox["\"A\"", "Literal"],
 " and retrieve the full name."
}], "Text",
 CellChangeTimes->{{3.47318806878118*^9, 3.473188080613213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FinancialData", "[", 
    RowBox[{"#", ",", "\"\<Name\>\""}], "]"}], "&"}], " ", "/@", " ", 
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<NYM:A*\>\"", ",", "\"\<Lookup\>\""}], "]"}]}]], "Input",
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Ardour Global XL Mar 2009\"\>", 
   ",", "\<\"Ardour Global XL Jun 2009\"\>", 
   ",", "\<\"Ardour Global XL Sep 2009\"\>", 
   ",", "\<\"Ardour Global XL Dec 2008\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4675856850692*^9, 3.47240021585209*^9, 
  3.473165414658442*^9},
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[TextData[{
 "You can use dynamic features to create a mini interface for exploring the \
data. Here I use ",
 StyleBox["PopMenu", "Literal"],
 " to create an interface over all the symbols in the Dow Jones Industrials \
and all available properties."
}], "Text", "ProductionPageBreak"],

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"symbol", "=", "\"\<MSFT\>\""}], ",", "prop"}], "}"}], ",", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PopupMenu", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "symbol", "]"}], ",", 
         RowBox[{"FinancialData", "[", 
          RowBox[{"\"\<^DJI\>\"", ",", "\"\<Members\>\""}], "]"}]}], "]"}], 
       ",", 
       RowBox[{"PopupMenu", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "prop", "]"}], ",", 
         RowBox[{"FinancialData", "[", "\"\<Properties\>\"", "]"}]}], "]"}], 
       ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"FinancialData", "[", 
         RowBox[{"symbol", ",", "prop"}], "]"}], "]"}]}], "}"}], ",", 
     "\"\< \>\""}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4724009879847183`*^9, 3.4724009919471254`*^9}},
 CellLabel->"In[20]:="],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`symbol$$ = "MSFT", $CellContext`prop$$ = 
  "Ask"}, 
  TemplateBox[{PopupMenuBox[
     Dynamic[$CellContext`symbol$$], {
     "AA" -> "\"AA\"", "AXP" -> "\"AXP\"", "BA" -> "\"BA\"", "BAC" -> 
      "\"BAC\"", "CAT" -> "\"CAT\"", "CSCO" -> "\"CSCO\"", "CVX" -> "\"CVX\"",
       "DD" -> "\"DD\"", "DIS" -> "\"DIS\"", "GE" -> "\"GE\"", "HD" -> 
      "\"HD\"", "HPQ" -> "\"HPQ\"", "IBM" -> "\"IBM\"", "INTC" -> "\"INTC\"", 
      "JNJ" -> "\"JNJ\"", "JPM" -> "\"JPM\"", "KFT" -> "\"KFT\"", "KO" -> 
      "\"KO\"", "MCD" -> "\"MCD\"", "MMM" -> "\"MMM\"", "MRK" -> "\"MRK\"", 
      "MSFT" -> "\"MSFT\"", "PFE" -> "\"PFE\"", "PG" -> "\"PG\"", "T" -> 
      "\"T\"", "TRV" -> "\"TRV\"", "UTX" -> "\"UTX\"", "VZ" -> "\"VZ\"", 
      "WMT" -> "\"WMT\"", "XOM" -> "\"XOM\""}],PopupMenuBox[
     Dynamic[$CellContext`prop$$], {
     "Ask" -> "\"Ask\"", "AskSize" -> "\"AskSize\"", "Average200Day" -> 
      "\"Average200Day\"", "Average50Day" -> "\"Average50Day\"", 
      "AverageVolume3Month" -> "\"AverageVolume3Month\"", "Bid" -> "\"Bid\"", 
      "BidSize" -> "\"BidSize\"", "BookValuePerShare" -> 
      "\"BookValuePerShare\"", "Change" -> "\"Change\"", "Change200Day" -> 
      "\"Change200Day\"", "Change50Day" -> "\"Change50Day\"", 
      "ChangeHigh52Week" -> "\"ChangeHigh52Week\"", "ChangeLow52Week" -> 
      "\"ChangeLow52Week\"", "CIK" -> "\"CIK\"", "Close" -> "\"Close\"", 
      "Company" -> "\"Company\"", "CumulativeFractionalChange" -> 
      "\"CumulativeFractionalChange\"", "CumulativeReturn" -> 
      "\"CumulativeReturn\"", "CUSIP" -> "\"CUSIP\"", "Dividend" -> 
      "\"Dividend\"", "DividendPerShare" -> "\"DividendPerShare\"", 
      "DividendYield" -> "\"DividendYield\"", "EarningsPerShare" -> 
      "\"EarningsPerShare\"", "EBITDA" -> "\"EBITDA\"", "Exchange" -> 
      "\"Exchange\"", "FloatShares" -> "\"FloatShares\"", "ForwardEarnings" -> 
      "\"ForwardEarnings\"", "ForwardPERatio" -> "\"ForwardPERatio\"", 
      "FractionalChange" -> "\"FractionalChange\"", "FractionalChange200Day" -> 
      "\"FractionalChange200Day\"", "FractionalChange50Day" -> 
      "\"FractionalChange50Day\"", "FractionalChangeHigh52Week" -> 
      "\"FractionalChangeHigh52Week\"", "FractionalChangeLow52Week" -> 
      "\"FractionalChangeLow52Week\"", "High" -> "\"High\"", "High52Week" -> 
      "\"High52Week\"", "ISIN" -> "\"ISIN\"", "LastTradeSize" -> 
      "\"LastTradeSize\"", "LatestTrade" -> "\"LatestTrade\"", "Lookup" -> 
      "\"Lookup\"", "Low" -> "\"Low\"", "Low52Week" -> "\"Low52Week\"", 
      "MarketCap" -> "\"MarketCap\"", "Name" -> "\"Name\"", "Open" -> 
      "\"Open\"", "PEGRatio" -> "\"PEGRatio\"", "PERatio" -> "\"PERatio\"", 
      "Price" -> "\"Price\"", "PriceTarget" -> "\"PriceTarget\"", 
      "PriceToBookRatio" -> "\"PriceToBookRatio\"", "PriceToSalesRatio" -> 
      "\"PriceToSalesRatio\"", "QuarterForwardEarnings" -> 
      "\"QuarterForwardEarnings\"", "Range" -> "\"Range\"", "Range52Week" -> 
      "\"Range52Week\"", "RawClose" -> "\"RawClose\"", "RawHigh" -> 
      "\"RawHigh\"", "RawLow" -> "\"RawLow\"", "RawOpen" -> "\"RawOpen\"", 
      "RawRange" -> "\"RawRange\"", "Return" -> "\"Return\"", "Sector" -> 
      "\"Sector\"", "SEDOL" -> "\"SEDOL\"", "ShortRatio" -> "\"ShortRatio\"", 
      "SICCode" -> "\"SICCode\"", "StandardName" -> "\"StandardName\"", 
      "Symbol" -> "\"Symbol\"", "Volatility20Day" -> "\"Volatility20Day\"", 
      "Volatility50Day" -> "\"Volatility50Day\"", "Volume" -> "\"Volume\"", 
      "Website" -> "\"Website\"", "YearEarningsEstimate" -> 
      "\"YearEarningsEstimate\"", "YearPERatioEstimate" -> 
      "\"YearPERatioEstimate\""}],DynamicBox[
     ToBoxes[
      FinancialData[$CellContext`symbol$$, $CellContext`prop$$], 
      StandardForm], ImageSizeCache -> {20., {1., 6.}}]},
   "Row",
   DisplayFunction->(RowBox[{#, "\[ThinSpace]", #2, "\[ThinSpace]", #3}]& ),
   InterpretationFunction->(RowBox[{"Row", "[", 
      RowBox[{
        RowBox[{"{", 
          RowBox[{#, ",", #2, ",", #3}], "}"}], ",", "\" \""}], "]"}]& )],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.4675856866542*^9, 3.4724002167724915`*^9, 3.472400722472252*^9, {
   3.4724009970327344`*^9, 3.472401012211561*^9}, 3.473165415416212*^9},
 CellLabel->"Out[20]="],

Cell[TextData[{
 "In the solution, we saw that data can be retrieved over intervals of time. \
The intervals can specify a start date, a start and an end date, and also a \
period, such as ",
 StyleBox["\"Day\"", "Literal"],
 ", ",
 StyleBox["\"Week\"", "Literal"],
 ", ",
 StyleBox["\"Month\"", "Literal"],
 ", or ",
 StyleBox["\"Year\"", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.473188112718525*^9, 3.473188134231048*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", 
  RowBox[{"\"\<^DJI\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Jan 1,2008\>\"", ",", "\"\<Jan 1,2009\>\"", ",", "\"\<Month\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "1", ",", "2"}], "}"}], ",", "12650.36`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "2", ",", "1"}], "}"}], ",", "12266.39`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "3", ",", "3"}], "}"}], ",", "12262.89`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "4", ",", "1"}], "}"}], ",", "12820.13`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "5", ",", "1"}], "}"}], ",", "12638.32`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "6", ",", "2"}], "}"}], ",", "11350.01`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "7", ",", "1"}], "}"}], ",", "11378.02`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "8", ",", "1"}], "}"}], ",", "11543.55`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "9", ",", "2"}], "}"}], ",", "10850.66`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "10", ",", "1"}], "}"}], ",", "9325.01`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "11", ",", "3"}], "}"}], ",", "8829.04`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2008", ",", "12", ",", "1"}], "}"}], ",", "8776.39`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4675856873717003`*^9, 3.472400218769295*^9, 
  3.4731654158635263`*^9},
 CellLabel->"Out[21]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Importing Financial Data from Websites"
}], "Heading1",
 CellChangeTimes->{{3.473422460417047*^9, 3.473422462928218*^9}},
 CellTags->"Importing Financial Data From Web Sites"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 "The data you want is not yet available from ",
 StyleBox["FinancialData", "Literal"],
 " but it is available from another website."
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "The ",
 StyleBox["Import", "Literal"],
 " function can retrieve data directly from websites like Yahoo! Finance that \
support an interface that uses HTTP GET\[Dash]style queries. Here I extract \
options data for IBM."
}], "Text",
 CellChangeTimes->{{3.473422478351458*^9, 3.4734224982636633`*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"optSymbol", "=", "\"\<IBMGM.X\>\""}], "}"}], ",", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://download.finance.yahoo.com/d/quotes.csv?s=\>\"", " ", "<>", 
     " ", "optSymbol", "<>", " ", "\"\<&f=sl1d1t1c1ohgv&e=.csv\>\""}], 
    "]"}]}], "]"}]], "Input",
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"IBMGM.X\"\>", ",", "0.`", ",", "\<\"N/A\"\>", 
    ",", "\<\"N/A\"\>", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
    "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4675856876267*^9, 3.472400219798897*^9, 
  3.47316541597541*^9},
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "The Yahoo! URL structure is self-explanatory except for the ",
 StyleBox["f=sl1d1t1c1ohgv ", "Literal"],
 "portion. The ",
 StyleBox["f", "Emphasis"],
 " stands for \[OpenCurlyDoubleQuote]format,\[CloseCurlyDoubleQuote] and the \
characters define the types of data you want\[LineSeparator]",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{{3.473422509643077*^9, 3.47342251184046*^9}, 
   3.473423426685401*^9, {3.4734234704307013`*^9, 3.473423515196669*^9}, {
   3.474041516496334*^9, 3.4740415166214123`*^9}}],

Cell[TextData[{
 "to download. For example, ",
 StyleBox["s", "Emphasis"],
 " stands for symbol, ",
 StyleBox["l1", "Emphasis"],
 " last trade price, and ",
 StyleBox["d1", "Emphasis"],
 " is the trade date. The entire set is available on a website (see the \
\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section on page \
559)."
}], "Text",
 CellChangeTimes->{{3.473422509643077*^9, 3.47342251184046*^9}, 
   3.473423426685401*^9, {3.4734234704307013`*^9, 3.473423515196669*^9}, {
   3.474041516496334*^9, 3.4740415289979486`*^9}, {3.476186615012899*^9, 
   3.476186633375146*^9}}],

Cell["\<\
To get more data on options chains it is useful to be able to encode an \
option symbol. Each option symbol is made up of a base symbol, an expiration \
month letter in the range A\[Dash]L for calls and M\[Dash]X for puts, and a \
strike price letter. Standard strike prices are in increments of 5 and use \
the letters A\[Dash]T, but there are also fractional strike prices using \
letters U\[Dash]Z (see the \[OpenCurlyDoubleQuote]See Also\
\[CloseCurlyDoubleQuote] section on page 559).\
\>", "Text",
 CellChangeTimes->{{3.473423549574813*^9, 3.473423596210156*^9}, {
  3.476621359664681*^9, 3.476621377897998*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"strikePriceCode", "[", "strike_Integer", "]"}], " ", "/;", " ", 
   RowBox[{
    RowBox[{"Mod", "[", 
     RowBox[{"strike", ",", "5"}], "]"}], "\[Equal]", "0"}]}], " ", ":=", " ",
   "\[IndentingNewLine]", 
  RowBox[{"FromCharacterCode", "[", 
   RowBox[{
    RowBox[{"ToCharacterCode", "[", "\"\<A\>\"", "]"}], "+", " ", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"strike", "/", "5"}], "-", "1"}], ",", "20"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"strikePriceCode", "[", "strike_Real", "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   StyleBox["FromCharacterCode",
    FontTracking->"Condensed"], 
   StyleBox["[",
    FontTracking->"Condensed"], 
   RowBox[{
    StyleBox[
     RowBox[{"ToCharacterCode", "[", "\"\<U\>\"", "]"}],
     FontTracking->"Condensed"], 
    StyleBox[
     RowBox[{"+", 
      RowBox[{"Floor", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"strike", " ", "-", " ", "2.5"}], ")"}], " ", "/", "5"}], 
          " ", "-", "1"}], ",", " ", "6"}], "]"}], "]"}]}],
     FontTracking->"SemiCondensed"]}], 
   StyleBox["]",
    FontTracking->"SemiCondensed"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expirationCall", "[", "month_", "]"}], " ", ":=", "  ", 
  RowBox[{"FromCharacterCode", "[", 
   RowBox[{
    RowBox[{"ToCharacterCode", "[", "\"\<A\>\"", "]"}], "+", "month", " ", 
    "-", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expirationPut", "[", "month_", "]"}], " ", ":=", "  ", 
  RowBox[{"FromCharacterCode", "[", 
   RowBox[{
    RowBox[{"ToCharacterCode", "[", "\"\<M\>\"", "]"}], "+", "month", " ", 
    "-", "1"}], "]"}]}]}], "Input",
 CellMargins->{{53, 0}, {0, 2}},
 CellLabel->"In[23]:="],

Cell["\<\
Now it is easy to download a range of options data, such as these July (month \
7) calls for IBM at various strike prices.\
\>", "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{3.473423603486073*^9}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"symbols", " ", "=", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<IBM\>\"", " ", "<>", " ", 
         RowBox[{"expirationCall", "[", "7", "]"}], " ", "<>", " ", 
         RowBox[{"strikePriceCode", "[", "strike", "]"}], "<>", 
         "\"\<.X\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"strike", ",", "60", ",", "135", ",", "5"}], "}"}]}], "]"}], 
      "]"}]}], "}"}], ",", "\n", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\<http://download.finance.yahoo.com/d/quotes.csv?s=\>\"", " ", "<>", 
       "optSymbol", " ", "<>", " ", "\"\<&f=sl1d1t1c1ohgv&e=.csv\>\""}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"optSymbol", ",", "symbols"}], "}"}]}], "]"}]}], "]"}]], "Input",\

 CellMargins->{{53, 0}, {0, 3}},
 CellLabel->"In[27]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGL.X\"\>", ",", "0.`", ",", "\<\"N/A\"\>", 
      ",", "\<\"2:56pm\"\>", ",", "\<\"N/A\"\>", ",", "\<\"N/A\"\>", 
      ",", "\<\"N/A\"\>", ",", "\<\"N/A\"\>", ",", "\<\"N/A\"\>"}], "}"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGM.X\"\>", ",", "0.`", ",", "\<\"N/A\"\>", 
      ",", "\<\"N/A\"\>", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
       "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGN.X\"\>", ",", "0.`", ",", "\<\"N/A\"\>", 
      ",", "\<\"N/A\"\>", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
       "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGO.X\"\>", ",", "0.`", ",", "\<\"N/A\"\>", 
      ",", "\<\"N/A\"\>", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
       "0"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGP.X\"\>", ",", "51.4`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", "0.`", ",", "51.4`", ",", "51.4`", ",", 
      "51.4`", ",", "10"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGQ.X\"\>", ",", "46.45`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:55am\"\>", ",", "0.`", ",", "46.45`", ",", "46.45`", ",", 
      "46.45`", ",", "10"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGR.X\"\>", ",", "39.15`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", "0.`", ",", "39.`", ",", "39.15`", ",", 
      "39.15`", ",", "34"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGS.X\"\>", ",", "35.`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", "0.`", ",", "34.85`", ",", "35.`", ",", 
      "35.`", ",", "52"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGT.X\"\>", ",", "29.45`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", "0.`", ",", "29.45`", ",", "29.45`", ",", 
      "29.45`", ",", "2"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGA.X\"\>", ",", "24.78`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", "0.`", ",", "25.73`", ",", "24.78`", ",", 
      "24.78`", ",", "106"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGB.X\"\>", ",", "18.7`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:55am\"\>", ",", 
      RowBox[{"-", "2.`"}], ",", "21.52`", ",", "19.8`", ",", "18.7`", ",", 
      "16"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGC.X\"\>", ",", "15.65`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", 
      RowBox[{"-", "0.45`"}], ",", "16.6`", ",", "15.65`", ",", "15.65`", ",",
       "55"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGD.X\"\>", ",", "11.45`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:55am\"\>", ",", 
      RowBox[{"-", "0.9`"}], ",", "11.15`", ",", "11.95`", ",", "11.15`", ",",
       "49"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGE.X\"\>", ",", "8.05`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", 
      RowBox[{"-", "0.95`"}], ",", "8.55`", ",", "8.75`", ",", "8.05`", ",", 
      "111"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGF.X\"\>", ",", "5.59`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:55am\"\>", ",", 
      RowBox[{"-", "0.76`"}], ",", "6.4`", ",", "6.2`", ",", "5.5`", ",", 
      "62"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"\<\"IBMGG.X\"\>", ",", "3.6`", ",", "\<\"1/22/2010\"\>", 
      ",", "\<\"10:54am\"\>", ",", 
      RowBox[{"-", "0.6`"}], ",", "4.5`", ",", "4.05`", ",", "3.6`", ",", 
      "63"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4675856903342*^9, 3.472400235086924*^9, 
  3.4731654175986032`*^9},
 CellLabel->"Out[27]="]
}, Open  ]],

Cell[TextData[{
 "You can also import data from files in a variety of formats and from \
databases (provided you have access to such databases). See ",
 ButtonBox["Recipe 17.9",
  BaseStyle->"Hyperlink",
  ButtonData->{"Interfacing.nb", "InterfacingWithDatabaseSystems"}],
 " for Mathematica's database connectivity capabilities."
}], "Text",
 CellMargins->{{0, 0}, {2, 1}},
 CellChangeTimes->{{3.473423916499085*^9, 3.473423932950611*^9}}],

Cell[CellGroupData[{

Cell["See Also", "Heading2", "ProductionPageBreak"],

Cell[TextData[{
 "An explanation of the Yahoo! interface can be found at: ",
 StyleBox[ButtonBox["http://bit.ly/dyiIPO",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/dyiIPO"], None},
  ButtonNote->"http://bit.ly/dyiIPO"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.455558380335106*^9, 3.467585050473*^9, 3.473423944695397*^9, {
   3.473423976095807*^9, 3.4734239819275846`*^9}, {3.476115009278553*^9, 
   3.47611503342552*^9}, {3.4761176276468267`*^9, 3.476117714464519*^9}}],

Cell[TextData[{
 "The encoding of options ticker symbols is explained here ",
 StyleBox[ButtonBox["http://bit.ly/24yb0p",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/24yb0p"], None},
  ButtonNote->"http://bit.ly/24yb0p"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.4675850838612003`*^9, 3.473423956790682*^9, {3.473423999865144*^9, 
   3.473423999867529*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Present Value of Future Cash Flows"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.42481869296875*^9, 3.424818699015625*^9}, {
   3.424818770765625*^9, 3.424818790015625*^9}, 3.438469618399837*^9},
 CellTags->"Present Value of Future Cash Flows"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.424818718875*^9, 3.42481872246875*^9}, 
   3.4384696183999577`*^9}],

Cell["\<\
You want to compute the present value of a set of cash payments or receipts \
over time.\
\>", "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.424818730875*^9, 3.42481876096875*^9}, {
   3.42481880675*^9, 3.424818875375*^9}, 3.438469639103692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.42481889234375*^9, 3.424818895703125*^9}, {
   3.424819066109375*^9, 3.424819071296875*^9}, {3.424819427828125*^9, 
   3.424819461359375*^9}, 3.4384696391038103`*^9}],

Cell["\<\
Use the standard formula for compound interest calculations to discount \
future cash flows to the present.\
\>", "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.424819489453125*^9, 3.424819498015625*^9}, {
   3.42481956203125*^9, 3.424819567765625*^9}, {3.42481961046875*^9, 
   3.424819668625*^9}, 3.43846963910389*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pv", "[", 
   RowBox[{"cashFlows_List", ",", "times_List", ",", "rate_Real"}], "]"}], 
  " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T", "=", 
      RowBox[{"Length", "[", "cashFlows", "]"}]}], "}"}], ",", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"t", "=", "1"}], "T"], 
     FractionBox[
      RowBox[{"cashFlows", "[", 
       RowBox[{"[", "t", "]"}], "]"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "rate"}], ")"}], 
       RowBox[{"times", "[", 
        RowBox[{"[", "t", "]"}], "]"}]]]}]}], "]"}]}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellLabel->"In[28]:="],

Cell["\<\
For example, if you pay $1000 today to receive income of $100, $300, $600, \
and $600 in the next four years with a rate of 5%, the present value is\
\>", "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.4734241143931093`*^9, 3.473424132123519*^9}}],

Cell[BoxData[
 RowBox[{"pv", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1000.0"}], ",", "100.0", ",", "300.0", ",", "600.0", ",", 
     "600.0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   "0.05"}], "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.424821113796875*^9, 3.424821190265625*^9}, 
   3.4384696391041*^9},
 CellLabel->"In[29]:="],

Cell[BoxData["379.2709827695249`"], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellChangeTimes->{3.424821166375*^9, 3.424821229875*^9, 3.4248751628125*^9, 
  3.42497710725*^9, 3.425410698265625*^9, 3.425678209875*^9, 
  3.426080154390625*^9, 3.426087917859375*^9, 3.4261711144375*^9, 
  3.438469639104179*^9, 3.4675856904917*^9, 3.472400235476925*^9, 
  3.4731654183778057`*^9},
 CellLabel->"Out[29]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424821327328125*^9, 3.42482133040625*^9}, 
   3.4384696622805147`*^9}],

Cell[TextData[{
 "Cash in hand today is worth more then the same amount in the future. \
Present value is determined by discounting future cash flows by a ",
 StyleBox["discount factor", "Techical Italic"],
 ". The solution follows from the formula for a discount factor in terms of \
an interest rate ",
 StyleBox["r", "Literal"],
 " and a time ",
 StyleBox["t", "Literal"],
 ", which is ",
 StyleBox[Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       StyleBox["r",
        FontSlant->"Plain"], "+", "1"}], ")"}], 
     RowBox[{"-", 
      StyleBox["t",
       FontSlant->"Plain"]}]],
    FontFamily->"WriTheSansMonoCond BoldItalic",
    FontSize->9.199996948242188], TraditionalForm]], "Literal",
  CellChangeTimes->{{3.42487174796875*^9, 3.4248717701875*^9}}], "Literal"],
 ".",
 StyleBox[" ", "Literal"],
 "There are some standard types of cash flow arrangements, and you can use ",
 StyleBox["Simplify", "Literal"],
 " to derive them from the standard present value formula in the solution. \
For example, a ",
 StyleBox["perpetuity", "Techical Italic"],
 " is a set of fixed cash flows ",
 StyleBox["X", "Literal"],
 " that repeat forever. "
}], "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.473424153308466*^9, 3.4734241608459187`*^9}, {
   3.473424195582855*^9, 3.473424218757794*^9}, 3.474041705203103*^9}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"X", "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", "r"}], ")"}], "^", "t"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "1", ",", " ", "Infinity"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424821854265625*^9, 3.424821855*^9}, 
   3.438469662280695*^9},
 CellLabel->"In[30]:="],

Cell[BoxData[
 FractionBox["X", "r"]], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.424821888984375*^9, 3.424875164890625*^9, 
  3.42497710928125*^9, 3.4254106999375*^9, 3.425678211765625*^9, 
  3.426080155453125*^9, 3.426087918390625*^9, 3.42617111609375*^9, 
  3.438469662280773*^9, 3.4675856918942003`*^9, 3.472400238004129*^9, 
  3.473165423911262*^9},
 CellLabel->"Out[30]="],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", "r"}], ")"}], "^", "t"}], ")"}]}], "//", 
   "TraditionalForm"}], "Literal"]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424871705734375*^9, 3.42487176953125*^9}, 
   3.43846966228085*^9},
 CellLabel->"In[31]:="],

Cell[BoxData[
 FormBox[
  StyleBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"r", "+", "1"}], ")"}], 
    RowBox[{"-", "t"}]], "Output",
   FontFamily->"Birka",
   FontWeight->"Plain"], TraditionalForm]], "Input",
 CellChangeTimes->{3.474215162993453*^9},
 CellLabel->"Out[31]//TraditionalForm="],

Cell["Hence...", "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.42482190965625*^9, 3.424821922015625*^9}, 
   3.4384696622809896`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pvPerpetuity", "[", 
   RowBox[{"cash_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  FractionBox["cash", "rate"]}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.4384696622810593`*^9},
 CellLabel->"In[32]:="],

Cell[TextData[{
 "An ",
 StyleBox["annuity", "Techical Italic"],
 " is a set of fixed cash flows ",
 StyleBox["X", "Literal"],
 " that repeat for a",
 StyleBox[" specified number of periods ",
  FontTracking->"SemiCondensed"],
 StyleBox["T", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[".",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.473424233462729*^9, 3.473424234830492*^9}}],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"X", "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", "r"}], ")"}], "^", "t"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "1", ",", " ", "T"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.438469662281172*^9},
 CellLabel->"In[33]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{"X", "-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "r"}], ")"}], 
     RowBox[{"-", "T"}]], " ", "X"}]}], "r"]], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.424822081515625*^9, 3.424875165109375*^9, 
  3.424977109609375*^9, 3.425410700265625*^9, 3.4256782120625*^9, 
  3.426080155734375*^9, 3.426087918484375*^9, 3.4261711163125*^9, 
  3.4384696622812433`*^9, 3.4675856921742*^9, 3.4724002383785295`*^9, 
  3.4731654245083647`*^9},
 CellLabel->"Out[33]="],

Cell[BoxData[
 RowBox[{"pvPerpetuity", "[", 
  RowBox[{"100.00", ",", "0.03"}], "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424822150078125*^9, 3.42482218203125*^9}, 
   3.4384696622813187`*^9},
 CellLabel->"In[34]:="],

Cell[BoxData["3333.3333333333335`"], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.424822182703125*^9, 3.424875165140625*^9, 
  3.42497710965625*^9, 3.425410700296875*^9, 3.42567821209375*^9, 
  3.426080155765625*^9, 3.426087918515625*^9, 3.42617111634375*^9, 
  3.438469662281391*^9, 3.4675856922292*^9, 3.4724002384565296`*^9, 
  3.473165424595636*^9},
 CellLabel->"Out[34]="],

Cell["Hence...", "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424822093125*^9, 3.424822103265625*^9}, 
   3.438469662281459*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pvAnuity", "[", 
   RowBox[{"cash_Real", ",", "rate_Real", ",", "periods_Integer"}], "]"}], 
  " ", ":=", " ", "\[IndentingNewLine]", 
  FractionBox[
   RowBox[{"cash", "-", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "rate"}], ")"}], 
      RowBox[{"-", "periods"}]], " ", "cash"}]}], "rate"]}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{"pvAnuity", "[", 
  RowBox[{"100.00", ",", "0.03", ",", "10"}], "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424822253890625*^9, 3.424822299078125*^9}, 
   3.438469662281576*^9},
 CellLabel->"In[36]:="],

Cell[BoxData["853.0202836775824`"], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424822270109375*^9, 3.424822299734375*^9}, 
   3.424875165203125*^9, 3.424977109703125*^9, 3.425410700328125*^9, 
   3.425678212140625*^9, 3.426080155796875*^9, 3.42608791853125*^9, 
   3.426171116375*^9, 3.4384696622816477`*^9, 3.4675856923066998`*^9, 
   3.4724002385813303`*^9, 3.473165424745422*^9},
 CellLabel->"Out[36]="],

Cell[TextData[{
 "Closely related to present value is the ",
 StyleBox["internal rate of return", "Techical Italic"],
 ", the rate that would make the present value equal to zero. You can use ",
 StyleBox["FindRoot", "Literal"],
 " to calculate the internal rate of return for a set of cash flows. Here we \
tell ",
 StyleBox["FindRoot", "Literal"],
 " t",
 StyleBox["o begin s",
  FontTracking->"Plain"],
 StyleBox["earching for a so",
  FontTracking->"SemiCondensed"],
 "lution at ",
 StyleBox["irr", "Literal"],
 " of ",
 StyleBox["0.0", "Literal"],
 "."
}], "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"internalRateOfReturn", "[", 
   RowBox[{"cashFlows_List", ",", "times_List"}], "]"}], " ", ":=", " ", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"pv", "[", 
     RowBox[{"cashFlows", ",", "times", ",", "irr"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"irr", ",", "0.0"}], "}"}]}], "]"}]}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.4384696622817707`*^9},
 CellLabel->"In[37]:="],

Cell[BoxData[
 RowBox[{"internalRateOfReturn", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1000.0"}], ",", "100.0", ",", "300.0", ",", "600.0", ",", 
     "600.0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}]}], 
  "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424825301640625*^9, 3.42482531090625*^9}, 
   3.4384696622818527`*^9},
 CellLabel->"In[38]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"irr", "\[Rule]", "0.16977495909833284`"}], "}"}]], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.4248253135625*^9, 3.42487516559375*^9, 3.424977110125*^9,
   3.425410700734375*^9, 3.4256782125*^9, 3.426080156234375*^9, 
  3.42608791871875*^9, 3.42617111665625*^9, 3.438469662281928*^9, 
  3.4675856923992*^9, 3.4724002388465304`*^9, 3.4731654253843937`*^9},
 CellLabel->"Out[38]="],

Cell["\<\
In finance, it is more common to deal with continuously compounding interest \
than the discrete compounding formulas discussed. The present value in terms \
of continuously compounding interest is\
\>", "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.4734243198916388`*^9, 3.4734243287049723`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pvCC", "[", 
   RowBox[{"cashFlows_List", ",", " ", "times_List", ",", " ", "rate_Real"}], 
   "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"N", " ", "=", " ", 
      RowBox[{"Length", "[", "cashFlows", "]"}]}], "}"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"cashFlows", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "/", 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"rate", "*", 
          RowBox[{"times", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", " ", "\n", 
      "    ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", "N"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellLabel->"In[39]:="],

Cell[BoxData[
 RowBox[{"pvCC", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1000.0"}], ",", "100.0", ",", "300.0", ",", "600.0", ",", 
     "600.0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   "0.05"}], "]"}]], "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{3.424872862546875*^9, 3.438469662282138*^9},
 CellLabel->"In[40]:="],

Cell[BoxData["374.23740556268297`"], "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.424872856296875*^9, 3.424872863296875*^9}, 
   3.424875165640625*^9, 3.42497711015625*^9, 3.42541070078125*^9, 
   3.425678212515625*^9, 3.42608015628125*^9, 3.42608791875*^9, 
   3.4261711166875*^9, 3.4384696622822113`*^9, 3.4675856924792*^9, 
   3.472400239080531*^9, 3.4731654255620823`*^9},
 CellLabel->"Out[40]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2", "TopOfPage",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.438469671661869*^9, 3.438469704858127*^9}}],

Cell[TextData[{
 "You may want to play with (and download the source ",
 StyleBox["code for) some of the Wolfram",
  FontTracking->"SemiCondensed"],
 " demonstrations that cover present value and related basic financial \
concepts. See, for example, ",
 StyleBox[ButtonBox["http://bit.ly/1D7JVU",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/1D7JVU"], None},
  ButtonNote->"http://bit.ly/1D7JVU"], "URL"],
 ". "
}], "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.4555584024798107`*^9, 3.455558414745203*^9}, 
   3.4675851183865*^9, {3.47342434312346*^9, 3.473424368047387*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Interest Rate Sensitivity of Bonds "
}], "Heading1",
 CellChangeTimes->{{3.424874048921875*^9, 3.424874054109375*^9}, {
  3.424875007125*^9, 3.424875015828125*^9}, {3.42495884909375*^9, 
  3.424958866609375*^9}},
 CellTags->"Interest Rate Sensitivity of Bonds"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.424874059578125*^9, 3.4248740619375*^9}}],

Cell["\<\
You want to determine the fair value of a bond and analyze its performance \
under varying market conditions.\
\>", "Text",
 CellChangeTimes->{{3.4734244247983437`*^9, 3.47342442549139*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.424874065140625*^9, 3.42487407396875*^9}}],

Cell[TextData[{
 "Before you can analyze a bond, you need to know how to compute its price \
and ",
 StyleBox["yield to maturity. The price of a fixed-rate",
  FontTracking->"Plain"],
 StyleBox[" bond is equivalent to the present value of the ",
  FontTracking->"SemiCondensed"],
 StyleBox["bond\[CloseCurlyQuote]s coupon payments. For example, if a \
three-year bond has a face value of $100 and",
  FontTracking->"Plain"],
 " makes yearly payments of 10% and the present interest rate is 8%, then the \
fair bond price should be"
}], "Text",
 CellChangeTimes->{{3.473424432584291*^9, 3.473424464597328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pv", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "110"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "0.08"}], "]"}]], "Input",
 CellChangeTimes->{{3.424875452109375*^9, 3.424875479578125*^9}, {
  3.424875565359375*^9, 3.424875584640625*^9}},
 CellLabel->"In[41]:="],

Cell[BoxData["105.15419397449574`"], "Output",
 CellChangeTimes->{
  3.424875480234375*^9, {3.424875549515625*^9, 3.424875585484375*^9}, 
   3.424977110171875*^9, 3.4254107008125*^9, 3.425678212546875*^9, 
   3.4260801563125*^9, 3.42608791878125*^9, 3.426171116703125*^9, 
   3.4675856925467*^9, 3.472400239267731*^9, 3.473165425614798*^9},
 CellLabel->"Out[41]="]
}, Open  ]],

Cell[TextData[{
 "The price only captures one aspect of a bond. You may also want to know the \
effective interest rate of the bond if it is held to maturity (",
 StyleBox["yield to maturity", "Techical Italic"],
 "). This is the same as the internal rate of return c",
 StyleBox["alculation of ",
  FontTracking->"Extended"],
 StyleBox[ButtonBox["Recipe 12.1",
  BaseStyle->"Hyperlink",
  ButtonData->{"Computing Common Statistical Metrics", None}],
  FontTracking->"Extended"],
 StyleBox[". The first cash flow is",
  FontTracking->"Extended"],
 " the bond\[CloseCurlyQuote]s price, then the two coupon payments, a",
 StyleBox["nd the final is coupon plus face",
  FontTracking->"Extended"],
 " value."
}], "Text",
 CellChangeTimes->{
  3.473424476255406*^9, {3.473424596176137*^9, 3.473424596178666*^9}, {
   3.473425699640258*^9, 3.473425704759849*^9}, {3.474041790000248*^9, 
   3.474041792993554*^9}, {3.474041903871786*^9, 3.474041920420712*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Yield", " ", "to", " ", "maturity", " ", "for", " ", "a", " ", "bond", 
    " ", "is", " ", "the", " ", "same", " ", "calculation", " ", "as", " ", 
    "IRR", " ", "with", " ", "bond", " ", "price", " ", "as", " ", "first", 
    " ", "cash", " ", 
    RowBox[{"flow", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"internalRateOfReturn", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "105.154"}], ",", "10", ",", "10", ",", "110"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.424875964328125*^9, 3.424875968109375*^9}, {
  3.424876035015625*^9, 3.42487605703125*^9}, {3.424958113890625*^9, 
  3.424958184125*^9}, {3.47342591069407*^9, 3.473425916945858*^9}},
 CellLabel->"In[42]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"irr", "\[Rule]", "0.08000072647029163`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.42487596971875*^9, {3.424876047484375*^9, 3.424876057828125*^9}, 
   3.4249771101875*^9, 3.42541070084375*^9, 3.425678212578125*^9, 
   3.426080156359375*^9, 3.426087918796875*^9, 3.426171116734375*^9, 
   3.4675856926017*^9, 3.4724002393613315`*^9, 3.4731654256611633`*^9},
 CellLabel->"Out[42]="]
}, Open  ]],

Cell["\<\
It is no accident that the yield to maturity is equal (modulo rounding \
errors) to the current interest rate. This is a sign that the bond is priced \
correctly. \
\>", "Text",
 CellChangeTimes->{{3.424876385625*^9, 3.424876464046875*^9}}],

Cell[TextData[{
 "Investors in bonds want to understand a bond\[CloseCurlyQuote]s sensi",
 StyleBox["tivity to changes in current inter",
  FontTracking->"SemiCondensed"],
 "est rates. The price of an asset with long-term cash flows has more \
interest-rate sensitivity than an asset with cash flows in the near f",
 StyleBox["uture. The ",
  FontTracking->"Extended"],
 StyleBox["duration", "Techical Italic",
  FontTracking->"Extended"],
 StyleBox[" is a weighted aver",
  FontTracking->"Extended"],
 "age maturity of a bond. "
}], "Text",
 CellChangeTimes->{{3.4675824353192*^9, 3.4675824375242*^9}, {
  3.473426041691991*^9, 3.473426067442473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"duration", "[", 
   RowBox[{"cashFlows_List", ",", " ", "times_List", ",", " ", "rate_Real"}], 
   "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"T", " ", "=", " ", 
       RowBox[{"Length", "[", "cashFlows", "]"}]}], ",", " ", "D", ",", " ", 
      "B"}], "}"}], ",", " ", "\n", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"D", ",", " ", "B"}], "}"}], " ", "=", " ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"times", "[", 
              RowBox[{"[", "t", "]"}], "]"}], "*", 
             RowBox[{"cashFlows", "[", 
              RowBox[{"[", "t", "]"}], "]"}]}], ")"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "rate"}], ")"}], "^", 
            RowBox[{"times", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}]}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"cashFlows", "[", 
            RowBox[{"[", "t", "]"}], "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "rate"}], ")"}], "^", 
            RowBox[{"times", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}]}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "1", ",", " ", "T"}], "}"}]}], "]"}]}], ";", 
     " ", 
     RowBox[{"D", "/", "B"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.47404199744941*^9, 3.474042001783709*^9}},
 CellLabel->"In[43]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"duration", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "110"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "0.08"}], "]"}]], "Input",
 CellChangeTimes->{{3.4249596345625*^9, 3.42495963640625*^9}, {
  3.424959670109375*^9, 3.42495967715625*^9}},
 CellLabel->"In[44]:="],

Cell[BoxData["2.7423601884285547`"], "Output",
 CellChangeTimes->{
  3.424959637453125*^9, {3.42495967234375*^9, 3.4249596776875*^9}, 
   3.42497711021875*^9, 3.425410700875*^9, 3.425678212609375*^9, 
   3.426080156390625*^9, 3.42608791884375*^9, 3.426171116765625*^9, 
   3.4675856926767*^9, 3.4724002394549313`*^9, 3.4731654257615747`*^9},
 CellLabel->"Out[44]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"convexity", "[", 
   RowBox[{"cashFlows_List", ",", " ", "times_List", ",", " ", "rate_Real"}], 
   "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"T", " ", "=", " ", 
       RowBox[{"Length", "[", "cashFlows", "]"}]}], ",", " ", "B"}], "}"}], 
    ",", " ", "\n", "   ", 
    RowBox[{
     RowBox[{"B", " ", "=", " ", 
      RowBox[{"pv", "[", 
       RowBox[{"cashFlows", ",", " ", "times", ",", " ", "rate"}], "]"}]}], 
     ";", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "B"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", "rate"}], ")"}], "^", "2"}]}], ")"}], 
      " ", "*", "\n", "     ", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"times", "[", 
            RowBox[{"[", "t", "]"}], "]"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"times", "[", 
             RowBox[{"[", "t", "]"}], "]"}], "^", "2"}]}], ")"}], " ", "*", 
         "\[IndentingNewLine]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"cashFlows", "[", 
            RowBox[{"[", "t", "]"}], "]"}], "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "+", " ", "rate"}], ")"}], "^", 
            RowBox[{"times", "[", 
             RowBox[{"[", "t", "]"}], "]"}]}]}], ")"}]}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"t", ",", " ", "1", ",", " ", "T"}], "}"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[45]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"convexity", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "10", ",", "110"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "0.08"}], "]"}]], "Input",
 CellChangeTimes->{{3.424979168671875*^9, 3.424979185390625*^9}, {
  3.424979222578125*^9, 3.424979242875*^9}},
 CellLabel->"In[46]:="],

Cell[BoxData["9.113742589336796`"], "Output",
 CellChangeTimes->{{3.424979186828125*^9, 3.42497924459375*^9}, 
   3.42541070090625*^9, 3.425678212625*^9, 3.42608015640625*^9, 
   3.426087918859375*^9, 3.42617111678125*^9, 3.4675856927492*^9, 
   3.4724002395329313`*^9, 3.473165425848042*^9},
 CellLabel->"Out[46]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.42487408675*^9, 3.424874092296875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pv", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "10", ",", "10", ",", "10", ",", "10", ",", "110"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
     ",", "r"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.0", ",", "0.20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42497705765625*^9, 3.424977099296875*^9}, {
   3.42497712990625*^9, 3.424977166671875*^9}, 3.424977355765625*^9},
 CellLabel->"In[47]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0Ws0lAkcBnBZU1uLyKzLoFbh2FqdsoVV+f+VOoh6jXEf5vKK1SGXnWyn
jcZuK0Sxq9JMqp3ck4wilMvMNPJal2RLZRKJQrJMKSXWfnjO8+H59nuYMXyL
fRoaGpoL8fq/nTcebxfUjkqQnJ+f0V+2CPTolU1fa+5Hci5yqV5MNHxDP1Vx
2Hgaydn7O2imxbCBnmRTlr8VyZmCTbUvHQHpB8OUI8+QVHvpylvWAEGP07yf
IUVyOD/32etXwKUf6HrUx0CyPX6gL/ISxNKja9mLO5AUn7AduVYCQllmoNcA
HcmNv7YuuVILqUO0QbFdHPK7Vg6627lDVkzn+AnBSuQL5mvG4pdBjqJsnhf3
EfkGhenh5isgt11srPttOfJuWTt2bDODvPUmu7q1/JEXUtOmMx4Kl+rphkap
YuRpxVjSzTkgabDU3jD2HrnXXaqiTFZC/ugRHT9uB3JDEviBHBYUTqqyX9pl
I3d5+CfyZBsUT9DiFHmxyEkTnH3DWwJXjBLYZSatGDp2YJbLl8NVxkTrvFoP
Q4ML1ZmC03DNXerKedqFIYqrAZ4ug1Bx0zzj94oeDLHz8BLCR5BWD9dkW2xF
drmGaHFtOFS2+YyuFoUge7WWKlHYD9c7d4ZEyt5hsCRzrdV7S7jx8slD+6nd
GGza4bw5jQdVn1hHSibWY5DonzU+rQ+gepYZdl+UgkFWvFu+in+hZsVbZvKe
8xhYYpQkspVArREjeUhqg4EO3VPP7cOgztCyb6J/Owb8zSxYty8Xbq3tdhEa
m2BAQGij2o0Ft21pQ8q5CPSfyDs3zHGGelfVqezxn9Bf2DglFqZAg//ZiC9K
tNHfMJWYKy2GRv+HwnUGDPSrqueFHdSCJntVZ9R2Nfrt3XBorZwLTTVZR/O6
c9B3snQSGJ4gc6jeJfE4gr65GmHqYjnIZOV6kUoF+joOey29bQjy7RGftI13
Iuv5d/w1Mc0gb1e/iouxQlaKmzLDmg0KwmVamofIsot6aqA3B4p7mqZ3pBL0
GZi1ENZOwZ2gnB2iVhJ9Mkqj9aXpcKf3VcbuOg76OHfY/FJ0EZQ/6vY0ltch
8/We5KjqTaCcLHJanMZGZp6NzCopHJrjF9XbbPkBmawJ64yFv5s/r9+hPSlA
5pc+p70NcuDuUbORtqRR9JaH9J6pCIa7c4lFoVNF6H10szUrTgAtqRURN/Yr
0Nth2H501Vuglha4vahjIDHdQmZlIlBfDTG0Ej8j8a64UqRuA0rXcszSpR+J
t2lmvim2QK3IzySpQiSmPKDTdWE3vdz1/PH3SIy3Nyf35gNlKwnq/+CJxIvH
9zywBSjvi1FP7ROR6KY1VXLjgfJ5tm32IxeJrhGulnsoUH6rlps1uCJxr92k
qDULqKALUvauZUh05PT2qC4ARea96/U9g0SrlTjdNQiog+eTHgvKkZB50kp+
ew3Uz6q9M47ZSDRtdKum6QB12MzCeFaARKNhwdA+J6CSxIqAY05I3B4o/8si
Aajj4iU9f95FoubQzJbN6UClPXn03r8UiZscHZ2ARKAyGKVGpieRqN7pNGZx
EagskaffZRYSN/RfNOibAfXHE/OECAckKj9wr0aXAXXa5M2ZdQt+0r7p86oR
oM4GNla9WfCrUBamHX4A1LlzWQ8qF/yulcXGkoP/AbPLTvM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 80.},
  PlotRange->{{0., 0.2}, {66.74489985442737, 159.99999669387765`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 5}},
 CellChangeTimes->{{3.424977110859375*^9, 3.424977168125*^9}, 
   3.424977356796875*^9, 3.425410701625*^9, 3.42567821325*^9, 
   3.426080156453125*^9, 3.42608791890625*^9, 3.426171116828125*^9, 
   3.4675856928192*^9, 3.472400239595332*^9, 3.47316542589618*^9},
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"pv", "[", 
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"10", ",", 
         RowBox[{"{", "119", "}"}]}], "]"}], ",", "110"}], "]"}], ",", 
     RowBox[{"Range", "[", 
      RowBox[{"1", ",", "120"}], "]"}], ",", "r"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0.0", ",", "0.20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42497719684375*^9, 3.4249772839375*^9}, 
   3.424977342140625*^9, {3.42497741175*^9, 3.424977449578125*^9}},
 CellLabel->"In[48]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
q/vRqh+Fsr5oR9v/AOSeuEU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 100.},
  PlotRange->{{0., 0.2}, {50.00000103615602, 606.0010067498937}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{{3.4249772396875*^9, 3.424977284796875*^9}, 
   3.42497734415625*^9, 3.424977418171875*^9, 3.424977451328125*^9, 
   3.425410702078125*^9, 3.425678213578125*^9, 3.42608015671875*^9, 
   3.426087919171875*^9, 3.42617111709375*^9, 3.4675856931092*^9, 
   3.4724002398293324`*^9, 3.473165426008059*^9},
 CellLabel->"Out[48]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Constructing and Manipulating \[LineSeparator]Yield Curves"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{3.47404204517898*^9},
 CellTags->"Constructing and Manipulating Yield Curves"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{
  3.426078495453125*^9, {3.42607852790625*^9, 3.4260785311875*^9}}],

Cell["\<\
You want to build a yield curve from underlying spot rates and then model \
changes in the curve so you can model the return of a portfolio of \
rate-sensitive securities.\
\>", "Text",
 CellChangeTimes->{
  3.455558436249405*^9, {3.4734265746014633`*^9, 3.473426583470889*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.426078538546875*^9, 3.42607854171875*^9}}],

Cell[TextData[{
 "If you are only interested in changes in the yield curve at a particular \
maturity, you can use published yields for various maturities and use \
interpolation. For example, here is some interest rate data taken from \
Bloomberg in late June 2009. The pairs are ",
 StyleBox["{days, rate}", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.473426591398254*^9, 3.473426619424663*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rates", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "0.01"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"14", ",", "0.04"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"30", ",", "0.05"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"60", ",", "0.17"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"180", ",", "0.29"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"360", ",", "0.4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"730", ",", "1.11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1095", ",", "1.63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1825", ",", "2.56"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2555", ",", "3.20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3650", ",", "3.54"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5475", ",", "4.12"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7300", ",", "4.49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10950", ",", "4.86"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellLabel->"In[49]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"iRates", " ", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"rates", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Spline\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[50]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"rates", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"PointSize", "[", "0.01", "]"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "11000"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"iRates", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "7", ",", "11000"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[51]:="],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], PointSize[0.01], 
    PointBox[{{7., 0.01}, {14., 0.04}, {30., 0.05}, {60., 0.17}, {180., 
     0.29}, {360., 0.4}, {730., 1.11}, {1095., 1.63}, {1825., 2.56}, {2555., 
     3.2}, {3650., 3.54}, {5475., 4.12}, {7300., 4.49}, {10950., 
     4.86}}]}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlndcDf4bxZuqe2/GvQ2FjBIiFBUVn0NIUVREIQ1pUGlPDdQXpaGhrLRL
t2WkqaHbJird6hJa2pGSBn5+fz2v9+s8zznnz0ffwXy1JRcXFw8XF/fi/08s
51Jtylx0mlzzTrDvPj4MmZeGAp45l8j9/0oxmt+PjT6haSvYCiR57QFtmpkx
FFZYJJn+9SRpXr261mPT2O7j92Mbw5ikz19O8jksDhXOfQ3+dWokw4xNlOEG
NdWC22y15STDPF88KHIIu+NauzN0f5OM/E9rzixUBuY94nblOZBMMfHjGe7L
sZe5oEK22JRky9TfDyiew75TUYOLWEdJnlfLxImbqThAlV78qwnkGdMr0Of6
WWgW5e340rGVFIQdrV1hWgwtW2Ja37OKlFJ1vdIeaOGQxOvrT0eXkAo+pewq
iwboegy2B3FNkOrb3zi8/J9xVESdSyXQidQFixruvm+CoyO8IpsotqQxsmDI
v6QT+vci1EVFjMk7A2UHT7YPDJxPHhWK0yfNjap+dfxiOHZopcUfKW3SquT6
UYgbOL6m330iaS95f73f/fhmMxyfzQr+ul6VtJXf3F07xoFhs0s8J0uRsNsc
F96/X4kTj9WevlWUI+01TwY9FYCTV3hqql6sIR3R13N6SxVgZFTHKVRfRjr3
uHNVcN2FsUL4eFaFCOl8zeM1XhyCU0IneRMP0AhnZ06pfjYNp76sFI9p4COc
G7znG2I34XRB/8bgI/OEU3JFTH3nN5wJzyJ+rZOE8z7XNsjABibWLgYuRiOE
08bgCU5+iLNQs7Lu6iWcss2X5UfjYUrj3pWdN0Y4t//z1B1zgal7b036pC3h
6CVGv7VaD9OeWr0k5X7S+YfPMUq8HmZHMjkPPM1JZ5xCpne5GcyKwyzvFH8i
nTLZ3TarpmG+zmk84s9p0pHI9XzXzF2YRxp6hqCddNAzKz9QTsLiwopb/qy3
hN26Smi2VRMWbG5xb8HDhL1uIoAIR+Lc3t4EV+1a0ua6NbvFbxUsJTOf2zSV
k/c8POkuVFVYBoWRc3R10rov/olGykdYTjjVmRwrIC1BRaNDHt9xvn7nR/2O
XNK8yNdtX+09WCmvsNJZvom8M9rKVcw6CKtEru+aJunkbbrTjvDZKFh71vKr
9Twib4rdThRJucC6LzNMWXY5eX0rRnvzR13Y6IVJbLWOJY1uJTYJ/dGwKXVK
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
h+8o3platuCIIJa8flY4cdAQJQzliFz9ESwZFGdF28ajZOByIFtZEHSuPR67
yxtQ2jTUE0VTAV101MP+FMHLNPbLCpU80NcFasV3KqEsYpj3muEu0HfYeTs8
10a58u5uTh8F9AMtSRLfp1GeYNH6bOFt0I/trg0ZGUGF6L25EwpJoJvn7fl7
VQQVVxifn/gZg37pWUbIwTFUTD+cba++C3qAfFxnrCMqL/CnlF52Az3SRCdu
rhCVbcxFxibToKfWCO6cDMerQ5ZZlao8oJfJc0p2vcKrgrOUbvIE9I7y6y62
sqiS3var/Nkf0Kcn3Tfyf0PVneXLbKVbwZCixAid2QYWr8Z8Q+kRMDQVy7ZZ
FYPFLztSLHvtH09XP/upB5aA0IfHYUVgHCw9kBh8GCxKU8kNcxkwtLVyo3Kv
gUU/5aO54BcYOtaKcQgFa7XTXOXRRDAMSlYcULsLFkmYLej5CYZp+Z/9FaVg
7bk2lK6zEQyzaM9LQaNgaVh13sk3BcPc1vlhpBxYmvJFbtcbwDgn2se2bgVL
t9Bru/wjMKycavzNgsA683Ymx10bDPt9Wc2Hh8A6+3Tw4Wc/MBxWKww83wSW
WUxHqNazf/xnhy5fA1iWpwvtlq8Ew7GwsX2vElgXBzzlyifBcFWRzAndD5Z9
g42k3AYw3MRfcN/4C9albCOhSJN//It9cBfAcnHZMWBZB4ZHSXLQE1uw3E6s
Z7/5A4ZnvN7XgTNgeagurdmxHQyvK9cWl/7r47VCMD/BBgzv82pKoxJgef/9
lUp5CIaPtnvIltH/AQdeAJQ=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  PlotRange->{{0, 11000}, {0, 6}},
  PlotRangeClipping->True]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.457730755160969*^9, 3.4675856934392*^9, 
  3.472400240328533*^9, 3.473165426380084*^9},
 CellLabel->"Out[51]="]
}, Open  ]],

Cell["\<\
Interpolation is all well and good, but if you want to understand the \
dynamics of the curve, you need a model. The Nelson-Siegel function is a \
popular parametric model of the yield curve. \
\>", "Text",
 CellChangeTimes->{{3.474042081535185*^9, 3.474042090747685*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"nsYieldCurve", "[", 
   RowBox[{
   "m_", ",", " ", "\[Beta]0_", ",", " ", "\[Beta]1_", ",", "\[Beta]2_", ",", 
    "\[Tau]_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"\[Beta]0", " ", "+", " ", 
   FractionBox[
    RowBox[{"\[Beta]1", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "m"}], "/", "\[Tau]"}], "]"}]}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{"m", "/", "\[Tau]"}], ")"}]], "+", " ", "\[IndentingNewLine]", 
   RowBox[{"\[Beta]2", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "m"}], "/", "\[Tau]"}], "]"}]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"m", "/", "\[Tau]"}], ")"}]], " ", "-", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "m"}], "/", "\[Tau]"}], "]"}]}], ")"}]}]}]}]], "Input",
 CellLabel->"In[52]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fit", " ", "=", 
  RowBox[{"FindFit", "[", " ", 
   RowBox[{"rates", ",", " ", 
    RowBox[{"nsYieldCurve", "[", 
     RowBox[{"m", ",", "b0", ",", "b1", ",", "b2", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"b0", ",", "b1", ",", "b2", ",", "t"}], "}"}], ",", "m", ",", 
    RowBox[{"Method", "\[Rule]", "NMinimize"}]}], "]"}]}]], "Input",
 CellLabel->"In[53]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"b0", "\[Rule]", "5.288461935617099`"}], ",", 
   RowBox[{"b1", "\[Rule]", 
    RowBox[{"-", "5.262944579436224`"}]}], ",", 
   RowBox[{"b2", "\[Rule]", 
    RowBox[{"-", "3.758683774292479`"}]}], ",", 
   RowBox[{"t", "\[Rule]", "651.4683444155257`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.455548307904188*^9, 3.4675856970717*^9, 
  3.472400241872936*^9, 3.473165427886099*^9},
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[TextData[{
 "Here I use the fitted curve to initialize a ",
 StyleBox["Manipulate", "Literal"],
 ". You can then play with the parameters to get a feel for their effect."
}], "Text",
 CellChangeTimes->{{3.455554342409111*^9, 3.455554402562254*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"rates", ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"PointSize", "[", "0.01", "]"}], "}"}]}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "11000"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"nsYieldCurve", "[", 
          RowBox[{"m", ",", "beta0", ",", "beta1", ",", "beta2", ",", "tau"}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "11000"}], "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "11000"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "6"}], "}"}]}], "}"}]}]}], "]"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"beta0", ",", "b0"}], "}"}], ",", "3", ",", "6", ",", "0.1"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"beta1", ",", "b1"}], "}"}], ",", "2", ",", 
       RowBox[{"-", "6"}], ",", "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"beta2", ",", "b2"}], "}"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "1"}], ",", "0.1"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tau", ",", "t"}], "}"}], ",", "100", ",", "1000", ",", 
       "10"}], "}"}], ",", 
     RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}], " ", "/.", " ", 
   "fit"}], "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[54]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`beta0$$ = 
    5.288461935617099, $CellContext`beta1$$ = -5.262944579436224, \
$CellContext`beta2$$ = -3.758683774292479, $CellContext`tau$$ = 
    651.4683444155257, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`beta0$$], 5.288461935617099}, 3, 6, 0.1}, {{
       Hold[$CellContext`beta1$$], -5.262944579436224}, 2, -6, 0.1}, {{
       Hold[$CellContext`beta2$$], -3.758683774292479}, -5, -1, 0.1}, {{
       Hold[$CellContext`tau$$], 651.4683444155257}, 100, 1000, 10}}, 
    Typeset`size$$ = {248., {82., 84.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`beta0$59589$$ = 0, $CellContext`beta1$59590$$ = 
    0, $CellContext`beta2$59591$$ = 0, $CellContext`tau$59592$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`beta0$$ = 
        5.288461935617099, $CellContext`beta1$$ = -5.262944579436224, \
$CellContext`beta2$$ = -3.758683774292479, $CellContext`tau$$ = 
        651.4683444155257}, "ControllerVariables" :> {
        Hold[$CellContext`beta0$$, $CellContext`beta0$59589$$, 0], 
        Hold[$CellContext`beta1$$, $CellContext`beta1$59590$$, 0], 
        Hold[$CellContext`beta2$$, $CellContext`beta2$59591$$, 0], 
        Hold[$CellContext`tau$$, $CellContext`tau$59592$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        ListPlot[$CellContext`rates, PlotStyle -> {
           PointSize[0.01]}, PlotRange -> {{0, 11000}, {0, 6}}], 
        Plot[
         $CellContext`nsYieldCurve[$CellContext`m, $CellContext`beta0$$, \
$CellContext`beta1$$, $CellContext`beta2$$, $CellContext`tau$$], \
{$CellContext`m, 1, 11000}, PlotRange -> {{0, 11000}, {0, 6}}]], 
      "Specifications" :> {{{$CellContext`beta0$$, 5.288461935617099}, 3, 6, 
         0.1}, {{$CellContext`beta1$$, -5.262944579436224}, 2, -6, 
         0.1}, {{$CellContext`beta2$$, -3.758683774292479}, -5, -1, 
         0.1}, {{$CellContext`tau$$, 651.4683444155257}, 100, 1000, 10}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{288., {157.875, 163.125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`rates = {{7, 0.01}, {14, 0.04}, {
         30, 0.05}, {60, 0.17}, {180, 0.29}, {360, 0.4}, {730, 1.11}, {
         1095, 1.63}, {1825, 2.56}, {2555, 3.2}, {3650, 3.54}, {5475, 4.12}, {
         7300, 4.49}, {10950, 4.86}}, $CellContext`nsYieldCurve[
         Pattern[$CellContext`m, 
          Blank[]], 
         Pattern[$CellContext`\[Beta]0, 
          Blank[]], 
         Pattern[$CellContext`\[Beta]1, 
          Blank[]], 
         Pattern[$CellContext`\[Beta]2, 
          Blank[]], 
         Pattern[$CellContext`\[Tau], 
          
          Blank[]]] := $CellContext`\[Beta]0 + ($CellContext`\[Beta]1 (1 - 
           Exp[(-$CellContext`m)/$CellContext`\[Tau]]))/($CellContext`m/$\
CellContext`\[Tau]) + $CellContext`\[Beta]2 ((1 - 
            Exp[(-$CellContext`m)/$CellContext`\[Tau]])/($CellContext`m/$\
CellContext`\[Tau]) - Exp[(-$CellContext`m)/$CellContext`\[Tau]])}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.455548311331908*^9, 3.4675856972892*^9, 
  3.4724002422629366`*^9, 3.473165428060648*^9},
 Magnification->0.8599999999999999,
 CellLabel->"Out[54]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "TopOfPage",
 CellChangeTimes->{{3.426078546609375*^9, 3.426078548890625*^9}}],

Cell[TextData[{
 StyleBox["An extension of the Nelson-Siegel model is the Svensson model, \
which addresses problems with convexity, inaccuracies introd",
  FontTracking->"SemiCondensed"],
 StyleBox["uced for large changes in yield due to the nonlinear relationship \
between prices and yields. The capital gain induced by a decline in the yield \
is larger than the capital loss induced by an equal-sized increase in the \
yield.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.455554428451874*^9, 3.455558459002684*^9, 3.473427968238192*^9, {
   3.4734280084087563`*^9, 3.473428011237666*^9}}],

Cell["\<\
Given the Svensson model for the forward curve, you can use Mathematica\
\[CloseCurlyQuote]s symbolic integration capabilities to find the zero coupon \
(or spot) model.\
\>", "Text",
 CellChangeTimes->{{3.455554439059814*^9, 3.455554511798812*^9}, 
   3.455558465090764*^9, {3.4734280213807487`*^9, 3.47342802948492*^9}, {
   3.4761151726120567`*^9, 3.476115175210297*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"svForwardCurve", ",", "svSpotCurve"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"svForwardCurve", "[", 
   RowBox[{
   "m_", ",", " ", "\[Beta]0_", ",", " ", "\[Beta]1_", ",", "\[Beta]2_", ",", 
    "\[Beta]3_", ",", "\[Tau]1_", ",", "\[Tau]2_"}], "]"}], ":=", 
  RowBox[{"\[Beta]0", "+", 
   RowBox[{"\[Beta]1", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "m"}], "/", "\[Tau]1"}], "]"}]}], " ", "+", 
   RowBox[{"\[Beta]2", 
    RowBox[{"(", 
     RowBox[{"m", "/", "\[Tau]1"}], ")"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "m"}], "/", "\[Tau]1"}], "]"}]}], " ", "+", " ", 
   RowBox[{"\[Beta]3", 
    RowBox[{"(", 
     RowBox[{"m", "/", "\[Tau]2"}], ")"}], 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "m"}], "/", "\[Tau]2"}], "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.455550784142915*^9, 3.455551142843404*^9}, {
  3.455554607717383*^9, 3.4555548067034073`*^9}, {3.455554839217187*^9, 
  3.4555548447771053`*^9}, {3.4555549613824663`*^9, 3.455554962942374*^9}},
 CellLabel->"In[55]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"svSpotCurve", "[", 
   RowBox[{
   "m_", ",", " ", "\[Beta]0_", ",", " ", "\[Beta]1_", ",", " ", "\[Beta]2_", 
    ",", " ", "\[Beta]3_", ",", " ", "\[Tau]1_", ",", " ", "\[Tau]2_"}], 
   "]"}], " ", "=", " ", "\n", "  ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}], "*", " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"svForwardCurve", "[", 
       RowBox[{
       "m", ",", " ", "\[Beta]0", ",", " ", "\[Beta]1", ",", " ", "\[Beta]2", 
        ",", " ", "\[Beta]3", ",", " ", "\[Tau]1", ",", " ", "\[Tau]2"}], 
       "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"m", ",", " ", "0", ",", " ", "m"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[57]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"m", " ", "\[Beta]0"}], "+", 
   RowBox[{"\[Beta]1", " ", 
    RowBox[{"(", 
     RowBox[{"\[Tau]1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["m", "\[Tau]1"]}]], " ", "\[Tau]1"}]}], ")"}]}], "+", 
   RowBox[{"\[Beta]2", " ", 
    RowBox[{"(", 
     RowBox[{"\[Tau]1", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["m", "\[Tau]1"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "\[Tau]1"}], ")"}]}]}], ")"}]}], "+", 
   RowBox[{"\[Beta]3", " ", 
    RowBox[{"(", 
     RowBox[{"\[Tau]2", "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox["m", "\[Tau]2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{"m", "+", "\[Tau]2"}], ")"}]}]}], ")"}]}]}], "m"]], "Output",
 CellChangeTimes->{{3.455555016074143*^9, 3.455555028975844*^9}, 
   3.45555510789303*^9, 3.455556557439012*^9, 3.4675857064617*^9, 
   3.4724002459133425`*^9, 3.473165431827385*^9},
 CellLabel->"Out[57]="]
}, Open  ]],

Cell["\<\
The solution demonstrates a so-called parametric method (i.e., a method based \
on parameters that have real-world meaning). There are also nonparametric \
methods that are in use where curves are fit using polynomials and tension \
splines. See the\[LineSeparator]following references.\
\>", "Text",
 CellChangeTimes->{{3.455558467026948*^9, 3.45555847139511*^9}, 
   3.4675824583882*^9, {3.4734280440547647`*^9, 3.4734280757737007`*^9}, {
   3.473443693359374*^9, 3.473443696116145*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellMargins->{{0, 36}, {0, 11}},
 CellChangeTimes->{{3.438470108321759*^9, 3.4384701108081217`*^9}}],

Cell[TextData[{
 "This recipe is based on ",
 StyleBox["Parsimonious Modeling of Yield Curves", "CitationTitle"],
 " by Charles R. Nelson and Andrew F. Siegel (",
 StyleBox["Journal of Business", "CitationTitle"],
 ", Vol. 60, No. 4 [Oct. 1987]: 473\[Dash]489), which can be found online at ",
 StyleBox[ButtonBox["http://bit.ly/1mQ3mq",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/1mQ3mq"], None},
  ButtonNote->"http://bit.ly/1mQ3mq"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.4555584778918133`*^9, 3.455558485860105*^9}, 
   3.4675851506275*^9, {3.473428081278329*^9, 3.4734280816625137`*^9}, {
   3.4734281149354267`*^9, 3.4734281685844717`*^9}, {3.473428209378899*^9, 
   3.473428209381465*^9}, 3.474042250572145*^9}],

Cell[TextData[{
 "A library of Mathematica code for working with the term structure of \
interest rates can be found on Mark Fisher\[CloseCurlyQuote]s website at ",
 StyleBox[ButtonBox["http://bit.ly/3hW4KC",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/3hW4KC"], None},
  ButtonNote->"http://bit.ly/3hW4KC"], "URL"],
 ", with documentation at",
 StyleBox[" ", "URL"],
 StyleBox[ButtonBox["http://bit.ly/1ormSc",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/1ormSc"], None},
  ButtonNote->"http://bit.ly/1ormSc"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.4675824854122*^9, {3.4675851771948*^9, 3.4675852049511003`*^9}, {
   3.4734282554483213`*^9, 3.473428320826741*^9}}],

Cell[TextData[{
 "A more thorough investigation of yield curve models can be found in this \
notebook at the Wolfram Library Archives, ",
 StyleBox[ButtonBox["http://bit.ly/17OU4U",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/17OU4U"], None},
  ButtonNote->"http://bit.ly/17OU4U"], "URL"],
 ", which was developed by Jan Hurt of the Charles University of Prague."
}], "Text",
 CellChangeTimes->{{3.455556709680475*^9, 3.455556768258378*^9}, {
  3.455556816092496*^9, 3.455556877911028*^9}, {3.455558516506255*^9, 
  3.455558522173067*^9}, {3.4675852358272*^9, 3.4675852386547003`*^9}, {
  3.473428348657917*^9, 3.473428399406767*^9}, {3.476115182268161*^9, 
  3.47611518794762*^9}}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Black-Scholes for European Option Pricing"
}], "Heading1",
 CellChangeTimes->{{3.425073628578125*^9, 3.425073649328125*^9}, {
   3.42507440009375*^9, 3.42507443990625*^9}, {3.425409689859375*^9, 
   3.4254096953125*^9}, 3.473428418619828*^9},
 CellTags->"Black Scholes for European Option Pricing"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.425409653625*^9, 3.425409655984375*^9}}],

Cell["\<\
You want to price European puts and calls using the Black-Scholes formula.\
\>", "Text",
 CellChangeTimes->{{3.42540965990625*^9, 3.425409739546875*^9}, {
  3.42540978384375*^9, 3.425409789859375*^9}, {3.473428425648765*^9, 
  3.473428436783279*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2", "ProductionPageBreak",
 CellChangeTimes->{{3.425409747609375*^9, 3.425409758203125*^9}}],

Cell[TextData[{
 "We give the solution to the Black-Scholes formula here without derivation. \
There are many excellent resources listed in the ",
 ButtonBox["\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section \
on page 572",
  BaseStyle->"Hyperlink",
  ButtonData->"14.6 See Also"],
 " for readers interested in the theory underlying this solution. The helper \
functions ",
 StyleBox["d1", "Literal"],
 " and ",
 StyleBox["d2", "Literal"],
 " have become fairly standard within the literature, so I use them here \
despite my personal aversion to short, cryptic names. The expression \
involving the ",
 StyleBox["d1", "Literal"],
 " term in the pricing functions is related to the value of acquiring the \
stock; the expression involving the ",
 StyleBox["d2", "Literal"],
 " term relates to the value of exercising the option on expiration. "
}], "Text",
 CellChangeTimes->{
  3.455558557326887*^9, {3.473428463097069*^9, 3.473428472389854*^9}, {
   3.4734285608323174`*^9, 3.473428600132906*^9}, {3.473428636369088*^9, 
   3.4734286555363827`*^9}, 3.476115198105768*^9, {3.476186741304331*^9, 
   3.476186762010707*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "d1", ",", " ", "d2", ",", " ", "priceEuroCall", ",", " ", "priceEuroPut"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, 
   3.4555412846216288`*^9},
 CellLabel->"In[58]:="],

Cell[TextData[{
 "These helper functions are used by both ",
 StyleBox["priceEuroCall", "Literal"],
 " and ",
 StyleBox["priceEuroPut", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, {
   3.4555412846216288`*^9, 3.45554129014202*^9}, {3.455541333814732*^9, 
   3.4555413391028843`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"d1", "[", 
    RowBox[{
    "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
     "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"price", "/", "strike"}], "]"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"rate", "+", 
         RowBox[{
          RowBox[{"volatility", "^", "2."}], "/", "2."}]}], ")"}], "*", 
       "maturityT"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"volatility", "*", 
      RowBox[{"Sqrt", "[", "maturityT", "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"d2", "[", 
    RowBox[{
    "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
     "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d1", "[", 
     RowBox[{
     "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
      "rate"}], "]"}], "-", 
    RowBox[{"volatility", "*", 
     RowBox[{"Sqrt", "[", "maturityT", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cumNormDist", "[", 
    RowBox[{"x_", "?", "NumberQ"}], "]"}], ":=", " ", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", "]"}], ",", "x"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, {
   3.4555412846216288`*^9, 3.45554129014202*^9}, 3.455541346744123*^9, {
   3.455557571762738*^9, 3.4555577060021667`*^9}, 3.4555716155989037`*^9},
 CellLabel->"In[59]:="],

Cell["\<\
Given the price of a stock, the strike price of the option, the volatility, \
time to option maturity in fractions of a year, and the risk-free interest \
rate, compute the value of a call or put option.\
\>", "Text",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, {
   3.4555412846216288`*^9, 3.45554129014202*^9}, {3.455541346744123*^9, 
   3.455541387128852*^9}, 3.4555414243304996`*^9, 3.455558560053937*^9, {
   3.473428695835413*^9, 3.473428716679463*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"priceEuroCall", "[", 
   RowBox[{
   "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"price", "*", 
    RowBox[{"cumNormDist", "[", 
     RowBox[{"d1", "[", 
      RowBox[{
      "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
       "rate"}], "]"}], "]"}]}], "-", 
   RowBox[{"strike", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "rate"}], "*", "maturityT"}], "]"}], "*", 
    RowBox[{"cumNormDist", "[", 
     RowBox[{"d2", "[", 
      RowBox[{
      "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
       "rate"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, {
   3.4555412846216288`*^9, 3.45554129014202*^9}, {3.455541346744123*^9, 
   3.455541349871976*^9}, 3.4555413971456013`*^9},
 CellLabel->"In[62]:="],

Cell["\<\
The fact that a put can be priced in terms of a call is called put-call \
parity.\
\>", "Text",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, {
   3.4555412846216288`*^9, 3.45554129014202*^9}, {3.455541346744123*^9, 
   3.455541349871976*^9}, {3.4555413971456013`*^9, 3.4555414183617563`*^9}, {
   3.4734287283041153`*^9, 3.473428735192059*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"priceEuroPut", "[", 
   RowBox[{
   "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"priceEuroCall", "[", 
    RowBox[{
    "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
     "rate"}], "]"}], "+", 
   RowBox[{"strike", "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "rate"}], "*", "maturityT"}], "]"}]}], "-", 
   "price"}]}]], "Input",
 CellChangeTimes->{{3.425410881796875*^9, 3.4254110106875*^9}, {
   3.425411262296875*^9, 3.425411538453125*^9}, {3.4254123555625*^9, 
   3.425412411046875*^9}, 3.42567785303125*^9, {3.425677947609375*^9, 
   3.4256781313125*^9}, {3.42567818175*^9, 3.425678224625*^9}, {
   3.425678720609375*^9, 3.425678774125*^9}, {3.455540229717516*^9, 
   3.455540231550441*^9}, {3.4555402702785683`*^9, 3.4555404478338223`*^9}, {
   3.455540557201824*^9, 3.455540679015421*^9}, {3.45554079366257*^9, 
   3.455540796780654*^9}, {3.455541061504455*^9, 3.4555411458678217`*^9}, {
   3.4555412846216288`*^9, 3.45554129014202*^9}, {3.455541346744123*^9, 
   3.455541349871976*^9}, {3.4555413971456013`*^9, 3.455541399665402*^9}},
 CellLabel->"In[63]:="],

Cell["\<\
Here we compute the value of a call option with strike $60 and 1/2 year to \
maturity, with the underlying stock trading at $70, with a volatility of \
0.29, and a risk-free rate of 4%. The volatility is usually measured as the \
standard deviation of the stock price.\
\>", "Text",
 CellChangeTimes->{{3.473428745785008*^9, 3.473428774001226*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"priceEuroCall", "[", 
  RowBox[{"70.", ",", "60.", ",", "0.29", ",", "0.5", ",", "0.04"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.42541203578125*^9, 3.4254120485*^9}, {
  3.4254124278125*^9, 3.42541244071875*^9}, {3.4555406859891977`*^9, 
  3.455540687827849*^9}},
 CellLabel->"In[64]:="],

Cell[BoxData["12.632348469579235`"], "Output",
 CellChangeTimes->{{3.425412037171875*^9, 3.42541204890625*^9}, {
   3.425412419171875*^9, 3.42541244178125*^9}, 3.4256782138125*^9, 
   3.426080156984375*^9, 3.4260879194375*^9, 3.42617111734375*^9, 
   3.455540689827486*^9, {3.455540805966036*^9, 3.455540819759075*^9}, 
   3.455541153195774*^9, 3.4555418188377132`*^9, 3.4555577236068373`*^9, 
   3.455557757222744*^9, 3.4675857067392*^9, 3.4724002463501434`*^9, 
   3.473165432415761*^9},
 CellLabel->"Out[64]="]
}, Open  ]],

Cell["\<\
Here we show the opposing relationship between a call and a put with equal\
\[LineSeparator]attributes by plotting their values against the price of the \
underlying stock. A call\[LineSeparator]increases in value with the stock \
price, whereas a put decreases in value. \
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.473428786157907*^9, 3.473428799497558*^9}, {
  3.473443707919661*^9, 3.4734437219248133`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"priceEuroCall", "[", 
      RowBox[{"s", ",", "60.", ",", "0.29", ",", "0.5", ",", "0.04"}], "]"}], 
     ",", 
     RowBox[{"priceEuroPut", "[", 
      RowBox[{"s", ",", "60.", ",", "0.29", ",", "0.5", ",", "0.04"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "40", ",", "80"}], "}"}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<stock price\>\"", ",", "\"\<option price\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "15"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42541115565625*^9, 3.425411158296875*^9}, {
   3.42541124078125*^9, 3.425411257265625*^9}, {3.42541155125*^9, 
   3.425411574734375*^9}, {3.425411632171875*^9, 3.42541173459375*^9}, {
   3.42541179090625*^9, 3.425411859984375*^9}, {3.425411899984375*^9, 
   3.42541201109375*^9}, {3.425412053578125*^9, 3.425412091328125*^9}, {
   3.425412172453125*^9, 3.425412178890625*^9}, 3.455540724688588*^9, 
   3.455540827710478*^9, {3.455557771322996*^9, 3.4555578013942347`*^9}},
 CellLabel->"In[65]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVj3s01HkAxYckUmFLaSMzm1KhxPzSKn1v9cN4zoxfjhlxQsOMSHpsalNa
p2SrzSQkoSeq00jq1LJIDTXySM0SPSZCHm2FapOUnf3jnnvuH/fcz/XfHM6J
YLFYulqJ/3fQLJZ+26TVpOJQOOMcEApaJ2389rtTSMXFup6PrCrQ46z1TOLb
SMV9v+c+QwLQ+jwdj844Uql3lt09pR30pNSvN8tOk8p9O++ZbXAAPdNqIF02
Sm7v0RlMfHgGtCN5yq+5SaqqP85Yn9kEWpKouJdoS+5+deF5WP4JOtIp4XKL
hCiNo8YmfeCBlvZ4p9rnEeWcywNy9TDoaL++wOcmROkTqli5oxf01tnWfcv+
Jcq8nKtFcVq+xPIco6EqUu2+/mPrJi1P9pdDwsi1pOZ8sMa2Rgb60bbI5757
iSoj6dz9ZQCtnrhWKsgiqitFG98XsUH/fXbVEFNCVMo3v6ec0PafPLQ0EL8m
qqGTb+UCOWjNQjU30pfUClSevau1//pfkSOJFuSByTargV453PSE5iuKy0hd
Lnnz4GIo3JwX1eZO/Uwa313NHO5ygFv2Gz/HvECitm1e4RSqgvuEWV0D+znk
yfsFXW6DIrjHTJsrDjclL2wC4sXlcri37YvvPxVNOjRnjqXaieBBv/1HkKUg
3bmRm+LXxsHj0pyJYUfNSF82FscfdADPrN4lW9ND3u3ruS3Nagdvt+u0RJuX
ZFCdu3OdHQ88zVWTZdxK8vEcv0hiCnh6ZcyemTuBDOt2O062mQ/Pq6ub87/t
IF8T7F5VxhTDy0JyOqhUQMZyPlyKSTGB18GDh7p+NoXueKG8UiaD15utbPPi
Yeituv5TZ2EKvAOb7v+y3xP6mvqG5Q074V3+2XwPvwqGCYOPLMJ64bPw2G7F
jrOYtP+FOv9BCnwy7VklYRthXNyw3HIP4DMiXxxOi2EaJZysv1MGX6k0ziWp
BFOd2k4LTLW5QT+oonQJpn36rDNY0AQ/hwKp2fUTmK6UbklxZMMvp+xApqEU
5g1f/3JrlIGvk+l7JzAEP9YqLM95tYIf+3q+GasClnpjHermXvCfOlu7xo6H
lVfU0dRQOQRWNt0GUWVgV8yJka2xgyAgdpW+1zxwPmmcLxRkQZBivqWtIB9z
ON8FrsIYCEqVTicizGHNT7rDBIsgeF/4PUoIzM2Le6YJEUDIGcgzKd2NeS+a
3vseSIdQtM29nh+N+WTmmjqlHYSHxdUhYbFYkOpc9exzDoQVeNzaLMFCjQs7
u2sYwg9h/bJ4Y9jxxWGe40Twn/u6pSG9AfZXOh4e7SmGf3B+vXs7sNiuqjzj
lAT+aRH+l/8ohEMAd2neqn3wr05RdN7iYImhQ81Uo+/wH3n9w5IpAixpDIwI
KJKBsS/0ZjrS4JjCLlh78jmY9VFmYdNVcCJV/cmiUDAZkt6kXdfBNdhvZ2DI
BnO/Wr5LdA3cmkXLbwWlg1Hl711wZym4qt2R19ySwdQmRz9dUAZunerS5DEu
mDqeh8tINbiPN2yrF/0KprHu22hOC7gvs9mSI2lgmtXRie2j4I4YNXob9YLp
fOWeHMUDtZhFyuW6YLqU3KWPGkA5Ctwn5wyB6b7A6XHxB0WdCb8s0u71RHzj
Ga0DtQKaCxefgunvu2GoiAXlmdSueDERzOAg58hgOiiJ0fgL52eDGXps7Bo0
E5Q0OOaG6WMwH0pG397NA7VR0XfweBKYT9tb/Y4XgtoitBbTWv7h4VQTqgzU
3qzcilnFYL60JVTlrQT1W3+JbpP2/0jZxi36SlAHVjyrrdbujya4PXpSD+pw
x+YyJy3/txCnJAhBpTq1qWdYgPm+kuN4sQVUWrLYx5gFZsxqSqdpEKiM1ncW
LSu1eWz0+K6XoE7aZrnasv4DO3SIqQ==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0n8w1HkYB/BviETbuthbR7RFdBG7KbXF59F9W2u1dnENq59r/FZSSE5l
T0pT+q10blk1sXXOj9TUWfYiumri7iid/aLy+0d0trraWNzHH5955jXPe56Z
55lP0L5wViRBEAb4CWcrkARhrDHfBJyxiNDs9Xog51ycm/yQBpyRnY19p2lA
GjoY0VM1wBmUCK4digPSmD/HtzcRON0B11PXhwJpfm7ynkoBnDbuce8aMZDW
9uO5MXrgqL92KH+K53MQJXp0Dzg5fZ4pAaNARmSU/ZGxEjguLbbDpXQgW5Ki
OoVHgb3TbkMSrRA2e656WrDoM7grJH9p+o1gc/7bAE5hCLg1Rx7qDSWAZ2LT
N57FglWb1A0uW7cDb4+loyTcAlzaC+1Y6R+Bp5GljvwcDytD5GxuzR7wJcdG
xVfLYEV/q1rKHwLfW8vmS89agXPus26vg8nAt2ri5r8aBCf3Cz+FeJDAT/ey
zHB6DY5jqyMo/W7gv6qgr/P4HRyqfWrv92eBn+CynXWBCSxLqV2jjLYFv4pN
bcVTB2Fp0CphDo0OAtsIRVi1GFisBzNne5ggyM4+1bfeApYYjEDcqAsI3h5Y
wqzUgZ1RZRH5WyX4h/z9OCXLD2zG+dxTbCb4135mHhHVwTcMZ4+N9kWw5dsL
6WUHrwHT1d9mRj4EW664ElXSOGBERSlz7XWwZeK8WzgpAcsXntdyHvJBGB2d
yM2sgkXrjF0tY2QgbDYOU1ezwaLZZYPcTwcB7iXRVnfygH5Ezk8ymAcBctXx
K6bRQBPZb9z2uhJEc64I60N2gJnu0dFdX9xBlDDgbEWowTR/r/RkmhhElKeD
V8JcMEl01x1SuYPY3ql/XqwK5p6VujWW14F4a4KPsWA5GN6UdU64ESA+ydyv
KSkGA8MaB61gN4irG1bnRTKByEq+fUGJ8/8qp2MDAU2bOB3DXxICWeOF9Op0
NJlIeChkMggMTeI1ieKRTnP1VqkWIPC0pHGHNAF9KhpzHbbEeTW0trdFoI+K
jWcMf8T5D9KRmNSF6L1ivDzHtA6CHAdeNuc2o/GRLyZJtdjbi5t4bwC9S45a
+uukDIIuRgb9ckaJ3u5bPEnWYzeeLOu9z0JDXQauft9jTwx8xaaJ0UCwA+39
fAKCXZX+wd0XUd/KioLIduxdsVZSxhPU4/18seEC7MsRQ5lpd9AbSWBtdoUM
gh83nk8LvY26jmQkGD3A/SfFR1fUr0Vd+zoPMz5hPz0RT61Qoa5wFN75CvsZ
35c70Yi6fBm3rzti//lsSi9/iboszBgLrLHbnsdnvNGjzhJT85gn2L09vBOx
fNTxQhDucwy7r8FjbUsz6ni8k2fLxe6/wRrkBqEOVWptTz72YOQU32wb6iiq
CSsuwR4ZvmtaloA69h63ESuwtVpWjjYXdcxb0qaexn7futArzBpRkznD7OXY
H6r0Yw8LEfVueu+t2X3/S24PuKREVJu2nmRj63Tn6GtUiLphHZqnx/6iOVxX
6I2ovMpqeRX2hCpuv3EDok4Lf9B6Y+sPb275pwlRB/IYG2bvM7VjdSYEIirq
u1FzH+xpbxbn5ktEST5Zd9/FnrGn9VqEIUpYVlBKzHpGfyntNaJ84lJCSon/
AfvdHiw=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"stock price\"", TraditionalForm], 
    FormBox["\"option price\"", TraditionalForm]},
  AxesOrigin->{40., 0},
  ImageSize->Small,
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{
  3.42541169475*^9, 3.4254117374375*^9, 3.42541180434375*^9, {
   3.4254118606875*^9, 3.42541201484375*^9}, {3.425412055*^9, 
   3.42541209175*^9}, {3.425412173*^9, 3.425412180515625*^9}, 
   3.425678213859375*^9, 3.42608015703125*^9, 3.426087919484375*^9, 
   3.42617111740625*^9, 3.455540726258787*^9, {3.455540821964053*^9, 
   3.4555408290886927`*^9}, 3.455541156002007*^9, 3.455541821409642*^9, {
   3.455557766124917*^9, 3.4555578026106033`*^9}, 3.4675857069292*^9, 
   3.472400246568544*^9, 3.473165432469777*^9},
 CellLabel->"Out[65]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellMargins->{{0, 36}, {0, 12}},
 CellChangeTimes->{{3.42541230078125*^9, 3.42541230971875*^9}}],

Cell[TextData[{
 "Although the ability to price an option is vital to successful trading, it \
is equally vital to measure the sensitivity of an option (or any other \
derivative security) to changes in the economic environment. These measures \
are based on mathematical derivatives of the pricing function. These measures \
are collectively k",
 StyleBox["nown as ",
  FontTracking->"SemiCondensed"],
 StyleBox["the Greeks", "Techical Italic",
  FontTracking->"SemiCondensed"],
 StyleBox[" be",
  FontTracking->"SemiCondensed"],
 "cause each is associated with a Greek letter."
}], "Text",
 CellChangeTimes->{{3.4555585619998293`*^9, 3.455558563270347*^9}, {
  3.473428810293995*^9, 3.473428822098174*^9}, {3.4740423094737997`*^9, 
  3.474042315646277*^9}, {3.4761152225640078`*^9, 3.4761152376842623`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "deltaEuroCall", ",", "deltaEuroPut", ",", "gammaEuroCall", ",", 
   "gammaEuroPut", ",", "thetaEuroCall", ",", "thetaEuroPut", ",", 
   "rhoEuroCall", ",", "rhoEuroPut", ",", "vegaEuroCall", ",", 
   "vegaEuroPut"}], "]"}]], "Input",
 CellChangeTimes->{{3.45554169900858*^9, 3.4555417883782587`*^9}, {
  3.455558051717331*^9, 3.455558121421797*^9}},
 CellLabel->"In[66]:="],

Cell["\<\
Delta is a measure of the sensitivity of an option to changes in the stock \
price. It is computed as the first derivative of the pricing function with \
respect to the underlying stock price.\
\>", "Text",
 CellChangeTimes->{{3.42568021453125*^9, 3.425680290171875*^9}, {
  3.42568036796875*^9, 3.4256804164375*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"deltaEuroCall", "[", 
   RowBox[{
   "price_Real", ",", "strike_", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroCall", "[", 
        RowBox[{
        "s", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
         "rate"}], "]"}], ",", "s"}], "]"}], " ", "/.", " ", 
     RowBox[{"s", "\[RuleDelayed]", "price"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltaEuroPut", "[", 
   RowBox[{
   "price_Real", ",", "strike_", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"priceEuroPut", "[", 
      RowBox[{
      "s", ",", "strike", ",", "volatility", ",", "maturityT", ",", "rate"}], 
      "]"}], ",", "s"}], "]"}], " ", "/.", " ", 
   RowBox[{"s", "\[RuleDelayed]", "price"}]}]}]}], "Input",
 CellChangeTimes->{{3.425412330375*^9, 3.425412344875*^9}, {
  3.425412492578125*^9, 3.425412562140625*^9}, {3.425412651625*^9, 
  3.42541265759375*^9}, {3.425412706*^9, 3.425412783484375*^9}, {
  3.425412887609375*^9, 3.425412888078125*^9}, {3.42541481928125*^9, 
  3.425414853*^9}, {3.4256782664375*^9, 3.425678268625*^9}, {
  3.4555414906667967`*^9, 3.455541500874556*^9}, {3.4555415645334587`*^9, 
  3.4555416366081743`*^9}, {3.455558263265707*^9, 3.455558268111781*^9}},
 CellLabel->"In[67]:="],

Cell[TextData[{
 "Gamma is a measure of the sensitivity of the delta to changes in the stock \
price. It is computed as the second derivative of the pricing fu",
 StyleBox["nction with respect to the underly",
  FontTracking->"SemiCondensed"],
 "ing stock price."
}], "Text",
 CellChangeTimes->{{3.425680437484375*^9, 3.4256804586875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gammaEuroCall", "[", 
   RowBox[{
   "price_Real", ",", "strike_", ",", "volatility_", ",", "maturityT_", ",", 
    "rate_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroCall", "[", 
        RowBox[{
        "s", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
         "rate"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "2"}], "}"}]}], "]"}], " ", "/.", " ", 
     RowBox[{"s", "\[RuleDelayed]", "price"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gammaEuroPut", "[", 
   RowBox[{
   "price_Real", ",", "strike_", ",", "volatility_", ",", "maturityT_", ",", 
    "rate_"}], "]"}], " ", ":=", "\[IndentingNewLine]", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroPut", "[", 
        RowBox[{
        "s", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
         "rate"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "2"}], "}"}]}], "]"}], " ", "/.", " ", 
     RowBox[{"s", "\[RuleDelayed]", "price"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.425412900453125*^9, 3.425412968625*^9}, {
  3.4256782688125*^9, 3.425678268859375*^9}, {3.42568094646875*^9, 
  3.42568097984375*^9}, {3.4555416696058893`*^9, 3.455541694851063*^9}, {
  3.455558275625145*^9, 3.455558278760771*^9}},
 CellLabel->"In[69]:="],

Cell[TextData[{
 "Theta is a measure of the sensitivity of the option price to time. It is \
computed as ",
 StyleBox["the first derivative of the pricing function with respect to the \
time to expiration (maturity).",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.425680473265625*^9, 3.42568052809375*^9}, {
   3.425680562875*^9, 3.425680648296875*^9}, 3.47611624421164*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"thetaEuroCall", "[", 
   RowBox[{
   "price_Real", ",", "strike_", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "t", "}"}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"priceEuroCall", "[", 
         RowBox[{
         "price", ",", "strike", ",", "volatility", ",", "t", ",", "rate"}], 
         "]"}], ",", "t"}], "]"}]}], " ", "/.", " ", 
     RowBox[{"t", "\[RuleDelayed]", "maturityT"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaEuroPut", "[", 
   RowBox[{
   "price_Real", ",", "strike_", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "t", "}"}], ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"priceEuroPut", "[", 
         RowBox[{
         "price", ",", "strike", ",", "volatility", ",", "t", ",", "rate"}], 
         "]"}], ",", "t"}], "]"}]}], " ", "/.", " ", 
     RowBox[{"t", "\[RuleDelayed]", "maturityT"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.425413055109375*^9, 3.425413085125*^9}, 
   3.42541312359375*^9, {3.42541316753125*^9, 3.425413168265625*^9}, {
   3.425413330015625*^9, 3.42541334496875*^9}, {3.4254135796875*^9, 
   3.42541358675*^9}, {3.425678268875*^9, 3.425678268921875*^9}, {
   3.42568098684375*^9, 3.42568100659375*^9}, {3.455542234052341*^9, 
   3.4555422786744537`*^9}, {3.4555580196302223`*^9, 3.4555580235262136`*^9}},
 
 CellLabel->"In[71]:="],

Cell["\<\
Rho is a measure of the sensitivity of the option price to changes in the \
risk-free rate.  It is computed as the first derivative of the pricing \
function with respect to the interest rate.\
\>", "Text",
 CellChangeTimes->{{3.425680473265625*^9, 3.42568052809375*^9}, {
   3.425680562875*^9, 3.425680694234375*^9}, 3.473428855028172*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rhoEuroCall", "[", 
   RowBox[{
   "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "r", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroCall", "[", 
        RowBox[{
        "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
         "r"}], "]"}], ",", "r"}], "]"}], " ", "/.", " ", 
     RowBox[{"r", "\[RuleDelayed]", "rate"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rhoEuroPut", "[", 
   RowBox[{
   "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "r", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroPut", "[", 
        RowBox[{
        "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
         "r"}], "]"}], ",", "r"}], "]"}], " ", "/.", " ", 
     RowBox[{"r", "\[RuleDelayed]", "rate"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.425413462953125*^9, 3.425413529*^9}, {
  3.425413590859375*^9, 3.425413607484375*^9}, {3.42567826909375*^9, 
  3.42567826928125*^9}, {3.42568101534375*^9, 3.425681035234375*^9}, {
  3.455542311317359*^9, 3.455542370542035*^9}},
 CellLabel->"In[73]:="],

Cell["\<\
Vega (also known as kappa) is a measure of the sensitivity of the option \
price to changes in the volatility.  It is computed as the first derivative \
of the pricing function with respect to the volatility.\
\>", "Text",
 CellChangeTimes->{{3.425680473265625*^9, 3.42568052809375*^9}, {
  3.425680562875*^9, 3.425680737109375*^9}, {3.42568086103125*^9, 
  3.42568086940625*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"vegaEuroCall", "[", 
   RowBox[{
   "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "v", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroCall", "[", 
        RowBox[{
        "price", ",", "strike", ",", "v", ",", "maturityT", ",", "rate"}], 
        "]"}], ",", "v"}], "]"}], " ", "/.", " ", 
     RowBox[{"v", "\[RuleDelayed]", "volatility"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vegaEuroPut", "[", 
   RowBox[{
   "price_Real", ",", "strike_Real", ",", "volatility_Real", ",", 
    "maturityT_Real", ",", "rate_Real"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "v", "}"}], ",", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"priceEuroPut", "[", 
        RowBox[{
        "price", ",", "strike", ",", "v", ",", "maturityT", ",", "rate"}], 
        "]"}], ",", "v"}], "]"}], " ", "/.", " ", 
     RowBox[{"v", "\[RuleDelayed]", "volatility"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.425413543375*^9, 3.42541354459375*^9}, {
   3.4254136296875*^9, 3.425413682296875*^9}, {3.425678269453125*^9, 
   3.425678269640625*^9}, {3.425681050140625*^9, 3.4256810685625*^9}, {
   3.455542381047244*^9, 3.4555424100560293`*^9}, 3.455558154051197*^9, 
   3.474042603588457*^9},
 CellLabel->"In[75]:="],

Cell["\<\
Here we compute delta of a call with strike $60 with 6 months left to \
maturity when the stock is trading at $40. This shows that the option will \
change value by roughly 3.7 cents for a dollar move. We can confirm this \
using the pricing function.\
\>", "Text",
 CellChangeTimes->{
  3.473428865907654*^9, {3.47342890043773*^9, 3.473428950837419*^9}, {
   3.473429572469364*^9, 3.473429583958661*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deltaEuroCall", "[", 
  RowBox[{"40.00", ",", "60.", ",", "0.29", ",", "0.5", ",", "0.04"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.425414621015625*^9, 3.42541468071875*^9}, 
   3.425681105140625*^9, 3.455541895295813*^9},
 CellLabel->"In[77]:="],

Cell[BoxData["0.03776536049250624`"], "Output",
 CellChangeTimes->{
  3.425414681203125*^9, 3.425678213890625*^9, 3.42568110628125*^9, 
   3.426080157078125*^9, 3.426087919546875*^9, 3.426171117453125*^9, {
   3.455538864183652*^9, 3.455538878914558*^9}, {3.455541879554138*^9, 
   3.455541896118887*^9}, 3.455542416281859*^9, 3.455557828673499*^9, 
   3.455558160995121*^9, 3.4675857071042*^9, 3.4724002468649445`*^9, 
   3.4731654328795033`*^9},
 CellLabel->"Out[77]="]
}, Open  ]],

Cell["\<\
This is in basic agreement with the difference between the value of the \
option at a stock price of $40.50 and $39.50 (we choose a dollar spread that \
places the delta stock price at the center).\
\>", "Text",
 CellChangeTimes->{{3.473428958055842*^9, 3.4734289608303127`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"priceEuroCall", "[", 
   RowBox[{"40.50", ",", "60.", ",", "0.29", ",", "0.5", ",", "0.04"}], "]"}],
   " ", "-", " ", 
  RowBox[{"priceEuroCall", "[", 
   RowBox[{"39.50", ",", "60.", ",", "0.29", ",", "0.5", ",", "0.04"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.42568129390625*^9, 3.425681313078125*^9}, {
  3.425681417390625*^9, 3.42568142290625*^9}, {3.455541940642235*^9, 
  3.4555419463767633`*^9}},
 CellLabel->"In[78]:="],

Cell[BoxData["0.03784541044570844`"], "Output",
 CellChangeTimes->{
  3.425681314171875*^9, 3.425681423734375*^9, 3.426080157109375*^9, 
   3.426087919578125*^9, 3.42617111746875*^9, 3.455538882814494*^9, {
   3.455541935661631*^9, 3.455541947049382*^9}, 3.455542418351676*^9, 
   3.455557833185639*^9, 3.455558163299797*^9, 3.4675857071617002`*^9, 
   3.472400246927345*^9, 3.473165432925333*^9},
 CellLabel->"Out[78]="]
}, Open  ]],

Cell["\<\
You can get an intuitive feel for the behavior of options by creating a 3D \
plot of each Greek with respect to stock price and time.\
\>", "Text"],

Cell[TextData[{
 "Note how delta increases sharply as the stock price approaches the strike \
and how this sensitivity is stronger near expiration (",
 StyleBox["t", "Emphasis"],
 " = 0)."
}], "Text",
 CellChangeTimes->{3.473428969366374*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"deltaEuroCall", "[", 
    RowBox[{"s", ",", "60.", ",", "0.29", ",", "t1", ",", "0.04"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "40.", ",", "80."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.425414497703125*^9, 3.42541457165625*^9}, {
  3.425414791640625*^9, 3.425414798578125*^9}, {3.4254148686875*^9, 
  3.425414882015625*^9}, {3.4555419526189947`*^9, 3.4555419621217337`*^9}, {
  3.455557277757873*^9, 3.455557288651519*^9}},
 CellLabel->"In[79]:="],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFvXVUFX33vw+Iha2Y2CJiIwoGMUclVQzARMQOFJtQMVFBTNLAAFQsVAxC
WlJSujsPh7IVJb4+nNmv+XDun+t3//Osda15hj3XzOwzs/d7tvr7No/ZJiYm
JiEm1mXy3//txNMQExv882kVs3zzrQMHZ9SIsf/xNM38Gn/lexCXKL5ft3C3
9imeVr5Z7O+e64kPbngbPmwz/xtPR1f23h+1wcQneK0PltfOSefp+uVbNpul
EVcsmbD+7QS147zFso7LWu5eJj5PM/nc+JNPGnhLHHUntH7UIa5upr5X74Hu
TN7S9rA6EWdKRqg9efnWgbfMzC9HXCEUvLGtze2o7VDe8nYeDP7pf//3vhN4
K2QdNcTjhnbk/W15K/LNfCQ2WYhsf5Sn76g7XKIpvSPvrcYz0JW16+So0JFL
r+AZtLV9k5x0WWT7Q/D8+rzY/spEJ/WzBgkS6Qad4Jl4dZBxZ/MNLvDMckZp
yVi/NskGeCZ+YO2QU9t8YuCZ+J2dU8J+fQqDZ+IhI35czmGWwjPxNK8e446c
fw/PxEt+WVsP9n0Az8Srf78Jftv2B56J1znW+7+uMoJn4g2pga+e9JOEZ+KN
T32P/ph9E57Ba7+9qR4dAc/gzRK9fksfh2fwtuWek9daw3PENhVVCf50Ru6A
zcQVKrnwTHzt+8Vtp2yr4Jn4me17N+tp74Zn4h7JU6XfX4yHZ+LvxE02aUw6
BM/EE8S8tqnuGAfPxLMdRl673j0HnomXGhdKCRb+gWfiVZZH5/erOwXPxAXb
AyQXPtsDz8TrO2u0hPZfAc/EGy57Fm/p7AbPxBvXPRh/oegCPIMHXXe9dzIV
nsErXc7LrUyD5wRbC8ZRIM1sHKZ0vO8yU3gmfmb6MJ2DC7vAM/G73Qx7uey4
As/E30zvle1leBmeiUfmfLNZUlwGz8RTtcp89/VZAs/E88al/+weawDPxEuf
uf7qv3EBPBOvLOqfK3jPwDPxmkUXvjXfbIVn4rXp3TOkb2yHZ+L1F59qe36t
gmfiDR6n513IsoNn4o2aDlliQ0fCM7iHxBENzX3wnGaY4+Fg3sJYm1yur2ub
Bc/EXbePP/1QPxCeiXtL1k13HJ4Lz8SDv39dOb/ODJ6Jx92Qaf2i1wjPxNMr
+9ve+HwJnonn579S1b6oCs/ES+v+OJ2Us4Zn4pUO1S2bGBl4Js53v3+vsbcY
PBOv7XRKc7laX3gmXhfZY7eq3Qd4Jl7ftHjipvrd8Ey8IWbqouEvj8Ez8Ubt
tPfffp+A56zKH+PWWnxirhQeXdC0QR+eid+/N8Bk2D0veCb+Nqii27hsZXgm
HpGx2M7jkjY8E0+eqdnnoS8fnolnFv3+llDHXc/EC8er1ydd1YRn4mVyh/Py
+lrCM/HKXSpliQpZ8EycP+Ne/YuidfBMXLDv/dwJ363gmXjdhMb3w6+YwDPx
+t2den+bFw3PxBuWqW4MnDkansFrR88Kah4Bz/mWAx6OsSxnbmlMk0g+EAPP
xL2LX/u57tgKz8SDVAZW2maXwDPxmEdTz92awodn4qlio64G7e4Kz8SzD3qp
m/ltgmfiRVNnJrz1LYJn4mXrdI5a2+6HZ+KVBqmjKz+MhWfi1ZVjkvcfSIFn
4gKJLecuRm6GZ+K1LybJeD15Cc/E676t3Xh1yXV4Jl5fuakofPQAeCbe4Oj1
Pnu4NDyXSA5xOhy8m7m/KYD/+HEqPBN/ozB1hsq5DfBMPPzZqawh/rbwTDy+
y+M5ETUm8Ew8ze1JjwJN7nmDeM77zeF1plnwTLy4e5Ng/rzn8Ey87EJK2ZUH
AngmXqn7tVt4XhI8E69+8fLlo9du8Ey85mWfx5GNT+CZeO0SfqP9THd4Jl7n
oLzzqKs/PBOvt3vzuHXZbHgm3jBfdWSly1Z4LlvyyHBNcAXzdHTEWnXpafBM
3L/qypd3DUPhmXikTSd7b0cBPBNP6jKQ/+JFLTwTT29tqOCpnoZn4rlFJUaL
vHrAM/HiD7qHrsqFwTPxMt9PC3P1xsMz8Urt47K+ZkvhmXi1rWKedYUlPBOv
2avkYDkyHJ6JC1p7lMv3mwzPxOvUCiLMvYLgmXj97OobvwZ+h2fwn7Y7equ8
hucKF+WBqiHGjM+1N+KfNryGZ+LB1i59JKZ6wDPxmPEP908MY+CZ+EffCoea
HorwTDxTOfR+92vf4Zl4XvbdYSO0t8Mz8ZI5YgpaXXrAM/GyYg2JfQJjeCZe
uUii83jXKHgmXm1qsCFYhXuuI14z73NVicAGnokLQrSPhT46AM/Ea39q8Nde
LYZn4nWf9zw89LIHPBOv99Xa+2ygMzxXFUZljQ7JYt4Ot28aI58Bz8TDDzns
TtBqgGfiH66v8wyMGQPPxFP7PQ/e8DEFnolnLZFraT3nDs/E8980O3rFWMAz
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
ED/tpyzhyzc/I+54afuywKs9XU0mI4/R/SK2u2l8YOYl7J/2k/3EpnjxUQfs
h+67srJxHrv1rvCWtfuphzeBtp7YmtXTwGk//GC3xeFnEnB/dfQ5mLsf2TwQ
4R2zll9ykXvOofsx0f5Kk9ITbC+aP8knxVnU5Yhr+uhcXOcUT2XL9ur7YkPA
afsq04/KuwsrecuZthZxqYc4rjq3SB1+TwHOO52XWu02pZN3NmN72r/gm9KL
jTt44LT/Wm/bIc97TMNxdchLkpXcczJ7vOF2I2wnmE/l8hL9jricaxq/ScDT
V87fLvH8AZc3Wvd0vVEQg+uQ4my45SsxxVkJz5/Y/rdago/Xb2yPvqSR/S+V
oTyerpHZ++Yx9ylO9foi940DmJ28RXGyN1v0NyD+rdtne+r33Av/xHM338tR
jK3iLXczeyO+Kp27/nONbKfOUcf1Rn83S3ffhqsyirh+iNds0vDfcyKTt+K5
X6aEigm3n7Zi5wMze4MjTyb2rLFZ8hR+Olxv/bJ4+t1lL0rYXv4/+2lOT1pb
hu3JW6PV4Pd7xLnndvDROy9+XjgDf5fOe+Oc+7FJaZXYD3xmhs5rjeqEv4vt
r+zOlF0lzdPkiUn/8r2AfnpFsswineGbeVqnxPo1hU/BuoXqrtcGxE+7DU77
V5C/Frlo2gaedrhY79/xH7Gewe1rreLa5CRw2n7jlfwrDuvnsPn8oEg+H8hb
xBPr1lyC+0u5OcvBWCF+CW/xKbHOLYIArHPQ+986h7/vBUvCxSRavxvBs760
hdSFcimeXtv//msV6ctf4C1rvy88uL684vsj1/bmsPeL5/9dF1FVFCjOW17c
9uf01W9cX15+kLPJ2FHsdav1n3yrP6rt15lbN0TO+0mefljbz06jRPJ5nwhw
nK/GX1K7C1/xDEzavts8VBXZ/yRwrr+/u+SU2gicR3ouWlXGv6QU9BHni/hx
pUCD3V/P4rwQvz64e1ryz0j4J/7+k/cso6+p8Nmx/86HT+KV+U+r9m/Jh0/i
NaZ8J0sVT/gkXjchTEw2Nxs+0ZePO9Rw7eJX+ERfPs9m7SvXr/CGPvvBUvGP
WvnwAx6ebXhtnQP80HPgKdNuz5YcHwY/xG8kjjVQX9kEP8Sf397UV6auGdct
8ZD9x/aNlpKEN+Jx6yPyxq3WgreO/XRFeEM/fXWk8UvfPvBGnL9vz7Q5497D
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
LloRM0jdypyJNlFTt1mkCc+FYZ7bO1sZMkmNTPKT9cPguXDqCd9Eq1lMOv9G
xNR47v2rwM2os5OVNJO75tjEzdc3wnNB99kr11l+ZYqlxO1LP+iI1G22sHWb
IngWxu/FVNS2+P1avgqehfHbMdWDf/X4OfsbPAvjN2NqOq2yqHA/CM/C+A0Y
wSOvefZ/TsCzMP65TF2npQEWYx3gWRj/SKZ+6L4vz3ox8Nwev5UkU/+pUC4q
OYSr23RysVZVzWD8RuV41s8rgOfSQJsHo4KjmPfddJbKF6XBc+mBA4mdVN8y
H7aOFPc7OBCeS+VNvlYFP2BSTo85tTznElcfK14qE6/qxGQaFsY9fJLI1cdc
VRc+D7Zh8myGm7kMDeXqY3qTdjuoHmKKs5RDGrdfFqnbFLB1m2Fc3aY9/kSm
ojH29n7n2fAsjD+EqfpZVtWrTBKehfH7MPyYLevjVk2FZ2H89xnBqsvRP8R2
cPWx9vhdmdpHGhs8T8Rx9bH2+O2YusCytzd/cL/7wviPMfWuV0aHL4nl6jZL
ZNVGq+kxgVd7O/rGTeTqNp36b+sUosZE3uz1xeLyJHguDxS7VK02lUkYmzJd
cUNXeC7f3/A2PmQ4k1pQkeBzeBI8l08oKHih1pPJuqZw49BoO64+VpQg6RDc
zOTbyK+/1WbN1cdc3k0xV61jShbaeRbcVRap26xk6zYGXN2mPX5NpuLnycTm
Xue5uk17/MpMVemdlHm2BfAsjH8iw79uv0Bl51x4pvgFA0PP3yofBM/C+Psw
tUanNYe5P+fqY/+LP0ScqTMND1KS/8jVx9rj//v+oe106IV5DVe3cX7dKqkW
w4QWGBaUxn7i6jaLPcZXh/gxMeKD3OrWaXB1G4mreglqXkzSg9lK5yfvgefK
d8fNX4S4MukDLt0/cs4Bniv3777jqHaOyX7oW1Bx9ic8V05YG20eYs4UbFk0
OOPCEa4+VqRdv1ZtG1Pi8KEL//RJkbpNMlu3qeLqNu3xhzKV4lXHA3Rec3Wb
9vhfMlVp+w9tGSPD1W3a4/dk+IeGlmqPmQ7PwvhdmJpStd2LVmbBszB+O6Z2
+EGZ+x/fwbMw/r/PJ3Lbnu+0mcLVx9rjN/v7u3n0c9gDL3jmF84P5aszzPtT
h/30Rw2HZ77z9KqE0OnMhwWHzwT/2gTP/MUje79UH8V8/LT37clPDvDMl+ip
7Bjam8mY7L9gr1omPFcH/N5godbK5NzRfV6kPgeeq/fxz68NaWAKJ70MPCF9
AJ6r5bJeqKkVMSU5E0ckRu8Tqdtos3WbMngWxj+bqew9+fqp4q3wLIxfnqn6
YF9U7t0Ez8L4ZRj+Kof757dLwTPFX+O38NfzNZ3huT1+dXFGUH1kYJlxIzwL
4//K1Nb6PV4+VhKehfFXMXXRZQWzrudydZvxKScT1QOYyONSWzrLxsOzoCD0
0cvQx0y8ye/Hpst6wrPAyfujk/oNJrWr+s15GtvhWbDo1k+LUDsmc9KZboO1
C+BZIH5h1Dp1SybX+r793vU5XH0swFJbLXQHU1i0Ve9tojRXH9u3bd8Y9dVM
6RCthc5nF4jUbcLZuk0/rm7THr8PUykTYVuw/BU8C+P/e71HPDt/8QTXvxDG
78zwedOSx1yogmdh/H+f9xzTxfooz4ZnYfxHGUGg53sd1dFcfaw9/j1M7bvu
PgO3fubqY+3xmzB115yVHhRM4eo2e014PswMJnpLyN3kYneubjNeb6dT2Bgm
cf2zGq8P5fBcV6ByzZLpx6RJTClKf9QIz3VOEwPWhYkxWQPqGQmlNfBct2hw
ibr6JyZPp5uldt0DeK4T79JtTGgJU3Sm/7Gih6+4+pj/N4XO6ilMqYG28RfZ
KpG6zdz/1m3a45/IVE7SPXzomRlXt2mPfxhTFVa3+mRYHDwL4+/F8Kc93Za4
QAmeKf4a8/3Z54e9g2dh/F8ZgfOhaOUvS+FZGH8lU3u5Vz+5tYpcfaw9/hym
btN5I4mV2Vzdxq9B3Jl5xsTKW1asSz3H1W3a1325MckqFr3M+xdxdRvZ+BVG
zEUmrfbcZ9MSO3gWro89ymTVyj7Ua+X6yw2OXh5jGVMmXyLo5tQh1+C5Qdc5
rnPYOqZ4iNXxUM/u8NwgduZTDaPLlNp3u6NflS5St3nL1m1cuLpNe/wPmMq5
Rx0mLwnj6jbt8Tv/9fxguarbLK5u0x6/LcMf02/E6ScD4ZnirzEWG7VrRSA8
C+PfwwgOxfbqb3wVnoXxmzC129/Ih3how4NwPZs8+71DlAi/IuTSOvBze0/e
q1j5kYxNycHFLuZcvUtYz3nEOA5a9/iI/mJ4E9Zn5jBP/vd9hH9PcGFd6BYT
tKXRe8WfYPg8uzxu5VIdNcbP7npEUP4teGvnS+Yx9VZ9JuybOAze2vcvP4Jp
2P/7ssrgMHhrj3OiDdN4yf7N2Wdh8NZ+XM7f2e8m/Dtyl/cs98H1887E+41D
8nDmmHSrtoreBPgRrmfbwH5P4S7CHVmehOMS1iuWMbkKMzLuXkgRqS8tY+tL
tdheWG/5xuSPnFt6+HoLPAj3c5WpTG/uetm/GfdFu59Fq9Sc27+z2In4hR4W
qhesD3kWFT8TcXb4bsKlHOex/XiT0hi/6/PzIhdsBm+vX30cyQSJD6qWDtWF
f2H9Kp1dtzke/oXe/uY/jSgL41GdcV8L49z/v/sj4t0jLXBh/bAX09girqc0
hHuOFdaFvjHuv698LXz9CvEL60gD2e8jbonw6Sz3x/UmjHMtEzvAZ3s3HleP
FdbrEpmkJee+K2ztCy6sOzkyKR8t+ni2vAMX1rteMWmvQ1J77H6C80XrtXJ+
LJ89p+sVeBDG38zUelmdD81dif0I6zNWTEb3bbvM8veAC+tCiUzmmuP6ZxJv
Yv/Cus0sJv/Q3G9aJTtF1mXNYut1s7C9sO5UzxSEjOIrzdyM60SYr1Yw0R9s
Hh5fowD/Qq7P1M1p3XRSdSI45du6EWJ/3pau4jitpx1iZCrXJIX90/yo7MDP
itfMT+D6oevtaeu4LtNf++F8dfxuYj48EP8YddUr7Is7OK3vSt/7/LDW/sk4
XuL5S84djT3HvY/T3408M3/ts56ct47fIxwS4fkst8Z9R9vz2/z054fNBhfm
vTyGf0lVLzdgBs471gmf4N1o9ssRyTP03ZYvtm/fj0s10zin/NAmqZHgwvtC
j2k47uG66nwz4uz4/UKOCA9geT7ipO2rDDecmTlADVx4X89hqtTmqM7tZY7z
RXGes3d58VX9KnwSf/Un+qS40xlsL6zP1zMPtWxUosaeRjwd53eNwfmi/SQ3
3i/cbWsKLjxeAyb9vF9m+PxkcKGfPCYlQlbKLX4E4sd61+/vUpq0B8Fbx/Wr
XJ2K/m69/9b+8W7c70L79n+fM2kdbMd+RDrbj7gs4nkO6zkDcZLn7Bkys05f
2wfe3i/g92FyXBWO7xYXBxf2BQKYbLd3DlqrT4K31////t3MCbGnN5/i/Ajz
6hwmyzNvceKNV/Ag7BcYMFXNvfQnt9WCC/P5O6bq9ErH2kU74KH999fVi12f
39iRX89j+QdwOi6BoZT3yntFIvl/Lpv/54F3XLc/HM8nwueHO3/zxyyzNzKG
4ML7aCfTWHNi6/6ZXJ1Q+Hc12XX4yiL8GcunYD+4v1o2Wt39aIDtO67PV+t4
fc7/xF6fmzrmAWfKA5vgn/aTYRkyX3J5Iv6u8Hdt39/jat1VFRoLLvT/hWm0
mZ+gM6ULuPC8/31OVDtqVxNRDI518psnf+ulrwmO+OObpZrdufWEwvM+lGl8
PbBbv8s98F2w8D4aql4R+XlrzOsIfB9B/MTxV+YH/sZJ3wuznFH0vLtxlCz3
XTbxvUaCklff1+F7W+KNDRYjTHlz8b0tePPpxHnZEohH+Dvryxisz3oxbvQt
xEN8dNYOt+fDBiMe4scaskYuq56JeIi7xWdOkPcOxPdWxN9etzf88qIU31UR
j61QufN45UJ8L0a83mqzaUBqK46LeOOJX7pjpg/GcYEnvJ5lIduM71DA6yT1
JriG4HiF/a8NzBHZtt9nSs7ieImvnDZQQkNxAI6XuOucXfNqi4bjeIm/eDxW
ac2J4The4u8H571dkl6O4yX+MSD3w/sjifgeinjulI+f7oZzc6WIl145wIxb
+QjfuxGvGnzT/eYBS3y/Q7zGV2aeP88WPonXaZZ0eis3Et99EK+v23HK/rc9
PBNvqGrQf5LLzXkg3nggvVWl2AOewQPf3R3awxmehX0xG+bq8dcPiw7Pg2fi
B5UNV81zOgjPxB+evSgzbedSeCYe0P+U6+HR1vBMPCbAbv4oV25+F/E0l993
z4rtgWfieW0RNx8/0YZn4qWJupofIk3gmXilf8tuL7Gp8Eyc/9013jy9DZ6J
1+7W7PnaNAieiddPWJe7L3Q1PBNv0Ns+43vpb3gm3ti5+FrvrXrwDH7Y9M7t
ez/hWdj/Ws3c9h//y2jxHngmfna/YKalkww8E/exbVtRO9QPnomHD7cyLp3G
eSaeoL94m5JzLTwTz/CM87nUxxmeiRes1tqQm8jNOyJeJnGh93z1efBMvPLM
o0O71r6HZ+J8Swm1Qc1j4Zm4IHGI+/uxs+GZeJ1daY/99qXwTLw+8tMoq3gz
eCbecNPxy/XwXHgm3ji+T2Kb2zB4pj7Xw0aVWU0OjvBM3FF26NrUUYnwTNzP
yOekdfYGeCYeGSfZtfjtXngm/lHOxulmyyd4Jp61sDJ21oZUeCZeuEN1vPaa
WngmXjZzV0TECyV4Jl65pVRR35X73pM4f+SpbcUL58AzcYHhrkQe/ys8E6/r
fmJ12MCZ8Iw+oN6a++va5sEz8YZZ0eEqL4zhGTxTPEciSgaehf24NuZFn1jv
/sfiReakmbJz0tbDP23vljHI+m5SkMi8NVN23loyzgttH9TqtMFYKlJk3pop
O2/tPM4XbR87YHh+m4a5yBw2U3YO2wacR9o+dea1MOa8sch8NlN2Plsozi9t
n337eHLIpUaRuW2m7Ny2TJx32r5IJ/HqeS1LkXlupv+Z50bbl22ca3siYZTI
nDfT/8x5o+0r9V2MSydZisx/M/3P/DfavrrIwP762hqRuXCm/5kLR9vX/Gzq
/uVDrci8ONP/zIuj7Ws9xX+MG1YvMkfO9D9z5Gj7uurv4pd880Xmy5n+Z74c
bV+fmzika+Uvkblzpv+ZO0fbN9gdMbOqVReZR2eKeXSYO8f2Yf2XRQTajxHj
5tSx/IlO6eTJ27l5R8Qj5QfMGjbYmptHx/JEL3nFV8pzuHl0LE9POz9xZshj
bh4dy3ODFB61Fj3g5tGxvNjn5Jltu7h5ocTLfPasfvlrJDePjuWV2gmlynmt
3Dw6lldfGms+Vl2Vm0fH8hqL5RkbAwq5eXQsr+1affbtSm6eM/E6He2fyhr/
Zx4dy+sXiA/7VTiCm0fH8gaxkNbucnxu7lx7v1KdCVo9wPbTiBBuTh3LX25S
GzpngDQ3j47l0dbNP+IPT+Tm0bH8Y/dP1bcOj+Lm0bE8gx//ZrVKDjePjuV5
N/c+3XmvDzePjuUl47rre+3ayM2jY3lZRmP/+IV9uHl0LK/U3ZjU/dJ2bh4d
y6sPXFTz3vaSm0fH8hrtiNTzlo7cPDqWC5KsXG6Kl3Dz6Fhe101QVOLiys2j
Y3l9px6bDT/EcPPoiEdneUcWD+fmzrX3JR8zYcxU7w010dycOpa//jC0eW8h
N2eYeKy338uoLZe4eXQsT7kz4cCgr3+4eXQsz6wYlV/2pISbR8fy/E1rxx9S
TuHm0bG8ZPsvy53HuHlHxMt+uqcsGD+Um0fH8kq9MP0N1x24eXQsrzaeMPuz
sTw3j47lNWNWGhqWcdczcYGbz9bZ2XbcPDqW16Z6ViwRD+Xm0bG8Lr4yiB+U
ws2jY3n9tfHJW+efhWdh/7E/8/7MZInKp17wTNy3dNgXwRNneCYeF9hrd8WE
s/BMPPWezLeNk/bDM/GsD1/L1YfEwjPxgkGC12lafHgmXvJQMyXM6QE8Ey8f
ErRk4u96eCZeaTg7q+1Hf3gmXq336IbEzi7wTLxG3MJ9mnkyPBMXHOgZNnrL
IHgmXuuh7CRf+QaeidfdCHIJWKUFz8TrTRixV9oO8CzsM1ozkfrHu9WO5t7H
iQd8c4p7cDYDnoknPCooG+HGvY8TT7scVlHdnArPxLNvxSgG7bOGZ+IFIYrX
Wvd2g2fiJUUl4+YNuQDPxMvnmNl9cxsBz8Qr1+vyNx7lnuuIVy/o1+tW+WR4
Js6v+rI89u97K3kmLliyfnuvdFd4Jl5rcd/xV+IaeCZetzv13Myh3Bx44vWK
b8fwtzTAs7CfWMVE97XsvDiam1tOPKjloqHRaAd4Jp5kVVk+K6I/PBNP3322
nzf/IjwTz1m/SVJ9xgN4Jl64ysl9urUiPBMvlT4VID5zAzwTL19VpP1DRxye
iVduc1046/pceCZePfeBoc6VW/BMnJ+SkzcqIhOeiQumeA/6GG8Oz8RrV0jf
ipvcCM/E6xaeXX5L+SM8E6+Xkjmo0/QYnoX9guVMTPChs38W3IBP4h+nv5sT
dYGbC0o8Y575nN+jesIn8dy+kgtsz1vAJ/HCis+Kz09Mhk/ipVrvHqZJXYFP
4uWHpxb5WM6ET+KV+zJV5/z0hE/i1TOTYg4ah8AncX6oWZHBzDD4JC7oN0d5
dp4MfBKvnZ7zo6ftQvgkXjdKK9airISby0S84suJ2G60rtsedTnh+vkqntZz
v7qmKs3/1uVkzKL+DBYDN5XaUKI08QtP94Ls7WbtQHBX5eo1xkVveIt+5B9u
sbIA93t6/LndrgDekq2OS1qfcPW6j9P0kq++H8PWjb3Ahevt83nLV+Wbnh7h
A153fc0pvSP3eSt6+WWd9usF3tDw7kmhnC5vRZTjgjNLTbl6YNAmRdWIsTz9
Y2YvzlTFcvyTo1361UiegaLuMJuTsh3rh5l/7/ca2fNnB5/meJu16roeNWzf
fypXJ2xfzx/L0673q/n9iQ/ucsNDRnuGOuaxEPepLorbdFCAeSzEo3arXSre
Z8Vbopx/oNWGqxOmv3j8xPmOEubSEBeu8//KzpsSB68ry/eZ7NYVc06INzhP
/hSbyOfpb3WcL5EexNUPdxl/PfqJxzOQMXveaQ/3dxtjXxR+3tkLc2zAaxUe
y2geZ/ukqaiPta/zP9qFpzvVr+rPn4vggUeOdx19SJ23yM0stGWKNni8TqFm
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

   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
XcBk67yxOOPwyat96xobh2VM228Zo8bn1NX01VMyZud1fe14DsiecnIJMHns
sP728LzHmJpzgRvKE+qhuQ7dHDkq+/J4TvajcXDOac6NsQ+xjnEP4+jovD7n
e2z+X9s+RXyLffN5VZ3u4bkmM0+Nge1WHxpXN+WY7RPjgNQD4qjUDTq/CerS
+EhijbW6w92KeoZrIwbKJW5NTaDLMZlnt+6AD+Pm7LW7fQ/z7I4XLB3E5/ho
YqtcQF2rO2bm0eUJ8nZ8Ney/4G7jSq6/PHN/UE+7eqPY8u211t+RvUNXVyRG
h32SWp/4ci7X1dOIqcF9nT5M3jXgMh1Obe0exv9rE3vH7YkRkwuRg33fNQeN
1yNzLSdGfXP1N2MNYlVtI8QMdUh9IR+Sw9jTyb0Yv5rpkMtR7+UVw55dzdC+
U/1FbZB1H9Soru6K7wYcrVsXyN+BL7r6J3E25BjwA3urCo/vOyUeqw/0HRPX
1QTCekwvYU/a1SuOzb6my6NekH1BVz85JvuCDlewvtvL2L8W9WDXxtoP1trP
dnXTT2Qv0KlhciF7gSFvvDJ7isE71A/l6t21Pjo5/+B9aoz2Al0Oe372ql2e
+fHsv4a88cLsBboc/oVrP2XPzzrZR3d5zvHZ73Q4k7zIPqLLrw7LvqmfnTFg
79bhefIl+7XOGOUk9mXd3uElaw+lJgVnHIxlyLGvyp6oGXtwrHoJ94vnYqSa
rHzvuOzX+sV5jz1aVwc7IjlRl+u+OPu1bjw/L/vHbr2Qj4Oj3XU8PPu1bq9x
QvaJaglFfcsaJme5Ivus5jOZZ7VPglcV5lbVFZwXz6r2TNTfYs2x77eOswZV
vYFnFPsY+ydx/tJJjUqDhxW5nn2hdVNOJ2dS37NHsQ92XvYx9BBNLkHcVHNN
/9PnVnVVanFhzar9IvW4yDfvy9gp8LmqLmLfBKbUu7KWm9dNLqNm37IeBM9W
s1NXUV8pvLuap2pHZ2TP3u1FGJ/ayLAHuTz71qEjL8nes5MP9oBqIMPe5LPZ
z3ax9O3ZP3awQ05u39rJ1QKmqEt0tVx4u3pLV9M7LfvQrt5LbKm9qN8Yq5WY
6ffkONVY4pO5Hmo78r7JScQu6/gp2ft3tcE3ZZ87eK5aeqg9PSLXPaiJamFq
YmF/J39UUyLX1V2Kvb3zxUfq7UEtCvcB1EXUbsglNfNwL8P643u8n7xSAw8x
Re5jvy9OyQft08VEcluNPdR97S/EDE7VHoFYVMMcchbiJqhHgzm7vxBiqzxR
rJCj2Mu4Poytw/fdPxrWN5/jnMDO7r6P+jrj6fbv1iP7bXVy1tm+vtuLb5S1
e1yXtXeRo+M/94yG9cr+2v6XufRXl7l/NHifGvrslR2PfYqcX75i/6KPrVH2
LM4DbO2nJCYPn2v8MvfBOnd7GXUksFsNzzisxMXAr+6JqKd1exZ1IWpFV9uk
ZxtgUAenC2Mc7jG570ZtH+R/d99NDR5M6eYp4x74u5+RGDLAi26NsA5zX7e+
4NPh7+1xrs5+Kt6fPZW6YicW3Feyh+7mqXxZ/f/0jLeqJq8+L6dQv7Bv4r6p
QblHRe1RS+zyP+rxAH+7ePKa9ZnGPDxgUCe63ACeOsDcbi8sfoLF/cOJYxMD
1Y3B0CE3ACfcKxxyDbV99R9qQ7e/Vmdjzl2tVe1LPkTuFnjhkD+IdTxvuCfi
Phe1YLDm3f0vavkAZ7u9OWs5qGddLCLmhnt27mFR+wex1sVAuMuQb4hRb8C2
HjAfdeEZk9cmpg3mMPc4wLPB+4Nxud+p/0O9/vhcl7D/Py7XK9TuT8x1DzUF
4mAw7jgrsXKcPNNpatpDXdp9K+rKUKdT594pOVKXY5APQ82O36ib6efg/2p6
+nPuN92c+s7ch4ITuS8UxJD6uLEa3KueqW/DuHh+xmFwTd3SWA21kmMyJoP3
qBO6jsG43TPW/2EM7bPmi/tu9uhqeZ9LnUVuFtenHiGHia+kZiFXietSy5Dz
dPdoiNchDn45tQx5Tlyb2of8rd+cdWqwZv1bZda4Qfx19+mofUMeIDeR1zHn
+EzWsAGH6vYU70k/xzWp+8gnw30YMU9eenXqL/LY+EJqPXK/cJ/TnOb33b1C
1m+oBatl3Iht7XHP01yW97rXql5u/XDPx1ym/gZzbXI8uGAQC+5nm+PDXupr
6/3unbvuxFGoNxEfQ91WvUn/EEfuiXQwcJGDuRfuvMwlufzXc5wDPuSe11D7
Uqu4Lsc51Azdi3s3v2Wt3I8ZxG+4Z3Na5kWAB+rJ5nIQ7+rV5nuAV2rL4ka4
l+9aE+PhXv4bM3fCvZbXZ66Fey2vy1yOU8v8nmDmFLmlpm3OBvnh3owYG8S9
e/nmVzA+984HMRjuoR6YuD33ball7nm6Tzb3y9zvVreU79uzMAf3n6wpAU64
1y62hNhzaNaFcC92v8T8cA/4oBXbqSfu082YeUz23h3u6n7/3PdXD1cr1Jes
YTBevzkY5FCo2fE39zWCOFbzF6+avbvcSs6jhioXk++pG6iJqlOI1fDQRV5h
D6jm476P++HiPH1K+N2AGE9+h1qnvaT9CJxJfjXEYTVYny0fdq3ltvJhdVp1
CNdw18QuNYSuP8HZAYcb9v/kw3Ae6tXyWfsW+Zc9RM/4lY+pg3X7IvjkMD7g
kupbi/Ph/QVcHMYTuFr5nfs+9myzd3P93MfnN8NY26NM7XrqZn4zQP0YxFN3
Tamdg17NflMtbYFTdL8NgAsO90X8rVqQOEGtVZNQ0+tqGvpAzejM9P+A16rL
T31eXJCjyinAJHX/qf+Tz+oe9uH63/2tuc8F3qjbVLkMPEktQg1B/cJ+cH4n
sl/qM2rlXU5lPXWvwB7hkOy7u/GHv9XzFnucfbKH7Pb0fl9zRNr2+7OXVBtV
o7Z/Uh9Wn1FLJKbUOac+5zcbamZ3Jx+busGx+a5uvIGDg9zrrKd8frgn+7LU
KXxOqJWfs2LaB5Pfz7pzdvL7WWvUoM9d8Vnd+cJ1jewX3pb4E2rNF2c8xEXZ
bxgDcUHye98bF2cPYI0LNeuLMgZCXfu8xPOw57g+sSsuy95j4pXfjMh/7Hn9
HsM9FvfA/DboQ2vdYR7uwc/rjN29+VkX/Mbo/KwdoT5+wRo/l2R/YsyHGvfV
6atQ+1ZrZG7d71LekZjc/WbmnYnDTc1z68zfrj75rsRqeeHkh/QoXU390nyO
GqBYstD/ylfnvgz1RK1SXFnsTdzXFk/kNJ/POFrsi/1O5vTE6u43Nm9J/Ol+
V/PWFSeZn99GmOPd3u3UFZ/9RuqyzPHwG6/LEyvUKKaWy5y7vPrNK465N3BF
5l0wbr/9kkeFujxYOXn42Rlvg3hZxMfdMi8Wv2+4JfuUxe97vpu9xmLvenP2
Ags80u9p7CkWv/u5LXuKsIe0jtE3LX4/RF23r1nIJ7/dsXdYtspY9/uEZYvM
c7+9WfCTGq4aVzAP91XlzH6fMPGH+SzbJBb7rVe49+OaUAeWbRMT/b4r/FZI
fuc+Pj7yuyv55PK4XG918kUdhXWbvZXfgpBrajiL3yLA2+zXFnWXm8rs0Rb7
VXmEe9D2w3JX8nIxb+UF4rzfLlG35N6L+4HyiF3/H9Epsk4=
         "]], 
        Polygon3DBox[CompressedData["
1:eJw1mgn4t1VRhs8y56e4JCCLJhCbiIggmGEKBaighqZiiaAiprkHhGmYClYI
aOSSxKaAuBVCoGwBoiyiCEiC5FqJ7IiSZmBBgPd95u26vt/3f8+7nmXmmWee
OS/Z/zWb/EkppfHvP/kbpfSX8/eRtH+zlLEn7UNpP4P2H9B+I7+/KaVey7m/
5NoVtE+kfTvt42nfwO8Qjn+b+1/KtTfw+xDX/5Vz7+Pa1bQ34fgfOHcPx//D
uVton8T9p9L+Kb9H0z6C69/m+Mdc/3Pa23P9hbT/mN8HuXY95w7j2lW0t+D4
DM49wPH9nHsH7e24/wW0X8dvbdqMof4Lx3fwezztf6LNveP/+D2B9pm0H+TY
d/w67eNo38bxz5mSZ9LeivY7aTM342iOf8C5o/jWt2g/luNjOXcrxz/j/vM5
Xo9rG9N+Eb/357ftQ/8qbc6Xz3Lubo5/ye9vOeY95a+5fiW/93D8dPrP3I/X
83sM7WO4h3karNHYlPY/0vbZ/+VHP+p1nPsrnv06v5s5Zk0a94yf0L6G9pG0
/462Y/p4js0x9h/S3pzj0znnXNxH/zlXX8k1v/8S/r6b67vx/ItpX8rvN2h/
hnv+m2PX8NUcs7ZlB57lfLBu9dm06V9clGtQGWPZOdemY0NlM963C9f25Z5P
0ObbjevjlfmOqj0+J9/dD8j5b7vTfg2/J9I+lza2uuKwH8h/T6L9XK79EW3s
rTyftmt/QI7RsbZP0r6T3368//Cc475/PlOPTBv3XZ35qBvRZj07/ezYTPko
z2Nj49P8DuL6eZzDtjt227HRgk00bGjQ9/7vaQ/tlLTf5v30t7CW/cQcQz0i
fcSxxcUcY8ON/qz4G8/Kvjmnjn+8lmNsqGCH/U9pv4U23y2sRz8ix1CYk7Zb
js17yta0n5fP6jMVnym7pC8N1qBeSPuttPHDznoV5qydsPgH/ax/z7nd0xa7
a8fcNuZpgBX98HxX24f2m2nr27y/4f8DHBjYWf0e5z7ANXBi0NfqHPL+/iPa
H6b9nbRJbXMwt/X7tMGVjh2Pj9D+Lm3G3L/J77059vaHXHtTjrnsSvsVORdi
UmW+y/MSq+xTZZ7Li7KvnX6Wtbj/t7gGhnXGUTakvRPtV+Q763FpM35LzKrH
5JjFsqEtnMw5fU+f3SD9q4pVv+Ae1rNwru1Im2+F3wbXGvY09qL9Be59FPdx
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
dI7H2o05xxWJPcbsyQ+uzVg+nyeWF/rU903NuW+VObfxfMU9fcuMycZm/a0+
LjFLfJ8+t2me89rqibSfmj4bV2ZMMDaIMWO39OGpD2yQ8biTe5nPy/Emvjtf
NydmhDmh2HFT+kA4Z1tlX9Xw1PJm+8b0ifhq2nQ3v94sbV3MVZua+SV20+F+
xZhpbebY1ATklfJLtYJO3CxiHFgV2h88pN2XPhH4x9T7tsiYFcdkjKlePz1j
z+zvuhlDAvuPnWnfn2tkvhtqs2ruzgc4HnIJY67cD5sJ80s1FvkYuBRqXdqD
eo82x3cK72jqs+SVYd85VvMzXw3n0xqDvgSeBbmu+b+ajdpNqE+r6Vh7Et+x
afM5NU21zYAHF2Om/q1/HpL+Lsc3PsZ707/l8HL5MJf/dHJcuW7A5c3P1GjN
l8N60cczRg8wqatlERebXEP9QS70icwZ5D9h/caaIjhufhcH5f3W2Mw/5RsV
7KtyWfAnzL/UaIxP5s9vSfyzhmY+unLNjTHEgTC+38A1/MSco5+1aFb4ejG2
nZIc3tgz9a2vLv72QHLMAHNW+E5TnwKo49TkkHITc+yppxgbsIli7ezk5Hxy
FXNIa1mdNZvcoyffCutfaqrgl/pMqB+rmRtv5EfWc6wZyu3VD3yfmjTYYn4e
1sPUHNUqjR/EYeOfNUD1iIC3qQdZo1UfitcndqmZTT3nDWXm57Me+v7ENNe/
vT+xLg5N/DenNbcN+dI2yWHlsjOHl0PAucztjfkzf7wgY6ca79TX1aOvyZxD
LdX80lzEmK92q6YpF/CStTw1WmO9NahZL1VPVQ8WO6y3MW/9otSsrB2Ys6hl
WSOxFqkGaO1ETXTqyR9Orq3mqvY69eVbMkcxVxFT5/qKX9snZos/arDWZmY+
e3dqKjOfkvt6zzXJv9QEzFfMwSb/3itzMzUcaxNyFrWdWW+QT8uvjZF35trO
+pYa7t3pCzOfvic1ImshM39bNzU3axlyMLU4OdnM54kVcrUhdlpftB55YeZw
1rbVlM3thlhKnJr1x/Mz57NWrh5gLmiN0lr7rMepQcBTK35iTt6Nb2Itccgc
uZ+XHNBasRqz3HBgh5U8RI2tm7PgxxU/UWPr5nD4ccVv1fi6+Yr1EHMI61Gf
TQ6qdm/NS26qhqQWbY6qtjSsP4mB4FY3HzPXNkczP7Zer7YiRzk1ud9gDDP/
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt2HX8RUURBfDZ2VmwuxUV7O7C7sDEwlbsQOxubMUu7BZMbLG7W0EJFRW7
WzHwO+/9/tjPvXvuvo2ZM2dm397777v7/SMitR9pK2K+UXuD1wF+qOdDIup5
3o/RTmXMp/XPqD1c/zUR4zuwp/jNUbBHwl4HOxz2NJjf1K9gN4QdCLsq7GHa
6zXjlnVTf1lnfkj7oPeTwZ7oqdVzvX9XO5HffkTf+vPD2mG+nxz+JE+tnu39
q9tjxHv0dzVmH+8F+632O+OsXX/2fid7sX7c3Jhnwn4OuxbMGeKysP02Zoh8
EOz9Xu4Be5Vxv4TtBbNWXAXWdnkW7HOwf8Hers9mdQLsgbD3we5u3Cth/4M9
APZe2N1gr4D9F7Y/zH7jrrCXw/4EuyOsbfha+7CXYrf8mmbu8Ptiizqz97bL
D/3uDMZdB+Ys+Vm/+6dvb9scPep2sMf43uPepR0K+xnsmsY92YDL6L9UY/dx
Wt/P4Zt91Uu053j/utZGdZY6sWZ8Xk7rNXq8vdYv9G/g92wRV4bxZfFJWmsc
BzPX/A3sD7DbwNgjbgxj7zof7GLaCVsOzlvC9OMsxt1X//z6n9DsN6+t3/y7
gCe7LesnPw7nCWeYzrhOA2Pb4T1wZ+Lhuq4nvs4zwY4113m0A4xzpsGnYfz8
I+xT3nFl9vwX1G+e40xeTb/5t4fnvcx3Opj4GHgTL4P9wDh2DxybF9IurI8T
8wMa/qyTGv8ET63MnZeAx5abzdHJ//PdvrNvPs7zcVs/tb+WdfOxnt0erT1K
23XHp1pdxPuljD23/eym/1GNX9O6Q9wFW0+cqivA9vTefm+ufM87vk48Wbv4
1vOK3ckmE8fWSWCP99SmOafYW6eAsdvqdkrv/D3wY+DmeoYx4irYZrYfHXBZ
a94W5nfTGtO+lzgr+8gr6q+tn+ddYLiQ7DV+DRNrU5yWtfMdsB/DXgjjq+pY
3hv2YphzTHaZb9beZG5rJk1a9KTYMJ1v8He8wHccLWPzLbCjYbg9fwrDy7wZ
7EWw5lfb9Omwj8PsIVoLxXY5X+Lh+AvMWvN4GM6k8w37jZvAngrDgbw1TCwH
zZt8Uc6UN4U5Qzj/5Mf6PYzvB+7FjWBsOg/W7G+1Zj3Cs8+C7+l34wjj7Gt+
A3ZqmPkH3g36usTXcMbxfN9P79m/t5+yn+S7YZ/RevuPbbx23KYzpTOsaxhH
ZxPXBnsEu85fb3m+4TtOTlxYbFP4m+807ie+sdfEr2KvZP9B+4NOTd8Kl5Ld
xvdhODI75pw52W0cCaOfk09LfsiPwfAzxNOkKfOt2iHWw43Ex8UOJZYHHZv8
PvlqsWv9x3d5a4ib2Bd+EPysMDlk/Fvrs5lr0ckUX+NvxrHtxJ+yh9H6Q7Mm
bVieq3Xvk1oHptiZ5l9n05dnhvfAw8n3C19TfIy/w9pf/LjoStrH+Cusudi5
5lywL2gdR2y4Or7FfbJTitMQNyVW1iX18THPDuPb4r9Fn/JLmjwY7FNzJ+bZ
cLSfDt3q+RLz+UWNvkTHvbhbu+vTrezYoumTlq+L6ztzOk+I1eL/xbf5GU1c
Rudd+WnZV8qtw2+Cn6fz1Dc9r6TtudXG4vfiz7TvgSOj+UNjiz2TjwbNDdjE
1bLXEHfz6hpsXR/mrOMW+m1/c9SX4ebPrhHoZrSW2lt1/PHJPC8cb5c5Cqfz
9nC1SLS2iMnFbkmbhv1H5zd+Xq11ndNpbXRNYp5Fb7LzN32OrknYqVoj5Ytp
jkmjCgeLz4acNC9qLF4u2r/O6V1uyE6oren4tWhuqpdyj20e7ny8OjfidfJL
iNfCx3V5/c638liadx22g8mL2bzxu11OtcOXz2952/xdx+9orJw+2ha0ZzlT
NYdPvd1z773sZ3UOOHzLs+bbLrWjEQdttbk1ejn7wq08eKsZrR3rtzsx07mf
Do7u07x1PfN3TpavozUSF6o537UXjky8LHpSvqX8OOh0GD/VOiX+U2006G+w
4VQ7VduEbYZ6KtqnfFhifO7UG113FA5W2wRPxgE7WNeC/JXf1uw9+KbUfEtu
zm9p4ifYrOxntb/ktBSf8RWY868+Aw1KZwy1YbHXurR+85e9o3lr/FLzZe9b
3IU5SpysrnH6fPgX5qjddux8xNZn7bvF9kVzky3TeiGeqvGuaewhcSq6dlk7
dd0dthrdWr3E7cL3VDun+i30y/jVubHrKWcMsVK4V/iQ99vWg10XLvZYXUeI
zWSnUGtUa3RzjIakc4Z6pOjC6vgRY8lugUeFG0U/U501xE90Hu46+94w+j26
BnowrPcjL+WtYDgYrQFdZ8u5iR+D7of9Tz4tuSHp6KBP0fWP2rf0U7wPOTfY
bZpzqcFSvTFoZrg3THFRtCDV0QMvQy6dzljW3NwJjtzm9c7vZa6kGcMeousd
uaHk2U2+P2qbNzt/lvya9jjkoGDDqeYu9cXmnnDcto7peqacIZ1vOHvQodl5
Zp+dvHv0Ngd1LmpeNhebkxPfqnMKf6XnoPPxavhxO7F1yDaGOpYWP5V8lq2R
zhx8P1s7aVneE+b3IQ4mLpS8kneG0Z9obZQzi/amfQ95NPhqyplF21KuG2wS
bDQP3OHGftuc0LlhtT+stakjj93Wcl3Tlfk3dyqc7rtT36GKpqY21OtBs+Z9
YGq4Ta0qHvou1ney4pdNfYjns/Ng60HXDzgz1FihppjqhrLPzX1RvPTdru94
pd7f5PFjtrVm15xF29Jaw1xhvdl3Dfk0acVgw+hcr+Yp825qUPrRdXTX08Vm
m3qY9nbN3LVzNe/luOGMXVhPvFjuIdl1F+6FXFnivdyxUp05nD/E08T1cgdM
94yBj9H1hXq+3M9S7TTYKNh29j3A+JR3Rtf5fX9tjVGLpLHDb6JrCd+LBqa6
ZuBZqE9ma4JzpXw48C7cW2bHJg6k+Bvye+Do7BjGleTnoQ4Jfpytd+yUatVh
DyFOprqgcDRbC+SdsM/ZOuEMKfcO60XfpcV8qTnTmYe7UYif6Xs5Y9rjkBvC
XXbSo3LGbF2yhxBPs7XS3rNrSvoa1ptdN1g/3ScG3QnxNFsr2860YThXdG6w
XjlP4sOw16ATk1YXTciuU+0rumanYYXLm/sEHZjsMFufuh6i0aP/k+h7A+6V
uVPsDJoUNGZaf8kx2bU73e//LQp/i83SWQffRN+haGu13tP3IZaic73YKPZJ
Nfuwr+i4bn1nixR7g5+i70lioPg08WPwZ6gpJi4W36eYH/YfavtJo4q2JQ4M
dou+L3U90Ptjm+Hc0fVF3/l7D33f6fzKH2uv/wP8Bj+S
         
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jtIllEYB/Dzfq95K80hIR2Sz9S8lIjUIJjpmDo5RKhDfJii5AVC0FUE
HVwkqFXwMjXqqAi6SlBmFyt1FgfXavB3cPjzex6+l3Oec87XN5nLToQQEllC
13WdtPEyhPQFyzjIKg6zmdN8ynn28h0HuCpr6jHucpafuMg//MALbvA/t0LI
u8l9frRvvnTrv/CZ3Akhk9UfsppfeZ9HrOE31vI76/iDD6Re/ZMNPGYjf7GJ
v/mQ5sk84gmdKZyaqcKehdKjP2OnlJstrv2Zd7nHIm76/i/Xec73tEdY4AFn
uCPb6lGusJ/LtH46x3a+pTnSId6zdvzun32f8zY7pESm9KWM7xX7lzKuvsVW
eaN2l+kTdYu6mN4hmDV9rI5ndbbUb4n7SEb0BYxvGu/dnSWv1TfovEmcJ485
pnzFjLJSXRT/K1db9jpy
       "]]}, {Line3DBox[CompressedData["
1:eJwV0ElOAlEQBuAydnsJVyQaZ0U8gJC4UBIHcEBdegC8CysnEk6gbp1wpyLo
wilORI/i5+JL/VX1+nW6y7s7mWpE9FCK6N2ISPYi0kV1SL8uL8nDckXd5yCi
r18dMdu0n2VZf8goN9w545l0Xj5mjFt9nhX5jHFazrknueeLNkdc8Mqv/YB6
TocnHqhzxZv9/90TXPLMNy+ceNeCfUZ+Z5JHapyaD6rXTNF0toB/kHzSJcuH
WZGy/MO0b97Sr8o5eVueY00/Q+MP3wYrOA==
       "]], 
      Line3DBox[{860, 1249, 1466, 859, 1365, 1076, 861, 1171, 1201, 1570, 
       1077, 862, 1346, 1366, 1202, 1078, 863, 1347, 1367, 1079, 864, 1564, 
       1186, 1203, 1080, 1231, 1578, 1232, 1172, 1188, 1217, 1218, 1574, 1216,
        1233, 1173, 1189, 1220, 1221, 1575, 1219, 1182, 1368, 1081, 1239, 
       1183, 1204, 1571, 1082, 865, 1355, 1369, 1083, 1246, 1356, 1370, 1084, 
       866, 1371, 1085, 867, 1372, 1086, 868}], 
      Line3DBox[{870, 1250, 1467, 869, 1251, 1468, 871, 1185, 1373, 1087, 872,
        1349, 1374, 1088, 873, 1375, 1089, 874, 1565, 1187, 1205, 1090, 875, 
       1561, 1174, 1207, 1252, 1560, 876, 1175, 1253, 1562, 877, 1254, 1469, 
       878, 1190, 1376, 1091, 879, 1377, 1092, 880, 1378, 1093, 881, 1379, 
       1094, 882, 1380, 1095, 883}], 
      Line3DBox[{885, 1255, 1470, 884, 1256, 1471, 886, 1257, 1472, 887, 1381,
        1096, 888, 1382, 1097, 889, 1566, 1191, 1206, 1192, 890, 1568, 1193, 
       1208, 1194, 1567, 891, 1258, 1473, 892, 1259, 1474, 893, 1260, 1475, 
       894, 1383, 1098, 895, 1384, 1099, 896, 1385, 1100, 897, 1386, 1101, 
       898}], 
      Line3DBox[{900, 1261, 1476, 899, 1262, 1477, 901, 1263, 1478, 902, 1264,
        1479, 903, 1387, 1102, 904, 1388, 1103, 905, 1389, 1265, 1480, 906, 
       1266, 1481, 907, 1267, 1482, 908, 1268, 1483, 909, 1269, 1484, 910, 
       1390, 1104, 911, 1391, 1105, 912, 1392, 1106, 913}], 
      Line3DBox[{915, 1270, 1485, 914, 1271, 1486, 916, 1272, 1487, 917, 1273,
        1488, 918, 1274, 1489, 919, 1393, 1107, 920, 1394, 1275, 1490, 921, 
       1276, 1491, 922, 1277, 1492, 923, 1278, 1493, 924, 1279, 1494, 925, 
       1280, 1495, 926, 627, 927, 1395, 1108, 928}], 
      Line3DBox[{932, 1396, 1109, 930, 1397, 1110, 934, 1398, 1111, 936, 1399,
        1112, 938, 1400, 1113, 940, 1401, 1114, 942, 1403, 1404, 1115, 944, 
       1405, 1116, 946, 1406, 1117, 948, 1407, 1118, 950, 1408, 1119, 952, 
       1409, 1120, 954, 1410, 1121, 956, 1411, 1122, 958}], 
      Line3DBox[{957, 1509, 1294, 955, 1508, 1293, 953, 1507, 1292, 951, 1506,
        1291, 949, 1505, 1290, 947, 1504, 1289, 945, 1503, 1288, 943, 1502, 
       1287, 1402, 941, 1501, 1286, 939, 1500, 1285, 937, 1499, 1284, 935, 
       1498, 1283, 933, 1497, 1282, 929, 1496, 1281, 931}], 
      Line3DBox[{960, 644, 959, 1412, 1123, 961, 1413, 1124, 962, 1414, 1125, 
       963, 1415, 1126, 964, 1416, 1127, 965, 1417, 1295, 1510, 966, 1418, 
       1128, 967, 1419, 1129, 968, 1420, 1130, 969, 1421, 1131, 970, 1422, 
       1132, 971, 1423, 1133, 972, 1424, 1134, 973}], 
      Line3DBox[{975, 1296, 1511, 974, 1425, 1135, 976, 1426, 1136, 977, 1427,
        1137, 978, 1428, 1138, 979, 1429, 1139, 980, 1430, 1297, 1512, 981, 
       1298, 1513, 982, 1431, 1140, 983, 1432, 1141, 984, 1433, 1142, 985, 
       1434, 1143, 986, 1435, 1144, 987, 1436, 1145, 988}], 
      Line3DBox[{990, 1299, 1514, 989, 1300, 1515, 991, 1437, 1146, 992, 1438,
        1147, 993, 1439, 1148, 994, 1440, 1149, 995, 1441, 1301, 1516, 996, 
       1302, 1517, 997, 1303, 1518, 998, 1442, 1150, 999, 1443, 1151, 1000, 
       1444, 1152, 1001, 1445, 1153, 1002, 1446, 1154, 1003}], 
      Line3DBox[{1005, 1304, 1519, 1004, 1305, 1520, 1006, 1306, 1521, 1007, 
       1447, 1155, 1008, 1448, 1156, 1009, 1449, 1157, 1010, 1450, 1307, 1522,
        1011, 1308, 1523, 1012, 1309, 1524, 1013, 1310, 1525, 1014, 1451, 
       1158, 1015, 1452, 1159, 1016, 1453, 1160, 1017, 1454, 1161, 1018}], 
      Line3DBox[{1020, 1311, 1526, 1019, 1312, 1527, 1021, 1313, 1528, 1022, 
       1314, 1529, 1023, 1455, 1162, 1024, 1456, 1163, 1025, 1457, 1315, 1530,
        1026, 1316, 1531, 1027, 1317, 1532, 1028, 1318, 1533, 1029, 1319, 
       1534, 1030, 1458, 1164, 1031, 1459, 1165, 1032, 1460, 1166, 1033}], 
      Line3DBox[{1035, 1320, 1535, 1034, 1321, 1536, 1036, 1322, 1537, 1037, 
       1323, 1538, 1038, 1324, 1539, 1039, 1461, 1167, 1040, 1462, 1325, 1540,
        1041, 1326, 1541, 1042, 1327, 1542, 1043, 1328, 1543, 1044, 1329, 
       1544, 1045, 1330, 1545, 1046, 1463, 1168, 1047, 1464, 1169, 1048}], 
      Line3DBox[{1062, 1197, 1559, 1351, 1061, 1558, 1342, 1060, 1557, 1341, 
       1059, 1556, 1340, 1058, 1555, 1339, 1057, 1554, 1338, 1056, 1553, 1337,
        1055, 1552, 1336, 1465, 1054, 1551, 1335, 1053, 1550, 1334, 1052, 
       1549, 1333, 1051, 1548, 1332, 1050, 1547, 1331, 1049, 1350, 1546, 1195,
        1196}]}, {
      Line3DBox[{352, 560, 1358, 353, 566, 1365, 371, 1468, 575, 383, 1471, 
       587, 396, 1477, 600, 411, 1486, 615, 426, 1497, 630, 1397, 441, 645, 
       1412, 456, 660, 1425, 471, 1515, 675, 486, 1520, 690, 501, 1527, 705, 
       516, 1536, 720, 531, 1547, 735, 546}], 
      Line3DBox[{354, 768, 561, 1563, 355, 760, 567, 1570, 372, 776, 576, 
       1373, 384, 1472, 588, 397, 1478, 601, 412, 1487, 616, 427, 1498, 631, 
       1398, 442, 646, 1413, 457, 661, 1426, 472, 676, 1437, 487, 1521, 691, 
       502, 1528, 706, 517, 1537, 721, 532, 1548, 736, 547}], 
      Line3DBox[{356, 748, 749, 1359, 769, 761, 762, 1366, 796, 777, 778, 
       1374, 385, 589, 1381, 398, 1479, 602, 413, 1488, 617, 428, 1499, 632, 
       1399, 443, 647, 1414, 458, 662, 1427, 473, 677, 1438, 488, 692, 1447, 
       503, 1529, 707, 518, 1538, 722, 533, 1549, 737, 548}], 
      Line3DBox[{357, 750, 813, 751, 815, 1576, 795, 770, 771, 1367, 373, 577,
        1375, 386, 590, 1382, 399, 603, 1387, 414, 1489, 618, 429, 1500, 633, 
       1400, 444, 648, 1415, 459, 663, 1428, 474, 678, 1439, 489, 693, 1448, 
       504, 708, 1455, 519, 1539, 723, 534, 1550, 738, 549}], 
      Line3DBox[{358, 752, 814, 753, 1360, 800, 779, 1564, 780, 797, 781, 
       1565, 782, 798, 785, 1566, 786, 400, 604, 1388, 415, 619, 1393, 430, 
       1501, 634, 1401, 445, 649, 1416, 460, 664, 1429, 475, 679, 1440, 490, 
       694, 1449, 505, 709, 1456, 520, 724, 1461, 535, 1551, 739, 550}], 
      Line3DBox[{359, 754, 817, 819, 1577, 818, 846, 829, 830, 826, 828, 1578,
        827, 783, 763, 1561, 765, 799, 787, 1568, 789, 401, 605, 1389, 416, 
       620, 1394, 431, 635, 1402, 1403, 446, 650, 1417, 461, 665, 1430, 476, 
       680, 1441, 491, 695, 1450, 506, 710, 1457, 521, 725, 1462, 536, 740, 
       1465, 551}], 
      Line3DBox[{362, 756, 822, 833, 834, 1569, 837, 836, 772, 835, 570, 1368,
        376, 1469, 580, 389, 1474, 593, 404, 1482, 608, 419, 1492, 623, 434, 
       1504, 638, 1406, 449, 653, 1419, 464, 668, 1431, 479, 1518, 683, 494, 
       1524, 698, 509, 1532, 713, 524, 1542, 728, 539, 1554, 743, 554}], 
      Line3DBox[{364, 823, 758, 806, 759, 1361, 843, 840, 841, 1369, 378, 582,
        1377, 391, 595, 1383, 406, 1484, 610, 421, 1494, 625, 436, 1506, 640, 
       1408, 451, 655, 1421, 466, 670, 1433, 481, 685, 1443, 496, 700, 1451, 
       511, 1534, 715, 526, 1544, 730, 541, 1556, 745, 556}], 
      Line3DBox[{365, 847, 838, 842, 839, 1362, 851, 852, 848, 850, 849, 1370,
        379, 583, 1378, 392, 596, 1384, 407, 611, 1390, 422, 1495, 626, 437, 
       1507, 641, 1409, 452, 656, 1422, 467, 671, 1434, 482, 686, 1444, 497, 
       701, 1452, 512, 716, 1458, 527, 1545, 731, 542, 1557, 746, 557}], 
      Line3DBox[{366, 564, 1363, 367, 572, 1371, 380, 584, 1379, 393, 597, 
       1385, 408, 612, 1391, 423, 627, 438, 1508, 642, 1410, 453, 657, 1423, 
       468, 672, 1435, 483, 687, 1445, 498, 702, 1453, 513, 717, 1459, 528, 
       732, 1463, 543, 1558, 747, 558}], 
      Line3DBox[{368, 774, 775, 1364, 369, 573, 1372, 381, 585, 1380, 394, 
       598, 1386, 409, 613, 1392, 424, 628, 1395, 439, 1509, 643, 1411, 454, 
       658, 1424, 469, 673, 1436, 484, 688, 1446, 499, 703, 1454, 514, 718, 
       1460, 529, 733, 1464, 544, 1559, 791, 792, 793}], 
      Line3DBox[{545, 734, 790, 1546, 530, 719, 1535, 515, 704, 1526, 500, 
       689, 1519, 485, 674, 1514, 470, 659, 1511, 455, 644, 440, 1396, 629, 
       1496, 425, 614, 1485, 410, 599, 1476, 395, 586, 1470, 382, 574, 1467, 
       370, 565, 1466, 351, 1357, 559, 767, 794}], 
      Line3DBox[{552, 741, 1552, 537, 726, 1540, 522, 711, 1530, 507, 696, 
       1522, 492, 681, 1516, 477, 666, 1512, 462, 651, 1510, 447, 1404, 636, 
       1502, 432, 621, 1490, 417, 606, 1480, 402, 591, 1567, 788, 387, 578, 
       1560, 764, 374, 568, 1574, 810, 809, 825, 824, 360, 562, 1572, 802, 
       801, 845, 844, 816}], 
      Line3DBox[{553, 742, 1553, 538, 727, 1541, 523, 712, 1531, 508, 697, 
       1523, 493, 682, 1517, 478, 667, 1513, 463, 1418, 652, 448, 1405, 637, 
       1503, 433, 622, 1491, 418, 607, 1481, 403, 592, 1473, 388, 579, 1562, 
       766, 375, 569, 1575, 812, 811, 832, 831, 361, 1579, 563, 804, 803, 755,
        820}], Line3DBox[{555, 744, 1555, 540, 729, 1543, 525, 714, 1533, 510,
        699, 1525, 495, 1442, 684, 480, 1432, 669, 465, 1420, 654, 450, 1407, 
       639, 1505, 435, 624, 1493, 420, 609, 1483, 405, 594, 1475, 390, 1376, 
       581, 784, 377, 1571, 571, 773, 363, 808, 1573, 807, 805, 757, 
       821}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx0eXc8V//7vmSUaKIUJYrSsCJKnkpURmYKkchqEUohe++9994re9323iMj
I3u/TkV2/M77ne/n/dfPP+fxuh/ncZxzP+/7uu/rumT11M9qEhERERMRkV3C
r3stif7+/d8V/fh7tXHdmq+2LraxPT44Hmbi8L94oEyD9GBZk3oQ3aB7aOwB
y/+LJxKfTGMgGgxMrC1qJeW68r/7v3AdkK58dWDwy0+ztdsHhP4XL3KnE0pm
uyVULLx197o8x//iZTHM6zEm+Q9AjK4zzf0qN8J2dh5lhG9Bz3OKyoeiv2BO
alHnylQ3GvrM1RQ7m1FWfpzCkms5CWnuHTEeek2O379OZ3SapezJyTwPCqu4
Mr2df/4I/zznn6vghbt3xZ1EWcqK//nZw/g33kZUZjt44U8Fd2RZT8bOznb5
z3/j2xdvCH5MUooizVcv+xqB//Zb/zf+Z2dFUJO101GnMlhwDI9v9an/G9/w
fVlmR9ncr3TITXDJYmfnp63kv/GZm95lXqJbjR9DX5VtZyeaZZgn/huvoaMu
w4KzLnKEjoDi/ihJMqMVPP7H7eDbWeAZv67kVEIK4SR/MmJPOyNsy8R26mc5
vOSdI5mhwaBlqK2QX0sLYQw9Ba+WqMDRTtjmWkgeTDazgs3T32j6deX5O5fT
wN9hnzRTGCfM7xi+H13mR8O/k1yniTMhVuxAYp8vI8xrn1Z0V9hE302Ij8WE
H4Bc/kP2I0kfoZEBPPZ3xSKMd6hgiMUL4vpp1zIZDqKZo2fnCNyuaJLCKfWG
6B3ws02hdfm+g2ZXxtrFRVTRWBb32duy6WDfdaIjpScQTXrkmoW7VqLpWFf1
dKECMKg6LX7N5RzqexY40Zfvihb9/eTtvS7AI/k/vp+8T6CKsnl3f3NahGWO
7qz+tAOu+UtaMhZOKOb+Eo+92COEbbCXjS0+B8pDQRf7nEmRFcu6dxZ5K563
PIOzJovA7NglSEoUCFaFYh4y2TfxeNa7C3w8IJNu/Ovi8TVIzVIVW6C7jrCl
M0eGMtTAUM7gci15OzQJlUff3+uOsLtHfT9xLYHTjPHY3NhPGLa/euDUY0O0
cMbC+uGNFQhg2Rd3ViYSJk2CTNulH6Pp3EAaKSk5iJKJU/od2wFTI6TMV44W
oymlnjsnYQUSR2gX5LsfwVghlTPdjxE0O20/IaoQDunazK0UblVQmTPCRx8a
hbCgt6YGZcmQsObjHTOgh75WOP5Yf/QcLY4cAmNWcQhPVWg+y/MajSp5PF3n
WUNzwy82m11ug8/+E+rsdU5oVDTuQ40gK5pbnMpMFqcB+/vFvG+s9qNBpubE
9kkxtFCqUsOU9A6MVW7PPbG6i7r2N+mut55DBDfiZtfT2aCZ4lRYFjmAaqq8
Nh7G0SPMMUO9ItMZZBmtfaey5VAufCTXYuFD2Nhzw/4Tn0B268cZyzfskPCk
r4IQvoOw1U8Mn49GgP44F5NTuBxUhscckJHOQVhiE8W+cmWwO/FaQOZZM3Q/
qJ86HOuKCIr7agdkS8HniQNDgNwfGLmTznU82xXNz4VPezETILTR6N52XTWM
mQwMDijpo7lTC3eijmIQw89+13KvH4z2F7JZfX6A5hwPdHhaJEJCCL3Owb6T
MEDRRzx1pAUtcvprnGqpgMSxFM5WKVEoC5MtfxGNv0/xe8Od698hjvdlqGPh
DVSrwiRcvjaFMJOBi6QHHkOELCZK/oUX9Szai2v2myECJY3R4bc04Jei2P8j
6ybqJ1VzWr2ljxYNiMN5lX+Ba+C5wQS/e6j3dkUPrzAHWmw7rZ9YVwJW3ZQL
PgzeqLPP6afl6T+I4Gs0X8PNCkbdilLiFUSoScxl+vB5ZYQJ25NFn1YErUHx
VcFwVVRBkPup9jsBYRkczuVHjUBXZbOQf7AJ8st8rg0S0hA2GBfnpUcJFsbu
uZddTKHR1DFKg40aYQ+tiM1UPcCd2Nt05FIvfKU/ODTMyoAIZF/KVT9vQsAt
i0cCLBMwOH91/LmWN1pwipeC6h2IkBsb5r/kByM3jk59MW/G8y+lRas8DTG3
ydrvkZLBIPu5IYfL42gh5412tkAyxEWKGmqZ+UCXufCgcuVTRDA8rrl3wAbi
XB9ZCloqQJGVB9HEzTcIa05Vi7w1CdEd1w1UTt1A+RUSEYe7NRHWeyK2t4sB
wgo+pOblcKHmquyku7oZCGMjXKyt9wL/g3GnG8VXUCcr4VwGtokIacYHPjSF
g4fMyUPV8pdRp7bOCNfzZ4gQu1VtmV4AdnIpVgtRiaj9LdcbaTsZRFjYKFEU
wsD0q+wFivJDqDGTmu+DBv588ercOV0OeKcbZGnvcgdVH1UK/PWFEmHBvh+8
7BzgA1o4Xlj0Bcqn8tsts64irIAlZZ6pGOyFa+tj42qh9fMj4UKbjwg7liP5
4GUBeF8TuoodF4KeKc3MQ49mEOEwzeQPr3EIcpxT2uE4AgNHKQokqpbQIm+x
qIX2BERSX6BcZtWCAWu2Cd3SN2jxVGd8T/IDiI6ivmH66SV8HT73K1qEDy0O
6Tg4qfyEmIF37/W4naF1PUcoocgVYWQXYw351CAGYey57DSQn7EetqrVjueT
goZAFQmR2y80zR2iUVKU2ZGXp64h7CdPxg2aMgjplu3SVJ9FVWk0w+TiSggL
8VbJndYDvyCN1tkqZtS4nOe1XimAMNFXQZO6m+B5KnLrzRg9amEm/mGsYI8w
1smtq8504MA7H0Qa8xg1gZVlbIkvwgQSxllmPoMlR7mf+/xpVH/dVm7sYS/C
XjWSazNFwvuJZZqzYVGoqpr8t4UhL8LCwv+MoiiwqK1YTzp8F6pfdJAoOzMh
LODk6MWyM+AS2cgsznsJ2slouCOmfiPChrT6C5Ez4Gt4MlxrOgK6Zyry/G8f
QgSBMtaQDjYIblOo8aDVgV41f25+mTtosXaxaseUHSKpHg9qJLbB12qegNMh
Zmhx/Nt+VVtJiOpcEzK35oKuI5diX5LvQwT7Zr0WfSqIfhb6oEKTFBoyd4Zy
0vF9Q266PfsKL0Q5x+o9lRSH3IB96efuzCFs6M/h7MxuiLjooVBW8RUFNQLN
E+0ehK2HHDghBRBMXXfu1fVqVPy19CSr43m8/ssKH7IIgO+g58hr6Xeo2rRY
hMZvFWG+OfGrbI/xPD9u+kVljepk+QrKHlxB2PsBvi+dTOB43oDhkH0aqpNi
2OvJzYmwDwaZmZleYBXx8knloR1Uo3OPI1INz6erVHbWwD74dCLzyyibHqo0
XBf+Q8OPsOS7k1+su8D2lmRjfV8j1HoLxtO2EiPMgm/idcQWeIzPxAk+NYD2
Uxhd/pHHiLDKr/MsnBL8ifwrbIpboCthI/n980JEMKDW1BdZhBA91cZ6fyno
3rlNtHH/ASJcf7+S8LoXIkJ5V55v0UBXu6d0wp0CRNBVP8SWZwBRxCS2BtyH
oV3Et0sofQsRCGc/HrOzhKhzEtk31fdDzUYne1lJHMKsEi/6UlVB5LWhxRpq
TfiytqcteqMNny8LLD035iF0Zk9qj913ZNPKV6Vvs43vP0qsVtvBEOjaL/K+
SAvlHD/X7+z0EmETz54dcqkA34OXHsXE6COobd1vFZ+FMDj0/ag+J3jUaL1J
ZexAleMrwU7nHyIsTiKzMOgJvi81S3RMcqGq0PfFNgbLCAvP0B17OgnWFukO
L1YCUGXBc8PbDUcRluCTeDmODUwfmfuEs1eg8q/uOieu0OD4ECmxaLYAjge2
tn76nIe6uiD2QqqLCNNvb/tQNg9eYeda7GtFoC2KdmAr9iTCiHKvarE8gwCq
ZBPeN6rQ+TTY46KZFSLE6Wfe+qkMIXFLt58GO0LnklJaTgyOq27W1Yaj4RA+
XalqurwOHcZqOl8MFRGh5ry+TtxziLx18QmRZzI0y58N3kNbgDCOSOsMdx6I
PPmTOJ/oDVQJzTBVe9nh35XVLty0BeFCT69QlRlAdsR9c2FMGmFTefdM145B
CNVkKdtGAtyh75AW4byEsD/M4eT1nyDgehqTvD85SnuxpE5Ngu+fP56TzYvo
gc9dr7r3IodRIfFo4lpaJo4/iot7D06BB8MXJhcnJlS2zKOlp12OsMqfymgp
BRzd9U71uhxC5ZGaeZqXfiOsiEhd3N8RrHec9Ru7vqNyNQqR16XpCCuRn+AL
lQOz76vrz8tnUNkL4QqeUXwPqRkMizfXAJeHzCeNw3agXtqlfm+EN8Je0kWs
fcsC75lLlzle3YXWuFcvfEbxcz8sUbnoQQkBpVuRxHfioOOM4uWuNQ9E6Do+
9DxhBUKCMrYSTH5DB7fChXUiZkRos2rqmFaBcHoPt7sUydDGrJd1eZQOx1sh
btnCcxBx2PkT0e0uaKCUstgY6USYSk1Z9I1ACH/HzNKXIQUVFw3dzpTj+0/2
cyYeXRcINQyd9XsvBVmWUHnaRAdhs0lHiqnYIciSifWWuhNYSK0+l1RjxvPM
JztwUh2fd2r3qq3pUZxz35eRlTsIW+md/1o/B972SE44mQJ9WXrFYsHejbDJ
UrMwpofg/uyetqNJIyqMGO/aenAAYT1Lg4LrdeCoeUuVzf8XKhH3v8H6ch5h
LXwbfX3KYIO++WC8Iqgk8hy3yVdVHJfu1NN85obPM483Y8uvomKpZMMnJWwI
6yDn5pnuA/dDViXfHOSgXjtVS1wQn5s6nTpU3JrgM81AtK3JBC2fWn6eMK5E
GJPgUA65BQReoiFZDn4FbT/1PnTevILjtuEgk8wBCFHvkkygSYE2nVO3maiC
EEbsTn+w5QWEiVUEnDiYAc376e4z/HyHMJ54aNAngbC6hFoa802o1ad+dGQ/
jgOfo42TXM9B6KyPCbGpIMCB/SbKsyoIK7/dEDDBDcELg929m56Q6dPRZyPc
jLD51QZzKjIIvCxNx+b+CJzaHEkTqQ3wPB/eyDhoBn77mVxs3T6giIcy34/V
4Hi4ob8cNnMQvL6ef0G3pwJlkoW/dRGoQhghY1GV6hC4BdpFCn9CKFfXWrHR
3g/HJb2Mwo5ecKTvvHvjDSUqEGZNTfHZi7AB98sUP7zB5pF4SucLXlR49swi
nTyOG31HBl3pOcDc595AwTsVVGCuyClch+PMAIfY/WM+4Mnu9F7Szh/qufxC
9z/F5+8rwcr1x0rgm0gok8V5WPNNqYJ3FXi/XHMNX9j7DQK1um9fJ1eHlr57
1Fl9eJ+e6pBUURaGkCOqDauX/0BzT9q7+j/v8T3KgvjTOg2Emiw0CfGUQ8OH
z2GtxrMIU6QwTbqbAaGhtXvaNWqhWp6NyZjTBJ9HDRe+Ce+BEO9fxLTHaqFE
o9g+C/C+bjR989uMB4JCmGa6xq9ChtWvQnMBKoQtzki0jZtDAOmRuRIPefC0
Vrkjti2E4/PQcxk1G/A9a8t0gjEK+T9byOR9kIvH3y/crI8GL26+95XUd1HS
bFRQgDi+3y4/uVIkIAiunTbsvTJ3Ufae3LJNowsIm5u02bvvAjiU//iZfY0d
5WAa85b80TjOE98UJFcFG4mXLySsclDe2Z4Y/2J8/n5fsaUrMQDz9TMhpVMa
KPePl+qvffj7jJpdGRBrBq/z8+WE+iWoa4xZP+yM80r9Y53VP0TA70ad8nN9
W2jcchWZMbqP7z+HMh/60kOguWzs2EYTNGFBOzJ+EQjjYzhRn3AXgjO0LpIP
x0BjGLe3yb4ShImduf9aYARCsvo1OEXboU7qT70bJwXCDH88+r5kCSGu6ZPj
F92h0neNxZgR7/d4voy8B0IQ/OKEnoS2LxRx1teae+JzvPPuWw9lKgg0zHbk
/vAb0k+TlIRfPoIw7FPM258K4E/sUjCxJxvHXbG95668wPOZeJUqYx/4yGLM
hpqZyD14Kv6WBc5n/0TKswTEgmeYe+SBMyEojkR/1UJ0FGFrJHurGMTB9agx
1tIBKP151nJbeCmO503X+FNowUGFmnd1ihll02n69dkX4flflXUzyQEbjo5F
zaC76IttzQ3FgxIIm25inqo1BYsrhz+P7u1AXyrvuD4/huPetNyF9gIMvH55
yhNxzUKdCA/DJJ0tvrdciwsx2gd+cd33xxOuQ0M1fXx7ujHCFN5x32i8D4Gm
/vVHzwRDI39rQbQOvhdJtXdEjitBsHCB776YKqhPFzv1VAXHPQ174+KCDAj+
SZ9WR+cDNSbyFB6XSXF+ul5wC++7YN8H1H945KHi9N5sUfl8hH2JftWbqARB
CkRqpi/5oUDJf4+cIgnej3Ilmu28EPBW4ZiNXDWkfnvx+m58BZ6HbjNbb3Pw
o+c+mNaxBX4CYZ7PiA/jeba4xH/lMXgHVtR1TasgGxdj5Q+jZgjbFg2rdyOA
5zH57ycuyaKovdnjWzYEHE+MmVipRcFF8akpt34cSmoZJePVPITX+beYi4cz
wf7XmbZB1iqUYVbjd+QMvs9gG07bTKNgQxYtcjX3PcqS1mcWy/6MsIXxByxO
1mBx69QMEZsmyqoUPy7LSY7HyTIc/J6Cd4hux2L7AtSmOcSvTuDv85ncjp/x
Pvj90uqU83oH9cHPjL0N8b1aU77ZPWUFAjUFSl9dK4P6VI1Op1J8n9TYHi/I
FYWgzuGjlvwVULujk6taidf/xwMMPyyKIJg/tDvNsQuqZoNfvl6pR1iQS96Z
/SsQlLU36Ll9P0DlgbK8P1YIKzuzF7uHP1+998TlehXIayArLh/Xxvdk1kTX
J8zgb9tEPSt7CFLyDv5OP3MKYb+IeZOaucFXcuIXeMuAf0JOl8qXT3ie1e+J
NvwArx9ie7dN+5BRMccRZgZWPM8x0ul1E+DBeu4SzRsiFPK5l7lvCOe/W3SK
ORwU4JzQsX0v2gPFrVpMWkXtQdhqFYvCcV6wt+vgHxu4ilLsyOmTMBaELSWZ
MlzTBuuupe0Ei48o/UsVsyKpA37us7L7Xn4DC/ZzqQ+viqJMCksFDkoX/FyS
SWvcAuCBc1ZDfo4SFF5bvjceUIbXD8fbZDYLsJh4GSHx2wamxWtU+VWk0CQ2
QfvZYRs8SzvrjvetAyFWmyar5iPqfKlo6vNAHuJmOKPXClhgMZpdM7liB/Xu
uKb13foOSVvGGessPmh+ZvRIb2IwGmGOMPnkSwueyZW1ZOI+iHD62DNLcyHU
E8y7dCBNGywqQ9MXVp6hmW9b+23vbKGJ878FyA6sgUr4vfcuNAi1ZxLbLPra
IsJEqO7HCE4woC/LDtYSgtbv6jwsAfi8OLjHvYHpLjgXBopErcTA2CdDVumD
m2iOkTyQf+0RpFum7ThEusDovuoY/vexaJ40I8KO4jFklB17RfYhD7U7h2l+
ditBhH6Fu+WxDpCczsh5itEHepj0QyzZ3yLChfizPCW1kJT+k5vE+D36onaV
yuYFjofDF0Yv/LpX2npal06akF92v42DL/w/nblUd39oosGJptLJ+uJcpf/i
ZT+E7vewhZuAxgJ3gNg0yz+6bvN9++MgW/MAe1F3DPJDRnRVrfF9fojG+tFF
ITAb02IIlhWDIeVTCjKnetGC3iVfRalrEDBWu+YbQA0zVZrJqg0GaOI2yaWz
1xUgnacsU1gjAqaW/J/z3qZEU9d/2pZrIMhiqrCRrNlCI9tZr3881EPzUdEZ
SRdSIVr2Sz5GJIkmzOq3LCVH0Iz7qU+Sjrbgdzm5IZXDGU1Kbpxf9/dG08NX
mfnV6svyJN1N9lEyof35OzsmOx//1XuVbAbKZImI9nnnfUBnina26BJV/olv
HbmiBQ7QKyDI8R36ljaaT0QFoEXjEzQ7KkLg9y6Xrcl/A8a0SiTWqIPR3KVR
6zfCbyC6WUnn+RU3mGWaljfW1Ufj1akvvsrdhDifpQ/uA5YwFswXP/R4B80R
xRGL8khBanbrmXfyCAYEqCSEQvLR4tnt8DyuaUjVMj5sMKuGKtrI+rk3cP4S
459Bze4PQYWfxDEvSTT0kqn5ulE7WtAJLt6wqIQ4HtVHoXSR8G0sIzp3xQUt
1GQnn7zKDwniBXQ5ex2gVYOOKTwPx0+qY7Tj25zge9415/uZTnxvb7/G/twJ
Ybq8+c+8YsFbnLHO7GkE1G4Kdku3tSLsk5sXmz+AFQ925+vjyyjzSynZ5VM4
HyfcTub7EQxWrF5W1w7EoIwgP9qUBPzcf5y4jahP///8C/ASHKjWe8ULc6ef
86e+uILGTDbeNhu/gbCaW4Z/ViTQ3KF9yU6iZ9CYa+TdocEG8MiTmNRNIEcz
n7fIigyk0IR/+nGFchFBtxPXOLefsQlWjuAH2Lj51y+IpwfLdj65PHzP7Gl+
o3pulhQRaMZ6JGziwGst+zwDiTCMrdRIGTYyoNnqBZnJU7cgtk+ZQjxPCyaz
NJgeL2qj6c/02VyBMRAoFDvRfJADjXaZvRxV6UFznm+Ma9e6Ic6XpFP1HSV8
JydWMzRgQvPJJNF285cgcbBxFu6xQEeyfIvv3h5EyM8ubXZ2AN9nA/f72Kag
bmi5chnheX6bLu1z8jFY8MtfMAhzRpmj9Us16lfw/W3xV2NNH4SZB+fEhyfB
grZY6pkf/mjoVQpx64PLxZ4laTZGajwlpyx/bA5b/i+fggb0QVe2yVcF1yJ2
dsZ6Kv7NwwBdKvg8j2jsDH8DdTZrU8//0Z0Mj6n0IVuwVJNtIfkjhjJfSITS
0OK8hrD4xEjNHUrZ0iovGM9Cx6/h5hKTLESwSMQ51jHInlxhv2u6ByYZq76/
+sWCpufqjg9ZUEHQfNut5ScKiMDNN7a5fwv10Fmpy0qSQkJH56TC0ydodsNZ
6ndoBRqLJO4nuYzBu1K5sdgf6uj7zIaGTzA9mmdLy8suHAHb1xUUnqeK0LRb
wcDo7T1oMrF+5WC6NGSZcQaQlWxBjZ1sz5dFnK8Zr6/qJqdCRjAhOPPaMHSX
+yflRuC4d21YwKtCGxLNxkJ+uA+i79UK3hqd99E879tG5dN+kKJIKhewMIC6
pw4XDdizIQKX53ET7i14qUa2rCtuCV9zyMUX7LzQ4jxn6D2O/PQzNENm43Fn
00flelMVO/6rW8dXSX0zLx7CIj1Xky/NczTgxVki2smeL8NzIfTR2lYB5VXb
awy+/91v91Q1dPWCFUwz1B1uYkhGU4xUxIUDj+Ex3TP2l2vlgP38RTZV8hCl
rcn4zvKl4numdNC15vdA6I6muLv0B3UcE9zWOvwY4g7pK15UHoIFewNfc8In
NDhm8rlU0hcU8jNS7uto4XsM3U31C69Riu/zM+JqdyC18m3XoNQ8Wmwu4VEp
xlAvxZ80h+/UkPfaN0FcbhV9Xe/9MfAoFS2WXLjE0HCjzIiL/vEP+R9lLQgv
HAGdv33ERgIOaiQ2hk920EKdc1RS5AP0bW1AoSDlvaDDpbHao82Y4Fzdzs5K
uPW/9y83OgNrcZRcfrI9SnwvVhBPE4vz5bhG+fxyyMp4nf+CQQkGWYtFk3Tx
58VP0c1Ld0PClslTYh4qmPrm4zbRtw9NPeGc//zGElJudNGKKz6HMeG0h6zr
/WiO7734xUZxyM5w9y96hfPi0drTpBXtCCu8P93DnAkZ39vvv9VMQwGnDeLO
+nLh9bzXX7r9ZDHbS57O0+XZxXli03PU//ULJGtS5wyiQZi+YC/EdawCTZHG
Z4QZBUKO/WOK/ol41KDxqcic7jTC7sg7frQ9DWHU3+8NtkmihbuKQTGHG9HQ
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
59faTPD5dQg+f8b/Bz5GOnM=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->Small,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{40., 80.}, {0.001, 1}, {0., 1.0000000000011582`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{
  3.425414574265625*^9, {3.425414785359375*^9, 3.425414801390625*^9}, {
   3.42541487309375*^9, 3.425414888421875*^9}, 3.4256782184375*^9, 
   3.426080159515625*^9, 3.426087921984375*^9, 3.426171119875*^9, 
   3.455538891292544*^9, 3.4555416599598207`*^9, 3.455541802806828*^9, 
   3.455541968319704*^9, 3.455557295047461*^9, 3.455557844266279*^9, 
   3.4675857632067003`*^9, 3.472400263229373*^9, 3.473165449269278*^9},
 CellLabel->"Out[79]="]
}, Open  ]],

Cell["\<\
The sensitivity of the delta to shrinking time to maturity and strike price \
is reinforced by the plot of the gamma, which is the second derivative of the \
price, or the first derivative of the delta. \
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{
  3.4555585657340603`*^9, {3.4734290271865788`*^9, 3.473429032463889*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"gammaEuroCall", "[", 
    RowBox[{"s1", ",", "60.", ",", "0.29", ",", "t1", ",", "0.04"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", "40.", ",", "80."}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "0.001", ",", "1."}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.425414921796875*^9, 3.4254149345625*^9}, {
  3.455541970795299*^9, 3.455541979929956*^9}, {3.455557310837311*^9, 
  3.455557315685121*^9}},
 CellLabel->"In[80]:="],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
1PFXi21UOfaduPlIaVN7YyHlU8MlVORo7YTvBfj0P+0TrLFEiOIzrp9s5NQn
SusD9U4Wdkz4nQ0UvrjG5Nt6ikc51rv/sSNu64rOMak6P2H9rTfbP+84u4mK
c17N9Hsf9k/8nZoneDTzbBOReujdElv5LdR1NRbdyBbRQ+Te3JZdbzQ4wVvu
HzvO1ppjFM+afuNay6aJxy/nuNg22Ek4F7v1+kmcos5X0E0xnieHsM8MWC34
qo3ipyU67O9fJyy8D8cMiCpS5xX2q/DQun7CUiSfr3zvL+rvbqnWqgjQJNw2
nTIdU4in1nf8erCog4dwfHvh6J/MI9T6pO8hS7LyiNTTWRdMFK9PyNtuy14Z
s68MnPA9db4uluoitmzC73jpWjbxCn+L//qecseH05Im3memuShIBDROzJPT
FBZ0vjpLFLp7b7/ArzohnsKpupmnY7ZT8UA++bjZfU7tMMW9HKKPKPtNzOfk
9Xb3uFu9Qo8Mxd1ZePa19BOlHVmOsUQ4xcsVj8jy3SVK3admbQ749n+/nif5
vCa9zif53CfzPNn1M+n3/f/RdT5Z3pjs+z6Z/8k+r8m+7/+vPq//+fr8H/PJ
/3rd/q95ddI8M9n3d5L8M2menyRvTJYHJssnk+bnSfLVZHlgH42Je6jADftk
PhUlJb9fupgmbcs099e9ddiPJHele/ipgQ5y8Lkx4/KGQNlymsw9ptnDVU9h
/aqBWBHrL9N6kcP6E2/XNO/YUkfeF13G/qVl/+lfWvAQOax3FDgocPZWGU2e
xjR95C3ef4qa+b9r5DtgTt7/FOF9dc/f++oY5iba/ntMLKM/tfB8l2f3Gt43
XEtTHPvPf6MTnx/H76/ikSdzOPQ6tOykKb8Z+23n0499TY6+aWPuoVXIYX2w
poCzp4E3TcVmbJhlvjSu11z56LBSZD9yPC/HP29Uf9TSVAXHhuzDQ/H+PHiz
dozK7OnIYb2R3rsFeS8+0lTvjg2yCuJzREnK+mkLzYwfIIf1KqoifU/W3qCp
6Yz9dEgSw/XxzL3eHzROI8fP8dejz18UuPF6gPufA+HTht6pzMPPHfiF96t1
53Jy4ucL3HnZFtt4pXz8HLF/5s8TP1vPIvwcgSfM0Yp5ysaLnyPwdOl13+Q1
hPHz+refx4B2YPzzovqO0i8+vZUm/g4/R+CJAl7iS4Ma8fMCHvFSctTdYSp+
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
XH/NmFO4we//ALxVEcE=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
PRjWZIChQU3R8ElD7w+ntl/hGn09GtLgxK5HQGcaXNn1+OjP6sesOXhWQ+vG
I4tvmn6HeRrMW7Muf9Q2l3fXfA5yqcG/w/7WPZVv9iLynBqf3kMP0qi9B/M7
mM9m7wFeHvZg4OKB3xhgsNknYE6Hz7bWZ76Ga+az4MJhzwzfNMjbwdo26urB
Og1qsUb9NdDCIVbfwFmfrpbBWUOfjjY21mbowcFNo44d1h8WV/YS4MIJrhua
Ng4sPm54oUGuTIsz6p1BTk4xYv/goNL/Zt0JTia4adSx40nEYpBcH+B9nFSc
2e3NsQ72T7o9O/S54Z26/gs+adR9nW9Ncfvh8hHjuOKojn5O1/01ba3v5BBx
Jb7iuo1/rGvxuM1eDl5xiFX8W9cDovENLzvg4gGPNXhxgOmBB2hv5GxN9szi
ZnVq5V7WYaoR794wz/Pi2srLuL24yz7S5JvCup61Dq+/pnhs8j1pj2vn8iz2
7uTXRU20h3ni5jldww+WL9Wf+o0drE2fqb9zjaxT5EvrNvsGz6g6a97QVg9v
vTmtKZ5eddYU53D2Wtu65leVZ57Ow/Hle6e5c0zVR1PMPK/qoylOjq36aFrj
HFd+eNqLRsesXdIa5vzy5NO6yXqdNZ/2MfS75Mx0/vWb1i72f9QO3j3t76kv
vG/K4fuXR3UenU/97WQO7E3pb6d9S/WZMU19hR6BMU17WWo13D7tw+hnnXfn
UP+r/tqrUcMZ37TPdmD5+Wn/7THl26e9Gr2zdZ/eibzveIgpL/FsewvWH85V
/3zVFg08Dj2WfVf0yb5B7FA5vvYKLq0cswYJe1bow9pPuKby3zoldqnn2NMI
9cp+i95CEkcv7W9IM9an9kDCXrp9ErGuh0Fr7UVY9+iFxn6l8yv/+O32/60b
9B/4Gus4+y3THjI5Zs9nWueSr/Ztpt+of5cnT6l7O3wc9lHPamv/ZFrToUn2
gqa1sP7U+h8s22uzXpv20PTdcOc0N9EKez7T3CFv7QVNfJ/9K/tIE59lLWnf
aeLXrBOlm2kekWP2oBZx+dCqKcypKf7B/SKmd9p8MriwtxzwV+xWfBV8X+xe
/BZw+ry7eC/si365cj/A1LTPZr1mzr6jtCTOLi6a9l1Ynzh4y3FzSc57bfmc
ad8P/xfUImkP9NXlhcL9C2smval9ypeX1wo5U19wSel7N79dgz2KewONWfdl
7qp3h7zKtaEnPqKuXeQg9x24NsQquFaL3LuJxxYnB99sH3WtM+Rq+dYak7Wa
8q01I5o33TdBK+Pkjd/Qs5AH1SN0JJiv6T6LXGsPXL1DUwKsT/ULfgnwPb9U
3Bvk97yr+DbI3ane6QP1S+ryy4jlcbzM6tmY06kfsL5Gy/NDpR/Os/so637K
JzYe5lnBWoX4wUcFujr1DNa28MdU061tyeOpplsLsx6p339dechpLxcvFmhP
umfy+s1n2n+2DkMzpvtHri/fsO6FfbF8qr0ox2BdEyYnuh/kcKiV8GF4CF40
Pcjn6R6ZfVf3FNxzsY9q3l5Zei82JrE95wAfU+8BHgMfMN13s6dKzof+Cw8Q
HFNPYq7xjryk9CzIz1CX8UXBkZeXf1rjK8orOLZ8Z3kpn5NvL11cx68HOKOe
k5eVnwh7tReVpoZ/s8d+9pYXF5d2+o3hHs25db29B/cK3Uua+iV4P+zzvq38
xzrmq8v3rHi+qvyTGM4Ly694fbjfxHoEubjuN91W+pz268WPfV/waz3gflZ+
pLyCtUN+vOoN6448t7ym8x/63FPrW/K88p2uRbg/BbbCevKt5QvlhLygvNS6
FtaGzNt8dnmC1RuAoTyzPKU4zzPKR4r/PLu8rDyTZ5UHDXXeep+5de81zy+f
6vpOvS7YD/JnivnjNw3Vn9gPNw+t7dDXsC7VvzhmsJsnlG6pp+btmr/2kfR3
76l7p7+/atPuF5QPU08TznNvadVQeyD2sswTvTzjCOth/dF19XvqK6+o/Er9
9eVbfvE893LMnfQ94t+ep3ub+298zT3uFa1598Lyhep4cr97ReI/9apXVi4n
dY77UvY3kme5Z2bvIq0VLivuylPLR8pF4X6g3OAelrWAcwLvTD2w3Es+T/0m
Y7EeT/2y86m+2rv9aHHgtNZwfsDQ1FefVNdM92TldsY09eQn15pOvbRzyNjT
euUDtY4J5twHkjPTvvL76t60Rnl/jS2taW6odyW85X6ePZyEz9zPsz9jPT6P
hvPtgZBf7hHah0nmwt6cnirsNXNe7KHzd/cjVj0Cf+5LyWNpvQV25P+0Frl+
GzPPcN9r1T7GYX/VHnUyZ+5N2hdKnuUenn2etCa4Z8sXMO7+0+oBTi8fL88n
32Qt4Vok32qNsWKJObCWWDHsHqEa4V6C+/xqBx4/rS2sucF/uifKXKvdiz5V
P4tHWfSa6N/ah3QPFf5W65P1tw7RA6T7c+j9qqfWBa/Y8sW9QPes3Ruz94/P
UHes5d2nX/Pavj6arfaldcO1hZ+0tuB9q36dVjWG2pfMnfua9sTS//8Cz7XX
l/bq7i0eS7Dn3qG9tWQs7sXGS/8fslMn9g==
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtmgnYXVV1hvd4mGVUQVATCUktxYAtQ6sgCCpatWqlolYlDCKpGq0UqBDA
VkVRxIGhiFEosbVArQGrGECMqAQHIIIDWgaR1qGlRVCZpPq+e53n4Sd33XPv
OXuvvda3vvWt+7IVhy98c0qp8N/F/Nv4j9fpPOz/SKk/iP0U7C9g/yalaeK9
G1PK/857e6dUL8B+Oq8/zfXduL4J9pW83ju+43f7kvl+j+f1//OHmZ7DPb7C
6+/xmYXYV3D9Eb7Pxfpr7JOxN3D9Qv6ejH0qn/8tr7nWXom9CPsfsV/H31V8
dh/eW8u1nbGfyuuP894TuZ9beiH/25bPv59rf8Hf72N/gutP4nrG3gL7FVz/
Lq/v5u+PsD/D9aVc3wx7F+xzsR/La3zQ/hN7MfZfcX131vsQ9gexb4n1da6l
f8B+HK8f5fNbYv8z9s/n77PPtB/PY9392/z9AfY/cZ09TRX7adifwl4c/uiP
wX41n7+V1zy7L5qfx30792r4JR3E9WuxvzuOMJ7/Q+wH+PM8n8f1r/Hae7Dn
9Fzsr/L6+/zhs3Qmn+c5/WG+vw32v2D/z3xeS2d7yXz+e2D/Kzbrnjbm81vP
6/3v2G9fgP0e7Gl+vuf7XuyNIp76rtjETeFcJ9bWNpntu2M/fbfZX/h9YjOd
c0x/y3q91y/5/Mbz+f041tv/EPvfsPHbtCnXN5rP/y6ucTb9KL57Ce+x3noa
1zmD9Czeu5prN/PHOaUjsP38PVz/U2x8kE/HPgT7oYj1/Dnsm7DZQ9orcsBc
aL/CJg4yOdC/ic06057Yn8W+gWd+Cfv1kV+dNU/4rx7Oe/izco59K16/hs97
Xj/hvWuwWXPB5501NfacOIOMz/s3+NPfr8U2P3/K9fviXpkY6tdjG/88s7aI
33Y/Nr7Jl3L96/FM11/eHmvpO8T6srF1L9fXYR/N9UsiH9r/YXOmGZ/39Vy/
OvxVOKN+J9f/F5uzzPi8X8f1z8d+itjgnsibxH7zj3htTG0f+8ueN/fu5GY6
DPt2XpMj9RdzvHwzzrv+LPK/iBfspYMj6Ug+7/nz7EYMpH2xwZ0uZhi/4EK+
jdd8t/HMhI8zMdnJgfrF+H4hZjtrqmLZX2K7vx9gXxH+LWIPPq5fiPsV8YZ7
1rWx3nIRNmvO4otrJO7y/jyPvScwJnt/9t23jPtn7t3/i+9fFf4ontcdfF58
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
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt13Xcd0URBfDZ2dnXRlEsTFQUsbsbWwxsbOzEbmwsEBsxscDG7u4usBNR
RBSxO7/z/J4/5nPvzt17d3fmzJlz99l/v90eFBHJfsRWRL3U8LusfU+LmP/m
e4nxtzfT4il8/+Q7zPg7bPA9le9ffK83/hU7E9+LjU/HDjf+KTs133OMrTHv
FzFuzW7HzmG8t6XPac5njP/L/mPs/eX9fIvx8d69l3mf4LsYn/Xzsnzv871z
syOMT2S78B1qvBN7tfGx7DR8hxjv8O4ljJ0nL8/3Ab7d2CON7Xt8nW8fa3zY
vIvw/ZldnO/t5pyNvcz4e2zyHWiePdbDjV/p3S/w3Yjv3XyP4HsV3xf5bsz3
Hr7+lriNj/BdnU8860i+3zLfjpcbi1n9w/gg8z7Ldz3znKFex3cCOyPfi4xP
y/5iLObjo3zXME/O1kX5+v3L8L3XnPOwhxm/wrzP893QvHfx/Z3v2XxiHdfl
O3w79p/mO5n9zvhP5vl+fsj9782Bjfljvr/yPdOcT7FPevZQvj/wPdbYOeNy
xmJef+R7HJ99hFjP5/E5Y36fFd/T+eR5XdL4f2xPJuY7TmHe39w/y7v2E3uZ
J5Ylxmn9PCWf+JQcFH/+hJ2K72Bj3y1nzR8wGItneNe3C47yG74Hn/EEPmeo
1/DBVJ6B7wXGsDl/yLy7zr597sbqLdzfnR/mAo6mc9Yd+dTMbGzs6to1Il9T
PNfpPYOX9WTjAzyHwwlz0znXTdj5PP8Zk8OE7SVfZU8pTus35h3NjmGwM2Fq
2V++wxV2Sl4S3sbbfLe/2TF6PoPhcXtmr/O+TK7n57xj7TzK9UnevYP7B/LD
SDjflNuC17yL+z039T/VQV3V/bfcn5Vdyrt7b+/HvtaZTVNvy7pLzeXRmzrt
el3wWGKSYjbUVVzZO3BbcBLiPBuj1zTv5q54ZFpjncX897vC4nS+ULvzCuyK
fDdzfQyfnM5bMVyx1OaS0wU7a5ftmMFiOVfK//CtuJK5r+W/qeulWddC4/EG
7nHaxFfL2dIeFxxNeJxqeqnB/KDrwRtMdomnM6TvLTU2v8q+4l4Nphpacl7P
dS9PQ22H2E21U3gh1fiC/2ndKddlbjanqJMJrxMXljNn15D6jwfz4cxyrvwY
Hx6LB/D9YjvOx2yw0phZzlbin2pvnGTe/ubhhhKHxI0DhqKx+Us+c9M1d+Z7
oTH8Fm7Mb5qHA+OJ5qm1EtP8ON+v+Rojx2/22Htd59g+j7MufJLylnAVxhOP
lBgm7A8cEbhg+kaJYcLfcN7AP9OeCi4SLoe4BAxPey+cnDA+cE3gzCkWEwfP
r1kLFyYuXQdueKf5Z+26HcfmcnySX/Iu3MWjPFcbpRbyy3zqOx7NZ0/rXHzy
lrg/xGhav9R7yuew/8BR0/rTe9P3lljlO127PsQs7WWo0Xi85/K81HzikcRz
AW91XoaT076HnhRqfnYt4MLZ+L4WHx6rq3hX/PNN5v2c7x6ey3V1H3OWYe3A
D/MNfPfhk5vxZj71OruPwkPCx7C30PcmPix9MZsrcUroX4XD697G+GRYJ/Dp
7H6hb6Z9jTfyqfXZWLgnnzMN68WF+ZoD38rXveH8fPppiV3d2Rg+h/4Svj/t
obru1cvs3oZDFt4pPJIP4cfx4b0JU2X/2f0CP0VzASzVXY3hZNh/wPbs+r0/
nzwPPBfqdeLwUmOzMY8LQs6Lv2iGVEsDv0bXtrVW98jGJf4L3F3XZrc1xoMD
DgOOJi5ezQvNueYHzFVzm7mzMYVfAi+UvlxilM2z/NExxnklltn9Vq6j68+z
1TylZ6T+FLBe+LjuZKweh94erWmcad3S1X7mBfmOMwfOiubJ1j+HbHNec7v9
Jp4echp6zVSnq/um3pbX4VNjxb/gbuqBae+h3xQ8rqvxNS/BT8B1ea/2M8ZJ
Q58L+Zzdy1prwNGQ29FntZ/VPL3Thuea73bA/7qAe9yT8hO0QVmv4G7qzSnu
0XoGLlf3bLWT3Rv1mcKrhTvGvky/iebD1liepR6RcBYwVr6/xDL12xTfaC1E
Q649jNVsNufA2tK7F+yk2k+1FIdttYMoOJnqOeUwWm/BecHE1PMTd0drnD23
e+1xm2/1N5e+ucQi1V/CaLSucKYlvrPX1GNCjyi9qsxNvS3tKeSkvFfOk/hs
OEOI+8ThS7+czRlqIfBMtf7BV6Pxdjemlkssy33iuEHPhX3N1is4IPHUUBux
Ox9OLVoj8dmAsxCnech2XFpjtSbtc3UPxieztYH6i8YUTli+kfg3vRe0ZXm+
LmSMa7PxB9u183bOW6fQg6kvLn1oeZ54On0jmoM8X60Nz7WZ03N3NB/su9lr
73nKZ7XObAyosaFOo7HYefKN7HjRGtH1DOeln29po19utE1rnGpcyP/onkSj
rcds/YJE4puh70X3/qO2+z3cDX1pHLvRSoVvEr8NvSu6ljtPre1x2ZCLaA3Q
Z+484ryhNqJ1hXquA7b7i3hN607rLxhMGn/ocQELs3W/c21phZM3OqH1wqKV
EvcMOiZuwwePha+3tNFJG23TGmd1nR6xOVefb3Xfb60rPgOHRnNDY7J5tGsO
10bPuT7DkYn3h54ejc+uG9yS8DDolOj84/zVmFfjQy0F/pndk5xrtlajt0Ju
S75X1wtMjf7Hs87suuw+1voRfqJ1HsysrnG5HTAcrQ1bE6mz2bGxZtACtfv2
2Y7c5KJzsvSc1fyK8we8h/4y5WURUolDhrgFTpgdo+Y0+Bi0UeCp2fpCYafa
GDg86OvZ2q75Vf6GGo7W4HRY6UWpTgZ9Hl173afU0JbObd2CE1uLr/4X61oX
k6BjCu+v7i29HxiN7r1qY7UubWzBSujh1dqz+2vvB0eGM9Qe27iH26F/DXGp
1lfqNOVvwEV4PrvP4/ItHamH9L9E/1Ns1VHruOZ9vWD1/vofsDWOuAeNUfrJ
kq/ZOpTObQ3eWnyrPg7d/Gv1P9eCq/IPsvVPcMJGs7R2WfY9W19YK+is6v8N
2mP2vwycRb/n3Kv/p5oP4Tbsu6y5+r+wuVLco//xfGOp7ex/uP5fcMbCv1v/
fvr6wK+ja6d7DQ2xpYdP3Oi21m9l/4nbhn0HTEwaq/SmxIHjoNgi8db2BffZ
8aRnW3BPeSw9cOufoLWgntyafXWv75rrf5PGAK4qvJB0zVCvW/9Y6rmss6Xd
aOnW6q3Zl1qa3Ws6f3JRaqnEI+FzqMOgMaYzlHgkrh44PfTSaR/VvElPDX0i
aIypxlf/R3RP6v6mlmqv/wOxWzjn
         "]], 
        Polygon3DBox[{{1264, 633, 435, 434, 864, 1244}}]}]}, {}, 
     {GrayLevel[0.82], EdgeForm[None], 
      GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkkkvBFEUhV+pUoaFMWFtSoiVJqQNkRg30sQWm15odGh0I0TMv8AvIkGT
GFYdiS0JCX+Ale/e+xYn571bdadz3nwu3bLhnCsDoyB0LpB7E5wDm6AHbIEB
0Ma3H3jbcx7Ugwrulc5Fz5wb4Tf4klgzJWfBnOXKOegFrfYtuuUcw8SjG+ur
50fidfATORNWPxx0Lu6GM8TffU3qhCnfT/q+wCegCpyCdj/zr7HsIOdwkXMC
XoL7bCadNeVrZmH6BDVgxf6X2cJ+ejwQq4Zf/S7kuz+/yzr8iZxpqycaSI7m
TnLftfrBHlgD5SBrs+hsaBqVOIuW3+QsmP465771CQ64T9uO4bBpJbXjTniZ
+CFcAEmrH46ZL6r3HXfxbMd2VG1r4XHbS/e4JtZhvoqnwRloAOfWT/uO+PeQ
8Nrm/XsomFea+2E5mnth/qmPQ/QoWl50Zf20r3h37L3Dw+gLPoLvzVt9Y9SM
u0xf1SdjXsg8UktrypuZsdl1r6LXs2ReqqerfJvy+iT/AZMITbI=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtkkkvhEEQhrt1G8PBMhISN1tCnCyR2C7WiyCuuIgl1rHFGoTgB/hFJNbE
chKJKwkJf4CTp76qZN7MW19XV3c9XaPZycpl51wOakWR36tzvg7/h7/HT6EK
VISmnQsT/DeyXoYfJ+eO+ADt49/51sYa/74Y34+GiH+Iq/EjaACfQcf4RTSs
a74GnaMFlItSiHU/Y/UK0aydl48O8V/s77b8efwSard87ht6kdSrQpv4dfa8
6FnuF3+re/yc1pdaYQO/pwwCZ6fkv0/7jVf4HmMBkzDIt0vWPogLlFfCDx+4
a6qB+Jm4VHMkN34Tp1nvYL0ev42albffsfP6lV980BzJ9XnEN8rLlWtPwjNe
WL9p7Sd+Gjf4xWtl7I+UmbCPj1pb9sheqSm15Y7xyXgW6rq8Zei0/jL2difq
k2+nOhPCI7nDjPab9NKCf1MGwlF4Chvh59J6pryP1EhqlaAztGXv1axs4rDN
Qq7xz+JXdQbDmM1jk86YxEkNqVWLxvUOchdhlvTXqm8ve5L5vdLawlzYCw/J
zZk09mM2v2t2dlZnQc73K/Y2aePF7Pld679O5yh06TxIj6HzH8+YWsU=
         "]], 
        Polygon3DBox[{{1259, 610, 402, 292, 1237}, {1251, 381, 380, 870, 
         1579}, {1229, 249, 822, 837, 1228}, {1251, 871, 829, 265, 1224}, {
         875, 373, 372, 236, 846}, {1103, 22, 366, 365, 
         1221}}]}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slvSFEUB+Bz+h6NuYuGhSld1rTSFU3MM62aFa1a6cKUCFaWpggSQZpu
8Q/QldgQ9qYqWqQbKhIhohvqe+nil+8k7917zzv3tR3vajgWESkPMH+8zpn8
ElGcYR3P07PiMpfwDpt5n1vYx3Y+k+fqbg7zHH/yYkRZnXGb9ot7rM56SPvF
Uz7mb2cv4EvO5b+Imu18xTa+5g6+4U72cxffcjcHuEf2qt9xH99zPz9QjzHI
AxziQX7kIX7S61L+cfZCfuY8jultI19wGZ9w0fi8yqrHu5zOW9Z7Ny7wB8/S
HoV94yitC30U1sVmWhfLaV0sphmF88pH/OXsRs7gHP5lL52TPZzG6g6mslo/
hTc52T4b1PXqSeqt6tnq79RXmln6ljSrNKM0u+I0V0mrmF05whZZI6s993+k
+aRZpb5zk5hjVt9ygkekSw6Ls4tT7JBOWSsrZZt9v7Lqx/+SK7x3ku423VG6
21wv7jbX6fcbG+SGupaz5Lp6Iq9xAq+y5BUWvMQaZRNHq3/5P/wUU0c=
       "]], 
      Line3DBox[{293, 8, 844, 282, 356, 357, 358, 359, 360, 361, 877, 362, 
       363, 364, 1255, 365, 366, 367, 368, 369, 879, 370, 371, 372, 373, 883, 
       374, 375, 376, 377, 378, 379, 884, 380, 381, 382, 1256, 383, 384, 385, 
       876, 386, 387, 388, 389, 390, 348, 293}]}, {
      Line3DBox[{887, 1206, 1364, 1098, 886, 1365, 1099, 888, 1366, 1100, 889,
        1362, 1367, 1101, 1240, 1241, 1580, 1363, 1227, 1236, 1102, 1234, 
       1361, 1578, 1235, 1207, 1257}], 
      Line3DBox[{895, 1260, 1478, 894, 1372, 1110, 896, 1373, 1111, 897, 1374,
        1112, 898, 1359, 1375, 1113, 1243, 1581, 1205, 1114, 1254, 1586, 1252,
        1245, 1246, 1247, 1584, 1253, 1208, 1250, 1261, 1573, 1238, 1209, 
       1376, 1115, 899, 1211, 1377, 1116, 900, 1378, 1117, 901, 1379, 1118, 
       902, 1380, 1119, 903, 1381, 1120, 904}], 
      Line3DBox[{906, 1262, 1479, 905, 1263, 1480, 907, 1382, 1121, 908, 1383,
        1122, 909, 1384, 1123, 910, 1385, 1124, 911, 1583, 1244, 1264, 1582, 
       1249, 1248, 1265, 1585, 912, 1266, 1481, 913, 1386, 1125, 914, 1387, 
       1126, 915, 1388, 1127, 916, 1389, 1128, 917, 1390, 1129, 918}], 
      Line3DBox[{920, 1267, 1482, 919, 1268, 1483, 921, 1269, 1484, 922, 1391,
        1130, 923, 1392, 1131, 924, 1393, 1132, 925, 1394, 1270, 1485, 926, 
       1271, 1486, 927, 1272, 1487, 928, 1273, 1488, 929, 1395, 1133, 930, 
       1396, 1134, 931, 1397, 1135, 932, 1398, 1136, 933}], 
      Line3DBox[{935, 1274, 1489, 934, 1275, 1490, 936, 1276, 1491, 937, 1277,
        1492, 938, 1399, 1137, 939, 1400, 1138, 940, 1401, 1278, 1493, 941, 
       1279, 1494, 942, 1280, 1495, 943, 1281, 1496, 944, 1282, 1497, 945, 
       1402, 1139, 946, 1403, 1140, 947, 1404, 1141, 948}], 
      Line3DBox[{950, 1283, 1498, 949, 1284, 1499, 951, 1285, 1500, 952, 1286,
        1501, 953, 1287, 1502, 954, 1405, 1142, 955, 1406, 1288, 1503, 956, 
       1289, 1504, 957, 1290, 1505, 958, 1291, 1506, 959, 1292, 1507, 960, 
       1293, 1508, 961, 684, 962, 1407, 1143, 963}], 
      Line3DBox[{967, 1408, 1144, 965, 1409, 1145, 969, 1410, 1146, 971, 1411,
        1147, 973, 1412, 1148, 975, 1413, 1149, 977, 1415, 1416, 1150, 979, 
       1417, 1151, 981, 1418, 1152, 983, 1419, 1153, 985, 1420, 1154, 987, 
       1421, 1155, 989, 1422, 1156, 991, 1423, 1157, 993}], 
      Line3DBox[{992, 1522, 1307, 990, 1521, 1306, 988, 1520, 1305, 986, 1519,
        1304, 984, 1518, 1303, 982, 1517, 1302, 980, 1516, 1301, 978, 1515, 
       1300, 1414, 976, 1514, 1299, 974, 1513, 1298, 972, 1512, 1297, 970, 
       1511, 1296, 968, 1510, 1295, 964, 1509, 1294, 966}], 
      Line3DBox[{995, 701, 994, 1424, 1158, 996, 1425, 1159, 997, 1426, 1160, 
       998, 1427, 1161, 999, 1428, 1162, 1000, 1429, 1308, 1523, 1001, 1430, 
       1163, 1002, 1431, 1164, 1003, 1432, 1165, 1004, 1433, 1166, 1005, 1434,
        1167, 1006, 1435, 1168, 1007, 1436, 1169, 1008}], 
      Line3DBox[{1010, 1309, 1524, 1009, 1437, 1170, 1011, 1438, 1171, 1012, 
       1439, 1172, 1013, 1440, 1173, 1014, 1441, 1174, 1015, 1442, 1310, 1525,
        1016, 1311, 1526, 1017, 1443, 1175, 1018, 1444, 1176, 1019, 1445, 
       1177, 1020, 1446, 1178, 1021, 1447, 1179, 1022, 1448, 1180, 1023}], 
      Line3DBox[{1025, 1312, 1527, 1024, 1313, 1528, 1026, 1449, 1181, 1027, 
       1450, 1182, 1028, 1451, 1183, 1029, 1452, 1184, 1030, 1453, 1314, 1529,
        1031, 1315, 1530, 1032, 1316, 1531, 1033, 1454, 1185, 1034, 1455, 
       1186, 1035, 1456, 1187, 1036, 1457, 1188, 1037, 1458, 1189, 1038}], 
      Line3DBox[{1040, 1317, 1532, 1039, 1318, 1533, 1041, 1319, 1534, 1042, 
       1459, 1190, 1043, 1460, 1191, 1044, 1461, 1192, 1045, 1462, 1320, 1535,
        1046, 1321, 1536, 1047, 1322, 1537, 1048, 1323, 1538, 1049, 1463, 
       1193, 1050, 1464, 1194, 1051, 1465, 1195, 1052, 1466, 1196, 1053}], 
      Line3DBox[{1055, 1324, 1539, 1054, 1325, 1540, 1056, 1326, 1541, 1057, 
       1327, 1542, 1058, 1467, 1197, 1059, 1468, 1198, 1060, 1469, 1328, 1543,
        1061, 1329, 1544, 1062, 1330, 1545, 1063, 1331, 1546, 1064, 1332, 
       1547, 1065, 1470, 1199, 1066, 1471, 1200, 1067, 1472, 1201, 1068}], 
      Line3DBox[{1070, 1333, 1548, 1069, 1334, 1549, 1071, 1335, 1550, 1072, 
       1336, 1551, 1073, 1337, 1552, 1074, 1473, 1202, 1075, 1474, 1338, 1553,
        1076, 1339, 1554, 1077, 1340, 1555, 1078, 1341, 1556, 1079, 1342, 
       1557, 1080, 1343, 1558, 1081, 1475, 1203, 1082, 1476, 1204, 1083}], 
      Line3DBox[{1097, 1215, 1572, 1358, 1096, 1571, 1355, 1095, 1570, 1354, 
       1094, 1569, 1353, 1093, 1568, 1352, 1092, 1567, 1351, 1091, 1566, 1350,
        1090, 1565, 1349, 1477, 1089, 1564, 1348, 1088, 1563, 1347, 1087, 
       1562, 1346, 1086, 1561, 1345, 1085, 1560, 1344, 1084, 1357, 1559, 1213,
        1214}], 
      Line3DBox[{1212, 1109, 1371, 1356, 893, 1108, 1370, 892, 1107, 1369, 
       891, 1106, 1368, 890, 1105, 1575, 1219, 1210, 1226, 1104, 1574, 1360, 
       1218, 1233, 1232, 1258}]}, {
      Line3DBox[{393, 608, 1365, 394, 616, 1372, 415, 1480, 628, 429, 1483, 
       642, 444, 1490, 657, 459, 1499, 672, 474, 1510, 687, 1409, 489, 702, 
       1424, 504, 717, 1437, 519, 1528, 732, 534, 1533, 747, 549, 1540, 762, 
       564, 1549, 777, 579, 1560, 792, 594}], 
      Line3DBox[{395, 609, 1366, 396, 617, 1373, 416, 629, 1382, 430, 1484, 
       643, 445, 1491, 658, 460, 1500, 673, 475, 1511, 688, 1410, 490, 703, 
       1425, 505, 718, 1438, 520, 733, 1449, 535, 1534, 748, 550, 1541, 763, 
       565, 1550, 778, 580, 1561, 793, 595}], 
      Line3DBox[{397, 852, 853, 1367, 398, 618, 1374, 417, 630, 1383, 431, 
       644, 1391, 446, 1492, 659, 461, 1501, 674, 476, 1512, 689, 1411, 491, 
       704, 1426, 506, 719, 1439, 521, 734, 1450, 536, 749, 1459, 551, 1542, 
       764, 566, 1551, 779, 581, 1562, 794, 596}], 
      Line3DBox[{399, 805, 854, 806, 855, 1580, 833, 823, 824, 1375, 418, 631,
        1384, 432, 645, 1392, 447, 660, 1399, 462, 1502, 675, 477, 1513, 690, 
       1412, 492, 705, 1427, 507, 720, 1440, 522, 735, 1451, 537, 750, 1460, 
       552, 765, 1467, 567, 1552, 780, 582, 1563, 795, 597}], 
      Line3DBox[{400, 857, 858, 841, 843, 842, 1578, 811, 808, 862, 1581, 809,
        419, 632, 1385, 433, 646, 1393, 448, 661, 1400, 463, 676, 1405, 478, 
       1514, 691, 1413, 493, 706, 1428, 508, 721, 1441, 523, 736, 1452, 538, 
       751, 1461, 553, 766, 1468, 568, 781, 1473, 583, 1564, 796, 598}], 
      Line3DBox[{401, 873, 881}], 
      Line3DBox[{404, 813, 611, 1575, 405, 814, 622, 1377, 423, 636, 1386, 
       438, 1488, 651, 453, 1496, 666, 468, 1506, 681, 483, 1518, 696, 1419, 
       498, 711, 1432, 513, 726, 1444, 528, 741, 1454, 543, 1538, 756, 558, 
       1546, 771, 573, 1556, 786, 588, 1568, 801, 603}], 
      Line3DBox[{406, 612, 1368, 407, 623, 1378, 424, 637, 1387, 439, 652, 
       1395, 454, 1497, 667, 469, 1507, 682, 484, 1519, 697, 1420, 499, 712, 
       1433, 514, 727, 1445, 529, 742, 1455, 544, 757, 1463, 559, 1547, 772, 
       574, 1557, 787, 589, 1569, 802, 604}], 
      Line3DBox[{408, 613, 1369, 409, 624, 1379, 425, 638, 1388, 440, 653, 
       1396, 455, 668, 1402, 470, 1508, 683, 485, 1520, 698, 1421, 500, 713, 
       1434, 515, 728, 1446, 530, 743, 1456, 545, 758, 1464, 560, 773, 1470, 
       575, 1558, 788, 590, 1570, 803, 605}], 
      Line3DBox[{410, 614, 1370, 411, 625, 1380, 426, 639, 1389, 441, 654, 
       1397, 456, 669, 1403, 471, 684, 486, 1521, 699, 1422, 501, 714, 1435, 
       516, 729, 1447, 531, 744, 1457, 546, 759, 1465, 561, 774, 1471, 576, 
       789, 1475, 591, 1571, 804, 606}], 
      Line3DBox[{412, 815, 816, 1371, 413, 626, 1381, 427, 640, 1390, 442, 
       655, 1398, 457, 670, 1404, 472, 685, 1407, 487, 1522, 700, 1423, 502, 
       715, 1436, 517, 730, 1448, 532, 745, 1458, 547, 760, 1466, 562, 775, 
       1472, 577, 790, 1476, 592, 1572, 818, 819, 820}], 
      Line3DBox[{593, 791, 817, 1559, 578, 776, 1548, 563, 761, 1539, 548, 
       746, 1532, 533, 731, 1527, 518, 716, 1524, 503, 701, 488, 1408, 686, 
       1509, 473, 671, 1498, 458, 656, 1489, 443, 641, 1482, 428, 627, 1479, 
       414, 615, 1478, 392, 1364, 607, 810, 821}], 
      Line3DBox[{600, 798, 1565, 585, 783, 1553, 570, 768, 1543, 555, 753, 
       1535, 540, 738, 1529, 525, 723, 1525, 510, 708, 1523, 495, 1416, 693, 
       1515, 480, 678, 1503, 465, 663, 1493, 450, 648, 1485, 435, 633, 1582, 
       867, 869, 868, 420, 619, 1584, 880}], 
      Line3DBox[{601, 799, 1566, 586, 784, 1554, 571, 769, 1544, 556, 754, 
       1536, 541, 739, 1530, 526, 724, 1526, 511, 1430, 709, 496, 1417, 694, 
       1516, 481, 679, 1504, 466, 664, 1494, 451, 649, 1486, 436, 634, 1585, 
       866, 421, 620, 1573, 849, 851, 850, 878}], 
      Line3DBox[{602, 800, 1567, 587, 785, 1555, 572, 770, 1545, 557, 755, 
       1537, 542, 740, 1531, 527, 1443, 725, 512, 1431, 710, 497, 1418, 695, 
       1517, 482, 680, 1505, 467, 665, 1495, 452, 650, 1487, 437, 635, 1481, 
       422, 1376, 621, 812, 403, 1574, 832, 831, 830, 807, 856, 840}], 
      Line3DBox[{845, 874, 885}], 
      Line3DBox[{882, 1586, 872, 865, 863, 1583, 864, 434, 647, 1394, 449, 
       662, 1401, 464, 677, 1406, 479, 692, 1414, 1415, 494, 707, 1429, 509, 
       722, 1442, 524, 737, 1453, 539, 752, 1462, 554, 767, 1469, 569, 782, 
       1474, 584, 797, 1477, 599}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
nkDAtgO9iTuwXu9vkT2DQMbDX56ZMwA5fP4otSoIxzM/9pr2fAcZNQOKySd3
kf3Ch4dj9jhu/Kl2QEYSJFOrxiJ2sqNzlnmdAuGY81m8bqc7BFL3jBbGOD5B
mLKdaTkjPp4rLCO3CKnkpo/YBWgi3+KoXYXzRP6ylHNqXs0CyVdlRCQvxoOj
o5Kl1Tms6w2EtB00QKeCj6wtpacDp3TXPVk5LngeProq/TWiO5m7lfYuPUTo
FOw41IU5pfUC4gevwxHdz0evXuyFsHAp2BaE+yPY/QUjPEA6YhuFeuJpiOFD
zHkVeH6OEL3NUwKSWedYzhdegPBUqvPffDBHseMwDb0kyLKsG3rJwwwRHIPb
pWzwfdj4kGEkA86t+1H7Ke8zRL27Zy3rh9f9l3WnzyiCZE2TGd0HdrhqTX82
URv7AL+s5+pkA9mHCu5Mp9KQod3W+QAK/F3P7TBsewJic9ktJeGhYOU+8shQ
C/sMT2QH+hDjHiZ1GoMtyDznYkHDX3oiEXTMbAWpyAyaus6f4D8zb3XlB9aR
A0pNm/lIDvzBMgd+FHNlyxz44cHRY1RjbSiBdl3bt5g3uI7HcXSjMDK4untt
2GcehKaHMh6sWg+jqJM98qYncq5dUn2ddgQ1ZhaHxJi/gZFvnKrd+RQoSJol
0O6EEmpNHY/3YGKGEdmimYz3U/+1DhnAIGMk96wfvVjzS/shEd+NVlPE6t25
Dc5mgnec2YNQ09DZ2WmNnTDy+OQPy/IFMGAu3cUvRINe6HPkqfVpw2gV290i
ttNw9t7Vft8lO5RXyvZ8Ay0zjE58KA6sYYb97wxPF+dPIzcZ+ZuHEe7/bV9t
vu4EopCxYBkajkSKtRtUQimx3+zSNsSGSJ78AMmTv13hyW3OU40duDeMnrY2
3N94mIhbmlu7qWSb0eXulA6B05dQ2e/GoVQeIu6q0/AuHj6KPBJZXT0zR1Ce
tL7pE3YiL5tY6lN9QXwnnBpVYqHt8NL6Z7BeHhF3Pbh3Oy9RfJkn11pY5snz
JUiePBKcEnKvhYr4ojuba+QeHifiq6mOHW8rToK18pfgq+Ou6OlVe5aq7bow
2jLea04TC+frM9WWrj1CJbYH52Z3EXlHf5dIYTYfnP1hlyyj6o9y6X73JngR
edkU94sfnUtwzJJztty0DIUml3sVyeK876i656/TJB/uQPLhwit8+KWZF6ti
fcfRvcLou3WXiLzs14mf87880CX1A+9fMZsi972rvuQdxPvRIDEPTl5ktnlf
LWOtGzzY5cjS2TsBoz84HmTRty1z3TGTy1z3jb4Vrtti2qZoM9MZlGgdliAb
dZQYT28NuiUFRtxBcRfHzFA2s9j7WobdRB6nNvxQcRdoqlHfOPEtBqV/WXf8
gt4JIh9cmuKLGIYzdzcApa0/ugU9bbWBeH+QLxIplptJHptqmcfeMEfy2GzI
YjFWheHuPfD/tsUjuBvX37y0Hg01Is3BAwy/myfhnm5Kx5c0QeL/3mjoKWMl
uWiWZS5aGOdrJBfN9Jr/2JFqFE5b0609x0KMM1C8jlgLWrUp8hp+f1DsXHx/
uVQHMQ9ISMa/ywQlBZVLxwqEUGLMrM3I+fPE/82oM1PPJ7lly2VuWQ/3+S5z
y8qr+Wg5kxQgxyP14/2r3DA6bcB//2IxyQkHk5ww9gdY5oQ1R7m20VJ0IO8d
Szu4Mw1w3LXNrkIaVA6GNFO4JKHrC/er7srhPjj1poHsjcu87pdOktc1WeF1
VbbtzVyiWUBuChE5Z0dxfP7+oVeXLVnH0PuPOsa/75vQ/Ld9EzSX6wxNjPDv
+ybMkPUEhpV6wnLdQIOsG0T8bd8EZ7I+wPO3fRM8/oNrXc73b5L5Pt3f9k34
Teb10St5/XL+Tk/m7ywr+ftynk5N5ulf4N/3TbAm83GLlXx8Oe82JfNu57/t
m3CGzK9FVvJrg+mMBKo1Kui6eInfPBvOH88brTvRgrQidu6g8GJBUrNdIvxT
2O90YcduxV4kb3NNMe7oUYgcvHGGS+AUcf4eaie7UcR+fMdX/R3ykGB9pqep
EfOTn5xWtfrA6eNcSkeouSHVx+d7XQcRJ88nLj1wzSF5VAaSRw37J4+aeDJo
/V5eiI2nE6WfxPmFhqbz7wug8vimdsoYEwQUOBWZlWJOz4vhIlMdqJSeKD8W
pAkO5uUX18ZgneiH61bz/aBUb2aq+3UXsrIWqbq8GvvAjy9Mz38HeceR4g7J
chSifEekrC2HGBe/GTtjAbJRvAXHbvQiT7o0DZpu4jku1Tr5bd9Pcqe/Se4U
xwPL3Kk6Sy7P2FMTEHVv3vyZEed3C5PHoiiRjA4U9NBlg09aMn9PHM4f7z+5
pFOIWNVi3B4K5UIiV7p3w7QkcX8ei1Yr7INTdLmxzu4jkGTJGiPyUwvva0Dp
17ST5EXjSV40YIUX1djyI5c+vQiuBbS/vJyK70PsK+7wGjh3aL8Zz6AlMp8I
NGC8gf0KpppEileDfDDD0Svq6+CSW6Qmfw/uZxzea30xHGQvmtEraKag60bM
jGdcMWelL+2vmwYSfuj61utVSPnRupbEX5gjWlS5fMOb5D8fLvOfO3A8g/nP
BSQ2pKOT0KcOwaN5E9qX8fllBVez2SPWocv7zK+IQlit/ypXWXyd++hNBu+D
cEGuFmX+W0hgWVMQY4Hz+u8zTWzMJJ95nuQzO+EffKbKE+X8C9/twdGk1euq
2Qkcd7F2cNCCwurU3rqvcnC5qFk9PseMGO+pfEBVDHJm2fRUlHboCnPshPxl
nPe1pmrX/wTxzPyknTEu6NI7wfXS6vh7GXqVx/6Q5CopSK4S83WYq1z/Yqk3
/XrVORmIuSdfQWdMxI2LHm4cdceJ9euGgaa0FkSuhZR8D8zVL85Urj9I8o1B
y3xjE+YilvlGeZP6btEblOAxznLqziYcb9e2Tt6NBNndvJclhw6An/idvKdy
uM6WcU3lVjVI1oVQzs7lI7+Y/MgvAvi7SyvUZ1i/zB9WUZP8YdgKfyg0Tin8
ZXY1RD7IE5Tmx/2Y37v/fLpK8n5Pl3k/k25Y4f1ebW19zFkI7hSGX+iUcX7d
1ON+ajtIeRRVyy0A+B5nsqOWwnxpQUjlhg0kd1dNcndWK9zdMs+mQvJsU7DM
s8WB9IGvRTs3qIJdKIPRNmN8n0d7Nhx4RfJRqiQfdYPko+hexP660lcxfxqt
Ovz519sovI4sLRUK06JQtY+x068fo8enZVSt9H/A6Eezi8YKKmAtf6GExjIb
Glxy7RoP34dROu+B4FBvcPF4VXWoaRKeu99nCu8i8u4anRclWibg84Gevt+r
H1UFvuWP+kXkQVern+SeaANnDo3dYqv6UfBAK9OuaMyjHtQ+0UaHKEXFWjLT
h5GCO2teVg+Oh5c4bDXvI013+0dfP2xALiNJ32YdMff4cWMa/QLSfON1uc/f
HF1ZT93aZob7U1osb5XEgmSR+uN32zjhmn3864oGfB8SNuqxWv3PunnQ/Jqq
r8yGKDWFf8BSdB3eL4/bPXkRPGi695uY96BGISZuZ5VnMDJh8PZU2tr/9fz/
1+NwjfNucMvGEfTGJji+rcsTRi3pwk99M0G+HwK3D0Sqog91b2sFoybgZ4ly
2vw73v/z6wns3BZ9z0AL6tg17MS2E9+FxE6jkxZrIMjmUv3qX/nwTEOa/dsd
JRhtjH7ITjWJrp80X/OzSQa1uqHNj/VVYESpOmd3rwgKuXFsc+94E0LvrY9x
hBPxFcpOUwx9jPwna7x5Ti2i9qMNHrHT+vAzjWMTdVTLf70eZ5Gv4Z8iuKFi
0pLh+OFvMBqlVPYjqOy/HY9ch+uyfroUo5aHOsMqY6IwcunFLM+h68izi5ZI
0kPRB4H1q7f9EoCfzUInfBed/+t5PKxfajHs2Qhquw42PBXCdYm6X1snB2Dv
M+8O1qir8IruT1xVnxiMFnbor/oRjY603ejyt/4I7+xvHUh0Jb47KpqyK4Fb
SH/dQdJfV23FX/ev8V0b/2PcbMee6SKhfCjfHz8fpEfEny8Sz/JdkwZd34RH
meoi8NI0Tlc6jIh7Syhn6E12gf2LnB8LFhfgrXZGyCgFkV+w521zcIr4r/9L
J86GaV2yOtQrr9mul0bk1wJr3q+jOgaGnt0ut6++gUZqNh7F/lwYmaM9+Fhj
G7JIlDwiwmQONacE/Dl5iXXHgFfmoxrd//peoeC5CN5fxbsg/zxt7EQL8Z6P
xxndTeWEwENy9L1h26C5yC/OhWYfjCQb7GTbTfNfz3OGNutGhXA6SmQYCr44
TU2sj09Tei8NgSMlH93LdlOoZaM8Z0tBxDmqoh9eFcUi5cObA7c8LEDpOrU7
FmqIdWRO5rXnnc3I6CkDZ9/uPnS3+Qh91WniPowxdyfwdIHkt1I3Hg8WeBXO
mn6wSxFGc11i926VA4tNVKqHi4TgRZJcP8PX7TBaecpi3Z4jYK/R6/Y0RREe
pLhHtHZxwejAlw2CmpNIk3pQQls2FaWPMD7Rn+Uj8qDpmPfzZsjEOkc4zSoK
5Te2POKtx/vidY9nu6chKxSiqdXahgpeZ4hMJxD51/iags1xQnD0vHen29Mt
UPpZ5BtT01MY/XK2rpSYvw3lsrR/D6vD4/Vu+/cFE3nTp+rvYpnZcKHo54XQ
r4twt5Nv9Zx3PfG/tukNDQyBRbbMmm3oE9z4dfF7xxZzIs4s+vS4wxrpaDRt
0DingjKMHq7boka8z7MPz52mGkSmnGcr16XzoayhlubS5w+J/M75xsHGRGRx
ZyrVWvIQyrKba4s8Q6z7f6ptX5pzIwu1oJAtqiYoJqzyjYcxsd4tup4f4fwK
Iob7w47N7IEiRBtZ0VBFrGuOY00Ln0Crsiwy+0EGFEWVvHr+TJsYbzT1YO0B
4+jPW39mGUBeVrJNRx5x/ES3I39AJpj8KqZTvB0DsSZ6ey0P43qmztaoKwBG
8zLDn9segZdNgbHNVsyNv6S3aziD9IL6aYXin6P0mMmajD/Yd4tLRpS+G5lu
ePAuZmkVyux9/tXqwG68b6ZOrBAXMuvjEn/GJYmSchWSioc2YP+ogZijesjU
7DDb54R+5MH28EdjJN63pXqJWZcFnX+Rp/HrYjQEG3YplLzGuoPiO33tEBA5
v/lQ8+1wyGVh5poZwPwDK+OvpO+grlT87VDzesj3iTxnm2dP/C/u+/vsOsEg
ljXz55kUyIrXOmgqoEHczwcnE37TgWHZ+bTFY9yQ8PGUlJR1IHE9r5JLwxNA
3/ll0jvPfND7VntDPAHHS3962qs4QWfGs5Ou0wn5bmKfp47B3Hv+fTuOrUif
V+ntd89KlBbfGj7GUUk8952qAaNCyORZyfGmlhCUduTY7JvNacT4QU/uZyzI
TGxNtEauEEoS/nHTTRL7C3nQ1ZTVI0OatstC3Wpg6r6F9Vg6jmcmbYXl05HG
QMRhS38KiPyYZCTkmofzne6w9YzoFNPlhu/F6pDGkulIv4eIB+aP53qvGyL7
H3//R/+jKiSvYg22gwyJYOvGp9dxf27psO590NnRN8B9ywqyPqd+0raxJe7P
tXWeA8agbzqq1+pyD2JVtQqdKXEeZCCUKFIPOhQcJp2cpyF6ZxxX0AXMvZRy
nPflAPWnXTsu895EQV7f0wVDMI9hsb/i3UNQvZshW+YpiK6yl85c8cN538uO
Xu86ss/xznKf41/x4V99jnCuMsnjqDIfJEsKvqCII+7/gnzEl45LSH+/rox+
sA2KUH892eaL+0Gop88bnQHZtl0WatMpkPCavjptA5GnLNTGhWynA9X7NK98
ee5AUpzmYZ/7M8S43ZemszxIr9CexxXloKjf4pElYXg/u6fO5oqVSEe5Nldu
QwLytckc2rkX7+N8xzZgJBlkBOtv+/K6QUr6tPR+BiJeXVhd8ERsBM7dvPJe
fvcZIk98Fs2HiHxnUZNuNv8yqNR1d2Kf9/hGRt+eNmI9XZhi4ZGuRLqXPRNb
H7ggHwpT2TM2mEMoqVUrrkNaNJEW+j1ayP2Yddf47Uli/J2HyywbUv58w1ex
XRlk/1xbTfnuL3+t9VNyN0DSu8MtcrsDxJbfPDb1m3jfFpXqL5xWBqUydNjJ
WRmSXMOou58cIn7XmaZCth6UTwdv+9lxFmKupE8MFmXg/iwDyuCjoDSh/mDj
VREI29mXn22nSpyfR9mI8SrS4fp6wzeHCgVLabndaMP+JEqFalR/kFol4+u+
q9GIf9182tbLOL9YPHP9034kX9onzCaxBqw+b85P6vTGee6QxEERJKLJmG5X
HgTe1qWRgWp4/7Iyw57eYRCLLuJhUXeCMJkLqdeHcN2Dm69qnBOk/rSdpP+j
B5HK8e9D47D/2yQz6+UBUNn9keforlSIjGngZ3tCPJfFoa8J2/lAmbJKfY3w
BETK2v+ka8K6wKRzno8mKIQXsaXV8MKFd1SnXUJx3WZK9iDMIq2Ag3fbPPai
oKPCb5Spsf+btXBH3z6k9vv73p/+L5Bn+6z/NAeuz1clD7CXIllR93Y3ZAia
b6IdQ5nxeRb2Uow0oeOr+lOpVDeDj7CL+YHj+Pof3na+dwbWLzgKH1DdDtek
Gy9rd+C+1CRWFTcuEKccbh8O8IbAJhODFkFcV7lU/WOTGEj/lLiuYPQAwmxk
X7nJ4vNwTOzupgWZSJkjjo+64Hq6g/Z0MM7fdZlt71WBIrp76PfUSfD6JugU
yIr1wdcXOHf3gkKFcEx/aRR4x9Lxj7Di/s2nNhyreUEqt8M0yuQFsgg3zO7X
w/WEqbVz1TlIZTNVx+4HF5Fv8h+12iJct7/DZ7BqD5I7E8q0e8srcOpR3aGz
A++j/ZU6xuIDEvqsfsjBege46GXtodqL86PPTwZ/aKCNraXRs+HZEMEWempj
IdYRNvm97XOBo3ejrj9LHYcIWSo2jju4br9hv0txAtm/o0f27xiR/Ts6IJ19
Rxz2voVwwSCzkj3Yb4eRpSeuDGRW73nCc0sDws98jHN9hf8vQ4SrzGZQVLDX
GRzOhCg7A9NGwfeY09t9G50EKdqIeoOCfeAl7HQiAe9ruVSlu46pDWT12KJj
OgWQSUZz3eEx7DMzI/cryhrEX89ON68LB5sjlqpnmPB3N845fFqS7E9hJ/tT
cL/Yv/anhJH9KXh+/tf+FAOyPwXvB/dXfwry/LRVkto3DT13YzJOaCXWwRrF
EeZ24j0QQhwG3lMoq+EU889+vL6vP1sXbotCqnbY11fQoXfmFM32tBUwumZ0
XeiuHUg//UIXF5UUerl6cMB7icgTH0mb7/x0mOTzPZf5/J5Jks+fIvWOW6Tv
zdKK3sFHvaNWXOMciln6U3/zBfGeLNp9V5o5iTTfnnGsfP8aPfap+3371xUi
z9XnnFi3B130sbp9VTkT1Rx+5/v1dBYRl95tOjDFCxYpNxlnbVaj1xxtqa8L
tsBoJuIqd5EG9YYlym0SD9EjehoPGXXiPelK1vHanAAiTrSUdi8RylxkDDFJ
0CLWo/LzavH65H3eSt5n85X7vKxH0JN6xOsVPcJyXKTDV9EBPTn/YV3vK3oY
/ZDTOPU7CjmOWwgZ8p9HL56m0qVvfgmjFfnNx7/+RJ6hDylz11qiJ+a1Rq6J
RD71QbfJhp6D1B3+kD42PCs+Nk5zj72SemZR5lO5kEIe4viZdxy1XGvgon7o
Q7d+c/T4ll65SN8fGO0YT3Bf7AGj1o3V33ZQoZIG+duXrDVh9GvPBa7JXlA5
3Py1fXwCFTLmWB3IkIDR3y8+RoylwCnLV6diX9ehWx6tNE9yFIh4qZyzhWMj
qTuYkbqDyD91hzE/37rgs+i+9c+u7Fo/GB0eoVDOmUYOyHi7lsARlMQSx7Kx
n1g3FxzC9tgOIusJq+BzLqlQQBEdf3KOiE/Gi4aab9OQusMf0k+Ge0V3sJze
kzCVM4NizwoKri3zJ94H3VVZ3G1g7Fw5zqFwHN227FJ1fv+EuA8unA5qOaD9
Lln3nv0zlDktsKd/DRHPzLySimcIAUWes1R7T7uim6Jj1uyD2K/P2iRlCpG6
w3rSB4ZhRXewUmVjWtggBq7J4+4b/HFf3jv1A3GnkIFIawCzkw7kJyioWxsS
38UE3ff3T/YiTpUg51AnDiiN/Lj9TzYR/3TvufHHx4PUIzhJnxbLf+oRgTvu
8X9IRiFx73JN2bCuKuKRF/MbtH8o5fUaWaM428P6kobYt/nIyR/KuaDGpxCz
zT8MRRW9YTxSiH08Km17khpIPcKd9FH5vKJHqEaLPOy9kAvZDHEhdKfmcL+J
hA2lNxwIdv889v4GFIX+MBN5Q8zbI53FeqbcpE4RsaxT3H+wolNoGWl8b9e7
g9yr1WvXT+C67luHhWYWUGN/+viazwzy+e72zFiXmCeX7p76+OUU6SvCTOoU
mis6hSBHr5VS5lHIVW4QWCtA5LOTM7PjD/1ApTw3mcFwK7KKp8j81If7T8fj
6LIj/uYf++Rv/rEfSf/YgL/5xyqS/rEb4d/9Yx+R/rFYF8b+sVOkf6wa6R+L
+47/1T/2BOkfK0r6x24m49VgMl59vRKv/ruv7FHSV7aU1Dv0SL2D9W++ssf+
5iubSfrK0pK+si6kr+xd0lf2Eukri7nif/WVXSB9Zfnh/+srO4nn1X/1la0h
fWVZYdlX9hbpK3uS9JVt/qevLNunN+ppUyjkfQjNp7s4nzp5qEnwB9J5klGx
l6kQXbSdiqcTJ+afpZHnQxH1SIU9u32oQQf8qqMb5XReEeM3BkTszJEoS92G
CFs2iNtFcaYs2oc4/9nHYt7yQK+1uuapIB0kc2xcFfmUyIsX1FiFvVNB3FKz
42b7e7gptz7ySfYY8dwtH32beU/qIBtIHcT7X3QQQ/12vjqI5xSR/SSP46vt
OtL3mEE1SfKTp58ahADVVLsd9l0UH6CFYFApPDW/zuAneNiuVRoswVxf/T6/
ZH5QzpY5Yc9/DVSpvn/aFIbjnwX9VKfjoLTG4+xPJWbkdlLnCK8b/n4/CHE+
DQXZ20lXfKYiUUSAwOeO3ZjXom7vL08ndZAJUgcRWtFBNFYV3/jomYZExbz5
12fjfv+FJurFVUghuDfmpeQkeMhfG2YVwnnH210XcouRkL1O00DeM4hu6W9V
zjEg/leqptSfKOAY3anuNzMHSdpdL1SGVhP3zfOw7/Z6ED/F9cnddBKSReWS
ttAlEuOKXLF3TpH6SBapjxT/009DcXb7VE0MBOyUzDqdjnWBa2JeQn9A2clX
p+zcPEh1082eXpXxV/z8LmMEFHpSIzZH0qAd4xvza8f/8g/c27+9D+Qk9jd9
SDiCzK9xwQgn1kGmdbiOsYK01bThbPYCCra+VfDIER+v9C3JzY7UR16Q/hiv
V/QRSbYT8YF8DhAYubes9hLOW51K42c5EL+0c8KPKVYIf4YOPjuG55ntNeb7
JIBXqWeP81kTiDP+nBjEgusMxwPUZBRAYtefcuGrdJBIOyPME3iVuA9lHle9
t5K6ifqyblKwZkU3UT0+bckoLAmuVgfldvFi/8kOhYvZl0CRvW6Dq8tNsOB7
nMirif29J/+0M+aDXCRNhN7qx2Dlp7Vm3Wbcxz0hKU99BmSCXwa2DnxCQXSJ
X8I5sa500ZT6JwOpmzCRuon+P3QTRH+ltNmi4yDEBOR0zwngOobv/ROaTMAf
5DQ+0XAfoowLODoB7wfddMe+tQzErk9u2jfMDtG/a95qGBJ562JiOM1aflJP
CfwPPUUhevM9LuL7d485uilCG+e579IOCEeB7B7hbXVUw+CfH17Rj/fLXro+
kqqSCjKMJVv6vjYhJ7Exg9Y07H/S/0j/eO6ynlJ9jtRTXP/Fz+Hj5Ts2HBAV
8yQhVL2EGK8dWPvoOpzd1vHEaXU+hPh893LJxvPtWZ8BkQlSZ3lM6ixDKzqL
NIekl8aPteCSSsPInEis10udsbeE5kAqq+mxTugAOO+LTUrmxnpWdyu685HU
WexIncVgRWcR11V6wmjwAoLeM68VY8d5jZlhacsgqb+okvrL4Ir+ImWqfTld
vBc079/KURjGvmQLEm8Htcn4X4mM/y3/Ef+jM/taU0p3J6NEdZe3iFsC84cB
Huv0kaqxRVFPqSi6HfghkvpzOzHPX2g5zXEBmYg9chPKXUT3WZ9KKe4l3ref
N/5I2DOAvcfj+mObDkERd/r+D9hnfjSBedNsOdIT/rbGwYsX5ZhFUfcdJuLS
adveva3NyNxql0RiqCy6J5cZdHe+iYgDs9ulZFuJOCrh9EfzDlQgnlHu8IhY
B8ed5rOj1i33GVVUkH1Gfit9RqbP2yuDRX7DQz/1Gk2tehjtXeJhN5YAi0zX
TUW5zyFnICcyS5WG+N21V0bez4GFKfvtyzb7IZlS1HC6hsgvFlQ05H7fRUZe
vKr7+nhRdjx9VfdALRFXUN7Zov8Ymc8d6O+6MYByuh7J8duGEeehNaNsvI4s
Ve/uMeiKRhm2vy5THCLiotns8SLNNHRhwofpaogACmMN9ZeLaMdxS9e2PcJk
/44E2b9TttK/Y/hU5krAe224d/eEd3PfNuI+yOxbkEgFkzz7XImem5BR9cDW
gK6QOL+L/H3fu2DippidJXAUon5QsAtsOYjXU0m349pgdK0m9lXhMDjWNW3/
eApzVr2lzHuuIePccuY/FYPoNq2oQ/41D+I5Fhl/S2BC5hyv3T9GP0XpiS1e
MeYNxLrDqr1n929kVqhYAZpnUfRh7UB9NeK5LBbmaHYUIZMtW52le3mRlohH
5edxzBn+of5oP4J0HDf0dI0ZQ6TMh8efuzC3PD5aLZpG9tFEkn00nSt9NOeb
rmp9Zp6E3DNV4ePPbsLo1BqNg6wpYFgf9LIlrglulsruaLuxi1gf5dkPuXaB
oXSzXm6vBkTxBTcfy8f1k1aPADoO0LPklqT9FIpMeU0CaJWwX+uUaDcbI+ho
bOpuY5dEV5I7bwWn4PW6aRNTXwgyXhyqu7ieGt3ar75WfJKYP+e+66anxSIz
kcqZyx20KKWdMZilCa/LYz6pJZuQcdosn3KLOPL3cN46MIZ9LwO54zuy0PnP
lEnf1e6AN+/SzPodOL56Ju6y6hRS+XQqg/WMCsReY/msWEO8b4vad4TYY9Ax
S84td7hj4daJ2suKJsT/nesNauR5R/aVhJN9JZ4rfSVav7T65hY/QVbvUopY
BfaH9I5V1pAHvZNtgs/fzUFK9v7GYa044r2l2Hz6DzucZ4Eub4qNELNNQ9j0
DhH/L0ZxJDPHg9ZRQ3HPcDFwumxr5uqCOfy+MM27a0DdvOmX5Q5e5Dda1Bag
h7mp5PZDwYygesDh1Yf3Q8hzE3vO6RfE+ZdqGmtf3iLrhDeW64QXuFbqhMv9
DnrL/Q4ig//od0D6blwCprqHUQTnPc/OTwvE8TQPVvucILl9LpLbr/gnty+s
xJHjdBeSr/YG7GZiIs5zZvN1AUak58XIu99ZAkXcc5VppcA+ipSJxmFzSLuY
yYW73BJ5M2bFqfti/bosLNDjEsmrJ5G8et8Kr64swffn4htqiLvtdWjI+Avx
uweMeq4T8bmoQAaX31WIE33YPjCJ3/OTbwNP9iOd7piymkUN5M3ffP72CNaF
n9225b2JNBqoXcudIpGDlKyTegLmqH/sFCsZREoprUf51NaDccWBDWkGuC46
Y32ZJo7kuq2Xue5ff/7Jdbtq7r0WfRHi2c4z5A0Q8+0inftmIwFQjlybk7dG
HGLKAqeUNKiw/5KwgKsTKCvQT3kIyUCIEMt+/u+4b0IiqVqTEWmd2tbBzh+K
3O5UxAU2hxDjreHHTSqQSs3mim1fXUCsPoi1Xghfz6LIni3iSIZy9m5lnDwx
P+xNX5zBfOa3gX20CJ1Q8T98VjwF/NgP5VW3YV/B28c+WxQv89LvJkle+tYK
L63YfPvCo91GEOXia/KonJ4YfzuZ+5kKlFF8ZLpKKIS37Bzkksbxw1bBO+e+
g1II59feahMIYe143BmC+xQke/cKfgOFLPepfVcT4cJM5Petp7Ev8RT3zn4L
pGH1ntJ3WyIKFKQpzmjH67WLvG1LDFL6c/eBNk0R0iznk1m7n5oYn8//clsY
iW/ISa50TQFbHgOQ8cb7IP9W2nP3FeKT1ltUGR4EX/MbLcmDeH/2fFm3wnnY
2Xurem+2GwTckpH58Afz/94Uj3gpSG75OMktY156mVuWpl61I+TjEwiam8ni
NsNctImh3+QdUHQs6Ay4lQMBXlC7kR/zbN7JX5pLQKHMl0/HhxN8X93+fT8G
12Nz2O9cVAd5TeYTm5P7wS792cxhaezTPhr7o6MKpH6NJgfXtiErlgS6k0cx
tz9RxSm8lqx3RZD1rrF/1LuQ4pfDFdZHX4As/Q8uyoHyv/IdvyULJNZ2cSpo
92VwKmv7RXkc8wZfyxpfliJ+Q9iXVb0frjExeOi04PghubY8XhSo9OP6FAXS
ILzI1UlCDfc10AU84D8Bgn07thyK2gmRHCGLSSzEvLQ4R9HtbU1yyPYkh4zj
q2UOWWaQueG18FmIWPPI7sIWPB9urru4UREUlMzfeIpwQtQGVS/x63g+7Mww
18oG2VVyYaWvjSFwqLVWS5jIE5fspc6cfAnSaQ3K15QnwNqXhVktrPyvfDlG
kQGkgx3LO5rXIpm27ulrMtiPa/FVVIE9iMcdjnx13gNMR57t5bLG+1D8eW6+
kYOsB5qS9UCjf9QDwelWlVqjuABUh92NDXhlB6NOq8A1wAoCCsQTaY49RiVu
JdnueTMw2n/G5k3rcbjCqS8gLw6o8e2G+ArzEBjpvnacQejc/6wLhzwzKV3d
MYGqSxj+KB5JhtFLIa+Lxvv+6/HLdUXjv9cVSX7GaZmfMZom+Zmdy7q5Wjap
m4uSujk9kmXvmGz8UQ/lveILNSZEHvfYmmkO+ZI6uCypg98jdfCtYHPE5zb/
KXt4vumBg9oZYv6so15t9N4YGY+5PS8Lega11ZuO911Qh1HZUj+HpaT/BwYZ
Ue0=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->Small,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{40., 80.}, {0.001, 1.}, {-3.5082999462575583`*^-10, 
   0.06689182499082054}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.425414944359375*^9, 3.4256782294375*^9, 3.42608016825*^9,
   3.42608793075*^9, 3.426171128375*^9, 3.4555420073752613`*^9, 
  3.455557340621044*^9, 3.4555578695806503`*^9, 3.4675858653617*^9, 
  3.472400293103426*^9, 3.473165482736479*^9},
 CellLabel->"Out[80]="]
}, Open  ]],

Cell["\<\
The plot of theta shows that the value of an option will decay more rapidly \
with adverse moves of the underlying stock when there is a short time to \
expiration compared to when there are longer times.\
\>", "Text",
 CellChangeTimes->{{3.473429618319602*^9, 3.473429621135438*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"thetaEuroCall", "[", 
    RowBox[{"s1", ",", "60", ",", "0.29", ",", "t1", ",", "0.04"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", "40", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "0.001", ",", "1."}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.425415029578125*^9, 3.425415032234375*^9}, {
   3.4555573260934353`*^9, 3.45555734927883*^9}, {3.4555573873367853`*^9, 
   3.455557390128408*^9}, 3.455557453545114*^9, {3.4555579518169603`*^9, 
   3.45555796699958*^9}},
 CellLabel->"In[81]:="],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
h/UevFtLLE0gf4Z29F/vTVmsAHUltHOdNYutW41w7M9g6ccvTQ8h34Z5v2l3
fDJmtkEdituRulWsLN7eQjheT9JVvT3r9DTIz2F+kkqIrORRgLoVdLZ2N5tl
f5twrPN6wyrPjkOQX2F78fPHs9z7thKOn+8N9v5vlBqJj/i96KrVSfsRQvJV
PN9o456v6aRLvhPReWb/mVMxNefVSJ6J52GURHiELyVAHQR5zq8FQpydUpCP
YS7iVZTatOod9GccL4QqXvj2N3FDO7DeYI6xxtK3S2EcwHGQeTV89IRyL4wD
ON6JnU8yKM85CuMMjlNcdcYz2AePwXUxF5ZTOK1elgrjBuai09Tl5EcQtIPj
C7eGXCX7JjPgeNzgXhkRu/fVMIxjmPM9GB70T2sn4x6tM+dOtWnd593I+Iaf
y85Q65zOZ1Bf4+crsc27s1j3E+F4PvmE8TXeQSV4Xni8aq98f029yADGPTxe
dTEGVd+eN4L5CswH90XvYD+tTDg9Lg1Ue87et3gKzD+AP5vLFE847iYc+5MT
9FbifSPMS8B7kbL3xYX1IoTj9+KH08jBWlWYr4D38XH7yHl2Z8Lxe63g+8Cp
uRDmMcC+3UmgmtOWcGxvOmPTlrUnYH4D7M2Ty1T4/QjH7/vBmjyjawIw7wH+
M9Tn3vGSJBz7PxvdzqxaD88R9x/m5iVTYiNfkflJWufubtOQHsoJOJ7P/9l4
KdLwUidwPB/YU1LCu7mQBfGFzktZvdW7I8pfv4I4hdsZdJlct1BQH+zp94LV
9zvg7ZtvHsgy/uLyh35Q57I6V3J2uszKRtbsi2c/OgnzAKzB26t/8p1fhGyC
mCJ5JaSO5rK1Q9nRN5BtXXFr/oAccMGj12t0XC8ie/vdLNaUKjI/gJxXsr3x
QQ739U9Ri4+TOvrwxTO2WuLISaMj6PERR1J3P9V6qskYQM7xF22ePOIhdXqZ
0eMk58nIlS0z9lNfI+H5umG5H/qR672o4c/HjEk7L45IDK3RQ24bV61pmnyG
zJNYlKg3rjqB3DVMK5oK+sm8x8b8IrEDf967Ojmz5kULiP+HopZfr5dBHnF9
15u/3yDzGI++H7eTL0aWNRIZhpNSQLduub3ZLh7PkJX97hcPR2HegPUzpECp
efcosrZ5ET7bzQv4b6/dSR7Pu5H1ff20PB0yr8Lmr5Rzy78O2dyJ8JoTIUHm
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
Ew==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtmgv8t/V4x+/v8XZIYtiqoWYoSgcdlNUe0kHlURKRnk5knWRGKuWpmFjK
6DBDOSbL5tSQCUkH6YCWMmnVJptUhrVEae/397pfr+d+7u///t2H7/c6fK7P
dV3flxx10Pqvm6YpT1Ndg3Ph3/bTlA7k/Gdcu5NrZ3Heh+NIxidy/mdufxzj
F3G+bpoaz0yP5v638Nt/Mz5zmvrz+Xsrxmdzz4Vc/3vG+3Ou/LYd41cx9nNb
89/fcQ/vTGty8J7pn3hnZ7wW58Zvr16+5Td5f3oY56s5n8TxWMaHcd8TGa/D
mWP6GeOHc76G478Yz5y/w/EfjHnf9G2OnzN+JGfmP7HG9AjO13L8J2O+PV3F
947n/ArO6zPXOxhfwvku5vxsxmdw/bP8/R7Gu3GNd9ePce2r0zQ/g3dsw/Ec
flvNby6UuWbk2F/DeRfu3YTjE1z/Q+Z8Ktd+y/g4zu/m+kc5/wvv2ZDxJ7n+
R9zzt4xfy/XTuf4Yzi/mOu9IPFeYy7Qevx/N38/j+HP+fgd/38P5UM48n9/I
+CWc1+Zv9DPtwXOsu36QMXIu2EA9hzHvbsfy958wfhv3v5+x8juFMb+Xl/J+
rpe9OJTl27mObstjQ+/5c7znU4z5TuPv9gfc7xr5vTGP5Foez+8/4fhfDr9/
E8e9HL7vhxz3caiDf+O4n8Pv/5jjAQ71dAvHgxzq71aOhzgexXEjx6+nMKx/
5/g9BzbdmEty3U9jnsh4ws76Czj/MvSt7Tfkk5Bn25JjM64x34otlSdwfSNu
+RuOUxcdIfO2dcy3/CW/b874BK7zvYbeJ9bc/MZTQ58d32lHx30Nn5p+wPGr
8LX2uJBP/WPu/UXYd0Y2+e6w3YxdNdaQfCfrbfhH4pnGesvrY63OeeLZ5Lqx
l3Ry3D8dE/Nznu1Niy5YT1Pfx4bMnM/Qi/piHtPtjBd/nrCfhGym8zhuY5xC
dtPvwmemhy96++miO2V/xyL/B8LHhr7U1V2hr/qmsJmWFv3cHToaOrwn5pR/
HevJYslvw58nfL4ctcjsDZxWMv4493yD8Qlhww1frvjkxNo6PlC/EPrS9vqu
jLHf+pFFTreHrNpfhQ3Wc5c5MbeKLbSnMP484ys4vsn4r8O/6lXLPVsvsrkt
5OOjwxY/sWDPzdPAn3oR5+NDthksnNblfBl//0NgQn0Wc9srnqtcq19kLI6C
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
3W+IWNsfs3Bse/jMq2NT1oLl2/bukz4ORs/2tVcsc7g68trZnp35uLqWr4jd
6y/vd4/P7sEzrdcl61Xwl25/9cDAyS5HPjv8qMi35Qvuq5FXiKnef2X4i9jY
rdUdFXjY5Y6vC5yc8T3rdHKP/q3gcA09dHwzHxH47J6uZC3XmIcvW1/urvcL
wQUbvt/B0Pz94KjWEq2pjtqK9fh9As+7Oe2ZgS396vCFERfEj1OC5/Q7gst2
ZNHtIR8SmNzNg9+58JydIncrciDiTsYn5ef9+uCCHb/uFwXXbPhEt6a25SLD
98b9xkd1ks5fYip+Zd4yeKB9/E8tmEPOmF8ecaeD7fllEXe6e2FODD5j3yqh
zxm9y/mNX+Zt/cNhk8bofm7Mf8Ro6xbIzr5zPyuwQk7Vrd2ra2x5do/GFhFz
u/th9l7i1DphV/KNjq/J17s5zIplDvhgJ57mgyP+9rPDhuVyco6Bwcr9zLBz
OVs/J+QvDzReWFeexYRtFr3b87W+e1Lww9n81rVi4528Nh+wxDX39T0zOFiX
l20atq0v2ps2HvU7A3PdqzY/NdbjvsSqTLQZ9O/eD7HF/ml3f8FBEYPGflr7
KerCfQX2I5She3P3jThrP9hY0+RP1i/ht909eOKS/BQ76vY31o51jX2h7vXV
1xjaC24vCHyyb25s7W8PeZpTq2PlbB+57B25ZGF+Yz+VeAv3GfuOTopYat8h
mSfKmS+YRm3V/tHcg1Pa13APnPVX+3Tu9Rl79NwzvF/goXVy64QJ7HRfSrdG
5l4UOE6z/uL99vPkEvYQdgk7GPO0vmBeQAwq1uPmJSY+bLluPcGe4rXBN9xj
MPYOnRZ8obt307zY3ptYI+8St48Nvzbf78eEj5jj9y8FV2jEH+vA1vmsDY/4
+J7gjP3N4Ufmv/340J01kI6duqdEWY26rntsxPY9Fx5lzHQ/kLkg/tuPDr+w
nlAuDP7mfrz+trAZ6xXdXODc4BXVuo334k/l8uB41djpHh77mPbRNwveaB1l
2Mw3IkcZ9nlG5CjVGqR7H9BJPyUwynqO+yzlU/Yuq71HMMS9GWO/mdfwiX5a
YK/5xdhvdnJwon5yYLt1lf7N4KyNPGzsuXKfmnuijohYby3Ifqi5pDmlvbCE
7N0rMlsPRY/2++Y1g5+4p7cfGvzBOo97wKxjtwsWmVhrwo66NU5zYe//cfi7
NaIuzzsveGO/OXDPOlI/NWKEfK/eFPxz7Btx35g9LGRlL9u6kPWhfnrEIHND
e3Zp+8iRxj6004OHWjM315mZZ98/Yr39kZnvuW9AjjfX4MHuK+jvDI5kHcye
SHK/gLi9IuSvHvqq4BL2Puy127uwl20fffSjkHG/L/DLPfxjf524Tdzoh0Us
tiZmf9o+knuWupzYGo+56vELdyXezviVeZR7D6r1CvtX2F8/PHid9bSxD9Ae
AVzMPmnaYfGpkwJL667/D8AY4BE=
         "]], Polygon3DBox[CompressedData["
1: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
jCc/7vqPz/Id4LddDfrKyNXN2dsGC2aC0WqQU4uUG8ux1BL1J7mzdZd7BH93
D7P1ixtjb6vvAp8oBwdfMKYmeEY5JGKtMT9hB+XQhQv8OLQBNYKmhggeqyWo
KbRbBqYPYoya6tRWr4q9qmuDe3itbBPPnPfgi0kNXe7LOlVjG++XzR/XxLuV
rWNOvmN1/mpK4KUao7qda2U+Ut44t3lqS1ltB/xofLdxf9Me4KZN/eCowOIB
1lftz3gjHzG+3RC2ntXkjok1LNrH3rG24p74Z/5U3rzkm3/VvNQU9AfrI9i2
+sJgbnKfih9PvYJYrnaihtJuFTlRNre5ZeRKw9zTXFt96bqYezK/PDvewf2Z
PEjNmrVQ50jkgAU+Og4KTdgcTDxRKxbzK/zXHNpY0MGq7rzJo6yH+Tlbyzs1
zplvy72NEd5fD4lYYEwwP9UfzR2sKfU3Bf6YG4hJYlPD5/MeHNquNg3P7Or+
xAjrZ109cf+IAe29UQOsYG1i7a0Nih/e4zXrUWrqU1v/ftiW+JZODkwT29SI
64OCE6sdV2PdvoGJEx+tN7wzMEfsKfoi2J3hAnWfJd6rkcob5eHcl/HVxF6V
X4aGKI+Tz6nt1BcH9omx4qkxVp4hxog18vNETFHDdj5qXPI8fV7f7/Cmbt3F
mqCakxr+5hETjA1eUxuQo3hPNxbg12piamP94LB1bd4a7LThtvAL8fza+G4+
MfKtfm589pl1v8jp6h7BJ80F3Rv3Vw7jHlkTmbWR7wa2iLd5txT640/jedZ/
zenM7cwB5ZHySXPF/uLAWnMIcwlj0sznT4r8scpl+E1znlk3VT88Ic518+79
4x6vWS8Qb2sNf27bLnhyQsxp4r/7oZ4hfz8gcnhz+Uwcm3rOnRc9Rz7rHj4r
rk29+ctRoxBHxJPuHj4vPk89Vc1gbWC1GmeXExGHZ30On+pPi2f4LDVen9/4
TWtV1ihm/UrMgFvK/9VimlrES2LO5leuqWurxqv2OzXfTSLGOW7grXw3seft
uP/ncMl6H3xn7BhYIkaJVepBaiNqJLM++vuIjXKnlRq18Zh5Wo+X31pzq+bP
amoXR82zysnZZ/WcWZPdODDc2o+avtq+nK+JScZG6xzwMmvlDXs2FzUntbZs
DURMFiPbflFjEbMnPzFmsD/mwubE1uqt8cycSTsEF1bMrdgjwLvWH0aNr94m
fNra32CuY03khDM3NGfFJtSApxasFu2eaTsvi3PWR/Of497JB9cFB2j65ZeC
q8hZ2hGBsRNrL1ni3xHBy9UUprbA+6k3ZvZppUboXK0pia3r455Z790wvqsG
oRYxa7NHLpzb37Q+YYxWL3xHYMbUx/F3uZIcU6652jDWxLWo5lPWv+Tw2GeT
D8uvrTHJTcDqoRb38fABfaGpx58X69nU7PBzuZKcqanvPjqua4Paov5R7x3P
9NkzHzL/1Z6PXmq+xmex/+WBx9buxIihT+wetjT976nR06EONfnqqVHTtrZt
jtWOih4PdajJ98QktTzwvBwe+emMFzsFJ+xvCJuu4uVXw9ZX7Ff5fcyvgsMr
7KNYc7d2bc4nd7w4ckXzs4Gvq62Zy5p/rTaKZ/jdqn5pff6LgfFivTmftSw1
I3PBpn4DhqnxtteG5j41OrXtM5Yakz4Jz2mHRs4kh5j61F5LjVbOaa7xudBg
61Mj31Cb7fil3NCcyNzIsdxj5mCHBSee/R7gqXpeU8uUL4LL1k+GNUpr8uKd
z7fW+ee4p8lpzgx+Yc3MesVK7m7NxdyWd+47BbfJ9nY8MuKRz5bvVzUAbHjW
N7Hf/uiwh0Jsl8ObL/mb9mTYi+FcfCffzZxDf+ybR+wyhzWXtQYw629qlWKi
+R+2Yw2m7xL4Uz4dPiffEi+qfA9+Za1Y6bTdtHA+uZ9Y4f5/Pvib55L61Pq4
1xzTXDPJNYgp1dxGjqkv18Cv4nqDm9Z29XF93RqptdL2w/A9fVCtYtaMb4o1
tZY89fqNl/tvDHsv1mzJ1e3t6JstfJV17Y8JTUJtwnjW7xV6fvljcPYm9hrb
xDBzuRdFTDG2zPfJwTHlmtYP1LeMiT5LTWDmP48Ibi3H7ncLjipXzdicepvn
Jv+290hM8Vlgembe3frldhE/5KxyVzmqXNUYNutV1jesIVnL/voST9bEb3Z9
nxhlLcAaWN83Yuzk82oh+LE1olnftPdr2/Cfol4tr5VXHxtzUXNv4rf9Pthg
3izys2HNX/6mngh/adit3F6O37eM+CGvl9/3+0ZOZG5kDLfWYbz3mjlAZT3M
/3y2Nqqtzni5QTyzW3uxt4O/Wf2edZv9X6+INTNfr2fGtYmPR8Sc1FmtNTvX
tj6u+QzrQ85x5iPWDncLDi+XVyNo8N3GPslV5ayz30Nt3xrNBWlqWerf2rI1
KWtT3dqWNRN8xVqW+bJYac5p7qnekd+wxP+vLPhjjUYefk7Y6OzX4R71EDFn
5j9qT+ar8j5zaevvDwyNTq1OvjKw06p248H3rId1ayHq6+yZta2pednTJy9m
n4d9Xuok60M/cc/d+2zPDHyju9/EP2s61nYcZ/MBfKGao5iLnBq/6W87thZn
j1+3pgB2ZDWs/SPfsKY4++3Uuy+ImGBsUE9Uy2vqOWrs9h4YE6yVaE+u5cUR
f+RW/ma/KJ5vLmMNw1qGGr1avRy3W1O01npqzNl6VJefmPMyB2s9jv2tqb8d
EhxNrjb32/6tl8RaqD/Merf81xxMrfSToUGpRZkjjZ1Dc1N7833Nq6p7J1+z
trNjaHBqca6fuaCazdTprE0cE5xb7i1GiVVSaXVB52fuIH+fzTAXLu93Yuy9
nFWtdsbfSxb8VV/yXeVL9o6dFpqpOqj7pR31m8W9Yrb549R4twgbH2sj5hh7
rPH0U+J+c83EujXrdFeElitGDesn1irtIcV3+gdCI7Vu5h4ab9rhYetTn/pS
4KuxzzVVfxYDph7AOqjXNHP3LZf4bs+Cmrc6N+81e8vw76T9YMcdO539na+J
OUx976rQxtVc/E4Hp9UaraHKj8zppp6hlquGYL5nPJHnnLzUA9yEP4QW6Tk1
AHN/752He2MuSZyyf6jqK9ZeyDWGvTLWP62Pnhrcefbv3G7h0NYO1Xtvv3Be
a3vqnndYfFJ9yn5Ic3K44DCIWr9VC9J+t494Y47TyHntGZz1Uuut+Mww17Af
0n5N/HHgK3LP2R95UXBa7accGFy32ftHLLDHYRAvmlqp8cJak5o0ODbrf/CD
yh6qiVtLtkdOrbzaW7wuOPvk7kcG97ama213iEf2X4o76sVqg9YorJ/qT9jp
rKdan1R3V1uWQ9nvZv5iL6LxTG2H/KbJlY2v1srgV/ZXVWv/cJ+u/vaEwFox
VT7jnGa99KExV3syZ71YPcmeVXsX7Cci9lgrs08my/nuuuwr9tDV3NTPzN/d
U/yiWmPG7uyPsY/JHouxbdiAtmCfhr0xfYOwVW222594RvyGz9Z25ByT3/1k
4SJq72sihtgvXbVBc017Lo+P3872fN865uA560Hqld479FX7/9R1Lo14INea
fEn+Z8whfnfyye5z9f0XhMao1qhWMvVI+8XVTIw1zw9NUm1S7WLqmdjM1DDE
gj1Dc1N7U0ua+qa95GpKt425OUdrV+M2EV9n/9S3Fn53fpo9Ws0c1/rsHqHB
qsXO/M0ePfms/oLdz/q99X72o5rLGdfA6Zmbqk/Jv7ePa2OnwGM5o9xRO5n9
fnI5NXDrg58NzJz9YT9f7F9/YJ1GCVud/brGw9+Gb+vj9jo0Y4E6qRxcjeyG
8JXZL0zcsud41u+tx5M/9KsXf9Oe2Qv7Rmd/oHm2/Qg3hq3OfJb77cme9W9r
7J+OnMncsjwvcqn+s8Uf9Nezw/a03ekf4u+OgQ1zvtbwOG8dd3IAnqs+Xa8J
nDLXtyZubXzm1+KP+KAWfHHUJ+1Zm/q09b/rw46S/I73theq/2LxV7VZe7BO
XPRr67Gee8uiz2IzVY38rYv+6/8kGBet/5j/2N9h/8t14auzn1q97XfL+9gv
bf/J9WELs7/afpO9AjfsCZi9ATsHt5TDzv4D44d6iLYGjlV7S8Ak/9dgqCFi
01NfUS+Rg3wnfG3qLfAUS8ezv1TNgj3vD4l4ac5n7mdNx9rO/D1t4kXxLr7T
sMe/hi3MfvQvxG/mayPmOZdubi9/0DdPC+xJ8uNfBQZ17dF+ZLmqfOxDEXuN
gfbv+T8RxRzvFcGVxfTZv6bept7+wtgb92hsHZg6+5HMHeyplvvuvehd9mfb
e3ny8nz7AtTaT4x5iY1DLisGao/GU3s337bMz/z+uTF338H/XTCmzH44dd3X
BYbPfra7Lnjqb9o798yYiz1I6m2F37WeNHuS7YmyNwm7sB9Efd41dC3nYS3w
nnHNfvAipthPsj58VF/1mWOr0BrMrcXgcsFiL9bHzE/kUGr71ojV1+yXeVXU
Uqyp2Os9Y861gSX2NrVzAw/kOOaPatxq3fJF/39k9jh9NGKWsct+Q/8PwZ6t
cc/AZH1KX7I30fxCLjn1BPWK+wd3mf+PI2dW6zkrNAW1Be0//ybWxP6Yqla5
NvBfDLQf3b5WewaHNinWgjOzvmeOdWns59QfxT+fb5+q/OP62GP32v9BsX/H
NXKtitrW1cFnp77w69CW/R8X/9fFe4Z7bO/N1gumqLGTL5rrTs10y2XOrwwf
nr5s3qE+rj3vsNiXNWXjkTFKrQNftIZgLUH7tvY48/e1iz+YA3jvNrH2upAx
wD2wX1K+4f/Y+L82s7/8fmEPai9yftdXvdR8WM3XNXOt1IJnjxTxy/8BsFfb
nnXpujmi//9jD4u9LP6o/79l31AxJu4WuNt8d/Ova6KWaU+vvb3mYPYPDPNL
Y57YybMGXLS4n+bOxpg3L/mLfByu5P8gGFPGX3u7eIci57dfTBv9SszB3xb7
u/zK/WZ/+33CR+wr838o9J2mtsP31JuaPbrGavP/zRf7yIGJYuHs/1APPSfe
ST1r9t/o7877u7FWZU3EPNes+Ww1NfWXAxZ8s4akbmefgp+NqdYOd/wLupK7
RQ==
         "]], Polygon3DBox[CompressedData["
1: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
p1r1f2/UE2g=
         "]], 
        Polygon3DBox[{{1307, 1306, 1606, 797, 796, 1605}, {1200, 1199, 1599, 
         763, 764, 1600}, {1049, 576, 867, 1622, 1400, 
         1401}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0rWOlVEUxfF97p2LT6CkgpAQOgjuPAFUNAQoIDQ4gw4kBBJ4BAi8AQ3u
7u7u7i7BXX47Q7HyX3t9x76zz/CGcZ2mRUShG1Df5GvbYGlEdSrl93a4gBby
HXEZLee74Vpaxw/Bk3SKH4ZP6Rk/OqLuDR6x7grrLuIn4Rg8HFHpjpOxB06R
j+B78rn3APVI3hkqvbABe+N07EN9+RnYD2dif5yF5sVsHIhzcBA24mCci5fw
mLUX4zwc64x/+IvYHifa+y9lNgof0UN+KJpXPcpbq9bF3M7qVequ5h7Hjeol
2EG9j/bya4xrK5/PY6lSnuEB2rPUkTuPd872gs9cH8oF2X08TxXaqn6LsnC+
cg7v4dmmFpYt9pjAuO8iD+cvZ/AunqY2vrvrsln2GuXxG7Nnd+yd4/SwtKZN
slcoj194Am8bQ8V/llbkX+MlyuInupvKLZ6KOyotaYM6/ynzH/bP3nsLcRP1
v7Sg9ern5j7h5fEdD/1/kwepOeUb854qelHk8RUP4HXcj98w3+J43tsr8viM
ehDXMPvwxXe9LfoRuZc8PuIevGrt3G83/wlX42OUxwfchVeMybV2UjPKvud5
5PEed/ie4y/z26lGK9XeTsms/h/hyInD
       "]]}, {
      Line3DBox[{878, 1179, 1490, 1493, 1846, 1049, 1401, 1181, 1274, 1806, 
       1050, 1329, 1330, 1332, 1200, 1600, 1795, 1051, 1294, 1337, 1339, 1625,
        1203, 1300, 1052, 1297, 1574, 1626, 1206, 1054, 1409, 1593, 1627, 
       1056, 1414, 1594, 1628, 1497, 1790, 1419, 1188, 1629, 1057, 1424, 1190,
        1630, 1058, 1428, 1192, 1631, 1059, 1432, 1596, 1633, 1061, 1436, 
       1575, 1634, 1209, 1305, 1062, 1302, 1344, 1815, 1346, 1212, 1310, 1063,
        1307, 1605, 1817, 1348, 1280, 1065, 1215}], Line3DBox[CompressedData["

1:eJwV0cdKHUAYhuHRc47nCrwAFxawQRLLwrLQlRUsN5B1yLEbjQVUUEEFBQUF
a9yoy1hS7D2JN6NJ1IULn7N4+eaf/53CTFPifcbHEEIKhkKIfA4hFsEmoiFE
d2QVekOIZ4aQVs3pV1fgCyo527IcPSjT75Nr2MC6/pZ1zdanqvexx/kkl7GK
Fc6z/jvjP7jDb44zY4tY0iuwRyPvSX2LX7jhJM+cxwInn9PAeVRf4RqXnG7z
9fp56jnMcv7Lc1zgjNOln2s8hRlMc/7JE5zqvbVHK69TPY5JTHD+yiMcc95w
Wjgd6hGMYZTjLdJq8KLehftE2mUJhlHK8Q7xdONiuEusiNMmC+Ff4jnW+4eo
t4ol7/AVzokk5AAGOdmcOs6D+icO8YPzwXytfpY6+b/+L3ovv+MbDl4BrJxF
dQ==
       "]], 
      Line3DBox[{894, 1488, 1635, 1066, 1494, 1198, 1216, 1796, 1067, 1350, 
       1351, 1352, 1218, 1601, 1797, 1068, 1311, 1355, 1356, 1636, 1220, 1313,
        1069, 1312, 1451, 1840, 1618, 1449, 1070, 899, 1638, 1072, 901, 1640, 
       1502, 1697, 903, 1641, 1073, 905, 1642, 1074, 907, 1643, 1075, 909, 
       1644, 1076, 911, 1577, 1645, 1077, 1357, 1578, 1646, 1222, 1315, 1078, 
       1314, 1579, 1647, 1225, 1079, 1224}], 
      Line3DBox[{914, 1282, 1141, 1281, 1140, 1774, 1607, 913, 1139, 1213, 
       1138, 1773, 1452, 912, 1137, 1210, 1136, 1772, 910, 1701, 1506, 908, 
       1700, 1505, 906, 1699, 1504, 904, 1698, 1503, 902, 1696, 1501, 1639, 
       900, 1071, 1637, 898, 1135, 1207, 1134, 1771, 897, 1354, 1133, 1204, 
       1820, 1576, 1353, 896, 1349, 1818, 1132, 1201, 1131, 895, 1819, 1197, 
       1275, 1196, 892, 1623, 1847, 1487, 1491, 1486, 893}], 
      Line3DBox[{918, 1508, 1703, 916, 1144, 1227, 1798, 1080, 1358, 1360, 
       1361, 1229, 1810, 1317, 1081, 1316, 1363, 1364, 1648, 1231, 1448, 1082,
        1447, 1617, 1649, 1083, 923, 1651, 1085, 925, 1653, 1510, 1706, 927, 
       1512, 1708, 929, 1654, 1086, 931, 1655, 1087, 933, 1656, 1088, 935, 
       1657, 1089, 937, 1582, 1658, 1233, 1090, 1365, 1823, 1151, 1235, 1319, 
       1091, 1318}], 
      Line3DBox[{939, 1150, 1226, 1149, 1455, 1841, 938, 1148, 1223, 1147, 
       1775, 936, 1712, 1516, 934, 1711, 1515, 932, 1710, 1514, 930, 1709, 
       1513, 928, 1707, 1511, 926, 1705, 1509, 1652, 924, 1084, 1650, 922, 
       1446, 1450, 1845, 1616, 1485, 921, 1454, 1146, 1221, 1822, 1581, 1362, 
       920, 1359, 1580, 1704, 1219, 1145, 1453, 919, 1821, 1143, 1217, 1142, 
       915, 1702, 1507, 917}], 
      Line3DBox[{943, 1518, 1714, 941, 1154, 1237, 1799, 1092, 1366, 1368, 
       1369, 1239, 1811, 1321, 1093, 1320, 1371, 1372, 1659, 1241, 1094, 947, 
       1660, 1095, 949, 1662, 1097, 951, 1664, 1521, 1718, 953, 1523, 1720, 
       955, 1665, 1098, 957, 1666, 1099, 959, 1667, 1100, 961, 1668, 1101, 
       963, 1585, 1669, 1102, 965, 1778, 1161, 1103, 967}], 
      Line3DBox[{966, 1160, 1236, 1159, 1777, 964, 1158, 1234, 1157, 1776, 
       962, 1724, 1527, 960, 1723, 1526, 958, 1722, 1525, 956, 1721, 1524, 
       954, 1719, 1522, 952, 1717, 1520, 1663, 950, 1096, 1661, 948, 1716, 
       1519, 946, 1156, 1232, 1825, 1584, 1370, 945, 1367, 1583, 1715, 1230, 
       1155, 1456, 944, 1824, 1153, 1228, 1152, 940, 1713, 1517, 942}], 
      Line3DBox[{971, 1287, 1288, 1528, 1808, 969, 1163, 1243, 1529, 1779, 
       1373, 1379, 1164, 1245, 1812, 1323, 1324, 1322, 1382, 1586, 1670, 1247,
        1104, 975, 1671, 1105, 977, 1672, 1106, 979, 1674, 1533, 1729, 981, 
       1535, 1731, 983, 1537, 1733, 985, 1675, 1107, 987, 1676, 1108, 989, 
       1677, 1109, 991, 1678, 1110, 993, 1781, 1168, 1111, 995}], 
      Line3DBox[{994, 1167, 1166, 1780, 992, 1737, 1541, 990, 1736, 1540, 988,
        1735, 1539, 986, 1734, 1538, 984, 1732, 1536, 982, 1730, 1534, 980, 
       1728, 1532, 1673, 978, 1727, 1531, 976, 1726, 1530, 974, 1165, 1242, 
       1827, 1381, 1380, 973, 1377, 1378, 1725, 1240, 1376, 1375, 972, 1374, 
       1826, 1608, 1238, 1162, 968, 1807, 1286, 1285, 970}], 
      Line3DBox[{999, 1251, 1276, 1542, 1802, 997, 1170, 1254, 1543, 1782, 
       1383, 1389, 1171, 1256, 1602, 1783, 1326, 1325, 1588, 1679, 1258, 1112,
        1003, 1680, 1113, 1005, 1681, 1114, 1007, 1683, 1547, 1742, 1009, 
       1549, 1744, 1011, 1551, 1746, 1013, 1553, 1748, 1015, 1684, 1115, 1017,
        1685, 1116, 1019, 1686, 1117, 1021, 1688, 1119, 1023}], 
      Line3DBox[{1022, 1118, 1687, 1020, 1751, 1556, 1018, 1750, 1555, 1016, 
       1749, 1554, 1014, 1747, 1552, 1012, 1745, 1550, 1010, 1743, 1548, 1008,
        1741, 1546, 1682, 1006, 1740, 1545, 1004, 1739, 1544, 1002, 1172, 
       1248, 1800, 1587, 1001, 1387, 1388, 1738, 1246, 1386, 1385, 1000, 1384,
        1828, 1609, 1244, 1169, 996, 1801, 1250, 1289, 1249, 998}], 
      Line3DBox[{1048, 1262, 1769, 1598, 1046, 1768, 1572, 1044, 1767, 1571, 
       1042, 1766, 1570, 1040, 1764, 1568, 1038, 1762, 1566, 1036, 1760, 1564,
        1034, 1758, 1757, 1562, 1032, 1756, 1561, 1030, 1755, 1560, 1028, 
       1177, 1259, 1804, 1591, 1027, 1590, 1754, 1257, 1175, 1026, 1589, 1753,
        1255, 1173, 1024, 1597, 1752, 1277, 1252, 1261}], 
      Line3DBox[{1214, 1064, 1279, 1130, 1816, 1606, 1306, 1309, 1308, 1211, 
       1129, 1814, 1345, 1301, 1304, 1303, 1208, 1128, 1839, 1435, 1060, 1632,
        1595, 1431, 1793, 1500, 1191, 1427, 1792, 1499, 1189, 1423, 1791, 
       1498, 1187, 1418, 1789, 1496, 1186, 1834, 1413, 1055, 1185, 1833, 1408,
        1053, 1205, 1127, 1809, 1296, 1299, 1298, 1202, 1624, 1573, 1338, 
       1293, 1295, 1770, 1599, 1199, 1126, 1331, 1328, 1787, 1495, 1273, 1180,
        1400, 1622, 1786, 1492, 1489, 1178, 877}], 
      Line3DBox[{1278, 1292, 1291, 1264, 1263, 1805, 1047, 1125, 1695, 1045, 
       1124, 1694, 1043, 1123, 1693, 1041, 1765, 1569, 1039, 1763, 1567, 1037,
        1761, 1565, 1035, 1759, 1563, 1692, 1033, 1122, 1691, 1031, 1121, 
       1690, 1029, 1120, 1393, 1689, 1592, 1458, 1392, 1785, 1559, 1391, 1176,
        1457, 1390, 1784, 1558, 1174, 1025, 1803, 1557, 1260, 1253, 1290, 
       1445}]}, {
      Line3DBox[{560, 637, 1803, 719, 1752, 546, 624, 1802, 1801, 718, 532, 
       612, 1808, 1807, 760, 518, 601, 1714, 1713, 506, 591, 1703, 1702, 495, 
       1635, 582, 868, 1847, 870, 869, 485, 1846, 576, 867, 1786, 828, 830, 
       829, 1830, 482, 573, 746, 726}], 
      Line3DBox[{561, 638, 1784, 822, 691, 1753, 547, 625, 1782, 819, 687, 
       820, 1828, 533, 613, 1779, 814, 681, 815, 1826, 519, 1799, 602, 810, 
       1824, 673, 507, 1798, 592, 805, 1821, 666, 496, 1796, 583, 799, 1819, 
       705, 486, 1806, 577, 1787, 791, 695, 831, 1831, 832, 728, 756, 727}], 
      Line3DBox[{562, 639, 1785, 823, 692, 1754, 548, 789, 788, 1783, 786, 
       688, 1738, 821, 534, 785, 1812, 784, 782, 682, 1725, 816, 520, 781, 
       1811, 780, 778, 674, 1715, 811, 508, 777, 1810, 776, 774, 667, 1704, 
       806, 497, 1797, 771, 770, 768, 1818, 657, 798, 487, 1795, 764, 763, 
       1770, 761, 650, 790, 1832, 833, 730, 747, 729}], 
      Line3DBox[{563, 1690, 640, 1755, 549, 1680, 626, 1739, 535, 1671, 614, 
       1726, 521, 1660, 603, 1716, 509, 1649, 851, 852, 850, 1845, 866, 853, 
       1840, 854, 661, 772, 1771, 660, 707, 1626, 654, 1809, 765, 653, 826, 
       1788, 697, 737, 750, 871}], 
      Line3DBox[{564, 1691, 641, 1756, 550, 1681, 627, 1740, 536, 1672, 615, 
       1727, 522, 1662, 1661, 604, 510, 1651, 1650, 593, 498, 1638, 1637, 584,
        488, 1627, 698, 1833, 834, 860, 859, 1842, 861, 738, 749, 739}], 
      Line3DBox[{566, 643, 1759, 1758, 552, 629, 1742, 1741, 538, 617, 1729, 
       1728, 524, 606, 1718, 1717, 512, 595, 1706, 1705, 500, 586, 1697, 1696,
        490, 578, 1790, 1789, 836, 838, 1835, 837, 483, 574, 752, 874}], 
      Line3DBox[{567, 644, 1761, 1760, 553, 630, 1744, 1743, 539, 618, 1731, 
       1730, 525, 607, 1720, 1719, 513, 596, 1708, 1707, 501, 1641, 587, 1698,
        491, 1629, 579, 1791, 839, 841, 840, 1836, 484, 575, 753, 731}], 
      Line3DBox[{568, 645, 1763, 1762, 554, 631, 1746, 1745, 540, 619, 1733, 
       1732, 526, 1665, 608, 1721, 514, 1654, 597, 1709, 502, 1642, 588, 1699,
        492, 1630, 580, 1792, 842, 700, 843, 1837, 844, 733, 757, 732}], 
      Line3DBox[{569, 646, 1765, 1764, 555, 632, 1748, 1747, 541, 1675, 620, 
       1734, 527, 1666, 609, 1722, 515, 1655, 598, 1710, 503, 1643, 589, 1700,
        493, 1631, 581, 1793, 845, 701, 847, 1838, 848, 735, 758, 734}], 
      Line3DBox[{570, 1693, 647, 1766, 556, 1684, 633, 1749, 542, 1676, 621, 
       1735, 528, 1667, 610, 1723, 516, 1656, 599, 1711, 504, 1644, 590, 1701,
        494, 1633, 1632, 703, 846, 702, 1844, 865, 724, 742, 759, 875}], 
      Line3DBox[{571, 1694, 648, 1767, 557, 1685, 634, 1750, 543, 1677, 622, 
       1736, 529, 1668, 611, 1724, 517, 1657, 600, 1712, 505, 1645, 663, 1772,
        662, 708, 1634, 656, 1839, 849, 655, 858, 1794, 704, 743, 754, 872}], 
      Line3DBox[{572, 1695, 649, 1768, 558, 1686, 635, 1751, 544, 1678, 623, 
       1737, 530, 1669, 678, 1776, 677, 714, 1658, 671, 1775, 670, 711, 1646, 
       664, 802, 1773, 392, 709, 1815, 308, 1814, 766, 306, 1398, 349, 238}], 
      Line3DBox[{723, 722, 1805, 721, 1769, 559, 1688, 1687, 636, 545, 686, 
       1781, 1780, 685, 531, 680, 1778, 1777, 679, 715, 672, 1823, 809, 856, 
       1841, 855, 712, 1647, 665, 773, 1774, 804, 803, 725, 1817, 796, 797, 
       1816, 767, 795, 794, 1829, 827, 744, 755, 745}], 
      Line3DBox[{741, 751, 740, 864, 1843, 862, 863, 835, 1834, 699, 1628, 
       489, 585, 1639, 1640, 499, 594, 1652, 1653, 511, 605, 1663, 1664, 523, 
       616, 1673, 1674, 537, 628, 1682, 1683, 551, 1757, 642, 1692, 565}], 
      Line3DBox[{825, 857, 1689, 694, 824, 693, 1804, 720, 1679, 690, 787, 
       689, 1800, 717, 818, 1670, 684, 783, 683, 1827, 817, 716, 813, 1659, 
       676, 779, 675, 1825, 812, 713, 808, 1648, 669, 775, 668, 1822, 807, 
       710, 801, 1636, 659, 769, 658, 1820, 800, 706, 793, 1625, 1624, 652, 
       762, 651, 1813, 792, 696, 736, 748, 873}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzMm3kw1m/47wmFRIgsRYoSlaUiUZdCkQhlz5YltFkqRSiyhWxl37fssmTn
tu9kyb7vnl2EKBwz3+f8zsz3nJlz5sw553eef8y85zMfz/O57/u63td83i+N
Zw/4zCkoKPZQUOyT3P1LBflbVIs9GFcg0NLAuWeUMOxayms72Qelx/cLMTZ3
A8Hh9o2b+/lgUJBlk3gwD2qHPzWpjkoA/tCvKG1lIoydb3APDyuHHqkQ/y7K
SZjocXty9agNYKX69Bzws9Cy5QeeTw+jRSGrqjCGAJj5uRiIiUyFwvXmLKbC
BURUnrHH+O2DXjz+guheP0gqkWDjE3iNSCJB/Z6EfmiXM7u4YqUGAUeNr9vY
PECkB4uFfCmp0DxOqNFQZEBG2TfLLiQ0IJJe4l4phUJoCX1OrcKYgkIod+Q5
k8MRiYP9ktjGZegUaKasu1CFks2rJG2tcIioqu6swnAOfph6vAiWuo0K5Ed2
NpPuI5znmRDPY6swyd/5kn44HtUY83QTZ1XQWNn6WZMiH8BTlDxXPyCJalS8
GWqFZWDQ87GarokLEK6cO+Am3ICKBhxP8XYlwYL7vZlW3BLMvTc5o3YqCIqO
j79XdZIEvIYf09QaG4wpcLPWjARA5RfLV6LGOYCX99RNyg+BsYNliS5NsdDo
s/RF2F4GMPLTjp/RA5juLD9YyScNPenhOyYq3NDoklNbLzYPRPZQo2cBFNAo
KcD399cYWiywA3w0JcwE84V1nuyDQrvXZ02/qCLCoPWzAQlJ6HePUmEwfATJ
L178OOr9GxGH1uQ5b3JAV/uXrGx+AQhyKthM+/UJkbjF3kkb9kLHGsNTjouZ
cFw81+oPCkQk1nc/gnxuQad3JvWFwH4UyODRrXqaChGbq+0pt1Oh25ZAGgw2
Rglv3jkF5dAgwp8Xx28sSUP/dYtjB0WzUe6e0p8ysg0Ilx+u7nv5AEx0S6aG
K8qh0o5N/R8/HqPZ05Y5Tp/fwmJSTo/6JKBqA51Ow1MSKPLjsYOH+lWBVLq9
/vLue1SmbJXj/S4AJhkyHx5WeQM4573U+asvofT8qBG7ZCPgDK27LYd21/Fm
wNe9Z59A9db6Panh54BNPJfsceEFTF3CVwmc8oeWt2zvlp17YM4gXeEO3gbm
fzG/tDHvhO7T3/n2M3ui/CPfJe/uiAOxKrqcm8kc6gYqc3J5vdFiBuHU4qgs
zDQ83Mk3S4FCZrONRmEJRNBIe0286gpDfBLVovt3IIVvSjNCm4SIdp2lxS3s
0Ot2gXLfLQoIuR1S65e7DxHrWPW3t89Dd6hPsMiL52Cic6dnPscKESuWjv7Y
IEJ3WySEJTGiD5UtfgOnTyOidVecdrgb9I6++Pth3BjFar8OqAgeRoRw6hch
39th8IaAF1+sBcqgsz2xc6sX4QJTsamb6TApjG93OeqFCs1LF5TfdqF5sYUQ
vS+iMI9hkOWLPoLKTXl6PLcjUU/j6t/qF75AtFCmp2f4g8ri5iWn/4ZAu8PQ
5IxzDZBooGA4nB4qDhtrhA8uAlY4dn/3AwJMs1Ycf7jPE2qxVPkBWRdh0Xf9
tIY1C8xsXr7y6qAktF0JKrRsioHJ0tZ7tyuPANa6O67/gz90xnzjsF4NQO0l
LgUlAieBeBmrHWsZA7UixjK8wI0W788viG9PwOxVySHT/itQUPNiAq8oiPAV
XjTVhQkwUpLdNxJ7BVLKnKb4zh1BhE27gNBJFei/NF2rZpgAn7bpVudOSSKi
3tv14/Ev4MelQVPXto9gY+JIn1kgj4hac8Nhyvvgh87EfYyzBfLoFPjquLaO
CNufB85UykL/LW1nmfV+FGlXyS7KWIEIJ43+DGo6wrDupl3GajhKfXBDefqQ
GsLd0JOciVuHyWzdwog7p9DXkSWLyLwnaIEms/DELUWYP3ZCSSPwNiqKHM5s
9GNAI3/0EnJUFgGfRLwRJf8Vlbh2UZbEAQqeTFW5ZfkISEMU9hQULFBVUDcs
9+c7LFYkpFJcV4UZEmvBTiwb1D+3VVc0FIR5piZ5P0YMzEeVHO7hWoe2bLPC
MBo3GNhMU785vgz4oV4R50AstBmtVXUqvkA/hC/8FfukB4TQ6OMK3ZRQTVIO
z2XoRguLStODHuowO6gWT3HIDwpe9ZzDyB5AeI5D1bZje2BcNnDbL8kBUq88
MXbPLkEE295u6lYFGFyk9loPvQGh/kNPcsdtEGEKJ8Q1EQH9Qx2rdsz3wCGL
e3ALm7GrD3DFKllA/2xQtBrfOfROUo8rjl8GEd53Jh9U1IfBQuEl9s4eFMaI
XT1f14DwaTJuZ573w6itVqLx70SU5PaQUXT5EsLOiB6UUpeFKVXiE/+IJpSV
rSc65PoILaissG/WHYK5EcHTOJrLKH9Dl/BbUR1N2o8oPb/ADzgd2ozGmxPo
W4RRbnK5BWo+cpbDbQ8vkO7EZh4Sq4XqV0FX07VuwwLH8Njx7mcwV7upP3Iu
EBo8uS/y65+CGdUM1jqZh7C4vE/oU9p9aOP9JtQf4wSdE9/PSD+NBaKqUnXY
w2hoRrUc9QrUaCBUSJz9PBYIHH2li63HAE14DjVypaCF+29W46jbYe5tTQlt
zyUoEIs6LM7qjXAP6wOLeKNgUifoR83xV5Cavj6YnHIJ4YcfqPH44GHEm3Y9
1sAAwja14lvw+xBB7w5FgpMRDNmiFdoYZnDxUlI9256MCIZZFreKZGHoIQqT
ZsxAr8dCTSS78hF+OyTjqCEJRli9KyR+M6FP9AaaVMlnEJ73wImJNU0Yd99e
P9fgixL4j25FHN9A2Kf9HVcoL8A0JYvoNestlDZE26PAPIUWlAdtcD/0YW6a
LZ8moQd9lbET/718FE21Potau+4JWA/LfS/fG6L8EfnUrFkb1CvATkPR0QtE
2wAUY9QKNUbKN6XeiMHcbUHhNi0VWHgjcX9VPhAauZrC9JZ6YfJ57qFnj7GA
ncLR7rVOg1ZKxHqozgCqC5Q/3qAKAdKBCFvccgY0JjoKWOzsR0OfDDqcXhgC
vvmcRnL8DFRd3JkdkbdA87UK8677D8D8WfqkIY5HkI+hqxWpS0bYHNqrqzyN
MOUWcFu0KQ2+UBzQtnxtivAX/zxbWSuAcZZHhzZd9kHEdS2xX5J7EL7h4OHA
l8dgZJO9kaOLC9wc7naHRPUhfGdaJknaEUZGLQul02WR7WgXb2CDFMI/OdFr
qh8EY6bvKWfdLVGQmnzg0ktjhPNrVsocHoVJBbbNcXtdFAuPl0YrjRGG6BE1
nnQSpkubsNHMyyilzd+oMm8ELfDcXtt/chzm2R4arQvfRllS3kIP1tPQtFuR
0eqfUMDuZ1CtvceOvnrsY0TTxmig4FGgQEMoEL6cE9bzeAa19MJ/pT1TYMa8
dmL9eilgGOTEzh25C41Q6RrsIgIjuibl+ZePAt7sHKWF8TA0p+nUXmiphpS/
DqsaPx2AZDg6rbHlBfWLd8POxVeg4fxFhXA6HcBHzWY08e6Fiqb8qq8UUmie
tz4zblkI5vuDu1VyJiA/Jq+Vl7cDYQgW9A3HPsJ0tBZuG8sBX2QFX9w5bbLr
r9r46eIEYFIWQ2X09gxEmvP3PG9iRnh+hqkb/Wkw/jjPROFgKng8E+IMy/VF
+PM2Fo5XYmH8ylH5TUUrZNZazcPiV4BwPfyKDTXBMBGn9kbhtyDy/zJY+k24
AGGXe1m1r3bAFGxXr3UJocjy+rVgFymEMb/+AmdsATP2iXyPx5pQkkKPZkRU
JZrvs9Bm/5oJ86ZMO6EyfSitp8Stme4emh4zrYp/mwaYDsH3jx2yUPYpozXt
x3xoODnx58CcCBDoGnUSlLWgrVdL873BAMyXRl/+3tYLc08KRHxMjaDnjOZI
pgQLGvCNVdU+LQN4zUgHubFcqIqrHORmuIzwMdT4sYpMGIne/DnHQ4GKZrK/
3emUQ4vOxqP7VZhg1rzziRHrOVTzvPv9Xhl/1HEB+4JyZBSIQ9c1tk6vo0p8
+Z63wTEwZttmXsmVDnihS1WmYdnwnf19qKf4I5h0JPrHBKQBVlVlrIGyFjoV
l8I19PBoksKaNcFqBrBp936E/A6Hipw1PkvNHwh/4pM6q2EkjMX+4HfB06L8
E4OM1Vm6CGPonDimgoMZo3NDjz8woHKDQrVt62u7fvgKlaqlBeD5ImYcD66h
ykwbHZdPXYCuUb6hkDsOJF+OWYxdKTTEmUx+DxWEhSCv1vGd4zC7mj7lGn0G
vjd9TpfSXYTegDSuc4Z/gWB94tryeS9oPXOUVnL8FJqauB7X7m0GmNKI9oEb
7Ojb8sh2ZLcGmlZcYvw+EANYnuOngh2tUdnVO05zFnaodj/Ni6U0DiC5RX30
etAHTcYiWvZ6/TB78+SqiRc9LDKeoA4diYTOz4FtFDfsoZruJbMYPQJil9Qe
rrMa0HTr4fRfo1Y0nfPsWunta4BRx4VzfmlG+efvubmeDEYzmIwQrh6u3fov
dm1SVBEVWUlhjk6vot6QzG4DTXcgailH7cm5BM33xbWZI1thMq9xZOoENWCj
i0Iz6V5A+6d7qSfz7yKP32pLA1+dgST6raeoLw0aBEd3Rt/oo+lf1iH6pWKA
kW4fP+E6gApOV7cwL2DRUB/pmou4IBDOliY+P7o798Rsbqh5H4Hhm4raDwJf
A97DTzj4IyO02l3EnJKbROX2lMKOD38AiWcdW873FOrejVO5ygWiaYL/WS/R
LMBonZ+1Ort7nzt6998onITeCrszytepgNA7ptNJYQXNDixe+3NcUKO6nFvW
LwkgYjg/iNyMhdozH9YxSe/QdKm5QLbAK8D4hXkfbWaHYg99hfvsN4FAsY3L
TFOBYTP5TNdTqVDtwPbF4pUp4LUTJ0LKsmHUL+tUOv4gtDysLpNIsAGMlMis
vIImTCc1Vwn73oUfh8u7E96uoe/vkL9v6WEgaE8ZaZdcBITdxp2T5dytt+cT
fSlGYPibWDf/mW3I6kz6Lhi+65OLLdP7xSih+5OGtOivlxDFKZDnERu3Oz/y
JBpgDKDdgz9r8H00OFcdvyN0rAaR5AoYrHWroE3hWryNewdyY8dHVJZOIhKv
q6mL/zZ0VModc2ikRpFtvydEl3IRMdWvvfzWOehR4/j42D8LpYdRpFSfEUUE
ReocCy8cDMWUyixl30Vl9gorvL+p0YJ7JF93vznM2XuaRgs/QHWaoVdw+giF
cfBItF2uBFLc/DHG+GlUwb8/5A6uDWYqGQtNPjrD4lJRVEJLNtRJe0Y4R6gA
Vrnj9eMYHEyFrp7JLqiHjvq/PkYBTjBTu3Zi7IkhLO4XOKRFeghd7o+HsL+c
0WhymizuYyLgLC6qPT6TC5VB91sX49oQ3jTH7315FIyGZeMCD/1BhZf8NpbC
9RDmADt7+tFumEGk1N6zH1AVxvnv9nFbNJCJizUWygSC49t5sW9VqGR22z7V
ow9mj9FdcMm6BIu5h+I/GNyAehfhg5253IChilNPYliBGaUhVjH1QvheQQqP
OoNgWChrg35yAPBczecjJ7ehnTbm0EakPpri9dL5FX0csNwLTG91f6ESC2VC
c9Q6mpxbYnt2+AjgKAqj5eNOorIx2ZbQ9AkYEFZuutv5BghJndxpzdao4kRP
wsM7tChMvrux4z0rkNovb+/XZ4XGsAcmV43mYG4zPldpvQ7mA+pyLsUGw3ed
h3lzR55C64I+sXUwG4hKX+/SHtTZPUfsuvfrd+u8wcK3vsZYwLzKZ/5dFIsK
MN5pRydo0MzVj/yuXfGAsd2Uq9WmRyU3MfvGF++gjuWkfL0JfSCuJa6lFtBA
0zpXTU3sZZh+G9usdEsDMFZ2h0fXT0FH/M7i1bwNyHhnsTYlRwAS+yXmJIc6
aDxFKcB+fbfOjH1aE2riAwzcjDr2mAuagy9d3RaxgLFW5oU3eG7Apcyvut/k
hLZ3rO+4P3ihrxLLRmUNuUAS6VC8rnYV6pX2LbEzaaHp37eAa/QbYOSN5AYt
NqBOxonp+v5UmP3K+NvCbwEWSOZCCRMxULfoOJg61APTJi50+yxaAFMcqfTk
/CA0e3xGmVUU0I/Rq3CeGQbCVa1Ubduf0PKkyjDNawjVWi8mB+Vu7859JXpA
cxFqO3PK9Ggd0PQgVdIj+3rAPM0OrPSIhHpeiwOi517ClOT3Q1QyWYB1xRZr
fsmEmgrFC9u6cTCrz/Wp8Vo6LN7i7g17Komy/nJVavpeQxMdSi6P7RYA9w37
lbTUiTIlUlPH5nbQ5I3sA2ubS4BzrT7pYSgK39JW6gqtfIHwOJjg/5MZBoOU
rrgdJkAVYxLdc+GTQOBRyPDwlICh5/iPgUk9kJXd9OSG6DFEnB98VORVDV3S
FqJHnTIg8szQkamVJUS6q3kTK0QNLaRUbIkoO7wuYnzlLgOIZNbMNnR+DzS3
SGa8xFmh997Pw96GuiDS9SEqbzk/aFMXezIvHIuiJ3XbRZZDELGz4J7g60bo
lqRG2mxiKOuQqcat6xqIYDxJCEHaMHRM+l7GnRWomSxMcmfbBNzDLOyUSTVM
fC9atZPzh7oYhksyF37CzIeGHAJdBCyOmmaZR7qiXMqJKmORKjR0T/WB2c4e
IGhULl+cuISqLO5hqS4UQI/tzV95voxAfLgydGzxCxRt0QxwPZACgk9CoMUl
ERhYsj3LMRgN1XLijfbt5wC/zPTqwHY0DDOoeSysvIQ2mmwl0xtNsBh9eVDl
k+zufHPm/hddG+jYvnAzD3rQPHVu/MidO7vniXL8Cb8ilL0SOA77ABFyHu1l
rDaG/r+0f+n44iGdrlSBJ2EOkfZ0mo6KvoXOFYNml8of8Dk+st8x8QQiabBk
BDzIg1aOZJblFwfB+M7d7Ej13TqspWV3LGcGWrDsXX7FBBRgftVjYH8ZIh3/
HLqgfhU6XGRuL3+9iBLldXck4j0R0cO2t+6pJfRyCCb1ISv0tZpJ9Jr8fYTP
vsGVFMIIo+zzMg+e6qIKjvkeD/oMNN9Lm3mZxhPmTxIMWwoPomrOlKDqDjmY
Gh+YT3EYBqzM3+HBd0uo6L5mYHEPDyyW6srdNz8Js7z3vr6p8YU8yF2ZCPoN
REopGUUdBejrafgxW88JZav0FraXuIFga2J56kI2DAo48Cu8+gD1DgOrSSHH
AZdbo/Rs6z2MWysbTHaPQHffB/4vaW9gSkspzofKGjDG3INj1Z+gbnndzK1E
DuGcm5xaind97HmurL53QZDP1slSYiOGiGGMutfdJ6FH5mE56VkiJOwLVmqX
k0KkS8ojpZ5HoK2eq+Yw1Vfw/JA3ddv2IyLptes8u9QKLT4hn5Ov/0RONKH5
x253IJJ8kSSb3mVoO29YxtOYiCJMjzid9ZdCxEV2JapyM+hy6/q9oFiF0mnS
g32V/BFhxDeiHtSh/7u97s2D66hof4ST7nNrhP1w/fD1lQGYymDb8FIyQnWV
k6KsEhuo2utN6vWCR0DS8aebtqNHZaPcvZ75NDB/el3ZCx+wOxfQ9zz3uoYq
/GZCFZ/wQR/X8Vc5N5KAsFMZ2J5VAflfSnR6k3Z9bUJXwVNhEejGyuILFLmg
/Olf/edJX4B4ALx0i+fgx2zeTkxeETRfPXpWJNUGsPYT7ZIBP2Hy16x2uF0E
1LSFsgkaLgOBss3TYfe8Db1vY6l4HgW1U0cEP1yOQHhzNa3CTHEYWeUIG9d/
DH2nH0zRS1xC1b77HlNnUQAB+2CkeHwEvgZv77vo/gyRaFJ+R5zfD523KIcT
R8qgJIIh5iM9AyIqJNKfNuWH3i4H2ba3jhAX7EXBs92ESO8NnH5vVEFDe81J
v18A3kHJuOKcc4iUCGs6FhegDgJvuYynIOOTHNRWSqaIFHNlSepXKdR1aVli
g6JQQDnD99wLhoj0Evj2hF3Y9aOGw9Iqqig+mCOOhfLv7vc5nPPq6gX4fjr0
/eyFJJTdeMHSX/waImT8Psbx4jYM5NX6usFun3r/3e7Z3BuEiWld95Zshmni
u1enBW6hAic7/ncFH3fnfcmKB06bMC4we/kJ3EPFXFbUm1ISgMl5dmFw2Rim
Jxh9tYPPoAo642oDSU6YX5RKv/HEGeaZ1SvAYhN9pdHolTi6AvjXNJafMuth
lHTIY74xBuX/lI12eDYEuKclYX9213NS9eBci08R5G4Hb65PiwMxgvZg95gk
9Khqiggyv4Wiy+ertlKwQHxzVGFD5jX0pFopPn0hD6lz75oSrkfv7ucfPHIx
btCM7x7qrT0An+bmRvdzyCFSxEmaIdwm1DM0ld6X8AN7E9YH6aNqiJSkzMa6
zwfqxHS0ZLRr0Du//j93LjUjUsAFlysDPNBwIn2FpZwZhTUtTOIu5yDSbWkB
jcpIaH3rxBNE2YZSjete2I4wI6LPiW2mjP3QQxz0dSrvhWyt4DyX4zJANDPJ
yidFQm+e684kBycqsxwt+pbvBzNbwEnZ0giLDVTqptU6qJjY4vU6uBrmsH5F
TA1/YYG3I8d16yXUShcw7WuJgfkpqYpb9vdgboG/LtFlCGobI48/5w6HuQ6s
yMhlS5hfvjFYIrkfakltK6/X6WD6zw26s2OPAaMxii7iT6PsE7xXBK6oo7EL
9iGfAnGAt36Unuc9AT2d7IyXjD5C3+1+4UeiS4DPsnp/oeEKdNXncmhu4GBS
OsduCPsZsApvW1HIe2gaeRScUPcKLfq8Z+R4NQAzXzCP/lwehPZY8375oGg0
azq7FqtpBguR7IIbgntRZYEt6aTzFpoWXs4ngAxgWfPvUT/fj0qcbvQOToSg
eafTT3P0zGE+cFVpqI4H1chFX6BC5dDwVNlPTJcKSLJPng57bqEayj+NaoMh
qGrcSs+/zglITgx975xOQg+tx+NvnvOQrB8dJuSYCcRsjY18dwfoPvt6wjO9
ELoO6IWmXosBQp10dY/yO6jH0Mpw8jegxTKs+60NK5iJy50gWC1As+tMfd6d
dTTnL3ZRdAsL80N7vPZ4v0RVvAKL5WeLUSMp/uDqVVkgXQvULfPc/Yb+pK/V
erxoUCzaVNchf9dfZDWkTXBCl5QyRY+lJ6o/yf9xbWgQiB9aE8YPtkHX1Qdq
OgO6kCx5Na8kSgCIBAHL4nPpqLTm1fl0J30oJvRgxEoUgJT/IEw18Bwqtb5R
eqLtEiqw1HpkYvoMSKhfh6rqF7Rjy11UCnZQdwrvYb1hFiDMkTLdmB5BR3UM
RcT8NVQe2ntVcygPiMRAuiH6OWjZcvj54sZe1M/FTnX05X4gqC9o3pK0gbbD
N04Z8iug1hMzjZvSAUD8nKNgbSIFTYkYWf3bm2iweMn23kNzwOMMHCqD2aG5
8YjfJQZ+1M1k8uz03w9AlKgpexd7G75nfOENSr0PsyK55heUH8KCdzoV8wsq
qEdmqhM7VwDbtSVYLl8Hk1kXw3tqe6F5eE/0xCMDWFQM0H72RwNmZl3buwMz
4IeaMfddG2vI/670F4uTA+I1Or3j2cbw/dPNk59LzNHMuQWtT641sGgQEHtD
lR56Lw6whhidRUXmf22YOM4B0VzNTNTiJaqJMk7J2RpB/Wwab6UNKoHwbSTM
Ifo7qtWK5xcnNcM3RstX8yuuQAqwlXj/qgtVfV47ftTTBY1za+hW6+cDbtO6
fSH/Oqpm2mOVJq0HI7rWkGQ+CfjUXGxbNT2qPj9px6zyDDoP6V3NHPcHYn/z
A5qJz9B9Pvuj2/wgDPLGaNq77vomA8UzNul80CywiRs/UgALtoy8oxlFMEtY
ibs7cwvamZYDgr8JwYxV73L90kdYtC/xxVytgO5ZevNLDEKoNWpKT4N2Dgjb
/d+qlZ2hVaN+clCmEc3x5PGm+ffs1geNY9e7uaErckyTeKIU9czI1dadpwfC
k71S7cYeqKiFNqJdiQLNPZQ59Ic0BQuxhy3XGEcRklHpiH6jCln8w00tbUVA
KlKTa3VxgdYP4juZWhEww1lsQgzmh8UOQ6agTBXo6rLgyxGJgxo/HoZAzxNA
DNy/8kLIBzretg90U+BgJIFtx0PoNeAWNp0NIhF0zpZwvkybQ/0LLhls7FcB
P/aGdvpPG7SPf7w/0KyKhtq//rG7KAZ4kxRl/hQTVDLYy5mgqIsGj14yTldT
3J0fnV89esEDbVHf/K0bzsNoWtibtHPJgKt//ZvhgxZ8F2gI/mZWgVKUznkq
O9wB0p7nmsp/5KDjdnk5Z/Zp6PrJ3Fj2ThwIG38+WAjt+h0eLUKnCzsamRHW
j7vYBLhtyfySjLPQErHwNmDpPBozH2faK9ULuLzqhFLHdGhzVaIeSrGDXl9+
YoI/PxByo+wcBtmg5U+y8rdwbxjTU2XzqTXa9Wt8tOxnK6G9sUJN5PI+aLaf
uswmVgvEkAdiGonB0P6gFndiQADVJ+UWyy/4ALGR4RuRNAvtbGlNYtbSUM1w
Jp3KWHZ3HuQRNZGggOab6fFC/dpo3MlElW8WC7jXgU90EsKhiaf1wu8jcWhC
lvu3xyUTwGlc6BnkNYfW6JScTk0/aLIYp174uHt/1Hyc7sPQri+WHDUVGYc+
x6TxU1q9QLDx+jn3kBLabhFyaWfjIe8+c8Obzz5AEr1zk+mEHrRMpzM/3xJA
nUH2ZkPFf3b7ld8WbQAOWu2T42zsBiD4LhNeunkOSCq9DVfohKBFJ2yGUvIQ
fHs39F1rKX+3Pl8xKZTcC00BL1HXpXeoxW/YmM26CYjtV48Q2cyhoayF75mX
GBqWenDWSYQG8DnCKmt/L0JNuD6/3lkpNP1JSlZ0iW3XRxw7XBEYBI31L3JC
EnbnwItsGo93KGHqhSTl63ve8CPFtpWK8AUaUrlK8JJRQOiQLunZ8xLqPkpy
/tKvRTjhQ7p0jtkwKRJ2W57Qj2rHi1RMW6lRl51aRfNvld19K1PZMdKH0N2N
1r2x0zAZ52ymUOAAOKbuj35ho1DHtLXq/GEvTNvPLDRtUAOmMLtAcJKIcpgY
A3nufEfDNKN5e4YPAOFM3TohThrKLbxfXNP+u1sf99TpyZ+FYe8Wc+mBNShR
svEQWasCwnUTRR1XIgyJuW9UD3BDsdzXRgdjEhDetNccjSTAoLAwk7tcH9R4
F5z1O88NeLmM3o7z4TBasO8KT7sqVH9LDp2c2gP40juf+VIWYfin32Mksgyd
ZsJpTzCXYW5D2YTHlQPm/n4RlXE0h678g4VVR/BoWpXnmtzfSVicfuTzM80d
CnPWGWIucSDiIW86+RsL0Cfhpq8dzQ+l2pSCX4drESGu9LKztS8M6L948ZCG
GkpzDxdM3FxFhPI7P7KaQqC/ybzg17Y8JHN0HeHnfYRIe5d1r3oXQCc22rdV
Tg2+rG6ubx/9jIh/b+uTJoPhu+VTEfzPX/ClW1flnoQJIjFH0TJefgOdLJz5
k1dYINA7VEqiuwiRrjGXYdM3oc38iVKqlzN85rpnnULlteuvxCuubKjs1iOh
F6VhRfApdhlz9MgTRDI4bGIzRgct8p29P06mIRUq6jkRkT+7c83GymlWamjf
TxXZRDUH5h8o01zb+RBJnXt7PukOtKpeMtzieAcmpkyKj8oaEclEuso+5w+0
sMZVHCpbQEFvqmO2zHIRcVmaWd2oFrpk/Yd+7ddEviWoIsTJBpF4AqS2awE6
GnwXxy2tkT9bbPYnziBEEjV6xMpxGdpDxsOKBjNQ4mAmrowpGxFP8RzAiefs
+qm6Tb2ihyg+inupn7UZEd/Tp3z+mAO9p87cTRi4iBJkuza93Zh25zVUH/nJ
HnpSrN4PPFNDeafrbOSt9yJchun8bJ0ZTEyeKK2x4kC5Z+OqzEIPIHzsFzmd
xhMwen+ewsk/H321GZvm//BzV39zWJAjAUY1px6iqkFUobSV9iVQD83tKzve
YZ0BCyMNrx7eV0FVmU9yOrfuoplfN84kCLyDxZKI7clDZag210Z653wXtKRQ
LCbE7QUShZoRcdoGlSpHxZVRF8Dcz1N2XyI/wwJr6Y7I8xKomWOXXd8sgZnJ
iT0DTJSwmJWnHbW3BGVBwMf8/S5oLOdm8umLTIBXztucla+H8uuF/X6VAQgX
IiY2HD4AE2i+dXuNE2qXO5Ujf7qixQ/SZj2HemHmTz/LGX4iNDQzcpt6q6G5
GVOa8JYqmM/f1gm/S4JyfC7DsEoSwo31rY0x/oLxbB1QTUmFamyJQwWXEcJ+
+/XRJMwSprhNL/gotqOypgXlytCXaCosOlg9qRmwHlzaPkHi0EE152m//ylM
Jl+7PLRn19/qCYkPfA+BJqoF1yEzDJpr+aylmykI8yVax+58+YTK8Pn6tLnR
qM1kkCGHoRpIrAPmZ7gMoSPYoP4ivSX081DkYDRGgMCVvvpx7iI0V4+dNjrO
j3Jr3f5WLRwFkuZNwV7lKqiL7atY3viMJsWeXJaIcwPcaRnv8Tul0JBWXhn+
+izg9nanvxVfgclrlvuXeg9DvVi2+RY7FuFEVlwz/wTDJFeXpeh1LfSNl49b
rEIRYYVyP1nNRcH05bGe+rpcVBRxSZXbXRphsBRKCqGzMB1gLel0QBYKg0Qw
J6TGAf+N49BMaiaMdO6ZyjZ+Bt+4xUWSL14BAscvWqaqYRjmPiDzrOMZVMSz
niigXQPCfnUe/AKCodk/SSMnd6Bcn27EvuQZEHTLrFgXNmEw0C9RwvEl5F07
HdkbdAMRA/z5Rj9vQo+T2JlPaQGQd+uWo/SECSKm1ShFXW+F7q6oK2wWwRBv
eTns27uLiCR+nMd4ZAraJbdoU3p+QLyop/WSwT5Eks+YNTlPgFYsMyWHnAh4
Fjtp/o6zRSRNqTeO2gRoWd28e1ErGjxK7AMJLIuIZG4Y8uzdQ2gu5pCfAQX0
ku/+Xo75NUSCFZzelQ1o830sQnPrCnplVRBURvkCkdSysmPqfaD13iUOv/0F
KHSE1cfMbhAR5y4dfduUCF1Ri9XvVEJQWLW25I6mOyL+1sxIuPEXuugqGgyM
rqPUFcucAx+pEGHo7zRF/UXon7w1z+Zvhb6sa0rlvGpDBGz6deogR+h/f3OI
ENYG1WpWHGxBkQj72tBe+8J1mHpXKfR5iB+KwkQONC7PAkGK/sXvGzQw9KLO
jovSGMrPux8r99MG3FJTxsylRBi3i9j/xyIESo2q20WFZwHvVrb3kbfZbh3Q
6diWj4aye2+nWI7pA74ymk5edh+M3D9ZkeL4F9AoiNbIVgDu3YaU4G1WmCjm
GSXOtEKFHn+Cvm0h4I9rEEf3HYSxtPyLe8WvUZA/sETxP/z8n9LRf7IuM8nR
ZrxUlvVvvQJDRVH8+cPX/+76P0u3zd0PGPxX/b/+rkpZVsfY0nc3/q1foUgN
8ixbEv63/u/Pf5b+n/38/3/TZUb626i+hl/8v3b/n4910qQdjv3v3ud/tr5X
GIgqr30G+f9Xr/9/rf9nr+//Lf3fvxdKxBfj8yYddudYTlcZ9zMweDo9/dOG
LTmHvPSvHDILcDRWWv0wubfrb9eN0DFXaNE8WP6c5TxUfP7OKLVjB/h7pgfi
z6TD6MzKB8f0TKi/+vDkjn0xYB8cPWvOywNTpodrubxPQJeorlY9Pz9Mhnu7
lvumAvZ4WpuwuC7kYVhjZEyoEPHYs3UM/iH0cUtWGjyzhsTtKbU96TGIOF3C
aupPCV3BjTpf+sbIOd55co63h5zjLYEHjv4r9Ga/EelQ5EEZVwrofPmq5aQ6
M/KmtKMvYz6KiKO+8XJ9YdC1cLwiNtEeRc1NFhcSxBBR9VXRFC8JfrxSfnUg
awqlaXrXaR3sRfifHJelsu/ByHFwqW9xh2q7A/0KpNuALctKkd6i3fVvhqO6
jxahiTXE2Y/vIywoyHmt3BWFObFKR/ZrZdAVmPeBaOAOPTiBRePCAiA8EaNg
WSqDvG9Zd1kKnRAhcf/bH0fwMIB0BzaHz0FS/qACITwAEZ2dzhRrbUGvwkl5
pyQ8OU+rTc7TipPztE5gK7Pd+FPNABErf4Q8OnIduhvo84Qd7yK3DTsJmiEW
RHyrWxPZ5gK9OtPS/YxzKGxbrz2uzgIR8GdvLHkyQH+iiUqktT1KTmPOCW1e
QvgvtCd74TGMmrzP0KPYQrmDQUyOW3oI08jKhvc+CNOjnrdtznhDrZpgtW/T
QVis9VleP60HM+ht+2OdJWhhGGedV6CGmee4jKsZ7LAYd/hPMO0V+F429v4n
ayOUOYyUywd3AbHnb7bP07dQZXBwpfaBIMKKix8TydGDqT92UXkUu8/HL+3n
On8rIrAyCpZHUMOwEW9o9ZYyJN99J2vD2IiI+46x8oQSoW/DiGfj+SY5B+v1
rxxsKLz6Yak39usmImo73GK9fRB+3FuOZ2xsQm9iim4cQJ2IyBZkNjN8EPo6
E1SO0/xEnxKeakQWsCKCU/+pYLZ4GBzoLOrzZEYJ/Z3jj94OIrx8pJXb3gEY
w1hK+N40RBnN+j49TMcQpqe4NNbuNEz3Hn45YVgEdX12okLGUjBvrWD5Vv4l
zN/aCfrjeApadoR+a51+D+P525c/uz0EnFqfevKmB3TY3bww/C4FJZdRy5JS
h4F01MQ85XEKVKTYCgjVnkKYRBd1jpoJmO4aH/zuFwp5FuaYgvImhH9xuU2d
WhhGf16zlO1lhuQJrjoR71FEeOvNhl+NgMHU7nkcywY5v1pJzq+GkfOr+uC6
lWRmiefZ1Vfxi2LvoX9GdeA0WwiyX/zg2c6dggjR4x7MU84wKEuYSn7sg4JS
dionVzwQfrtU51xyI4wcwFMU/MpGcexWbXxffRGu66eVQqM0THzSHb54kIC+
0JkXDHWXI0xyQU57xD6YYXc6/lnND+VKegR1MImhOUQtzOLxBhbM1t8KKn5F
BU/9lLzYJ9D425gnz0a+AX7vSDajiwzUjzgwfy6sgZmVN3si1Lhg8ZW0esqz
QWilOwq2Ewm78/+RiW7ZOSCIst6eMLOAtoOx1JZrdaiW/nri4xgeIK5wHv9d
yrE7332zjj1ZjDB7jvQZDfXATOYvF576X5B31UTHkpkf4VprXmmHKsHE0715
4zXXIeXejAN1fiLC4w7Zt9AuwYgClpf1xA9yTlWDnFM1IOdUOcBdd8COhT8J
EQylY85KVMOQFft89icMeuij2q3xegARDqueSyx3heF06RJZFSXkj8ERnq6N
IvzLY8LUz3EwduX0r3udzShKXNXpCkcUwt3Zin9idhgmvzAUZF7PQcnsdX0/
s5UR5p7JyI9bOJhx79sTUMSPMqbGMTth59D83sdLF0PZYOHUZT683zL6mnT5
TRdPP5rsj3rNVfcacHxtKTpnmKHBzTJ7slEWpmA8UjqWF7BWF4/S0mZDi032
gbvOhvDdMf+1dNMKEPVzxPtHHaF5ztgifu9x1Nq878lcUyYQM+KqWVfqoeww
b0Zuwl60qPXFNuypLMy+zzsq2qIEeSzvjXtVbBGObaldJrgEJhewS1wRTyGl
sOLQmfPXEF4x5HS9TgiMdfE65RDbyXlUZXIelYecR+UDz9cs2xJz5xC+I8BA
Q/MljExKWrDzZiO1tBPjnZRKCO/Jxy14ewjG9ugv9D19iXwoZLwanMURbqZQ
s6p/EiYMvzexsUihsE7Lo6XDPAjbsE/v18RpmHp/Pe7qXj2UkCFiLUgwQ4vE
CM0fPlQwu899dOvFH/TF6Q2jVCEjmqcPlRFI54eFk+u03Pw5KAurT9/h9QJN
lftKnkzXBmyIk8ZR5RBoqN73ZfZCBYwJCdcwxx8G3OqU6SMeZmi2rs5uCZKE
2oPvHC2364HEvi/bL3QvNO0p4saV/EBdWoKvT5oIAtHCrdxd0QlKDxKMfATj
0EKyDfHlrSMwp7mTQ3+/EL5OdfyijVFFWF3pW8pVKTBNJ+McznIYUnao49qY
BBEu6mQ56/ZFmOTdQXQBQM6dapNzp6nk3Gk2+OglP71zxxbhxaJHDtzcrUNy
Qu+08I5w8/5AWstIL8Jh/+YSFBlg4qbukadu/ei9cwG77u8vCKe4PAUfTsBk
8d2Et/Sj6FN7mjBd3rHdus3ZJG91AKYNmVY+a5mjOMnKhQ+BxWjRUfXQToA0
zIZm3Ndvl0bJRU/cigtwaG7O92T59TpYuJ30abbIAUqYIsKNivuB8NZ3Mvf4
RxhkuHvacZ32Hx9iy0D2ISlkH3L06rbwRjRrThEi6bwjTtFXQEv1LY6m3X5b
vr2kwhwwtDtvMj928voGo5JPlWv7X0HdpztL7tQpgMW8bvRLKIPJqLvtjzJ4
yP5hkOwffpD9QwIY2dsMSfvtzunHuGpPju2BjhKtn47Tw8iH06qpOXQAEVen
f5eXvYau0+fFHGRZUfSwhDT9kRVEdCEI6x8VgV7VjEfnrLih+pSOTX5uDmA3
Zj98chaAyXIfv5pxAWj0oM6IdgmHhW13NWzFQ5i1OpB3VuAA5P3pT/vAtXt/
SuKDTM0D0NdgpHvGTQ6SuEtbO9vHEHHgfle7Wx10zdOGHDagJ/uBu//ia2zB
RnPP3+vvLBCx5RvtJwocdNuxr9pUfkfu2wvS0y7CiBghYZMusAd6SqnicVs3
UAQN9wkmW0NEZKf4Vp60B/rQPofH716hlEH/yiKNOoSfDvUpS1mDEUvxsK6R
fKgV2M4Ne4CDReJbrzg6fpj5oCP9eFoFmjN1b2vJFsGs9kh9aFwZLODkbrz7
KQh5Detxqg6vEcH1pk2A5AgMWumIqoRoQ1JH9tiTPXKIaLMnwrdcG3ojRCVu
UIuS+7gbuY+/JPdxf3D4q2X23HcNEc1N6EcwlvCDUkJCwpCIXD6qzX5znkVE
8eu38qnloe+sRz7H1Aj6HHLodq9cASJkVI4qbTfDwIpfOIkiAiX222vxOL7c
rRvBHvGnp2B0kTdhgIEaZXPTfrmS+RNh98WurFpKwLSn0MJEZSfU5R+TMJqN
hfm4JKXj6Rowz945Z9hmDC09/Nzc1FYwqT6WzKwdD9haZr2PkvZQJbqft8ps
EWFmt+zuYz/D9COu0ylB1ZAXefPJGYNbCI+/a3Z7rhRG9vaebuJbguTHouc1
s+IRYT2iqEq9APpVTs9etbAj9+vSf/EmGuAqEfh14+MgIvzsa81Wewv9Aa16
7vv80IvKt2IO+N3+XimZXZm9CAPxz17zDxqjYE+hY18eWyGCuOG6C5sPDAu/
oJuTuInirQwM18T3IjzH0xTxETMYD7qN51XURGljSX/4WN4jDKbsxnOreZgu
oopy4CqH+ir/A5LbR2D2KtvLJgddWJSR0JgP9obW/Q7zEiW7/qDgqjL9LTfA
t4l3PCF+hgqnPP7b0rQIo1F5treABDMyqRiaeS/Is71J8ehOLcLfWlm5HJgC
Y5/6guQeckDyqo9gFqkREZ6x9VbRDMPghsX8b5oscp+98y8ehAncdsT72sJX
d68ndMtUT8AQe1l3rUkpst7I7dwY00UEadqIqk4CDO+nM2MI2o8CfG23PN8E
IHwO47pI9XEYNexKbuziRdGVFCqXOmsRLvrmY/eKcJg8mV6zqfkYpYQ/pPI6
tIowSZu8N1knYYbzRPwzByqUXV975bRkKJqn5awmft+EheOciRoC1dBgM/gQ
eerD1Md8b8P244C9uGbU1tIBLZ8LSud05qH7rQxat6YEIndtmrXlWyjnigt0
m7ZCi1/fXnh++A/MsoxShgId5N3wpa/cnWtwMfYvP/A9g0ma9cPFj5ggxXJn
beVPFsIPzNl/km+HkdCXfH1ydOS+qUTum3zkvskJnqfCatrdpBF+cvazki0V
jAR0p369fhxpM4/cUy2eQvisaVv7y0Iw+nDhVkxHHvrgYS4c2kdEeN5Hv99q
EWDc857euvMqihCX/vrrgsFuH+f9+KxRC6b2LggLVjOhxGU1CpnHtxFGQeS7
Ty49zIQnxHU7a6P0Fm9Y0HuJ5s958XB6WcLCHpY3/bzn0Nc7oS87GHbQFPsc
C+Z1IGA3FU/NdNpAQyldcM69XzDW/PaTdj4z4NqNBlhu/oLmb5kHP8TvhcY8
zpVE/FcgTsWFaJY0QFOJ3ViwkwfqVChwF5ftBaLHm7ImzAiUktrCic6WaJHq
l+74taMwO081ecKfGvI4GLAu6o8Rdl7MqEqgDKbOWyqc9mWBlEbnuz6sdxH+
/LwU5YNzMH504vLA12P/6pvp/8Fr+LC85v/I/BDhb2ibZ3e/h7FVR8Fj/TiQ
+Bs7uJ76AeEP3TM/70gH43lEFylRK+Sx8Fvx0XAywnl9t7hxOBUmVSeUBFdT
UehB+bRjVDII66Gt6/jXD6ZmM3cMdv1EfKnGy893MWixb7HvC90dmD05/zhD
+SRKjVX1eZ9sguZ50u/IP8mChUOprfay56Cj5W9bHqkO5t6EfGqXs4d59zfT
z85dJHMZp//hMgSzyFxGG1k/StYnyHot1NhPtz3fXX8crp2pfUUFxvdafYmW
/wI1PA8XG3lyEK7+8oOyr0YwnjRlLlrfhYr2Rp9xfn8CYfT2Xib608HMvYXx
toI49I0rouH3/SKEMVA7cshPfVcvTNrfewq6HtN6HXiDgdH4ZO97nB2As264
srbR9A+voX+IzGsUknmNfLJOSdZryHoWVBueuByXcAXhjM9beKfGwSSjP357
QgSQUt1p9bcNCGdvkXl+Xhgmlj1yCV8TUZ7bozYPljqE2T7vNZmtDtM+ghFz
TGXo67RoU8sIE8L8std6VL87z0bwSOVjX6AS3gyWE/cOo+nikPz8oEbANHm6
TNNIoIrHExOcr/eg5gxBJdIxVSCJD17dZFKDplDSVGCDKcy7ODD73PSHuT+f
ZHbwEdBl1SfeFQrQbvP3eIarHBA5f7HEXnlM5j5ukLkPOTL3cYasXyLrt8j6
KfTtivqIotNdNKuSH19kkgiLYSqEw/5zqMCVrfj6qxo0W+0+xxvsvluHPzmK
Mj9BxWUpZ349LkADz88Nz5dOACH+LHvgrVZoMWRyGPHZreO+wTC0JA0Y5djL
7TQj0Llh+LPf+AOkvAscu84mBSSaQwurAnpkTmSKzIkIkjmRIbI+RNbPkvUB
lBekudyiLIzm3P3evB1rhoVQ0ZSgsq+75318D8uNvWguQ6asU0gdFl6qUI+t
nURFEVo3qRRi0RCBEJickAcEHv8amR1OVEC0OFPDEojGSjgpq7ycAS/Ne5J3
op2cZ3An5xmsyXmGMmgPtNkJ572Dilj1xg9s2AGJhXtS+K81mTd5QuZNjpJ5
k3my/pCs85L13efJ4NM8d1cSTZwbf8PoKgO4ga6PAVQLKI+az8AyggFNxiY9
saRgBJyc4s/nQU3k3MIoObcwRc4tUECr1LMThO421Cgu3Mt85TkQe027nydr
k/mUBDKfEknmUwrJehRZjyHr+dAi52GuiCdB+4ULIoTPDUAMMsjH8+ZB83EO
s86fWqgjp+BWgKgCEH0+3RRKOEDmVgLI3IolmVs5RtZ9yLo1Weclv8fnJL/H
jyC/x7/zD5/yjuofPqV4i8yn3IRazr9zBzPzEZ526+xJBzUYcx14WXV/GfJs
lpbqgu8goupSl3C3Kfw4GIP/vBUEiRWsJVqHGhBxKbG3VsoUuoRGAuO3XP95
T+34nfyeWvY/3lPHUqpVPeM6j4ifPc6GqOzWr/KGxFvDrGQO5RCZQ1khcygS
ZJ2KrC+R9WuoJEhh2SpsP1qswYzyT3fBLL0D1au8PVA/2y+YER4EmNalxkc3
Q2D6QrbBX3V1MlfiR+ZKrpG5kkao/raInZL9gXCf8u781FODCf3JV7Qrpajg
UKrywboXCFPX+6T9lz5M945be1kuoorcYrtZZkU0KXLQyGzRF3BGl+n0ccZk
HsThHx4kavsfHkSPHhV5fBdbd3mHZr5kJolaTwGGQ9VUkcMelTd8VoRgTtTB
qSigQNMBxPVh8ftvJMkchzWZ43Ajcxz5KN/2UaCmcBWaE9/6VnKABxZGD3Sc
/TmMio8dOHyxLwIN9hecOWkGQND1kLSN+knmMkbJXMZ+MpchROYszMicRdI/
nMXDvVC/eltbKpMDZtLcD9sM98Bigezsi7vXoSEQ2yXWswCTy9S27aY7gI3M
dbwmhiNzE+/J3MQ3MjeRirJsgu2sJPl361uxONVaKmCdSqYVUSRKn/1S5nqs
GE0L0Nzp8tgH2DuMCzFdZijd9tnhqKlkNC3d/fhmpxRgoZjE8ayEzB3wk7kD
AzJ30I+qL3M1a/zxhkwR7gef0u8AKf+a7xNlJwgyFNhp8BUDElb3doViBOSz
HzAxC2f9hxdow5F5gWIyL0BP5giEyXoMWX8ByXiOh9ZnGYFUw0RyD6KAyjlW
pXzXUWiV9NhPX28Ai7jXEpQ8x2F6IyDrY0osXHrqahCoY4JIm0ceZv/agiTL
7imaXuF/8v+0r8n5/6f/5P+zT5K5ABqyfo3MBTAjp1cOEjlLDxBpGU9J2e8G
WUVbZ0r/0qB4vZbzUwXHETHzgDm9NQF6BIVFRSu9yef3APn8HiWf33tQ8zvc
uahhFeHP/JhbeqgEo39EvgYLHCPn8NXJOfwxcg7/2z/607V/9Pcs/+hPzSDR
CNusfWMJkc5vHuAM8Yd2qpYP9jPP4bXnyfo7vd2ItMGS+ppOGpI7+5I46a6T
10uUvF73yes1hErU/eqqf0UhDGe8iLXOEZiJsdY2rOJESCEg9gEbM0y5j59F
hraAdXnX+eOJOvrMlCB9fvojkLLzvT886IeahZ/RH/QqoXDo+jkq9Sog8mYF
+/rFwI9fCkxn9amgMdzFmbFPHHC0Cl3UJ0gwKeR1VRb3h5yHv/ZPHj5DgpyH
x5CfwzHyc5gjPwdXqL64RRK9NYQIdP44lh97YCh587R1hx/EW0U9VR3tRCTj
yKn5rmRobpUizj658U8ePvciOQ8v9k8efmLv1dk405LU6VpEeiPsi3m9Ao3j
P+HPmxeosCWkJW9FHeHuf+PlnwKYNFXacNbYQKXMjjKzBCZYpHy9VWKSD7ME
jhw3j3zy/uQj788E8v588M/+oe8l75+b/+yf3AwUK8a2v5/oj4g/+xKnTq5A
l+ii0LePk+QcuCg5B05NzoHvQN38z+UPMkUwL4+hXaargPlnupPr8cLQOZwt
phESC7Nss5UWzuywkDvWgxwvkP0kH9lPfif7yXroXKLWp3YZhplkzdl9tD6w
yJCiP0NTBt9LtY++82qGabpUJkMTM8BI1LrTTyCo8fmcU2+vinAVV9WopF/s
+udkndqEB6jaxtP4vvwvNITP16MpbAH8uv8yxT1jVN2/kXCvhge+s/ytUEFe
QKxxd++/fwm6/B28VQvvwdCaERXfsVjAH0h3HniQTvaT9GQ/WUb2k7nQ5U3r
pxh0BQbrqLJ1TUMBfzfsiOvmYej6NFdpGOwBfSJsoo618UCg489a+8EA1XR/
j3btoUA4E3fWsDV/mGSOp9QRk0NV8q5tq0nZqKwba2h9dAJIESdyfLNqoEvV
XjaYXgCavxc5qh/iBqLasOHXLR6y35Ml+z15st8Tgi5JcZnVCVZovLVSVxB8
EIj250ufjD6FLuq3Lil6X3b/f9f1Qk46IJaEykefkoLOxNLXaXuFIJJeKIDh
zQyQmM5SLZgnk33aONmnnf4P/9ZpzLP95u4CuDHh721ijwCJLT3o0pzO7hxx
bCy7RRBF11U4O69wA4m7jTLlxjFov+KZR7HvBip5EjdLdWlp9/4dX54FPST7
qEf/8ldz0Lbed7ApOhaVp+xvuJVnAiTaVcpbv9egzWBuekfjPqoRag9ZwaYA
ca1Ngt/qHbQs33mMwmNQ448WjXHXGCB+L7v3wEaD7Itiyb4o+r/5oryJwiMB
NqiZwgr75owOEOtHN5kCzaDlZKispVEuatVgU/5VcwqI2Tlc+MQSaC/uSkH3
d/fzkMd/Idu8w6n+3/hPEYVUkkiSUUSkqETdZBchJSqj7KwIWVkhKcmuyF7J
3vtl7733PDjOrESS8Tu/6+P6/fH9/Xtf57qv13m/7vf9fDx5np2X/HywcDUj
oeGFINTFx9i9DVABfIxi+1icNEz9c3t+mcZq9/e52//tz9Lru/tTfpcTwnY5
QXiXE9pRTU6gp+TUEoz+XDiATbcCwm9ek586saim14HONsIQ+i/znuU5Uw4k
qdKsUmlmVGO1Ok7jpAHl23fFe7NSgfzh6gnucso8V2usjRuLQ2ujcrJ6eTCQ
DxnObKU6Q88l6wXahWuUOTNJ0nmkBzinE5/+ivdCYzXuONexScCSMgwS9nDD
vDrd87y/uN1zBuyeU3P3nPW7HOKxyyH/djmEEZUp5HIY53qgOcWPWczkKMCx
NHx1abFENdRcXQ8CxyGodozq+kookKuH7/7ZGkHVmPuNP8z5UO6e4tHfVYNA
Lvh3y/7wOrRcuFGx/2cCLFj/uiqzmQ2L/z7/issShR5vjL9qoSz0ptQp7kx9
A2JCwr1b9xl3z2O7+ztZ2t3z0O1yju3/cE4eKtOOZENmaWjA4Xtd9RtmIJ0d
YDBinofW1CeiM+LXYdZC6PbFXhvAHTHztZc/C92eNWKZ3w2gqLZ8/0L1JyAt
eEoJalDt9jfe7f9mt3/2LhdN/X9c1HZSimXMbBvG0vrqXn9tA4Juic/+s9/+
x4847vqRUugUDtRqNVtGmaLzVidOUVPeo7jrbmK/dvsP7/Y/uNtfYJe7zHe5
K/n/cVdrx+vEERo/6OfW7Rqz4wXiqKL8403m//Ed+P98h+k2tHVsJ51yZET1
zzhbVcL5gbTsVE2VugIt29QSc9/CoFXJStR6kA9IVTWx0jcQNONWHfJ4NlEX
rW9/0cwzIPlvapj+4tv1C+93/YLF//MR/+Wf5Xfzz/S7+edoqG2RzX++qoMI
+8oV9vX/+L9/x2voYJZCNQE8I1+9nGFi3agzNG6S4uMSUYPgXSi3MbY9UakA
hB+ZnVFjCMY8uyO9d7ahtGgrceEmPRD1eCK+8dPDSBaDiK9cEZSNfBzeYjgA
RDZdarlPhjA6WXEWW3Vj17+w7vqX6F3/ovhfDnlmezeHjNvNIZOhfcMwwIYp
CJYyfF5lhlwDjAGr4cTkC8gLeu3Rtt6KSM+OnhXn7Yd+8/3PeAT0IdFxa+Ck
OiciHzbm+cy+B7o0E3sFjhX+lwfuo/qfPLDfbl5i+3/+T8G7mx9e2/38v93P
28HdScaI2U0+RJaqVLK0XYT20eRt+kJuuNzpLdYco4HI9wlNKitmlP34JMoI
FwKqobn4LEl5RFaA4Hj+UGgXbs9VwFihwIC8+r5EJkTeb0W4U18E3afQ6+dy
obs+6++uz5Lb9Vlyu3lg6t08sNRuHjgCfX3DqTxVfQ6RAt4/V5r+Df2HrC6M
MCbu+iyGXZ/1c9dnSaM4xtutv32tEClDH52LdYE+0dwr0nFXUFxemGyp22FE
KmiTvceeCL2kd6mPUr+hIt/PNKYPrqDlh033hLSEYV5bItL40zOoWu3xP60k
hPD7ySWcBRUwU8ChNsfNB1VxB2celTkg3MiaUPsRfpjd2xTuk9kKVTsMdbgH
/gg394YQ8tmb4j+oXqWctoHq3xlshUXPEJ7fX+fRqAnMeNSR//TWQvXCooPz
8GmEvyNUynfpL8xIhd75XECPKs537NMKtkU94CRU9DYKSPUVbw48VkRlG5vu
Rl6dqG+9Dr9D3wAkIy+3lGXn3flX2J3//bvz/wWVDPnmbu6cQ9gFpjPrX0Jh
fk6tg/cZ826+9PluvvTPbr40brdutVtf3a1n7+ZOA3dzp027udMMSDx046NK
BD3lvjDl6VptFD0uf3TlyUVIlOnPD2K+gsgnmZvVxVyhM6S9SHCGERJ+OwXF
nu5B5GvKiaKEFWiPnF4JvLC0y+Hs/+ObxqFaTX/AXYUG4cUCo0ms92DGtj2+
8+V3KJ8sWBrulgLCgA8bg0YajP1Ks3c8Q3me+RUCPe8lAR+rmHFYgxumTTPV
9+pVQRXVgmK90hMgXAr0zTEsgsnHg2/OaDNDNWfVixFzXsD3h326/4mfwnVu
RZ+y3CHW3vdHpq4oIo+MkQRtNaCkW4hJaHIQfVy6Zm2gSZn/nnl+zfltqDj2
NSNv6uwutxv+x+3JI/9x+/TR/3g7o3KXt9X/4+3xn//x7UjyLt/q/8e3ZU1Q
ZibqtzWYCEQzSz7jAQsYee7fNBhIhsLEWjJvsSsQcpfZ37/bgfGpF86CvRFQ
fMyN4eR3ZQrXZn3+YeMPk5LBXsWTHFDPqou/GF4G+B+EBFqz6zBZ8JScafkI
+rSEz/bTJ8NUAoZn0OUe4IK9zfc984LWKsnVkxpHEVaiM/T2vCPML6td0Fa2
gkKyesQQhVtICgEJ7urXYIBlrYCXdwyS6quOXP+TjMjn1gSCVfMo72ljoahl
LATrfCQv+KggsgGr+uVUC2gVMs86FfIG6aXqhLLsUO5du3ckRLIIWme627hc
RlHowKnXjIN5iMzSIPdt9il0WQv7aNuNo+TLuJrJ4H+IpNKS2/y1AwY8uVcX
VZtQAa3UNdmiZIQP9PR0m6+BGa5oZb1SY1TLxjOZdVoUTQVM6HSS/ADf/hMr
f34S1eowkWt5rsDQb+tP2EEXIAat1HBJIVTCyT158vJ3WOJ32fn+Gg8LWLbe
PNMngBLe4izfagM+SuXnc4FUmH5u5SHjMwUlvlldNkzTgMdGJ/p3p8NU7c30
HG11KCVxyQ/TjwLe0ans2PVKmOGRM55sMYDmzXrHVIouLCWnhxgNqwKmOIKp
vc4G+k5+W1V99QW+l/crsTLFACnZWiWfrA+NjJre+5iJCFsuQO66tB/mY5VF
wuJ/QqGy2oFPD+0RMdbi/ZnJJzCcGyC3uBkKhRzv0r8d8kJEA9Vt6pUOGFmw
jGsXfAnJ9WNbB1wvIVJWGUfa5xro2/vLIbCUBClHWvA/CqcRyb00xvy7NPTL
891uPvQQQlWT+baD2xFp1X8sbI899Jx5uXWYVg7CeI88zWVzQaT2iAHZFyrQ
+7BGyt2qGjSafBYOll9FJJKNOb7JDHpMc57LKouAQSM+42zYMURqVFTuk1yB
3pC41Y8hdSio6Hp0dawNIsXL6jEx6EDfG5fv51Yvo3eSxeOkA6GI9KLxt/b6
H+hPYS1vI6qieAeqiHv9vIjYwzIttqELw4LY5HVsGoqt+9yAJZogYsK9BXX+
ehhh28l+EaKLMlttIhruayF8Uqi4+WMVmNnXJeekN4gy3HlOH86WQviwuoBc
qq8ww49ZD2K6j0pO6ERatL5BC4pPeMr5NGCp3HFnx8QKVds8FFFV24sa5rPd
sqpeAfnBbcZzapOofDDFSV4hAkZ433G/6j0LRPur66fJw1BbkSGdf5UAyxg1
4ZsPt2FO8XZqs6Y+1MWMqdtc7gTsspgV9sAqzAdyI1GOb1B+W7Ao3tYPcOQx
fomMvTCzatfrJDIAFXGLxdLJSYAzvHNQ+sgnmG19bk2ZGGi73edO7fMV5vPM
WGTmWAGrO+yTc9gLelySipNZqlCttjHh4igGSF/rn1XfD4P68/wXt3o8EDY0
7sBfLRzMk+iG3rxchoLfLY2too6IyGntRneWC8Y46FxsGZihoPtOQsimCyIM
3RDgmNuCcVVLAiHuNqQ8Ztivo9yPSEpNyQ/vssKAv07aSCg9pCSensxWFEck
Zi1ZGpc1GGxWHx4pfQFhZGmr0WRaRPrapVOnOgt9oXM0g/ylEF6i731WrQ2R
rIrVk0KFob/Ny/NoQguYHX+GFyy6h0iffO6Hb5yEvpqDdKLvdcHmmkK9ybUv
iGSewM3yzwv6iavm2dSSKAB7oM1njyAiyf3SyJ86CAON14vYTxxC/rEtX6Y2
5RHpsOyyt3EmDGKi9c+1KaCYBdYpqlAiIto0HTHLroVRJrV4ydRXKJrNeE4z
9iUiSpY/pt26CGN7aaXo7l9A6VliB27SHEN4R0UvZm52mHmsqxjInYFSN7WT
5RppEf5uPYpaJsDMJ0HthX/tqODohvB+ane06N1z4smR47AYJxAyKB6L8uxc
YlQssWhx3uxBgjAJFmWbH8uzuqCy18o0uRoP0VBjqVfjTwEgVl5dEPkTj8pp
sJafOZ2gRuyBrEZJNJDDnpXIeU5DvemDVwbfMLA09O7nrS8SgGm73i3GwAMN
nJyKIXkzsJg9I5ludQcWqYU69uspQeXconfQSVtYrt1wdjpjA3PJFz3nvvBA
NVvZ1wQ5Dlhmi1VYajgB854TdUQnit66/eWrmhiHqVhMpJgdI+DhDEFWrxg6
Y7b4poINUY8Wb29jnDmQDvzUGuZggtoemaKNAUuEvfbhHlHZDTBWfoewVNJQ
K33cb1QuHWFp3rZnzeoBpqD5t9Dxw1CQOfRnMDwVEYKo7KKaG2DC7aH0pSIt
KHh3LMLx9TgiyBTMXWXbgcnUTa+UD9cgZa7U8vIPfkTsf+BgqHcOhulojt0e
N4HUU4LfvuuXI2LYkk5+MA5G5EcuOyjzQYTTA2XWCTpEuspGssVPweCej5Ux
3kIQKXq14/77aESiOuZyu/Y9DEmOGwg3zoP9B5z6e8kZRJKwa3nx9gsMcoqd
//4rAxxJCb0/324j4g6r5805axhSSb0l38SOfJ83NT0/9gIRxz+dVz36Hob3
hhh4XQhEPhrbsyezfiNi0uETe2PoYOS07mcPpmr0+fm856DqIiJSt7bqhUTA
2Mb7JWPdaRQ1LTxLTWWLCM3KKoXPeWH8l9DqGn0XSnlzUanhCmXeBC+23nyk
DzOTLU64aEGUfDFhTav2KML9k80eP9gBswJ+VzINzqLcE2kDqbcX0NIJg8AR
SzVYZCi5PnknDWXNcXJZ2zKhJemOtJHzCBbwTVNakp9RUeBFjtsxUWjSRd71
sFAnEBTH3BmnP6CCcU01+rs/0TQi/BZ9VAf4TLuzVxNrUUnRke5XvwRRXrXN
GzkSG5Bb9yQNdy+g4ofvZq3Lt1HdCr1Y0VQXkP3Zejs/nYOGkkCTe6QgWHC+
euDCb0VYEjjRJH5NHBqvFPutd6sD5hKnlptsFmBvdNfe1ScCusqV0vZtFLBP
tjOaDnkC5qE5Lbu6GdScVuji0L0AS/F2zWn0N2Dh0jcxFq6X0P41xFZhiQBD
e5JcdlyogHjjNTIZZIa2uofihyXp0eB+eRELtxwgOmOfMIp+hZpiu0PX9umi
pVbbIvvVe4DZftAxeJMHamRubp/Ys46WAobvcqk6woKqYdiLuINQYFF24ci6
HML/HHm6HXESpjrfPfP+zgcFymutnutnED4+oOPa/lWYJmGzDZknIFW7UO7s
izVE1FTem/V1GEY9nydaBoRB6tvzkWNHRhCRwSfFT1wOxorLHr3TCoHImXvp
qiJBiNgwsRCZ8gaGbRU2RuZmIeotxF7vtUZEf3M7kaDTMJLYEqe+nAguEtGc
5z0pc9hYIDNR5Q/DjvdNmTDvwf0p9wAXphIR3yoHsZ3igZG4K/ZhlR7I62Zl
Z/jpZkQ0m6LnnmSFUenlEAPDJOT+ofeRd2MOIp6j9vjOPg5j2pc9KutuoMin
/RX8qwmIEGjufsTuLUxgJzruuZWh8K2XcxUr7xDhNrc8yc0EJqeSFw4gHpT4
j6vqvqIRwrVGxPHw7YXZl/ufLKjZoIS5hIuGB2MRLmx4SDk6gaJTb28f3BBD
3/uEOsgsG2hJzUfgabE1LExUdMdWMqAMxg+0p5LN0ZJqYLGyqRwsTP8SjuMw
Rfl6KV9vujOhmVqzmylGpoA/53g1XUAO5bF7SzZ/LkazhiLH5RMOAq71QXy2
wklUtMeL/ZpqGGpXnznxy6UPyGeZXK+LEVBBdctRGj8t1PMzaNDIqglIdcbn
xwjO0Bj/MNGiLhfmFsz9zqnfgWWZMvbWaCFoxLZ1Bv0tgdlII/Ke3ErAnfvk
v3cmCmpiYghDg12wOGQn8fR+Cizu++k9OZoAtfQzWhyOR2FxL7c6LZUuLA7y
6pg3akDbvxu5X1PGoCP9Wti3gINAesGS/HTeA1osOezC3X+gYcLAktAhEyAy
fImqPfUVULyfiklwHFpS6Elc/rkFC18q+fQl16F6fOP856MSaHG7DGOleQ8W
cKXHJG/ioODso+1Ril7gVTEtoUkAM37uMaz9JCjYp0jtd9wc4f6knKFzvAqz
zANXto8vQGpJAANbPGWv1nVkDjdSdHx5fsrPaC+kzuzRsfJMRoSXvm0+Ajow
yZaVnZRXCp+E/l3D/FBHRPk15ZN/nsBo/yXOsUhu+NRgUyVetx8RqbKeNW/w
wdjOStU5XDh4ukdV/zjQhoi3mMweRhvAaNPl3+davcH7GqPs+LlVRKTne+iz
eQ7Glnv4L8XfQ86Z3Q7PmqIQYTn9ha6AA4xb+ehqc9Ajh78S2a8D+RAhbe8W
rbIrTHieyG/XZ0JhiSX6k41uiLB/9NWkdR1M9WKDrdXuolBDGu6sgDSEb8qx
4GO4DNN1t7LFMydQ/PCD2qe0rgj3eP/WfqGDMMc5aMQ+n4Hiek8EapzwQjju
X2cU6zRhzt57XW4qGaUbh1HVv3lGef7HX0klKMHCcuPUYXIwSt3YmqMzHUFL
Fw4KbCefoehpkD/5uAPKGb5EsEiyRLOLvCXUbBcA98KH5fydDpQ1Y3BNtm4E
zUnFyk/AH8BJifI8r4pE+a97hi+lPUX9A71Hf1qsAEn7WpG110GU9/yxdbCq
Jhr89ezqvs/LQPy3Z13rhxk0nbL7lSPTAzOyNDy/6fCApz6QSe++D5ok3ldZ
JbnC5Gq11ODrC4AvZ5TM7smF1mWnbSfvUYov6R8WFFwE8jEFs6KCSWjy3P6z
l0sajWbR1wcn9AGhwRA/1WMF1RwEIbvOK2ix+F4jLuUkLEqO+CCqJ1Blt1MQ
5cKLFi1DcZMsgbAYUBn4/UUr5M8XSwe/f41w8Uf/hu28hNmowbvbx65Dfu2n
3A+YRoRT2iIdIrTBHMevCXJhD6TRXqlnZ8tHBEGTJqvYJZiSNRHa+rACabwL
3h2XdRF+9H0/g3QlTBuBfP+BRPisY218YSoHEcretMx8kIMJQVkbt0+W8HmG
/ZCdSS4iPJcKkdZgh0lVx26TzwXgkysTm27yBBHq32zFH5+DiQOXn1Vns4Hv
oYwP5et+iOA+ommU9AMm+Zm2q8QLkN2dsPaXYZcR4ck/59XDujD54X30F1d+
ZFl0Bv/1rgIinFDSa/kdC1OfZGOOyyqjkNP0jLyCbxDeO+5kK1cFzDz4W2+2
4oOC19i0iTq/EF7qwvoV3W6Y6YgQdiH2oq+b4cZnynPQMsYlJgfDDXPNDfE2
Hnko5nGnVsYHC7ScYqv6IzEJ5rlOZVDJ+aOUaIe1tYZFtHR8aVVHXQgWT1zD
d94LQcnPkaEZfy5a/KOopj1gAIsglyQx6IK+r2e9tKrPQXNvfQ5CNgZw+9zd
oyNJKMNkwnompB7NFXy8eXb9OCwv/xPptdBGufqOqjEjR9Dwz6nLKl1MQPyy
prOi0gZV9os/RaykgKAqR030fg8Tq0tHn3ZJQtPj2/01E19g2dCeRciZco+Z
2OD5s9TQF4MRvHesF1qvBPVrmZcCcXVlh/t9NDQlLp2RUIlGWMf8T7GHRmF+
2H1jSmQMqkU7SOymDxEhU8xCSEkMxk28/01JrEBh/Ua4q1YXInaXTN76Yg9D
mfOfyVRWkGmXaJDSSfEFpf92sjTvQu+7jK/nP/VCckm52o2f7Ig08lPGZtUO
evqmlskmlnDl4/LxVfMoRGY9lj2/8Bq6bCb6bp6PRsEZHLecbnJRfGhqvvFF
LujVi0lU8D+KEh7r8so7PkUk6ptcRWohMMRr5/BNUgF9Gzy69jd3DBGvSjpJ
HqeHUYz3N82+XpQ9yu2dw6eE8DW2mxsGzjCd4MS32F+Dyso7quRlWRFGPTlZ
XLIQsL6+dkFWvajGPG34yYtJFK/CekZ4PgrIpdcK8UEvUVVDYnvjWxqYDK7r
WWFlAAIvfRfe0w6VmztYSL8yhJk9yutmSTqA90lWofrkBjVG73IKW0MBN5sg
Yrp+F2amWk40yrpBy0v2tw4DnLCo8/tFWTM9LB5xZWYajoZew5+pvjheSNP9
JTggYQek+gcqr5/aQ2PIaITSHk609PnLcs63XsAQ7Ywvq2tDUUJEZmPqGUTk
FmpYNbaB0ZXJzgN5+yF3v4GV/octRDqtWRS8tgmDIjej9r/thlRceJ3Kh3VE
MhU7KJbBC/0tD1XM7r4CqydMeoy6UojUJIiFm9aU++JnbjttjwI0uJeFOCwQ
yW1ku469CfpfFNYcwfejr4djXf3ftCJiyZs190dlMPy91bXqlxb6dvuHHOdR
B4TvDcb7a9LBtPNCxDOJLVS4j2nRrk4GLXY2U4cpxsKiuuLptFoPVOHCnjNa
txcNIFWsHnkHSCxhOxqvL6AKsbSP2uZO0HaeNekevSuQeX3P+Kt4QesXj+vv
VqJg/sxBs0eESsD2f94zfGcP9DAJbH3rVEYZZ6eNdXWfAYnMdVEjJgoawtes
gjyy0WLDOfxkhTgsYE5lNo+4Q/H1PG+3+WBEMIhIjm/shcnD/IP7JlwhN0Xq
q76+JiKGv/l4+6U4jBwMutFTyQTp9StUhhiKH5nplo7hEoGhwh9WBrQ3kbfP
3Vu0j34jEjdWrp94HgaDD+UeTZtFnzTcvGM75hHxKf0+5e9BMKqWdZLeYAOl
SKn3WBwWR/jChp12sUKYXi59OeWrgXJVxMcMhvrQ0uTlb1mVf2Hhas1ReZev
qNh+JTWGugRNYYQlGa/PAH7OndhzJwaVcX64pNlWgzJbs/oZX2oAud3Zs+T2
GkUvNrf0T83ADG+Q14XzfoCbyFBsNGyEzixwN7bej6qIYwdR0TUgLdH85Zgt
gobjjREftfzQQiAbFhhWYYkb8phFSVAS6/diu9ga4e/UiqeFjcKMpYT4MQFL
yBPdPGtuN4wIqzonbQpWYQzzdKnFDwMZT3giwlviEVF5gcfmoT+MRnqXBTDE
IKfbB1gLWilcUd7z+WIxMwxnunuUln9H4UIlYrWXFii+KT1mQfA8hTeCv4jf
OIYSD6gdOazJjPBu0wQPFx2Y0SXJsZ9URt8VQniCFiIRVtedmW7eCjB5+iOd
IxiUn/w300nEDc3x+90JuVEPONm9Y9urVKiYTvD0H0Ur1P04tzGwMAxIi6vM
Tb+PQf0trYuP5ZkQJvuQeK+IOSz9sJI99WMQShb8hyOqWxDObIpaBzZgtr9z
8KhGEnxv3jGqvnIEEeKPt3nb7YEJkwtxFU+vo4/O8yMslTcRIcqIh/aUPUyU
PU07mjeJYvs0nkRHryO8aOu0YcEszIxOtDo2b6I0mdHuoAMhCPtaQlGW5S9g
fAf2mOhxoZwXBWr6ndfRfCJH3628WlgWu3+BZeI1KmBJqv7BNYqGDdV57VQq
gJj3hg5PYwZ1HzXpbmNOoPkBagvBS02AzeGVXJR4DqX0TCtVhflo2fXGX/uW
QzDPXRyi5n0LMjdlOlXjziI8NsXl8jNTmGafaPHp+IW+3B+MIzDYIdxgsay+
oSrMWqDtkvuiKJmJVsrx4yTCuis9FTI5BpiPLztOjKWg7/trDkca9SDMy6xu
VbtmwAZqfAg4t4ly7/5qA18xNLOyYj6T0gr4Q3KXo6ZOo1yPtcwrGdfQhPOl
qw+WxYAQMeT9yK0OapdMFHxXR9Hcli+bRrEOLOuJ2YqpXIXSgyMGh+p1ETag
4dTT3hHA3C06UvbKBrKpJRTuiaojPP/J1VMSnjAzbHqNLUoLRT5j57Pd+YBw
z0vYNM6EwtyezXrcc3aUYOqz97FgEcJqc2eLiWgDBv22EE4NRWmvacKiXNcQ
BpfUKNCZD1hhdW1uvn/QHvqqRyXhDSxOht5Kv1FK8YkRbi3aNwDdzLWkKvdH
BOdFoy31TZjgjxzsKa1ExeGj+K/FvQibIvPm0reTgLn8M3JOfgDVaphlekxx
o+5tLskBJiMgZUt4YAXuomqJ7uTTezVgQlZaUM1RGwhOkQPVXIHQ9eSiTMA/
V5j13U62/lAMy1m5Jo8bpqF77JqZ/WYFTJ912E6VZAZc+9OiT3wy0PlOK3HG
Rx7N8vJ0VNLow/J2n7PlW0GoNmOc3C5mRPh+3iP/NhBMZXv6fsVZQcXg0ub0
tdOI8EDqwMc6bZjAeBfjCnRQ3oza3swra2g5sV7vA8MKzNO6aGOpBFD+jrVj
q2gAws5JVDj6m8P8Rjona8IcqpBr86b6xoemlt7P6eo5AL7n0VeVb02oUvyH
YLilNhqnM2iasF0BQtubbxmYXlS9Z/2w0pYoVCRps8gMyAE56nZ73FoUqnqX
LEP6YgCNmhetjSqTgKx9ZOK2dyY0vIq8vq/yNGDN4m3ePYwEDNNgB7moEZoS
3ogoH8qEJbqrtivsmrDgnjn/vRsH9d1vldssWAArxZ20JZ0HmDt3JZ/jyNAV
0emrhp+GsUphmouBRkBg3KxO1WODlqTeOhV5TTRPlGa3xoYDVn6U80CfFir6
gk5eeCSN5rV+Kz7ZtIHlx5d4BcP5Ucl7tVyHc8/QzLke2+DLzYB31PAM+HQK
lUd3CWrqeqOmHg/6+CP6QFYvf1BWXY/Ks6z4vltaom9c6w+PZ6kAudX1vgCh
DJUeNH+Z1+mHBjfrgv2lYoG42JjGyc4MjRm52hzZkrB4/CEh5fwfWPS+etHm
2y1o2RbCW9y+BnNzTU6RHYKwfKh9rMflJzRObrcf4LsKC5KyPN/Fr8KS5rGP
xe3L0Dm39t7NMAL6XVHU2CE/IAYpCpa1VUHjkzvLZotlaOFUmu0aszQs2bpf
VrSIR3n5zOYtrpVo4fKzaGMDelgaV+RwrsWjwuNXu/1TatFsXE1e7P5YwEWp
q/vcFEHF76Tc9d9j0DCdinFP9RAQy8Rq18sKUYnHwMebYoyoJchDSQpagCyf
4l1fLYIKay5XNA9xoLESS0KKLuV9X7P4qBVrDE1awNp3NwPmG+9lX2bmAGzA
L/07OsbQfM9NRPttAczm3saVZwQAjvbJvaTVFei4mbPv4Tt1KJHDyeBeHQIy
y9FvEr+xUEfU8Ts6MIEWuj87XfBQg0VSjqWukQEqOP5wS36RG012aiZ/FT0D
hCtDO9e+XkKFST2vo01wqO++u/gZ60ogvR/UinmdgPJ5/NeKZ6rRZBihxevL
cSCo2G9M3hCEpo8pH2UTqWE2+MP1qCoEuDPyhI6Bm9DC+trOOuYPjLd71Z0j
ygPhwj1/jngHaPOi6TkbEoMyVOOdvpPngSznWOhwzghqD+3zrRaURItczti+
0UuwWK5R3ps4D03eGYSjD/7ANKNeMfKvBLzFyb+zYRegRSiAyjquDwY0MqQF
Ru4CsbLR9Ve6DLSSrtSKh2hC0UL8eAr3eyBfcV0tX6iEljdCC4RKFtRwoXb6
mL0HkHa+f7R1zwQkIiZqttWDFi/euOtlex8WS9YsyKKdUOIk5ZvNEwiEv63C
LM8NYcy3iPxpJwiKRQ4XOJCTgaBzjebXVyJMirxf9SuyghrjYYfFe6VA0B6a
ylG6BxOhjq9vkOagqtYaRWi7AkGB79XBO/IwyfgtWemwB7QWVVJfOv8ZsL/u
B9Dgn8PcvxSO4QPW0D/H+0QtWA/15J6RFnqgD0RYHLZ+UQ2ofuuuxiMJRGjx
CFi2aIOxnvTaKvOnkKWdpCP6OQeRsmdEvULfQG/H4RTZ7iSILnj9gOegLiIL
lT5v/ZgPHdXMDEvrQuDpoXJeyDAXkW/SOXucaoR2o/sx625TECK8r7C6/gki
c/qyHbkhB50zDeqJ60+Q963jBuWCxxCZa3viemgTdDbxFgk5H0E8N3Ld7vXY
IDIL5ttQPyN0+RguXxblQ1/uiRWMRL1BpHQ27jHaCuhTfOHLt8qMPj7pHg+e
T0Kk5vK3OIFI6HUenC2WdEXl9MYngvuz0VJC23a5yx1YuKd2X6mSBtWf7f9b
dPUWSqcPuBP7chvIX74etr9fjirNzorel5CDeRENjYL9bhQd/KN656QG1DUX
eW83aALOL9J9zdQYZpU0T7RfToD6iNhyh+SjgBNjuBO2Zgazpe/2vv6Ng1oT
a03TM08BF7pkcLaSUr+136jR0RDa8Ro+PBm6sPjlueIjER9YeJ/wR+oHHXSW
3DvLVRoJ8+Pf3tvwkWHpT2+uJvMF6Fqv7nm22QQzQ3Wqe84yAe4Y580P9vPQ
xxGltKhhh4Yb7UfZey9R/KVebPdRGegJOd4+dRCHJl4d/s6YYgh4G0cTQWlx
6Ao3Zd90YUXTaa98/A0TAFcVPnmlcRqqw2kO4UtKEOFLiGXiJTKMp/087+9t
AFWfm+I1A+cQweTVwMdxPZgI/mkqzMMFlU1/1u95CCHCOQcS5k04TL4+f41D
cwsVN9FF/HNKpXBUdXzdHgon6GdKqLkTUaFaq7TnTWO0TF98xy1XgLJvePM9
9W+h/Mfc1dYHtNHy/e1bTlMuMG/h9CddxRXVGobe7L52EnXtSXueMtUJpM64
IKbEFIQY5v99ZjqPhk1+SHtIfAbimwUm3rOcqKL2nFpu+wU0yeGixjWSQNkb
FWKLjDhU+qeNJv7FDMyv8j/6oKED2N7Xz9PaOFH5zZJP7Zh/MCPio3+Kbojy
vqs8bKQqhwaFTrOZx9SwLDNDxUy7AXNbAhtH7o9Bo85NSyYPBEu/ws/ue90K
mHcCcj2LH6E7LbYrWXwGxi0f9Lu5swC+2+lvRX0TdHeZfZzkd4ZB+bBKu50l
IJ50fWb2Uxs67AytVPdKoxnCM9o7Oc6Au3y8KfN8FrSl0ownWBah2eyBlbiZ
a7Dcf5E/ePIaKv35+YBRxH4083ZUI/ztIuCvvB4Y3gincA7nuT57UzRLrr7/
iswNON1Q8XM6jqi8qGJbL+8kdFfaTm8k/gJSH5Pi8vc5VOmYrW8dLgyWXmvW
dL1KQO4UDrp8gaKP9SdmqSufoMpnM4+FDjsBOV78EU7mIDQpEzIf+VD87+u6
ar3lTFhkwIXa366B5iNFbZ5J1IDZkBDDP30ISy+teo76+kK3X/v8zokN6Fr9
8KpjCA8k+lc8untnoAv/RLPp3DY02EnUpzzZBFICdYI+hza0cld3hkYboznx
F9lMRoyw/OGpJvOBbWjuv7XiSP0NzX04eHzw1Q1YflJDxT95HxVG/AweM6FD
cyQntcTT/LD8/ZvIr8pclI9JPTJgcQrNp9AFq/cvwPIZ7dqvr8xR6Uockc5C
ELUdPDtuY3gJyMLJz/ZWnkclIs44TNsU6q1gUtcIjwRSjEbWuw/U0Jyf5CWx
rQvzejRt1YkMgG2WonJ9QNn/Z4ePLJW1w2zhpZW0Xh9YXkszvT7AAV0nlHpL
2OSgWH5wtcuoA0gbVye9ltKhU9iPER/pA59MR7SC/EOBzL/ttj+1FJry7f4I
PHiE5po5fvzK54BlZZXVkHP80Fhk9CN+qQrNLQ3W6q6zwfL1ZkFT/25oefHs
qrh0EszQs7KUhiQCfs9vfxbOCmj5dEn+nb4uTNT8i/kd/BDweGO9ng910HGB
N+nXsAqKOzLbxKGVA+RLtMXilL3eLtb4NrjoDSoI8UkblKHsN+EXKanFAdAw
6NxKNZyG5lbneX4EW8Iy0G15jAZBA1Pmicap65Q6p/SBo2mwrFJSX1H1GGo1
4uY2LRdh0cxcDB1QhkXbB8Jt59SgYVSpJTzPB+bLCoN//rEFbBrNdV24AXV9
x6uCuw4Bpv/ux+sOm7A0xCiuRuG12votGlOmn4CZtVdv9jOk1FNy+rEHoL4+
UkwDswZzzpEMB0vYYTm9132/Liu0fNEUuO5KA6MBpkYStapAyF3N0fSThBaP
mGUrYiUM2YmO6UWYAPH+2sN/Ik3QdrUtnK4sD1UFAZOeQiKQOdSUWhUroFXl
ibj91WZUT8WY1cm+AmTq39H4t9+gXrfXKlFRCs1ha4VDIo1h+VHBl7WdOqgr
9h+Zm/dDc/0v+W50UZ7DC4Fsg2ftUE9YfhDN2Qdzt7+yrjO3wHLTeuJUtDPU
WkcIHD2SBwsCVfvvKjnDUrTbKtONUyhXeoa5SDIajfz47Jtx8gwQTT1OcSmc
Q5k5hY9PHalDM9w7IevmYYAPt1IRFJ5FmWMP/UyVgtD0eLrRu+BgwOcRRfbT
uUPR7IMXCtqKQDQM5U54EwEjzUYWMeJzUG1aPi/JRQtEum1cbGgmjPY7S9sd
dofMvGHfw5+YEGn2eZJqtQr0GEvvDVUZgy/Ki0TJ5d+IrC4N9l250HYdZ5Xz
NhBcLxyeFqGzR+QnBy4sBAtB61FH/rMqfcj3Ru5XNv10RL4xkJ2fbwPtXz7Q
uW0boZiEaKj7G4VIbWx2zFsW0KujTDa8dAJ9bz379p+nOCLqbQR7W/6FUdGj
037GnlDzhn9qj4weENTK5t99X4CJvIis/DF7qB2slv9qSNlrtq9MQgrtYbpY
4Qb9jYtQzzbFG+I1ADjLQyyeSg0w++xucsYDPNTf3dpf+HUSMLbPe305CgDL
H2AJiYtQn/7zU+85G5g3OG5hx7IE2K0Fr2+DKSh7Ep26G38UjdoM5lo9vABE
Nf4VTq/nqOpPQGx3rAFMbL50FbjPCwRls3ShYlZUbRr1sOpWEPS1cz2/95oJ
SA9FeamTv6Oq1qCQID1mqF1gcD+x5gjkl7oh3SazqELyYCkN5woMVV788Ut5
GoglGyeovrCikoq4q1M3FCl8KcIfSXseKMxGc5RdDVVUOAXuL+KH+Q4lr8cx
mYBddDb9UEALNWmLOgqLT2GJ2Mtp/CkBMIMf139/+Q31ThsVN325YdHG+eQ5
zWpYvL3RwjO8BLVh+YMGWhywuMZzzS9uAhZGB5bWePqg7nkuT7TrAVh0PyEw
pMAMi6rnv2P2HIE63PixBwXrsODyU8BZRgOW4ISS6PQpqMVtrT//dQEwZ+NR
xxINYO3rXHBugihrD+G3wRYfmraUO1PvSeHh3ja6ah0flF1ZlVt4UQKN4tgH
rjym6O9FqZVhvTvQ1y3E59D5BAamyzMO6OkCoUb+fYvqGejLTDYcYHwBzdwp
ul4e4UA6aFtMKPkKfWmlum4xbDB0R0o1sectELzjPJ/hOqC5lS985cdlhH2n
z5t0/DzMp/7DiuGpoEletPH9uDvC5p8zkaDqgvnQvktebwegF3uMBicvj0b5
GYTLiIeAQH8iEKOpCC1qY1p/6Q4grISypE98BmD2FYqSokWgx7RYTPyqB5p8
7gKHXt8GvPj9ChrBG6gqYF33WpkkmrtZPvlNbxRwNL7tVn+foDKiF9mv1hRh
ONge9s5vAzbnu+v6w1ZUsv+CceIOO8LeLS76GD8EmKjf708zSaAq5QthPK5i
aC6kt3A6RgmWOx0GeiM3UaHH41/9uEaEXdx6pbvWDPOkxq2NkRVUe53BU+7w
fWjQdyzMMLUBsir16lqMDKoxnbRmRVwo3Hqfge1QH5DL++oucGyiWqufB6WP
u6MOWpnFC9i9QMJzbSbzvUG1qgE3pnL0oU6pJcd6og3IhqxHo5JXEDrHEaPS
P46GyjYktYLagZi+yBc6uw96729o3v8ygTKYjdL/lZUBqa5YP5riqxroN8m0
pHCEzRoNSCMdhfnqVLnkriJoGxvovGfiheZaYleZfxfAMm18d2JlLarAesQe
4+hCva4x1zQszIEU0TGk86MZlcWmUjsZOaGp52xtXfFbgP/zXCOvWxG6peUE
K7LDUOtyJetV+xtA0lUvuCq6AT0cPH3rNDFQxndbxf6QPpC6gxkOezmh0l9B
k/NPvCB0cokcvvQUyMMxbxyKLqIy9piH9CZtqOa7vtHEHmcgh1qF/KlsgA4u
vWPUb++hvj+auSctXwKxWobh8VUd6KxX+Rph4InKenMjDyryAun36xO3HgtC
65twlVsWnGgo/dL7nAMWQLx+bTqxZh+0h+7BtTxjQfWYi1dXthuANNrw1d04
HNomv3hKvWFEXZ0W75YfawFJi2dnUVQZmi0KT4unuKGRZYN/6/OOQJjPEFAr
T4IWMduDtjceoMH7P5e1hf2A+CFSmdVaE3oLamjMpPJgZo2psvw4EyynZsk5
h2lDwwDPBi1F93A1lfLOSBlmGhI12RYsocn9XrOZWiMsaw57Z/I1wlz1bau3
vWehKYeBvBN+BJYlCm6ivnWYm1HJ/C1YBI1cyRG9FH+L+yplpfKUC2b+7Bla
eBEAnZ6PdqRuiQDmkHWme7A5LPUcZhT4qwL9zNwrSWEqMDqrctv4uyvgM5mE
bZOpYeB+HusAzzZqYpxSfP5qCIhD1zTsax9Bu9WZepY/zWiJVWvpUnoMLLBI
/Xo8NAH9Osn9osZtaNDYab1bZB4IH/G8eOwG9FX8a/tzSwca7BMP7uVqB5IQ
S5zbx33Q95c0OHL5CvQfZxVQd6foG/3hREWMDvSg8oNGm/1oXCuSTzmKooP5
RYEed5+iWsd9j60UyGj8T84f3ANGILy42vPJdhDVc/48f+5iLirzcx3gKwkC
suvsTOM+FVRb4PNATsoHBs4UJMjF+QKJ8bFAhuF7VM8lozDFKQpP6bM1m550
ATn5GGXMWVA596a27Rqg+cmWmW/lbwA77fgrPPEvqmrnnkqm/Ylmse24MClD
wMmGdpO7zqHqJX5Hr+hvaOSoNKPvEsVHmxgzqSmboyqJ7ShXrnGYM3obEqFH
D8ukYfZT+pdQtf/Y8eLt+9AnVfhNpVkaSLa+Xve81qFv/5edqw1aUJmdaaWg
rAwkD75CtpNs0KpQ+UL65CdYqGk88faGO8UvagXeOOoIbXaXK6tD9gImyzvO
RGQQlnxir01334GuL7Rhx86KwBROu+60xh7A/VbGYuTjoO948bTjmRL0trrV
fca7BUh5NDN2aAia2Dd/CDnMIyzts9wXnvsBY36j9Fj0JvQeSuaTNdRD9b6K
kTGSXUB6sUXzjicHuvhUuQXdnNDEykGC44oQ4P2r5WT+fkCFAwoWSWct0CLT
Upb5nTlYOnDuzhOL29BOX1Q08PUMzPphvj22mYJlbFrmeJMq9BRi6F3aZJHH
yMtFxw8iQJov87WTvQ4d9a0M7akAk2kRClflPlF8q5SbkHkJdGn+tuZXUIMh
4kW3J1t7gLB45Efmvljo7v9jYnbwIerJj7dTfEoA4qj1+6E5P+iMiOf6k/8Y
DW745k+zUPbAaeEErw9/oD0Av0eGmoQmM4STG2aoAe9dcNVF+TsqeZj7xdBC
EY2VtjExO1gDgSTY5DX2Dtozsqhygr/BmPS/NkWlXCA8OuJ898Fn6Bqz36/6
4ywqVlHWm5+k7BOSuVp80TB0SqP84QRB6JVpeDg7qwlEcqTsS4Nj0PkgN2QM
TkOP3kWDCicqIDH1rdWHz0L7G+5s5RwZNPpXxSfZKhgIVu3qUdcMoDWPPsC8
SBhN7mk4IHh8H+DbPMXNm0Kh1SnVVjN2DU02eeu5CgsC/jNp+9j9W9BuoLva
ZJ0BfbTN7xPCGIFIavYLILJDm/ApGtpbEjDRwSmZJChO0XH/gjLLPugoai2N
3tmEto3pl7T0w0CyVw101K+ADkxKa9FZemiK+v5xX+UAkNJfqWJnf0OHBqO0
LAiipuoamQsxzkDK0TGlFdKCjnD195o8gai2Nerb90cfgTSdEG9s8wI69n0U
F1Cah8bNI3/vTZsAqdLyWneCIbQku58ZS6JGk7YNp4+NUZ5/FZ3+M6kSaGEx
b6478hdNK1JXiNrsBbycqkaiowk0Y1WcTmm0oYmtu9neuaKAX3hAU7FhB21u
uZeqqgygERtHEh1OBlI/r57FzHVosz0Wfr3oB2Wfrf1TpcMAsZ8qMPRyG7Rr
ufsK4s2htjBQKa3mOpB++dE2vKyBdlsdyYibdfDhtYRqSpQ3kGVyT+i3NkKr
W1fS/agY1JdldbE9NJxyjw3k5J15aEtmXP68xIIaw/yN8vbYAGmgBAjNl6Et
wb9Z7G07VNLsuZ9FxUnxHda8pYWt0Hp7OI27nRkKy97et6j4AeSbO3/U+KOg
xWQ1gmAaiZqC2dRi3GiBtMTbKbtkCI3fuTho0trQ2M2XJ6reKgAhc5Cbwf0A
1J32Tsi2f4DmihOV8W/lYTmYo7aryRnqO4Z/CVWnA/67N9EhSACmIkjNsYRw
aGkdiBx+2QPLTipPkmQouqDnTkXcCIOBiG7Swj9fqGuc171UqEL5XocvXROb
ghb/ytixD3wIS7Il+ssMwDx7eeqtxzaoLnLfx0FWCdTblmTF/3QHSE8z7/7k
/4rQuxwlfcYhmJ4LmLr+qBPwTlPqXPhnUOH5u7/QXRYIGJZSOn8HGEu5nR7F
cBKqIurNDsx6AEEFa6Mp9IbC3TO+kat+UKyE+XH8hx0Qn9Y/EhLrgpGSm8et
eZ9DiXeOIiqcAqLt1emBlQEYsVB/ySNnCXWBU/zZhxqBwM0l1nmgHSZZvZiD
Fd5DzdKsPGMBOxBiRf+mkqdh/LH2hVzWbOgqurL6IcwLFoI31dJ+e8GiHuOs
oE4R9LjVoOJfR9Hc6/JT5CPegK2v7BeLnYXCzCdTApKPEenwFmPf+XUYVDjs
2PqwHwodnvrOyeYi4tj9Uyla32HI5e6fMLMIKKZeuVenEolI/FVGdXbdMFDN
O1n9KQOqDU95HCoXQ8Q9ZvSv7t2FUSIDxtm/F8q+6JwzZ6XUCydeOiglwxDu
mfvblHRI5lyY1VXgQWTaQxWs9wuhm/4Tc1RdHiTbx0PerWeING5htVmdCT11
DGYXo4mQXPpvOGOvBSLzrk+ndHlCJ/VONEuxBXz/GD/47N95RCLsK3jKIAM9
JwKYOcEP0sYO2SjwcyMyYzrzBSuALiN67hBVF/gYdvn85bF9iAyv3h/kXoN2
H1avv39lIcThokO2iCcicz77y9rTBZ2zyPWidg98nGJKPkXRQbJe3jrdMz1o
lVsZ0PPbhk8bFz1c3hxHZM3sPMLWELQdFb6dyy0B4ZW88vIZcoise57DOfYV
tIYUjfZZm6Pb7wn7Xzx7j8hXLG7/8p2DjjPDI4fSfwAni1qyp2YcIh8teXjq
Kg66HH4ff/eCFpxEavkmBCi+1VDm8S2GC9DKL4IPF90HT/X5PL3fOVPO41H2
V8gTWvU2Vv0XdFCIVY1u0vN3iPTD3VVNNgB61ObSvA7QoI9sq4Ld4b8ovvUo
5lSTPvSav4o13+eAQtr6LtIdICAyexK28PNr6GJmyT9b7oDe16vc5m5NRmRh
KdO40i3omDg19DvnMUpsfXtsSLSPcu83aQtot2HwwavNwKB1lPBGQ4zRXxgR
N4fFyuOMYehaN9Md4acoyauEYd/5j4j0SPtE19sIGGDf911yewQlsBfJnrmd
g0hhfEsdsTTQ13Cs4UzvKspjU2FW2ZxG+Izaffp5AjA97amgZZuNck7u18re
cwfh83UsmZljYbo3x9zwTzTKN/+g3vRLFeHbS8BzwBqmDRkfuH1yQ5m9A9tB
5syIKMFLHfziNowuDCTLKRNR7nUDoTB9DCLEBlwYNNKDiQfvvjzOHUI1eSMW
9SwSaMaU6H01UgPwAtbpP4KsUPly1Z9aoitaXEkJC14jwiIDw6VKU0tUzTkS
aOOsizCXpcPO4Sm85PdeePOwJ6qL/5xueScKmjjuu86wSwNZ2OjJiQ9mqCx0
2EDrBz8seNxvCfhwBJZeRT/MaOeD2jrnckOdDcCoUHWMRrIBVmcl0KRUFMqc
xqgjhvgQ4eDWoHacEkyd2DPjSnsS6mwbWWt9jiGs5XLr34sOgBGwi4tSp/BM
J83JD96JCFPx+Lq69w9YKpCufvfrKFQyjw3vKSlDeFx4k75bC0y5D91SjXaB
Chsp7lt/8xA+1f4cHYXDp12VuvwftEJdj3FCcosNWrb9dbKPRQTmhi4K0s3X
oJLMx89PxZxGmKTbqvKl2YBVTC6SJ5pC+0Dons/vlmB26mSz7vnPsBzrkVPa
3wSNzEES14ceoCVRVrOX1XdhwVKL+lPNW1S2M6vbriiL+mYEHYydmYBkJrco
+fsndF5t/O0gxwLDpnov0PcKIEwvqPNgWqD1Vs2xV7TtkLPMWqfd8gnId65r
zFDnQKONSexVmzQ0LlgrKn1aHgguyXX61drQSOhv3h8ZCrihGMSZrw8zgfif
N1looIHh2FHZUTOEF+k7EDRxGGZOVcQe1+hEBSWpF/Ye3ovwV35y0/PdhZkU
5dYXEcqoWIZO5CS1DFr+ayoZGuMIc24B1jfCSVAgPJca7RELhG07WzUDFxhL
M3HION4KBa9OGlfWGAGRkW1T+nIJjJnvzbI+mgdFb3qslfnrgah768a1wysw
QsoaPyePhbLV0dcDGhxA1A/kdUvqgZGQxpV89AuqSk9RYdg+AJF9dC1NRR9G
g5/rcoWFQEX62eeJ74uBqBRu0/x3CUZm5QXpV2Uhm/nO2PLiBiL1KxHCiu9B
T/1qdk9WH+Qpi0T3nilFpMS59pp0Zuhd/xnwxVsLoqs9RrC9bYh8uz6h69sp
aHOZf9zB8Bvir5d2bDffRmQZfYfMdGtov7rTuSFhCkGnc7y6D0wgskH1M1m7
Zmjlnt8T4IMFD/2PBz2HPBD5yYVj/TGT0HpIw4Cv5zj4/a5oOCdrQ6nHN27U
3oXWPU4jEQd0kWmQeCQp4h4i3/M1OyBJDW2MhLDsFRbko0rn3a9kgMg3RQK9
VrWgXX+N7vnecfRyGh3e91YXkVXbRS9tPIa2r00prOVEFIb7Qdf6SZWyz/2p
9ue8gq7paZHUS5Eo2sFKmcomGpEGOIcP/TgIvUdsN10xLSgq8Hqs25tZRFqZ
TWA6sgg9wrfS/YS2UArVn7M6cm8RSfygWNw1BhjYqMnOZppHGdM3tctC2BDR
I1DPXXQZRj6zhbJZraO0sj8BsuFnEHGxRvjjaSoY+kKvcGzmGNQmHNlxVilE
yx8+pz+xfUDxp5t8Ju9YoDxj1ZX3EQnw/4ytGe7EwpQW+3wNJgMq7HpTXo7Y
U+qP7UtF7GFKmct3mHcGyj4WrPhedwG8y9u9kg7JMMP2IPiGOxFKvgjNzXcq
A+FfLo/gbXsYczVhFEvKhTJNoeH7h3FA8G960x5XAROq45vfzr2Aij1fSQ0J
X4FAlfH6bgAPTF2ral0gbUJJA1tv37MhSh9YuusoB2Mu6y9GsuWgzObf3Qk6
GUofO1GWR2aUPgGWQ835UNM5JsRk2g+49h4jKWNjmNmYgF8snFBTNbWHRYUa
CNf21jg2nIKJte23s27D8CVr0/WebBUii6jMRW6MQEfEDeqVYXEIaaGikyTn
I/KJoYeyusXQiUsW1sn/C+7OGz1l+ZR7ly07icczQrsFUqqlLUM+BWp1RixP
Kfq7N0FmZRU61/7xhXZcRNFnm1SExW0QKa4j5cEfc+hzDxB/fJEd4mTMnpqw
ciBSjyYHluoj9J5VMDMMU4UIoPvD/lgEkRrvLefvyECvr3Pg7QvvwU+hBwdL
TZR5UMrQ+pcOPTdeKevYM6GX8W+UKlrt0P/p4syjqXy/PhyKMlQ0KEOmDCWV
EJp2khIlRSokiURU35AmZZYxU4YoGTKEzIWwzWOZMw/HMRxnFIpU9Frr9/z1
/vuss8466z7Pve+91319LtbXlKskxiK0XYjd8k9eHSMeDVsW/fcGWad7XpiW
jELn82DuggBPfGdZU5visHy+sE9x99bKQd9w4hqO8VAoXQpSN4wQANr1V0Ym
Xx/ASIGM3BNRX6ig3OY8uVyPqHzaOQ8lDGD0hqNCO48qxMtb9H0XVkWWreaz
X6rHoKM2Rtl6GxmingaZX86oQZZZs1pNpQN0Cv1VV425Cf5aIc9C395FVmwb
60IQD7THrbsR1r0eHlk2XqcquCDLZtLYrSsCOsZt9WcWa9AqOeXttLI5sh5v
u6jvpgwdj0eO33nzBUO1JhPTFiaWz+s4ATuNJejS31R4/kwNxtMOST4RBWS0
Zn5ekZQF/WWPXfLebMDMzRY8dbQlpHErPvvtaQdk93C9VZLdUM55XYbznixQ
eTp9dt/ig1F3v6J/E1JQuXjsNVy0Boq4U7b/rzEYj6YPhNb8A3xgUdXUmIrU
SJrBsbB5IH9V16FGx0DC65Wt5KHHyJwNDFsn7g9dNgpOuncSICaw8mR8jR4y
J6WbJx52Q1deNI0tewaCXc+RB6MeIEvtFKfNCyZ8WzVtn16sBx68fhxWzXPI
WrHf062VHbqOKafdGbYFpbhqM7sd25ElEr/QnsoD31LTTZJvdWGgYPHHk1bp
yIzXNvKNLoYeWef1i2eb8I0WR1uLJBcy/PYLar7UgAGyk9RauQxMNbu9PZHz
JNKUzZ/XSZ0D8pngl+SjDKhy/6EmpdoC46/MHK4FKQJl60Z650YnaMjYLfRY
0wX6frVHG35uBsYZts+JF4ahLGORrNlHxsnq3YUpilEwOt6/UvmpPeSkyhhZ
31FFhlaqoALnIRhMWW1119EDEmdaew5eY0em3Uj9vO0s9HJtspiUYIM3N5cc
tA/6ItNCYPrS6wDoPUFeQTZ+BmFqt2mHxWqRWcOK+HHGAbrtxXLXhSzB8/jr
Zg3Cv5Dp6xnAPfcdemJXvxeMsAEbxSchMyalyMy1L4oLlYPurlG5Yhs9tEyX
HHnkzoVMHZ5bF4NcoLfuvBfjXBh6G1v+Zmd9RuZB+7jxkBno49rkSCocxejX
G/Q9Oa2RofxWuuAjLwztKVbboMWPSVVtfvFcX5AmF71FvfMfkC1ajsqdPYmZ
qTaRkXt0cULeqLnb6zxQVjw+FW1SAlWMQivZy5kw2sBdvoFDFiaTf6xQKZmB
BtHSPhV78vL78UCkf4MkMM9yamu020PpIuX+sMtVpEwkzO33qYex6UnjRBkz
yOUdHdWIFkS6z+zhGNIzIMnaGIo0K8A7efk1XQHL/2+3jXbaPVfojz4kQvWV
gLfekZJVnp7I+Fr038kbi9DfvOeCMvt2eFkPRh+17iPzhDW/cpkC9DY3/qzj
qIJAesrTFKHlfcQZIl91pAP6mB14+T0POJ9LE+OP90TmoV9d5v+2QB/bmINE
myYouIRd2LTBDxkt8kvCIe+gv7913uR1Kboq0GKfMhSQ0dSWenb7B+iffGbg
nvoB/Q6pnDhX/RcZ22/a/BcvA0MOi6vx8Ay+jNAuMZuxQXp7T1DwtCIMvwyJ
q7M7g/GDM7xOjCNI/eMvwrmaDcjvtDSzXc0xzdaMbebrJZxItCX/+14NEy+8
jnIqdEC1kA2/KM91IPMKfk7TOgvUaeuckgety3N633YVnTxodysZ2j9tCqyV
S8NDTYtQf3RQI8HjBdbnbVtVJCUJrOaSStqf41BqFnAoSVUAKRyt36U1smCc
GeybIKcMuWZPt2uTtiCtjNp/TSIfRm7xeq6LqIJkrQ1yvfS+5fekbGhccgcM
bdXgk8vTgfgSzhXuAm+RsavgtHqmFAxp6j2Iuf0VohT2VQRn3UZGcUpDT5UH
DEjnSPsPfoIQB7kk7m27kPHA7oRABBsM7us8sP6XArjma35ovGuCjJI/e9Lj
ti1/3qhqs7QSWK88pzT0cRwZuuu1fhybh8EJUbGC5TroOMe98qUkAxkGAlfF
7I/BYN0N1qPZVvTcnFdEyxRCetp/9aYh80Da9PHoLudCDOWM5fU2j0W6tVg5
+3oZIHlyvLadQ3wzduwkpzYbUgtvcv3rXQujHC8/JodrYTKP39EcN2+c6NDS
FTksBxMWGSPbtvtA+/lfldn7CrBrrazuqIAPMGLqHdcZckPtSuug1NcxONnt
yG8Vbgqj1nPmv8fTMOsxQ2Xm5S+kxxqQSGkRQFq7/4HmWYSW/CcWtUbyOHBq
rJWrtAPoEVH1wt9jMZ227dHR/jVIVxIc521VBVL1DcqW+zpY0LhHT6kxHMcW
8+SvrjkLlH91T+smM7Bk51Vx5+OT+OUMX5n83jSYYj+awldbAK127KLC2Alf
jvBHCUlEAUskZa2k3w34Utn7ltexHQetePuT/dyB7rrrYZbrbcx9/VArwn4d
jgcs9p784gMUv0uKu7tCoEVY4/c6Wy/0UDWN0hSKhSlunsMCtVRo/O+kvI9U
Pw7WCzum3Q8Eul9FYrZKPmYfOCcvUyiO46XbNAb/LP9OK56gxvFeqE25La69
ogFJz1SFvx+JBFqnRMqfD2xQdyk0SfykHA6sviPn4rweGPIKZaHJdKjWXZ2b
ZMSNI/FWnZqb54GmxnWNL4IGDc1fduylt0G1dHeeacJrYE09+JEp0gG1i7Z+
7PUbsdv1R/s9kyVgKu9UDLT4B7WrU85G8dhiv33ViUurRIBxbWbGtnQaKm/Y
mC56DSDZxPGfRlsnUL/20COu+EC+Ju/XLeReZJJ27t+6bhS6rvAwVwjdgaQj
dUoFtZHIGmiPhWOnoLXwrcB5ax1MOyyxS4QSiEx98zsi+3Kh90GtVKuaFsaX
ronT2KWDzLnTm4wNGpe/x7DC6pc51NQ36mwvMQQSRh53MVUF2qcChqxeImYY
D+oebtFCskT3q8bxTKDpfZSX+sQBX240ejKs+2Bi/+Twj98rYJx6vDMiLxGa
V5LaNiRXw2jggxiZkb8wqdh47raYA7RadjuvHvSErsglhr9qCTCacqRcj12D
hvoDlw9U+mEt49U1yeMXgdXaGSZ63xSaOLQyTv/Jg0kp1uqX4fkwOsZmNR3U
ghUcB1SsHNOgd1/ETd/JVmAKH9xuXSSI5dfVWC6LouhRG8f5vbMOpkqU2Dcp
9WLFrppzfUWHoHavvua2Ta0wpYb29mnPseyZ/+K93+uwPO0KX3hiGEw9c3wr
72kKDU2H16omVcPQXoU3H9KW38MHYDUdaQ0Nd8QPFG4Ngp6xcfm6GweA0XBE
LUe/HMo7Hmt6pV9Dxr3nh1SMuWFgg+J7WS03KJzi19D75gDMWxx+lb1foefG
dIwt23XAo4eK15NCgcHcTDtWsRH6Dipe/8Qdhad5uBuNUtxw6pKdbOZBOjRU
kGd2CLxG74M6f90PU3DqQHDNvTdi0DTep8Dneh5fUxQpOjcDkFXaKOgydBHa
MuKE+bPNoIz9kYbkqm6kcxndJ5WLA+njbNfGxXXL/baipv6rk0h1e9crMTQB
5MGXgZv+/YYyfroAg5SKdGf108PFVTD8a4vsatItLDowcaP1RAVOKtAXVqgG
wVjhWOuTH4WQL5jQJOp/Flmmt1q7/LSg4+XPnQkuqZAw9aNbeo89Tu1Vjqw2
W4QvR4u+7Mywgs96RREku93AoGyLqkxY7l9iNGQ2q78FFCtR/dWwXF+Sqrl4
PpnB8Cl+ZuzrnwSP5/o/Hq+1nuDxDAke78//eLykXwSPdxrKiw//np5enscj
Phxal9EBw4ZneA6brIackfQEf447yJK6Lqib+Qq+cZeGKd3aBwlzsdo/RK4j
a+y+S+GsELR6UWTI895gIbW3IeNjNU5t5uEtOZwAzWY0hkHaND4XaP+p7nYR
WUMyShXhrdDafy0uvkUfY75zhpefVkeWvk+GioMGdNqtblGji2Oa7xb3Kq14
ZB43aktaXs/eDyUBqq4fMPXqCx/rxgxkzA5qCLvzQv/mkypnTZUxb+eWnt5h
Q6RicpzZbyqQew9l9m2Mg/JDBmSfpNVAm7xsaNGgBKSu2158o8YE/3aR4N8M
CP6tCnKow7JrKBzIpHo/UfnzCrp010w4Ja+FnDKT0R6VMWRmLuWf4LwO3e6z
hbkGhpBoeHhL5DZRZH2Kl/320Bjaam8K+i5SITEx8euqaS5k+WjtVdrXCx1c
bG9Jjybg7kuaetWXf8iqvbn3aWoPtPnqnX/esQk9Lr5/86FxeR18b6w1nO+G
DjEzMXK3LEYdDtZQu01arjNXr6veLIGuW5Ozl+6cx6Rh9gXxDf7IyKE2hM6n
wYBy3bY3cZcwW/ZK3znJeKS2ndzsdawTyF8seaVEbfGTkJH1NtJqHD23QF9p
wgbUS3YHmo4uYMmRJcZVjZvYMOm19Zx9EUxJGQc8/JNOcHGP/sfFWUz/j4vj
WQ9l3NODOa2rkPbkWU8HjQEjL56a2+yYg5yS72J715xC5m1parqLGfR8ph3b
elYdcqLf66fw5iBT3nPv/Yt7oXc66ceqMiFI/GHaPMN5GFkGz6mfZ49C54md
PgV7iyHpwLTAke5EZAlX6RWfqodvPm8O8TydRZexT6WU/jhkyQXUZAW6wDfL
JAFnER18yRP/ffON9cgMTlAP3XEaehxaBNTXPsUEedHdCwZ7kWEcUvVc+ToM
hv/1bb7YgulWvC6/3v9FKqksWUYwEchllMWAMinMk5IY70zQxTFK9/S1dT4w
KdwtaHjlCsHL2RO83CqCl1OB0kMJea7WDKSWSIp9StkK5Pcb3/2Nr4ScyK3s
ssEkZIwx6mcG+aBfxr93w6VYyHF+JPI1shwZsRvH11/tgYEL1ZbxXX6Q5BHu
NHbyyfJ59FcqoroLuqpn14Ykr4Kkcq/YkodvkJkAHv8gF3o4LrKKBTLRKU3Q
8JbLaWR+7gj/3DAD3Sl3LyyuVsNQlXV7PuY+RKZY388OmbfQtzwlglAmxtEP
2unmzyF91q7YkEsXhrc08W1e+oMpJbkxfZVVy/tF+86bqldAns4rzBPJxWxt
To/YvVM4nr6dxanoCBSnANNWxWmC0ysgOL1LBKf3Cj6TeB3snz1C6s62+pE4
PRh1PJWhWnYccgwhaIOyLTLYzp4XOhsCQ2k7yzPkv8O7FXl8loe3IdO80WJz
KDf0HjqorbarF94pZWTXT+5CpnBx1pd+V+hzlHX9kiGEL04edy7aPYOMd5z7
RXhCYMBDD0715WLszt1vrztvR7qr2JHIFHsgGWWuvLaCHZN6Hs69Ee1G6pOA
x04ev2FUz2lrLlUeMzZTbsjcfYITXNJMi9EyoEgL70m3HSC4u5MEd2dIcHfN
UFwYXLj53hhOBuWli47qwdiRvVUj/0YhZzeH093B/Ug3/btKa/VtIDm4z99v
+wnvbinO3thyAxmdQiKGzhHQn3xy6mppI7wL37k0zKhBhq/3e7OCpzDQWRMr
Li6OUeSeOb9zNUjnsLGtvP0eRqTWFUQcbsaE+7IvbmoYI3V7jLOE9EcYrWyf
8PIwxNQM1kKz6BecED14voo/ACgbqFPtey5g9rGQnb9NHuGI8P1dP5u8gTbv
/ngX9wJ+eDGm/OpQBY7c+7YgGPYXaBUxrzZ+sCDu78yJ+ztV4v7ODYo+bs86
rpOLFLrx1YKTLBjn0FRU3yQLORy1RZdSbyAtezHhRHwmjHh1sDY1b4N35O1W
22aikM48kF8WrwLD4gk9Dz/m4ctfKq9CtaOR9my/OeVtHYwwazw7oiXw7R2j
h44jhThZds4re6oLxo5v0Bsb7sJ3o+5qfF6jOLG6X2tb8Vqg7NylYmnX/T/f
VLAo4Zu6S/imdAjfVBPhm9ImfFPVYPMZk97LSyNrKtLqs8oVaL2SpHr943P0
ej3G5soaQlbBAY6EHxugbfH2cPaAJ0Z3zd+yMlqJLJlbjqJj2fDN4nLpH5Gz
mCzccCS9KXN5/0ret5QZhn7zznR3kjJU7H0nWPUkHahLm9vHgoWAvINi81pV
Dyo3yLtxX70G1JVRC0svPWD0zjbSrHkXtNqKihb78sIXt2O8R296A2vL7Pxd
Q3vCg2REeJBIhAcJ/+dB0hMmPEjyhAepBRxFw3V21N9DVvRdYYb6N2gv8t3i
JPcKnD+YDyQP6SLL5hWDXUMTOiiPtPSpDugmVZB4f38wsoxvn4p0SIXOY8Yt
Gxe2YkSgrfpbha/IrImZcmoyhu5bTUZuGvsx8QxPwRGbZGQEUQ6vSiiDgRr6
kePBiZgpdllXOscfaVxqtIvcFkD2zntqyqMMlc3bcYVHEUyu4zOPEzeHsZBI
oTQ9FajyLl0pn7odJmiGGfpXrGC8qeho6Jt/0LJdS9O5VhoyThSKfX5UBay/
P0mGJ/KhTP0/A/rD5T7qx8/kGGYMkA0NhvLwO+HtMSK8PQOEt2cf4e2hE94e
f8LbQ4PH7GeHIr9FIGs/5wsv+jP4tkUXDqoawlMLzrvTC7uR+S+bz94qFbq0
6vZIv5HFh+Rsb5O4JGTO6k6YSjpB1/N7nxR2J2PY26ezzKOAzMtakT7uXdD7
SCPsdoYqvv079z6x8B0ydlr8cF6YgqEzqVv5K+9i2rH9nWXHtJE6zvVHvjUB
yJ//3jr1NBi+TPXYVezajzlHnpcuqHrA1Ja2tTEzklASUL/Ti1qHVAfpHZmX
2WCU/3ShOtcRyLkrO8ltsxUZZ52kjepFYNDjNf1Yxi/CD9NP+GG8CT8MlfDD
FBN+GDHCD/MeXKvK9Z3Jy+dsTZv5ZxofdDtuqon9zwzcjfnZ4jRfItPXajZz
Nxf0vP5t8eCPEv63NOmnJ/sTma637USC+6CnUYJ5nM6Hduvnqb8CycjUjHF4
4VUMvWOW3lfY12Dwbzs9zoUAZJD1UmgFxtDvPfI5K/0TvlkTs+OJSivSi/zI
L8fWwjBFY63bXBEmK1wpYX+PSE06kbomaApGtwhItFMUMJP+fZLzWRFOrLDv
9OGcBsoOJfEnCiPQWMZ6wKH8FKs+fPWl9esCi+LuU7Zvue/d97fnhPQpnBwZ
tGowW67n31apHSiLgRxN/RNmHm5Iz+qxFCsPhOEveqWBLzoIb8krwltylfCW
yBLeEgPCWyJBeEtiwKPzjWXQheV58NSr9aMq9tBbF5SicUYQvPQfBJ9K10Am
VxpDOkAH+ujSfK4LZ9FKdsWtrurl85o959zpezugn90rXLP1Ipo8jdl9eu9y
/S//t+gn9hMGNgs6942qYqCwsFGa0zgyrjVcq9YqhMGA1U0FW26iX2TVw2S2
CGRI6BjpbmyCoWd2jncFW/FVdNX8gxPJSD8Sfp7f8hmQqj6JfeOPwsQE9yU7
3I1UPWPjfcVGMBogwvvl/k58f6D0nWbHWpzYdtVMONIIKPzC0hbTylDjL80L
8BJG+D02rr2/GWjerS2SqsLQcD1ba73hV2h2O650764BsOw0hgVOHIX6sh4n
jvw0bDKZ15vZs/w86Wbm6weHoHjdHZ+gEWecPGG0oaueA8aipGId9JsgZ6Na
yobHy/MCV6NR7YkpIC09qrlwZwne4cXbgpqNyDikddnHqxwGlzwUR+tvE36P
X4TfQ4PwezgQfo8Fwu+xmfB7FIN37rpzv3hckFFp95+smxEMrF15OnzjH3gu
ELu/odceGY+zqt4IWcOgXDvN8o8snh4I3nTO23z5ufCCtE0HDCoEGGnwlSCH
ky7d4GUYMlSOVWSZW8KQmuo23yADfB5Pi7+15ynSe6ZOlR9eAcNe65X3BTDQ
+6LJORWSNtLDGVNh37cBSe21cfbuYIz0X7AVFjmItM9xKkMXA2EkNLvDSO8N
xj869+BttTpOUvN9qgRSYYyvqmzthW5MUQ/Y5af/FCfWh4f7cHIARcLDqit5
O2bEV3rui57GkTYJEQndSqB5GZ3+kx4AzUNhz3fVXoMx9oOcktqWQCmXF3+W
nQrlCu7lR+6ZId18bsBGqQtI6y/wkcN3Yo6hBO9DnT9I/WN5KLVwN5ADa10P
BHdhUWTYJmfPcCRLUFRroyOAtos/XfybCZb5Zl11pHzFj5obpnvO5MNUMrzd
qfUc81v+WRoo9eOYLW/Vr9zLMOl2lHV9bhJz7ll8lQFfHPfR2bXw4xJQwiQ9
2SyUsWCxX3RW9DL2tUau/fVgAhgM5tBF5TjMv9j6IsJcGQdlAlX5d00B42oj
/lceA43r88XyHUWgV8nC9InvKmBkbabJue7D3HrXfR9vr8Fhx9JaI4UsoFcP
tBUfF8ccnyR+BWEdJJkuZkT7JALdJiLV/X0ANOSH5158bwvtN947rspQAuZ8
VvJRSxloKMyLbEsOxjpS26g6WRxYtdx/Pd/MQ/2s1a2FHx1QPzawMTv/BbCq
9Gk++ZZQ10+RDH18CJu3pK0R9mQBy9v/aHNQBxS7te7gXhoABv3r3TYWN/SF
9QxPUO5B5Ud5yx2hD4AeqOjOHcsOwwr1RbuZOlAxazFX5KOKDC6m/4xSHQz6
Vn3nr1UlOJazBMfyk+BYThEcS+P/41h6wCBqL/uNxzE4dWC3vLv+Jmj6+Xg0
2mUD+t0sXtJe34RTXOU94/wt0HLgiRff6XR8bbPCyNXhO7K8R7KvhClAh7CW
ng2SsFB9q2Kj7H2cbA/kOVs0C6Pz3tTxsLblvikuZ05kP5Bq525fbbUEGqcT
3emjPdSS/r3VkBsCyvMqX/kcARij7Xjnsm8/tIaf35MgqAadga/ydMqagSmz
mypVpAX1X0NYH5PiYYxnDXWPbihM7ogw6VDbCQ2dWppP1jcA6aQsI+j+8pxd
71Rq2HSFyO/oEPmdl0R+xxaqF1ryJbX+wWhkRWr2ZzOYLNfXy11nBzWngo4c
DTAFst7351o+VkDN27FH+dJfqHlf0Zjs6wLDKf5NYSU7gX7ySd66jDgiFxNC
5GKiiFxMN6ZzGzhr7DiG5FXkC/eLGoF2/UTWfnMfqFZaKsJDpUCz/cA+ctwP
Row6oo6E60P1qpsBRw5fgAkODtOglkCY+HBphfUHJlT7k36T5JbXpfqwj6CL
FVC+WFV6xLdCxX26IjVQDOmliUv/dUjDUNZRx7Crj6GVT6lLLroEKrj+PHuR
dQ1YH8b15YMWoHmdGblYNAB9uDzOCTWbwpSQaWrqEyVoavfONzlTjqWn6peu
9vbC1KpVUbuTqok8rM3/8rBG/UQethnLL3bv3r1VEvt0r9i/So4Dxij/1hMK
Y1jSrLIUXH4QSaIGFuzK9OX9skczd3k/lnccDmJ6RkKz7BPWpPccsFpPnhHP
msNyjdV3TG6JwQf33u5X39tgKovNYvaKA7S6Om4yaZqA/i0Kkny+z4HeWMG/
UnoSakIaVC4E8gB1m7LQzjW1MLrxoALLL4zIbyoT+c1TRH7zJ9SNNnjNrK+A
8d/7QjerysHEo7Lk12ouRK6whcgVChG5wrP4aaL7vo3BPHZLjYbkWtoDM8tS
vDTEFBrsmI9D+QyW+0K9d6fH5oF6r2co9GMhkcsrIXJ5MkQu7wY0/FWsc7F4
DINPyZ6Gy3M0/Z1ZuTNtF5Fr+0Lk2lYSubYBaJjn/63NxwNdbAqqc1sdgWn0
PeeV5DCWxyrN7Vh7AvoD5itg0zdgvDyVMPtmFRTeHb0nz/0VmHZPH67oHoQe
6/qogSASwfttIng/EsH7pcOXC6L6klwxQNHuqFaruwdjtXXYuOMt5PjzVLuX
Lff51uWGOefqoON+mVxTihwkPNpy9cXQRZxa5//z0AgJmu+k+glf/0l4krv/
nyc5EHZt3AIbudhxylhR7shqc2iIs8wdviVLcGIbCU5sieDEtDHuuheZPdAa
WVkmIcX2l6Gdz8DetzccC+5JuuyScUKqiWrPpeQJGL0wU79+fAbKaEIPG+6Q
kH5sMH7aghdIetYJ3yKlsGhxOPeTyg1snzGntN25CSxLJ0fRER6Cbxkh+BYe
gm+5BQls0Sy3OkOcUiEJCedIQ9P4xysr9+YT+SwuIp+1ROSzLKF0Lo4VXJyD
dO4zk8+8TYCU+3iu9vwIlHjsPPCo+zQwjIVDSZ+TYKA5rrk53B/KHMK31lSn
Aj2fIeCUMADDQsYfh9xo/wdRqCGx
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->Small,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{40, 80}, {0.001, 
    1.}, {-6.2246701496092225`, -0.6917829139199269}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{
  3.425415040109375*^9, 3.425678234359375*^9, 3.4256826075*^9, 
   3.426080173828125*^9, 3.426087936390625*^9, 3.426171133828125*^9, {
   3.455557358804387*^9, 3.4555573762432127`*^9}, 3.455557408816513*^9, 
   3.455557485705127*^9, 3.4555575547329493`*^9, 3.455557890118986*^9, {
   3.455557970209482*^9, 3.455557994291855*^9}, 3.455558186670643*^9, 
   3.455571676598918*^9, 3.4675860120287*^9, 3.472400334162698*^9, 
   3.473165524234879*^9},
 CellLabel->"Out[81]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"rhoEuroCall", "[", 
    RowBox[{"s1", ",", "60.", ",", "0.29", ",", "t1", ",", "0.04"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", "40", ",", "80"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.425682632046875*^9, 3.425682634671875*^9}, {
  3.4555573591263123`*^9, 3.455557376671699*^9}},
 CellLabel->"In[82]:="],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nXc4Vv/7wO1KIiNkZO+9t+dtU2RVSkZDS6lURlu0aCijpVSSlIokNIyW
sqVo0C4hK0kh/D4/z7nv8/VcV59/Ptf1us513Od1zrmfc+77fe681i2RW8bG
xsbBxsbd8d//OYk9G5vY7ystDI8lp0I36LWxUf8Rh5D87j9N54FzJLtGazzw
9yGOTSFPBvn8gItlbDJ1TxdTIM4uimeHrMSAqywO3B4d9EuduOQ3RfwNqQeu
fyphjSlfpBeZpZjgPpx6CLg5R6fKrrfTZxHXBBeVkVpn4NbquYoeFvc5yeyx
sDiBM1IL1LrCRl4T95D8V+y6xcivFx65KKR0g3iM8Xv/w4/yzvPTI56KCfbs
5dPH81lHiGdTSA7H4vDxPNiCeCW4SHEMPB/PFSOJt4vifs4E3fH8Cy/xHh3t
41I/NI77SNag59y9bOu/ViVan2F7Ud9VnYeeKc7gEDf+uf/6GfQM3NOes1Pb
9zt6Bn7owRN1ha1n0TPwO4fL404LXULPwJvifi0/FKaKnoH3BsSFNTd/Rs8U
J+wzpxyZoLUJPQOfJFiY0rIhDD0D519+7Ld9QxZ6Bj41fvYjrkeZ6Bm4oLgW
Y98VdfSM3HZ4NF13GD0jd+u2nXvlNnpG7uHQf0RmGXp+sMzCkqNVh+G+/Frn
h+4L6Bl4jOn3q1m5cegZ+DUlQTXRe0PoGXj148cpGy6tRc/Av/6SnpT60RQ9
A/9TttHR50Y/eqY44Yk8IbPHSxQ9AxeUMnYRWR2MnoGL3h3IfF0zGz0Dl3S4
/eG3oAZ6Bj4jRC2289AX9AxcVvOpZ5TbPPSMPDfN08ufHT0j71uxe11pJ3oG
LifYr6uTmIieK/eFMxLaRRhHLps630jpRs/A8yYX7Sq42YaegT+LU719mqsQ
PQP/lmp1QPN4EHoGPnC280DOnRfomeJkgqPiFY3TFegZuJCTuPqHWhn0DHz6
HntjuTRO9Axc1myeTEOeHnoGrqA10jAQEoqegSuFH7VtLTVFz8BVRI7eLDS+
iZ6Bqyqa57665Y6ekVe0C27w9UPPwNU03JPF/J6j5/o5r84fDRtm3Jyb3deY
J4yegddZb18WdfERegb+dZeHwfTd9ugZ+O/l+YuuHKxCzxQn3Jebm9b1BaFn
4IKH0lb2J9OegU/fGXzS0nEYPQOX7Zl1403SfPQMXPFH1sMj7hboGbhqWEmy
dAs3egau4W3TVDDEjp6Ba8WsO/d4yh70DFxH7KiNYeIV9AxcVzS0uvy6EHpG
Hrq9eMBZHz03fu1XWBDewygf/R5WInIAPQP/mFA7bb+tKnoG/jPNL6C51gg9
U5xw3JcpmWlmj56BC2xdp790dj96Bi5WciJ9itle9AxcdsVf4u4ohp6BK4mZ
tiQWzULPwNWOzhs8V62InoFrHbk1NVvZDj0D1w0fNkr9I4megevVqq1YFHEU
PQPXb+QPNBsh6Bm4wfFJ/hPmfkHPwA1lnv1+w12PnpsihC/KRXxmvHHcf3nT
Hnv0DLwrO0S4mqGNnoGPJOROkCxURM8UJ7x3Rr3PndyKnoGLDIk4Tlv2CD0D
nyHTVs47VwY9A1cU41oqtuYcegauZhIdLLB+B3oGri191oizdwN6Bq7nIPfG
PtENPQM30JT51KaUgJ6BGxb5TrqVK4uegRsN3U+scTuMnoEb95BnJ/cdQs/A
TTIuSPO8cEXPH7jEEzfdW81oWXbPmFN6BnoG/jtO7ehJ50T0THHCfWx09cpF
1egZuODNROsZci/RM3CJMHs/q9u26Bm4vPtwhndiB3oGrlJ+OVpGTBo9A9fy
tHTLeJqFnoHruT5vt0yxRM/ADfIOVm3TSUHPwI1qGC5pmYPoGbhJwoiFjqAT
egZuxmU53atMDj0DN1fjnx0UuBk9A7eYnNrGpV2Inj+5Xpoz/94Xxg8x90VW
74zRM8UJ2zFVvVS1WvQMnC8hq+lDljN6Bi46O1+JLdIdPQOX5V96Ka+kAT0D
V0oxLbwsuAA9A9fY/vVt0AZ59AxcN9fi7UOPregZuEFMiXe79Hb0DNxY/GGS
xEYb9AzcdNG9nqNON9EzcPM5Bz+ZH3+AnoFb9J0XfCzqgZ6BWzle85fbWYae
gVt7x7yaKKmAnr8kG0+zLPJn/FEdfGjy8BF6pjjh4XmSW9wtgJ6BC/E/7nql
1YOegUvKbk7Q//MRPQOX/7nhr87hJegZuGrXBvWdfZnoGbiO/txvir/K0DNw
/cLzvaHfjNEzcKM8l/LrayehZ+CmG+0Kb/DSz8/Azb92ZZ+qDkHPwK24VawS
zC6jZ+DWdRktzuUW6Bk4UY79/ajzOnpGfl9481XDAvTc8vZRo2xRI2FTcdj8
x6ITPQPnY8+8uOTNNfQMXFSggNPskSl6Bi4rIFJz424begau9PWHQb35BvQM
XNPJ7/Giq6/RM3C9DX+b3aWmo2fghndfOg0kuKBn4CbvBqOa2k6gZ+Dmj+Xn
jcbXo2fgVoF7zj23Oo2egTMuid45lWuFnoGT6lgu32B/9Azc5mzG38mr7NAz
cFu32V6lEfR7d5uy93GuYnfCVWC9k52EoGfgguaOCh78sugZuIRtfPKTOXno
Gbj82dqgihJN9Axc9dOfBoUznOgZuE66zeTiMDb0DNzAdZLl6Yu0Z+DGdz+Z
eQrQz3XAzblMC0q/VqNn4FYCuqn722+jZ+CMmidhz49cRM/AbWbwNh68r4me
gdtqsO13W5KEnoHbCbyX/1m9AD0jr835w/F3Dnr+vvaTT2vxUzKp0P2ixasB
9Axc5FJ/r2VKIHoGPuPsCY91Ix/QM3AlhnWe9ycu9Axco9Vde2nxKvQMXG9X
y41zOY/QM3AjRZ62exH0ezdw08KnBW/il6Fn4JaKc29GlX9Fz8AZXoLLJF5n
oGfgNhLzXTYdH0bPwG2XFD3n8+RHz8Dtdh2+Of91LnoGbh+pVBFUewA9A3dw
YSiyK9Hvg50FoeJVJTZEQMandnl3OXoGLm4321YwoBw9A5c7Yp+sVJCAnoGr
tDdt0G0ZQs/Atfv0rz22P4OegRvob5OKbZiMnoEbD97bb/HiKXoGbp57ZNHr
7I/oGbg1I5F31V0/9AycPFHwEndaiZ6B27pw3VZ3FULPwO3SNN/t7HZAz8Dt
n7294dfyBT0Dd3hNOJ+rZaBn4I53aj6oMc6h5+7R0dc5JfeIUKhc1qxqTfQM
XIrn6sOL2XroGbjCB4lzv0Tl0DNw9XMnvx89pYeegetxnJERWBePnoEbfg63
6e0sQM/ATWv/esoZPELPwC0vWx+aFNeGnoETDeGlXRV86Bm4zSdppbtFcegZ
uN3GO14JevPQM3D75rJLge5R6Bm4o1SkgEf2LfQM3Mmg9nbzgnT0DNxZSWhd
y3oB4sLGNnmoYRMj7Uncm6zkhQyv1f7HrKtUyMyQ/M/DPLrITxqcczwkkEoc
FRMWDmwcYdzNtNgUVhPJ2PB95sOKO7eJU4KLwWD6HeRphbbuEckqxD6/KeaP
nT2jrH9+UUWbPONA7QsR/l3vcT/Acw23hx3eXYPb1/G5fLgWtpuR5xa00Wv9
U+QvzqxYEhYezqjeY5iUlPcMORWnVXHrr7rFbZ/x+gE+t+9o12IvA/y7FLcO
zlr6MINRjRzqhBrvb8+NabuFxwXb96hyllmJuiKH7UPjPsbl28mjT/BQ9t24
YbSiD30C//QxMrl9cBvxTk+w5nwXAPsn7Elhbcn6f/F80Tx862TrD3i8sB+j
xf0tc1T3Ioe6XLC1kprnISU8LuAn/nZfdNq8COMH/3Uv35cc/r0Y9wP1qAvi
CrPdpGrRJ2y/qWnLlpEqZdw/nK9nRGheev0R3A/UYR54OH7i3r4K9wPbXyh5
3PZmizBu/1p79xeriGDGu/znwoYn83F7OO+lpyu3LMhyw+27mgo3W5fsINMc
bO9vW66D2wOfOvizr7VxGnoG7sR2NsezpQ053i83eOStKsJw/6z9Aji/cN4v
rr6WwmE3F88v8Kr7yk+UpG1x//9bJ59b1Y3+4bwU13DZ9PGPoE/w/3C98ZF9
0loYD9RhGn4kZZ1f04Ac4hf9uSOHVzITrx883vV1JtLslsR+YUj179/TGOXW
33Zcb0thxLONTNNR10FeXcfNFt5+mHHhbKGx20d/5BDPyd06rSts/JAnzjx7
3US53WJR6+X1r20+EO96l+lcXOHAGb1Cka/Vbz7G7btDmtUiSs4Q4YZ47b9f
z+P2wJ0SjTIWWn7B/Az5J/JmeaWkrzf6p3xqRbvPCrr2rgPzPGyv6DO1wJSE
E+f0hLlDsY6MrLbH7yyOE0bkqnJ1rvvseL6o/RiXMjre9uquJDOFXLT+3mHH
+HXEjdiXc15EDvvJfhIl6l/wB3934H48GGJ4R2RomDhGsQkOlGoxCsSke69V
72UE9Wv7d37owN8v2H7u08Yc7qz1xKFc8eKASh2jVOrq1hnf8hnbjq1e8ddZ
Ao8Ltr/13kjuy14n4tSZ3zbY04r7P9k0M7En6T9u3LR9cP4B3E+m9UbJeYGe
+Hfh/j2XYz8QtMuJOAi5mP2J38B4dK38b0trJmPf8zADy+HNeFyw/QPjNe2P
BYXwuGD7nDMKo4svpmH8cF3d9DmzwM9pJv5duN8f+m1bulQhBP8uXG95C74v
OGk1G+9fyr/5n0v5s6J3dOJxwfHuKv383d2DHf8uxHPmxPLX71L08bzD9jmr
wg1ik2vwehvXz5q4hb4+qftI5Gz7mVFxCfp3E67PSlWBjEuZuD1rfoDzAtfJ
PHdbMYeX05FDfoiKFlwn6beauCwMuf9X7gJun3xF+dWaSQF4/cN5b7jvs6CK
KxG3h+N6sNS/WC7jBHLY/w31EderGdUY/7j78TZ9fcJ1kljy6dSIYClyyEsX
5hw8a93Vj+cLzm+azIqX95/XI4f8kPXL/G3AvVH6+Y3yJphXME3WNZe+3yHf
dmgwrhVlYvxUnNYds6RTPPKbyKymkLsjxu14X5cfdMxpirqMz2nA86bOL01S
KyczyxVPDnsF4PEGzW9aUDfXAq9n+B2/8XkT4bhrh9cV+NfVD5u6oHU+cvC5
+NkbnrPvNfB6Az/x643nrFkli9cbbH+yJDj4QEoQxk9dJ5bhZkfnzHCrIbOi
2LiH2+9hnEfOvm6xVTElDoRN5M+tWOyfjhZ+SDqR+Z06L5rYjz73Ut3irqAT
cvi79iVDYu9eDhGnUjb+wYpa7FPPLfD7NKLvROXPDSz58zaZSdgm/v2A17Nx
YeBn1+9Ow1SchRj/8v+Pf0Mtcvi7n2MW2yzdokhcS9k4Rn4txPtrbYFGkMEf
V+I2+v//jbD0tdfi9rCfvmWWBxT4NuD24/uz/72PM0aH2XmxX8+4WvVDx4dc
RQ7bTxR/aB4cm088xnja//bNf3DPPooctp8iGLgoxLKceLwfHdoV3zc+P3hW
Icc+L1/1/veffhHPnaODHNMcx2/v+xU5bv+8mL3MZCXxkhn9E33qxPjtPYSQ
Y59X1WJfgt9t4lUy+ptTpn389nP8kOP2Dnc8POLXEO/A0V8xFy3Hb59qhxy3
n20u3jzgjtcbXM9R/Iki095dw+sH+IOR3NETOrPx+gH+dvnh9VvjPuD1A7xH
hcttSSwbXifAh5/J7969djaed+i3TuhJuPb6QRye9/H94nl4frFfPJHd8qNc
E55H4BIKLvXdpUvwfAGXtg68clRmGp4X4DJL/UUjROzRP/aFAwYF1wkboWfk
D4VTp9/6iz6R/5m+4NtdW/QJ+fAGp1akQawm3qfAK23t2d8nmqJn4J/4aqaX
y6xFz8B7C/aqXojRQM/QP2W75zQUkSyGnoHznlBJFpTmQs/AhbXfXnVuW4ae
x/WLz7ejZ+AySaPWW3S2omfg8utfZK7fKYqegSum+PoKsKugZ+DKDke3emzd
gJ6xj7wlVDhouSZ6xn6xW0vczhkJ6Bl5Y//9lsEs9AzvF1U/quse+PxAz8A/
qVY+5zT5gJ6B92aGco8uuoeeoU/Kdv0096czc9AzcN68pS/ftf5Bz8CF40TC
JnJwoGfgEgeO6B9YKoGex/eLXdAz9otDd95fcLwWPQNXSbpz7k6UA3oGrk70
2K0NJNAzcM3V84utd1ujZ+DaEn8tu94/Q8/YR/b7+rLK4Sl6xn6x3PNZ3efn
oWd473j/KqXSsHgpegbe0yGj1nghHT0DH6mZ6ZWdrI+eoU86aYZTZOOjCegZ
uFDx6mG7EW30DFyCMydF77A4esZ+8fDnBrEX3eh5fL/YHD1jv5hD2FRGQww9
A9c88vaARnwHegauk8W2yjkoFD1jv1hBePbOgufoGfvFeiX2XryC6Bn7xTxu
M67NUUPPyDPl1y/O+oSeof/bsf3bUPv7ZPQMfPDhT5Wa0D70DP1QnvWLfp1M
CELPwAU1XX73vjZAz8DFV37x0WNsQM/AZT0LH6nd5UHP2C++K6LQH8KHnsf3
i9egZ+BaUU0pF5fIomfgugWHZnp3lKJn4PphUWez1uaiZ+wj993rd1/diJ6x
X2xY+nZHx0r0jP1i049LbaSmoGfsF0+YIjlBTwk9Q1/41yiRL/N0Q8/Q9+SU
3/3gfih9PQPnNxNr6KjZj56Bi4qsrtbq3I6egc9wcO5fZpuOnoErXF95xnHT
FfQMXHVLStORKdboeXy/+AR6Bq77x02vdtNc9Iz9YonUxI6ZW9Az9ou5Tvvm
WaxHz8CNc1IfrHwrjZ6Bm0qHrd0WJoaesY/stj7juGYEesY+ssOixYULFqNn
6BePquXYNu9uR8/Q95yUGPfDg5fOz8CFXXOn+q62R8/AJY2K7xgOfUfPwOUV
DA5PDfBFz8BVhL+wv2zbhp6Ba5oXTlctaEfP4/vFoegZ+8Vqh78q2dWjZ+BG
G6N38/uXoWfgJntKQr4UcqBn4Ga+6W3LuvPRM/aRe5I28e+jnzeAW7ooKp7W
vYaesY+80llzh7c+eob+JtfTHStPHVqGnoFPndW5agubB3oGLna70bCn4y56
Bi5r8/JT+p5F6Bm4kl7CtUN52egZuPrO1dMvG75Hz9gvHjTIaK57ip7H94s1
0DP2i+e8qCl7q4CegZs83GPZszQSPQM3G+xK5FT0R8/ALX7F9R+L2YeesY98
I0KqMXsHegbO0HmgenLKQ/SM/WKzJlX2xnj0DP1N3r1+jF9769AzcJHJIz5i
1yPRM3Cp+cUXEl+sRs/A5Qdj2G2GFNAzcNWZm+NWXJyFnoFrdXNx6Aqkomfs
FzeLqz0KbkDP4/vF1ugZ+8Vbjk0vSU1Dz9gvnnxicXiGKXoGbrns3DKF5pXo
Gbh1zGyt/N+t6Bn7xXozt/YyktEz9os5pkY7XhFFz8hvLWz5xDuEnqG/OTUg
1LFRdhF6Bi7Ott1MLWYCegYue8TvgIjYPPQMXOl+kNRvbT70DFxj9ca2M9d+
omfgujmnbh5OlkbP2C++w+VnoD8PPY/vF7uiZ+BmKVrfett70TNwS9cN6Y1t
G9AzcOuyrq9i//2Og2fgJLrA+a59EXrGPnJ0y4DhcC56xj5ykKl2/7ADesZ+
scpr/+SbZugZ+pvC17fzOz/eiZ6BS8ll//ms9Bs9A1fg3lhSHsKNnoGrJpb9
WFhHv6cA105IjTZu2oOegesHry25lBaNnrFffOysQpQ5nTfG94vpOgBwi/wv
Inwc+9EzcOu9aZF5c6+gZ+Ak/s36t9/K0TP2kYsP8JNNMegZ+8g1ripqXDPR
M/aRSww3S75URc/YR05w/nXC1xU9Q39TTPN1/+PzbegZuKzhGdMZYdHoGbjS
/k/vXW9poGfgGuv2CQxNK0XPwHXfWy9mn+uGnoEbKh40CZ/Tg56Bm4QWcLof
kUXP4/vFL9AzcKvq3lsmt9+jZ+wX+7u+e7/mJ3oGblPooR8TNxs9Yx/514nK
BunL6Bn7xSICWglVMugZ+8XC+Q6DEUnoGfmv0Pf+HcvRM9QVJe5/tC6ucEHP
wOVXth3V3LsFPQNXFQ/WOdaahp6Ba3u1i7yyPIWegeuHdx1ULG5Ez8CN3h1/
XLxTFz0DN5uleCLV+gx6Ht8vbkbPwBkfYktjhL6gZ+wXb/K95RyVjp6B276V
WXz/MV13wn6xKtn2p5SuOwF3mHNZe8HzBPSMfeQlbgM/T+mizxyr0Bz2qqnW
Q4perT1vJ6BPZr1UhWFjb2b369MEPN7dHuVzZzs7M57NnJLQe+kxSx3Pm6rj
meLxju2/8hnh/q3j9dXGHo93bP/HbhKe75crxG/Q19Wl+Zl+G5M/EK6PJrOT
w//i8TLruvyEfW7q4tPztuDxnl7z5sYT1XDG4A6xF5cHrPB4mXXXOkYvj21m
YvY2PN775GfTkW+djO3qbQGnmmfidVLUU2G0oKaBcevbUNZejYl43pl1+HmM
nuW+QsPa9O9yXk28XnnVC8afcy9mZYUvYalrCVB1Lfp3mfl3a4jIgKRryQRF
9MCszycQsWPR24wl+tEDM557RLwg3P7oogT0wOwXeBHxTetuRmfHoofbgVdv
Hq1uI2JGoly5RyagB2b8O8m0NRtsfnJr4/01Fn+1KBFeeb1F9I0H+qlYqv1e
tu0F45pkaMiJMzfxemD2BZIZZWLOoqMXn6C3pxLnZli2eTBehfIk2+xuwvuL
2VcSYnTOz2DICGzC++txvaD//NZnjD+ehglpC7PQM7O/c4RwhPx2fzaTDz0/
jI0+vanVg/DyNqpJC/wdX9dq66PqWs/QMzP+PDJj39uoV/v3omdm/JFEzmxk
7rFZ9PspM347Ir9P68JopT16ZsbPTxSUEi19djxAz8z43xAFtURj9k307wUz
/otEvjDPxtdvLnpmxr+eyA3Z792dtxY9P3uQ92N+WDOj4tvKjCzHS+j5me5R
G5mwIsY7uQUBqztXoue61JAjLWGnGT0OStXPTOejZ2bfbRtj6OgaawsJHvRc
0+e6qLU9n3BrGvIuUo9Fz8x+XDjhN/Sosn5VjZ6rsorOcbUbERFzZ8EhXzmW
ulYnVdeyQs/M+KuJwveKw1GBc9AzM/5sorz8oknl6/XomRl/ElF1cL59ZM9z
9MyMfwtR284W2thSg56Z8ZcQ9Wk39pe93ouemfHHEXXloM4JgezomRn/PKJW
3cHgWCxH17W86zfKhtcy3vG91X83cB89N9y//uBbeDaje6uv+dCsEPTcoHNA
6Hp4PGNoc0bhjSMM9Mxcn7CWcB9fpuc38yB6fjHZLtcyfDYRWNC8W+fzFfT8
fLMsB2e4NpkWYNL1IdGCrh+2/PWsCJ9CJJNn7bx9zYqlrvWBqmtp03WtsfhL
iep2o6P7uVvRMzP+NKKxsrdoxfpF6JkZ/z6iVfrF90fHTPTMjD+E6ERWzLUM
Y0PPzPi9ia7LfIef3ofQMzN+U6J7+ETtrYMv6frhWPwziO7xM88n3+ZDz2++
dPe1RjxgtL9Zo0eiY9HzG68q++yINMaAbOBK7no39Py6NDMpPCKacC31aJlS
loOemetDlhD+helKd6Kt0fOr04sNuSJsyDT5uNXyrZvR8yteq5jKCDki2WR4
Nfm8C3p+GTn9eUIEG5Hb1cm9b5YLS13rOVXXCkTPzPhvEs2/9auNvl9Bz8z4
k4muMpfdhP1T0DMz/i1Eb++tD72HU9AzM/5FRP+Uxtkrc0XQMzN+R2IQ+Cly
0qVK9MyMX4MYNJ8aevaBrocz4xckhuJ/kyc43ETP78OnhOdE5jN+rRZPv/Ew
HT2/+9xWFhGZTDikjBdXSkWh53eeZaLWkWFkctPA2sHm2+j5bUnacu7IOUS4
bQnnBI429PxWa8etqkhDIvGqvfUg/yr03JyykDsxUoTIWS+Z/P3iafTcPMlk
rm/ET6JkPWvRqvncLHWtpVRdKw49M+PPILr5NxKTRyrQMzP+/UT/gPTO4fM/
0DMz/hBiKPGC8X5RFXpmxu9NjALjBfgkl6JnZvxmxNinq/bIyRT0zIx/BjGZ
IPJgY/0E9DwWfyQXMdl4NWlvcxhd1+JM3mZp+YIxEiIvYTj4Ez1/vBOTLnPv
EZkY6CgmeZl+zvwYGlrFaZlHBId33bV764KeP6oG/my5l07EW7UcH9ZdouuH
72dLVlgmEtmAN2lCOXPo+uExS7tr92KIYkpEnljlYrp+6Ka++qjlRqI6zOni
OtGCpa7VTNW1gum61lj8VUS/daG2k6MDembGX0QMvz65nDashZ6Z8ecQ43Pq
nycFnEbPzPgvEFPB5dO6zs2h64dj8R8jZiYpsy55K9H1w7H49xNzkVfBjpti
6frhWPxbifl1v9ETjT10XctV0UrWyo1w+SzNDe7mpetanELLOIusiIBFbm9W
Lf2c9vkO28FvVlpE1L3K8OTQKfT8eX1XXkWRFJkhUcOfXbEWPX9WaW6+bsVH
FJasEi/9eZSuH76r5Dp67y9RZWfjcuZdSNcPk29rhll2EM17nqlz/A+x1LXm
UnUtRbquNRa/AzESmcinx0s/3zLjNyYmJkvO7nR3Rc/M+NWImfjInplZh9Ez
xG+e2ysmWJqOnpnxCxBLTtELJe3088ZY/EXsxIq3qNzYic4bzPj7iFWNVHyr
3zBd10rKHeGyKiO8XJyWbUMH6brWrPNK34ryibBrmulDPQ66rsUR71ZplfFf
Hgiy6LacjJ6/3t4edr3oGJG7KzoS1rQUPX9dv/pMgtUeoryh/dL5gTvo+avK
gsdhRWFEY80c/gl71tP1w3dOnQuslhFdq6gdMv6lLHWtGqquZULXtcbiLyYm
5jrr+C+b0nWtsfiziVlUh0GWE+2ZGX8asdjb0VYWvBE9M+NPJlaO0bckSirR
MzP+/cS6KNClxKACPTPj30IYHR5X7s06SNcPx+IPIWT1khjFgDfoufWtTXGr
NYNMnRaav+eIGHpuTdJpqSzWIWL6so/Z39Sj59ZZM/izrWWIzKFL7w3EI9Fz
KwefcUIxP1HczPOs/epy9PytcDAg3GqEqB1yV6yo80LP39a17l1Q1EW0m+L0
570QQc/flBuvW1m9I/pS0/d1+4ay1LWcqLqWI3pmxm9CzBZqxj4ZckbPzPhV
icVDBTHpK/7omRm/JLH6rhZnP9UJPUP8jOrqjP7AHvQ8Fr81OyF5Pm4hfpno
mRn/T2ITMOMg20NJ9MyMv4XYfM20iFuYQde1lOp2VlkXEuGA1UNfJfvRc3tz
8aXs4kwi6Wj3WJWD7u+0J16tTbQ+QeQNOaTKqyXQc/vMU7/Di/cTFXsBl+PW
d9BzO3usjK91BNHMdo5bW3aWrh8WRjhZFa8gesqnZjTGVtL1w3XL1slZ+xCD
gfOaXEu8WOpapVRdy4uua43Fn0MsIpzszet3oGdm/OeJ1UiK2SO/FPTMjD+J
EAWPWWlxA+iZGf8+YqM0tWyILws9M+PfQmw5/VwWzFxI1w/H4l9DbItdXj23
ekbXD8fiDyR2PpMVpkXS/Z3OtYEkh6FHRBtXbZLv2ULXtZTcViaWyBGZ6KDT
TneU0XNHs8WRCIYgUcy5lb/xiBR67khUK/QtYSPq0wtv8CUS9NwxU+yDtXUP
0XnJn7As/yZ67mDnmShX/IHof5BScdpcQNcPC/p0ua3riFHDK/FzM+pZ6lpm
VF2rhq5rjcWvRqwO3y4Va3hC17XG4pcgZPpXQ47Z9PsgM/4pxMaNxzj7v+cL
8Azx2wbYJg7anUbPzPh/EjvXVWXBsRbomRn/V2IvtnVCRMh1un44Fv8rYl+6
pVPan+47dOd3sScxsojEPC87ST+6fshcX5dC5Hq2lw78XU3XtRQrPBcyDhAV
883f1ZTU0TNzPfAWovmH95XKpyH03JWQcV6eEUz0dp3WmVgch567XJLKuUt8
ieHJZrXsq3S/sostuqeN4UJMcg4+bTiwlaWulUfVtRroutZY/OmEcf7m4LAY
vZ6EGX8SsdHbb3WKez9d1xqLfx+x3cieG7Q5GT1D/HYJX3Psqx+hZ2b8a4j9
kUlTa0zWoGdm/IHEIdjXYNvDRPTArBepMr93qPzJwg8zefUX9MOsI0kzYkPr
cuJfFyEfq0cdu8TI0M2Uqpc9h+eFWVdJZK77/SiJ52WsDlMjzjh78dvJde8P
4PbM+sB1aj0tnceo9ylGbckkq+VKL5GP1dlmzrNK/f/vHdpX4n7G6loq0ta+
//9dAxHHvzsWv5qddasl9+WF51/h8TLrRQHUdwppLDyBySvpdRrMOlI94+2Q
3OY4U1fkY/Wo2hmMzxmLc1/2meP1zIxzPeMzt1S+oCPdl2fWFacQfl8u/69V
9/C4qLoTQ0pj8q5LwXMwfmZdpY9R53suZvrh7Xi8zPf9JMazZdL7ZVen436o
9yPGR65fuQcf1SNnXreeRCymcnGH7FmMh8m9iKOCWFfvqz/I4b5zUuEs2Hzv
F81h/aq3tHffrde4f5gjFN/70ObCgQb0Of57ASX0Bvzpp3zHbJ9B5LCuNSm0
71lK1Ah6AM67XEguXuU7y3VLfb9TOcjyd7cw/65tF+5/7LzMWseQ+f/17Tx0
XYhZj+1kPFgQszzA/gV6hnXI0T9CpgxrJrBc55up9e356AG297xaumFVDC/G
DzxzoMr1QG8uy/UG38vQzz/MOupPxmFrjv5URRncP6xLPx29+M+JBCHkzHra
Osaevbrr+uZPRM68fj4xjl2UdzQo3Y/xw37uemRdPOi9iOV+TKPuxz24H1jH
fl9g0qu+zPPImfWlOYw8/RchmZGnkTPrVE8ZRbEbpurcZz0vV6nrIRmPl5lP
JBiO8Z+UAyq2ImfeLwaMFTNyp+67vRY5XD+bnaINw7dn4HkEnx8+Oiy8fM8Z
j4tZT86h1nsfY+H3KF6LfPw68M94XMy66BLG+RWNKxPV4/H3gtkXOMV4oXow
cHvKBORwfd6vMNufUEE/J8B67LTC2gCZTiHcnlmfn8FcF628YzxXyWdydXp+
F9PPdOvRK4vUdfTo7zSBJ5ee7edePIrf8VGc0SN0W8Xi52r8jg/4iMdPT86K
WPyOj+KEe+Rt3T0tM/yODzjvZdlFH5cr4nd8wKfwKsscinHF7/iQD2RF5CaN
4nd8wPntTzz5ElWN3/Eh9yn+myJqjMfFPF+3GE6H2jcLzNLB9fDA+9z2VKr/
z7wgihNOZbvlgSc18XiBT/n74tm5NfScBOAiOvpesmoT8XiBi9vMcDr/LRmP
F7jEr9xXGxcm4fECl4o1qZAPiMPjBS7tlzvw5XgpHi/yB2JiVnxT8fsF5N0c
j78vM0QPzOswgBGl3C4U6RuD38sA/3ho/fDhVA/8ngJ4n1xbm5T1KHqjOOHU
49t34KYfegMu4Chms5o9G70BF/V/N2x5LQ69AZeqUXOSqjmF3oDLTa+XaTc5
i96AK8xISLzOUYzegCtuz9D+zNBFb8CVFpw/7DhHH70hf7NZ6uiievQGXFmu
RoCELmT5HieG+h5nFX4fAfydY1D8t71n0CfwH6faE2XXWKNPihN2y7a6dNUW
9Al8im5eMV+QNvoEPu2zzRL+A1PQJ3Dp3M6q78vo7+6ByydH/bjJno8+gSs9
e2904PId9AlcNagt3sOfnm8AXN2V7Yp1miT6BK5x5usgT/o29Alcc2tLY3QT
A30C15qgFLu7PwV9MuvkPoyXc9Wyj500RJ/AO9SPr5h2mB99Av97Y1LlJ9tu
9ElxMmn+xnuTjeejT+DCHwJKZIR10CdwKauzdeyyXegTuPyOLxfPceaiT+DK
1w78Md4Rij6Bqwc2XdgUIIk+gWuFOAnGGfehT+A61bvrOaNnoE/guk/Snopq
0T6B6y2/ciGqmg19Iq9/O8ct3g19UnVvxpfX/cnTdwXh/Q68zvNU+O5yNvQM
vD8g9GlH7Br0DPVzrpLj6YHP6DkzwAWn8D8KPj4ZPQOf7nO10zUqGD0Dl/Mu
dmF3L0TPwJVlZjltuCKKnoGr562aZHYsHD0D164Vv30xwwc9A9dTdPjwIyYS
PQPXj7sV/6vMED1jX+DsVs1AISH0DNwwxMdc45MbegZuxL7XRslsHXpm1udH
GT0BXO3Nfbksc5OCqblJR9A/bN98XPl82d3XLPOXgqn5SxJ4XqjtCZvwlLpY
zQyW+UvB1PylCjxfsP3kut2mefxFLHOZgqm5TA14HmH7aVd8nd+s12OZ1xRM
zWsieH5h+xnd3we2d29kmeMUTM1x+o7nHbZXPLSA58/iLpb5TsHUfCdJvB5g
e7U7tzOiF0azzH0Kpvodl/E6ge21r8k6957qYZkHFUzNg6LnyMH2eokCpgf2
NrDMiQqm5kSdwusKtjeIWlpbOneEZX5UMDU/agCvN9jeSJw//ss7Tpa5UsHU
XClHvA5he2O/ui87ms+yzJsKpuZNyeL1Cdub+Pju0v8UyzKHKpiaQxWJ1y1s
bypse2zvzhMs86mCqflU+fQcKqovM/pncuyEXjN6bhXFe3zvmxybw6DnUzE5
mXzT2O3Z+X56PhXFp931fKqotYOeT0VxmRWNP7h4muj5VBRX0ns2L2DxFXo+
FcU1JgR4DpWV0vOpKK4bOlH5q1c/PZ+K4gaWH1vyQgzp+VQUN6qyvKt8pZKe
T0VxU/4Qi5sbm+j5VBQ3+7twygLlXno+FcUtjiVtyK9yoedTUdzy08BWl6a7
9Hwqilu17zNXOZNEz6Ea619YE64rZ+vDi4rouVVMzugPim/fPDOAnk9FbS8o
vaor1aSZnk9F8ekdE/Nb5t+l51NRXN5cR2Xqm2J6PhXFVadfqOG1eE7Pp6K4
toPZl7wXzfR8Korrm0wMcbTZR8+noriRqoqm1QJ6zgxwk+YL2QeC6uj5VBQ3
t09jvFo9Qs+norjlAraMe57a9HwqiltPvxiq0ryTnk9FccaBLTO7H4XT86ko
ThYyRG3V/2cO1VifIpNMepg0c9kSD3puFZMzhsmmj1mGHvR8Kmp7kXi/lGQN
2jPwGYwJJ/Wcjen5VBRXrGR/98vsOz2fiuIaPFyVrivK6PlUFNe9P1tpYmA6
PZ+K4gaDF5xacuXo+VQUN+H/Y6neZEvPp6K4WcvapjTpz/R8KopbhnbyBAjH
0fOpKG59xe97wR5uej4VxYlTUmeLqhE9n4riNkKWEusHv9PzqYAXFtrMf6eM
npn9CCEiYCERzr41DD0D51hn83dbsSZ6Bi6upuAadTAMPQOX89kwvdgqDj0D
VwkK49ry/Q56Bq71q6Y1/gg9PxC4fmAMX9iHk+gZuNHd5tKLHnXoGbjpj5On
Z6/IRc/ALdrVtjyyckDPwK2PKx/wXiGLnoGTyMrpnVOU0DNwm232Zd4t9Fxo
4LY+DwV2psxGz8Dt+HdeXHw7Cz0z+w7biFDMyvWtD8XQM3Ce4+mdPmbn0TNw
ya8bmsqSdqNn4AopJ+VTNa3QM3B1rgHjlMux6Bm47ibeRqcyet4acIPhif77
kxTRM3CTLYWZj876o2fg5nV2x1Sb5qFn4Fat9q2j6V7oGTjx3bnev1EfPQO3
OV79y/K4HHoGbpsV9io0m4GegdsdGzhfrK2JnoHb+zs6R8+qRM/M/kILmXa4
qkyviv4dBD5ZSDC7LPUqegYuU/Jib8sben4gcKV2pc+VCjboGbhmljO/pQw9
3xW4Xhcfn+9AI3oGbnQyz9PPXQo9AzczMU+T8NmNnoFbZilNsuCxQ8/AGR9n
5H1w7EHPwG2Wcy5bws2BnoHb5p5MbjM9jZ6B2zWkbXjdPIKegdvXrZlfupye
owvc4eIF4cmaouiZWTf2IOJ37wjZtTagT+Bybxjzzl4IQp/AVW0SbfyGF6NP
4DrzvM/WRXSiT+AGK1MWG/+RRZ/ATYyCds2PuoQ+gZv/WK4cmGWLPoFbRy+L
FjfeiD6Bk/bogwfzNdEncNu1C9f4ON9Bn8DtyqPEUppc0Sdw+yHdYclA2idw
R66jg0nu9Lwv5K3uRi26E6i6YhzW65jrjTWI47X8joEWe6zLubTIxqu5chFn
yZBHQ6KjyKMcffL3SloTl1jF03+d7iDPHvAmBSKDZGZ/06bhSKy/MRqm8Bzm
cpUkrkEJriOXsc7G6FROknzN6U/1rS7Rdb+x9ckZxGNeU/Au6Zxxdb/rjyYS
zyn5jbvyp7DU/eYQz0cJttGzg1nqfl3Ea2vI9eiWJyx1vx7ire8iEbNTcXzd
b1oD8W5T3LtbbBfN/feusdraiHNFoO533+y7WKbjApynAbwpu71kxvMfOB8D
+A/J408zjp8grsZNoSMxdB2PPb/8watVsI7iIvKxdciS2sSjv2kV+wUOuu6X
msvj+/i/35Fr+Q0cFoF03W8Fm4bNRXXiFZRgw/Gcrh9Ke46Uvw2fTLwlQ65x
rqH/rnSJb9mRa2k4JwR5V4h481PoIzzDOt7YuuI9psRFK79laOgg8h+rzO4c
f3GazEwJKR7WdMI6GNupZxdsVf4775MUj434cyCfvEO4vnyTPdV/7EfOXPe7
kHgea1oRrepN1+XkvN7oXK0kXm75z6NLc+j6m8q6Gp/DXsSbK4ERs2AKze/X
qi1f6Eu874ZkxfwIputyooWHX0X741wjqLMx1+saU3OKdLDuNOHXmcpPj7bj
XBHgQketI9R4s6k+qRNy5rrZd8TLuGk5x7V0ut4lKrglfNl/z6ud+fWcjux0
vUs1XsV4YiHOrULe2PskNyyQ6i+IY92Gua71LZl1Lf/DyFS6/iPmGH2jIUGD
6s+epOtCY+tIjxKvxqagGP1+uv4zle2bnfYC4n0ovy6m0pvmJ3+9ja8ZoOr/
d7GOwVzPGUK8w5uWchY60XWPU93VE4y2Ufn5HEsd4yCVnxey1B+eUPlZlKXO
8JzKz89Y6gmWVH4+yFI3aKPysxNLfQDmi3Kw1AEuUfm5iOV93/wf7/Un//H+
/ucf7+kO/3gfl/nHe3fEP9+vIQ/D+yBv5J+BHeqLMQ8DF3nn7iPa7YZ5GPgM
93PVRLiNysNhyBXjlb75VJRgHgauPl+1MXoefOeVgZy5XnEe5mF8L97pkPqu
0BrzMHCTSuMO/vTrmIfxvfjhQx2Vk98wD+N78co1+b1zr2Eexvfi4kDDS5lH
MA/je3GNkfLzC1dxbhK8xzHXJXpjfgYu1p5zWd5jCuZn4HJsIewPb9djfgau
nL82tlolFPMzcM2qwyl7/mZifsb31rH1hP5UfmZHbpZ7ofVO/gcqP9P7t2jm
u+I5DPn5LnKrG+eWOVg2YX7G91bj36biV8QxP+N7q1m641efXVR+rsP3LOb6
QDEqPx9ALv+4+kDVT23Mz8BVn3yd3mWzGvMzcB015c9e75oxPwNnrt+LwvwM
3Ordpfwt90IwPwNnfHr9d9+bBMzP+P5Y8S0z78luzM/4nrjjUU6aQgyVn8Pw
vYa57i4M8zNw9cfTZZ76FGJ+Bq5b0FSbsf0B5mfgzPVvA5if8f1r1KG32v81
5md8/+rKE74k2YT5Gd+/CrIGJ+hXYn6G9wLm+rRbmJ+B69U1fvfS24P5Gd87
xtaD+WN+xveOCV27RDVCMT8j/7pUYX7NWpxnBc/JzHVZj1nWO7VQ652yMW/j
c/XEOoGG70dY5uDdoubgibLMtbtFzbWbTexjFTP/SGvh7/6hlatEUht5iEN/
U9SA2zfkuWVTVoQt52OZLxpDzRct+Qd/Su1fE/s1Tw+fWcsbIE7svyQE/FlF
93dq7JTldd5EEXut/N7fdSP/03cu3qfafok4pIRUDLAX0s+3KpdeP95yA+c9
wvOnYqvRtRvD73E+JPDg+cs9+2KsMD//z3PgkVMjNTiPDvw4TH6Rs2dXDx4X
cL/2IB4pIV38u8APFTyYZ6763/NVUML8wR0X0NszrtARIfMC3A/wxEF27axR
8X94e8QyFzSGmgt64B+cnhcKPisKBlR6Wn6yzAuNoeaF8lPHK4J9n4amoBW8
gl3UPLqNyD9ESLkfdYqh54hS+y8qPWN4T6uPOl/D+D4ydVgwVelmOD1HlOIC
L4Ya2VM/Yv7H95cqOxGDVRvw+Q3O1zmjE91rdcVwziTwMt8tYkesQ/D8gv+8
aUJ5LzvK0A94LgjcvGjtBp1/eDuE3uB438wxeL+a0xqPC/azu8D/so+z1D98
CuN7KMSZ59biLrd1Gb63At+7fM16zxf9xDm8acvQUh3ku4ca3id08RPnehfd
oWx/5CciW0ptm9YSly8JXn8T25HfMrOv+BpB1y3BQ5qsjkb18BC+XwMP6+WJ
vrqi7x/5YSrGCfyRb46ofpjjP/IGPZcS/GTECW39Zv4N4wFeFtLC97FWFe9f
4FnZJY38+1rxfQSOa2x9TmEL/u4D3zhrIJdLbBa+p+B1Irso5rQiO/qHOD8E
f1loG1qKzwmwfUbyfo4nl+VZ5jfeotbt3P4HL6by1UKM/6SwX/Pj/953oM6A
78VtVid++tLzP/G9u9XWy21/PnGapJg2qE9f5w4e5/XsX4xQeSMN+ZLDE5vu
fryA/oF7v1LNzJKi53MCj3/dfIuv8hxxq3dRHH3dQa/DsTl+T8UmG+dMwnFt
/Dy09J13FXFLT3AZvfkC3xMn98vf87W8Q9yFXOTZvsQjFza27EknK4mjl4vx
wKlp6KFEb++zstaZxC28ae3ooSJ8LxNR+6ZSzHWRzP6S4MRWHIlcIpdw6pfv
Jh5qivFRv08il2WMTAu6K0Ld17fx/vpeTuIFD/UTNxfFxNEVF/F9SkL45ZOZ
Qy1kdn7TGrYTi5DLvlHu9jgiTTzG4qfXGyj6xL3ZXC1BPMoVD7Nvo9/7VMi5
+a/yzPD3DvLb52rX8Le12nhegPeVk/fr0m3xPoX3LM4ZS25IxJ4kbpIhhaM2
h5HL3J/imrdlDpkdq3iUbYMLckXN7E7FtjTiPvacSa83UNVyJ1vf//eclusi
u2vVe+QaaQ0XV7U1EM9VigejOSyRa69badw07wB1X9diHuuI2OSdN+Ucdf3E
If8rZt/zq1Wcun4c8L1v4uHFvdH+ldScXjbkwvPslVTq3xPXzvy3o5J0P10+
5W1Ficd1MnthSD6bqx5ylfn1W3QqjhL3Mc8dyDVqE9QkPu8gHikhN9nn0f13
nQfHi353RxJPLxcZ9m66/663Pyk4PeMU8ZqkeIBjH91/13/jvmFrJz/mZ+in
f1y8XDvWdTHmGeC99TsTYz6XU/fdRuyHslcL5V7IHKLysDZyfraeKIu+eCrf
tiEX7b6h/O3MCJnl5aI+/CgduayKRqTpSilqXXcgcub3etJktlZ+E5uyBHL1
pU/E/C6bEvcxDy+Q6zjx74qO4iEeuxMcdtk9ofvUjQ77deexEU+LkBu7mhXp
fnTh0LUfn3mIZ6+LdPSmXXTf2dF41uU5qcTrsmJsDN87ur+8a7WGnEA5tf7W
gu4jj32Xt57KG9/pvqr44UHNl82YN+A9hePSaK5oNx/mDeB6W4z1dg1lYd4A
brixbPbNjHQqf/riewHPxMLVf6z8MJ8AF/wu9nzftw1UPqH7XPo1jZlebbuo
fBKB3Kjn5KxNqrmYT4Cbvnsmz66gRP2+2+Fz/iS31g+umkL4PABcRO5Gn+Vi
Dsw/wKUvXWlZcd4W8w9wQ7F1cXXTCjH/ADdZNGH0rSUv5h/g5hHT4nODVTH/
ALdy6WtZdcQcn5PhvYBvfZQDv+VTzEvARYl9n+XEZZiXgMtq7l4SUmKKeQm4
ssSoR9CMD5iXgBvNecb7vPkX5iXgpg+n7JP/5UrlJS7kluyr/jw4b4V5Cbj1
MDmlxZWDeQn7NQ0XY/rvnsDnanhPEVj9qflXghQ+hwAXd5SMIh6zMV8BlwuP
H8w388TfO+AqV7fm5phfwbniwLX3bQ4VuD2HylcRyI33XXaKefyJylf6yM0l
trru8F2C+Qq41Y5n3VfvymC+Ak48J+QZpl/AfIV9k3tuawtCajFfYd9kZE/F
ufAYzEvw3Cuh/12eLzIc8xJw+Vx3xk+DL5iXgKtpq8y6fnEE8xJwXRX7Pvus
u5iXsN/RoqkgVfoR8xL2O8a+NzmIeQm4xQpOrTuaK6i81ED3O3pUeg9s9KLy
0lPkNlL5+iq7L2Jewn5Hyrb+no6dVF6KpvsdP8LtT03wxrwE3GGGZO+aBks8
v/B8UjF/h+ltM108v8C/rJ5Z+6jzDct3ENOp7yDqsQ8C+2d+p5CGeQ/fO8a+
U+jH9314Xhpbt+9w+h/rPJfh/uH5h7l++yD6h/28fF36mXtfL8scGOjLTMd1
7OPed3TacJ028LfHL4XKOznjd0PAe6evtoyWHxg/Bwb7LPvw+yDgk0Z2J9v+
PoTfBwHn81Pc6jdvCX4fhH2WRK6UqSvp7zfR8/SnE54MSmFdAvlMwVVWVlf+
eV7geOE8vlgr0llUKIrr7YF/e2fPpjzchR6AD8w3muSzQB49wHMpV6pVX96k
cyzzXqDPIo3Hi30Ws0eCFr924vECl/zeEvT3Yx8eL/ZfOlNcRttd8Hixn7I9
OXGjSz4eL/LyLQ+02O6wzG+BPgv9nS/w7gDGw8tTbNAD8KHBg3N8ry9AD/Cc
zBMjsCHU4Bh6AD417pm8dIo0y9wV6L/MwePF9dKdCVXTiv7g8WJf5vOew/Fr
L+PxYv8lxm1ZR1EYHi/ylj3VPOxyLPNSoP8ijscFz9s8TuurhaW34nEBn5pU
tVoslZ5rDVy0e/mQ/yV1lnkm0Jd5g/Hj+uTPhxxXblqB8WO/5rP5kdR5pzB+
7MskXK6vuf+EZd4I9GWKME7goorh+XYr7mOcwKVXrR1IsE5lmfsB/ZojGA/y
3x/3xcYsw3iwXxPxML9JfoRl/gb0a3zw7+J62t81kz54KOJ+sI+zWyHm5IGv
LPNag6l5rbNY5rUGU/Na01jmtQZT81r3sMxrDabmtW5lmdcaTM1rTWOZ1xpM
zWvNZJlrAc/JAixzXIOpOa6WLPMuoO9zjGWOazA1x5Wek4N9n7E5rptZ5rgG
U3Nc17HMcQ2m5rhKscxxDabmuIqyzHENpua4hrPMcQ2m5rjS30PBc/XEgZW7
jd5o0fNaKS7U/NvFqyWFntdKcYk0X//5NyToea0Ul3t6N+DteXruInDlK9vO
HjKj5w7h+slHuodK+fazzK+AfpArPZcV+kGaF0VfXdtOz2WFfpCZaVJP90F6
Liv0gybONdwv+Y6ey0px8xNLzmqJLqPnKkCf6LvYnkMtGfRcBegHcSXNzMhW
YZlTAf0gV3r+KsVFn24xzO+/RM9fpbiMu3Xb32B67hxwxcjZr9axT6bnr1Jc
7crpIoNtvPT8BIrrTBFLX5P9jmXuBPSJ5tDzVKFPFDQ79u2OXfQ8VegTzbHe
+0JejJ6nCn0ibo+9bE846XmqsO4xsvRmpNxEeh4C9I9ypbJWHTNlmSMBfSIB
9IB9It4fo6qf59LzUSmuohNnFJf+iJ6PSnHNa1cnSlYcoOejUlxPfdWG7dcX
scx/gP7RZnquKfSPkm8l2lQ30HNNoX+0rEmN3fMHPdcU+kfbpFbXr+ii55pC
/0jlB7fT6QsscxugfxSMxwVcraNHvO8vPScKuE7uQ7suR2U8LlwfWL1Dky+k
kWWuAvSV6OcB7Cu9vWSZ7JKF8WNf6da2NcO76Pnk2FdaVzRTbpc2y9wD6Ctl
YJzYV/JL+DK78ATGCdxw3bnjrj68LPMHoN9E/3sWyNskUw2v3sJ4sN90Q6rq
R2EnyxwA6Dfdxb+L701Tr1et59307z4UtX/kHamGs1TrWb5zh/eOXZjPx38n
SP+7FeO/pwvAfIV1yNyC80sMr+D2478jC8Pt8TsyCd0mRXkVvH+x3rj/lHhL
vDk9/416bulMX5b3dtEe3P/476oI7h+/q1K+EiqxzBb3j99VidyayHE3kJ7P
BvXG2NyM8FT6u3WoK7bWC/OM2lzBeID/7n0UaiL6np6TRj0ncPnrt2x/T8/d
Gv+90gWME79X0gr8NfqEG+MErrajMXvqn4UYJ3BNX2OTqev46PlmUG+8FdK9
7c8rjB/qij8zDRNb/JsxfngOYV92hj9kCX3/Ap9871et8wUVev4YxUXmRTnG
OAjhcY3/Pogbjwu/D1JScizoW4XHBVyr1sZQfiobHhdw3ein7/uL6HkIWG98
dzZiGk8YPU8M6o1DmoIR0vR3u1BX7IrbXfQytgo9AP/r43f/sbAUeoDnnAl7
vr65NiEDPQAXbIofLPh8Dj0An27asi/9dRk9HwzqjU+nrOTNmYN+xn8vsw79
4HcxU/2yk3hT0Q/WFbm3ZJ764Ix+gOuXPzoYfXYG+gFu6B66bcfx2+gH643J
ddo6WzfTc8Cg3nh2SOhNxKTxc8Cw3kjPyRn/HUcHPbeK+r3jvOz+wLGRnv85
/nuEbfScKKg3VvcXRUaZ03OZqN+RiXtmsdmwZdBzmSguVLVb1HiEnvc1fh2+
KD0fieLG2TE2dv/lW5yPBOvwjXMCP4Zn03OKqPw/paRmapLKCXpOEcVFlYLP
BYTfoucUUXxG22azqy+vYjzj16s/pucIwXr1Q0ZG+lL36DlCsF5d9+weC+8s
eo4Q1BvP2Linc9Oe4XdB8FJi0toGH3rOD8WnX1i0U/VBIz3nh+JyB5Wdv+1e
Qc/5gXrj56Ad68wTMP7x68A9MX5cB77CtMz3wxZ6Pg+sA1fa2+12gZeez0Nx
xjVl99HrCvR8Hqg3/t2yYrXEDTwu+D0SSfb6ZNW/AI8LuLRNh44vBz3/HLhC
jm83uW5Lz9WhuNq8kmeGeoX0XB2K6wS3mWSFXMbjHb8eOwKPF9djW91cVWb9
FY8X12NPy366+UEfPScH6o1New5Wzqmh5+RAXZF/+TNpP0F6Tg6sx5YPbLky
4RjLvA6og6WiB+CyO44PnFhMzwkBrvT+1PXIyqP03BuKazzL5OBxmUrPvaG4
3jT/i9cjl9BzbyhuGGiom8hWi37Gr682Qj9Yb5z6WLPFsB/94PrqqKvTvZsK
0A/WId9mfM3Z20/Pt4F6o1QH149JOfR8G1hfbbVks6eDGT3fBuqQjImWd8/Q
87HH1wl/s8xtgLrfbvQJ/P77mr5P3x7j9vA7/uKka50YbxRuD88/dhwSWu3+
3Lg91Ls2fWf76eD/DreH55OXDy02OmrG4Pbw+/spM3bD3KDleB5hP3ftN20Q
sQwaP58E65xeLHM5Yqi5HGdY5mZQffnbk1nmXUB//Pr/ARARDLQ=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
B4PzasTREDN4bwNjhrnueZBng/UN4rkRE/3ais1GfernVWw2alg/v3Kiwaf7
5ZUrDQzub6n8a+BuF8/k/Ob5lZWjjRzsb608aOB6v6JiubHGDjYuzm+dNQc/
W76Mt2+xQU0M8jL1P+sKfJjWe9YfcO68ts49+P4p5t9SGDJfVvUlDilMbay9
f6Ryq4ER/ZOVr40z7pdWXDc4V99wonHu/fWFH41621nDfFbFTpxdOdE4o35R
xX5De/SLC0satbe/rjCg8b0drIrTKz5jw6eGzujiFjnRqHP9jMKGBj/oaKkB
L2zU5k79aN+seGvUvSF3gwd0vq/DzdrXKyYGuNbYR1dLgDvNfDNHwMQGVvQv
bbF8S8VzVyfJNeX8aIjG2XVqTH961d9x23bPb9R94/y6V8Af4uW1plCXETtN
jkZsy7U7tWLpFvkxtbr3whJzfFJrOlx36a6o+tDli8Rnlx/BVzvvCepkA4OD
OjejYntSs+LcbS3isv69tXyxNBo51bJqUyOv4sJ6aE+4fVdHqrs+XvdYmg2e
09VSO+qzg/htaj4wOy6oPPX2ffdtP71yb503sbf4v5xpl6pvXW70wMKYfseK
lX5kfbaBH323bQ2sZ3pOcpmvbGehPrypaunCr2tLI3S5iFz8xsIlObt4sXBD
vCCP+oNqj1O8uXHTqddUbRXTuv5+8HYuJ9Rr8fzSSh2+JN+L15TfgzXGJVtN
p7ZPNbH4qka4aDuTC2qNvqftta1552bvqJxVD5i3K389w0O2PfL5/ohtj3tt
OHlQ4eP4Wp2B+qOLPferNcsp1nuuKy6xruTI4nLyXWPs2Dp743PurNie7kH+
Tz2K3bf38x75X3/IFgN7bL49ePPRnhWLPh8nVg6I90vDPqDiR764eOP19bn1
+d3r9fW+3aruec7qe8+4H77F+YG1f/3Xj6g8NAfXdxy55Yw8/bDt/XfdYreV
pl3adr+Kd+PeczYGjcVVt95U5zpvq1hYWm9W/fV5X+9iuThz1Oavh1b895Pr
DD23cUTZPmcd00+rhu2y5fI+VSvN92S/qe6V44n/4pJrQnPknUs75p7b/dQ/
1r4DtryhNs+TC3sXR+J77XfEleXzdd+vlq4cYE5afy8rjLFGp3nL+aUxaoyr
V4nxeVitIcC+VM+DXXnPiql+7y2uHradG69PMfyY4jYrBtRa5Pg8bsNtufnx
9Z7OvucTCoflctP6eGhxuYVth1acJ59TB4ZayDjgLNrBdfX/5Xcx6rjlosVd
vNe4vfjw4khnFN76GfnGit89Kubly+t7+M5p3+mwjUMS++qfQCtMNaacH00w
n1I4L2ebTy4ck+9Ne2tHF8cb1KXG3jp4MK1ljyxeN62JjyqePK0Rjy4ureZo
8h3iK4lfe09qkHlM+SLUPUfX+XQwJ1mj/buA488Tau/y82leH1+cedq/elxx
6ek5PHbj89aBUZxQH4pr+rGBG33/ypcpboPjaq4JD5CfqJum2KUuoFZNewXP
Lt4xrWtwErXbtHaoF8jxaa+Sfaq/pjyKdQX3mfJFzjLs/aEfGmfQybVpn0o9
hM9SjY0uURtOe0ecQYAZ094RcRTU4mkvCP8E3z3tJ6gxwZr54jpP9eCUEz6p
+NS0P3Z+cfuJj9tLN41A3NoTUZOqTZvaTN6MD+3VqgGnfb9zWmkH/GLvVR2n
RvT5jsaZ1rWnll6Y8jf4j9pqytWJG7XSxH/WR/XCVFMTK2qKaV1mHerZaV9X
/6IvppyZ+AprEr6z3xjWrevq3ILaN+US7DPMmzuULxfu3aXi2xxJeyLEpppa
be25dfsPngN77vDaaQ+QeqM2HNyzWRflx5x3I5a7OgFO0cSVL9b3NWpDlx/j
z4aG6Z4hvmrqUvkx92nqW/uYrL3JR+E70/6hmsZ6bB/ykrb04PT79YVxqjZx
zTcVV228b9hP4Lztm8hdp9ybuA4xXa5FHgSaY6p37CHYH1aXqHntyVh7wNfg
/KY9UrWUPMGeLbxSDTivqhhQM077Y+KH/QT7I36WGJz2bOHe6sdpnxPeqta2
z+EZdtevpiD/wh6g3Fh9Co5P8UENa01Tj4j78LBpTbMXAeZOOa29lHtgW3/k
AOD1tA9GbYu9qz9oD8o+w5TrUuNiZ3H8RowP6sBU5310laY22b894aAGTPmF
9cc6Yt8d34d60xmA3MZ8NI6I8ZQb3FznH3Ikua76glowXT91LqgdU50Cb7eH
YO9C/hXnbTXIWr5vq57YfqXj1IbaYrTYY403bvNO9X57IfOkwlJ7CFNsRyPY
W5jWVnsyxPi0Z6V+kadac6yh1kz1q2uBr085gn0Ydbn9MXs19l45M/uHYZ/X
Gm7fxtq/o7BxzReIP/vPQf2b+NI+djrbkeuq360NxOTi0uDFhNM7ownWNM9q
ay4TfO9UvxBDwb2ndRC/hn1ePysftwY5r+FMw7NSd+PXkFN6DvbfwIypPn0M
tj0C9Q5xE/ad1Zv2B8D1+YzCvaB+TPUvPguxHT3gvCnkKGpGezVyX2dP9oKI
iykHII7sa03nJnJAAmjKy/GzfbCpZrJXp60essfmnEsOKL+QHxonXNd8xx6s
/UvzVBsfhPFpr8C+E/ecp2Hb87Efzrk7swi007SvfsKG4Wpne0360rNVT4Hp
U41pj4WYyKurp7BiVW5gn4ramZ8qzb/i2ZmF+hhczucUZgVnn6eVhg/wd364
sC6cN8mXWGtw1vncwjI/O+WKxHhQE/KMwscAx/P00pBB3ieYb/89yPupBgF3
gvUmZ2XPWn8lZ2vvWz8mPnUWGJzRVG+ClYE/8+TC4sCv+bzSq0EtmepS6lU8
s3rLU05nb/OUwnfXn2eWjg3OLqk19pTX+9WfxHNQv5PYsE+91qY+/8R235MK
34M4yhML04M8nM5N7McejQ1+O0MJYno6O6AmBViVnJmzHDnkdP5CbQ5iNPGd
Pe6gTqezRnuicIXpvMOaC2eazlzswcKZ8tSqSYGPpxgLRwnyZDqbU6cSa+m8
x/uCB0nu2fc3v5L7O1M0/hPccOZnzqazQPkAeZ/OkM7Z4kQ9d2ThbRJP9sfF
2wRX7JuLyUle2SsXq5N7r9412J2safWcwebk/qt3DSYlZ7F61Kwl4WLOVoO1
pLNJ4wp8SmcMxhKYlC8qDaAWSPJ8iO3yYftu9q7hgEm8rH449SDJH+cT4kZy
P2e9q9Y4Q/zQ5l/7OE8sPJnO6d61xaRzh3dULCV7cGa8sMW5zDsrF5JzcU5s
zZrO4969xTa45mzGXE7nZPJbsCPJYWczq0bY3/jg5l/nIB/Y/C6+Hrphr3PJ
91Z8Tmv9VVse2Uc5vLA9yXnnOtaatB93WGF1cs/VV+cM0lnOq7Z8ZD/Ow4yf
1feTG6px5LnXV99g9UudSzuTtf7Yb1X3/n/fZVY9mryWnykctm+RnyvdtPS+
PF9u41wDH055kX1ma7y4qtYGa6a8yLURF9O5sGtTuzkLtsd/fOl39dXShpeU
hrX3O+VscKcgZtXp9q0SvTzlXc47jIuDq+Y6G189UmvXvqXdln63JyOWsu8A
59ZcEi0zDyyNufQgOKeuVN+u5+V2NxTOO6tYMwt5D3u1d5I31Het77Q/aa/r
y6UzrYlqsrSHZgzcXtgUcmN7IXCrNQPlzOPUwnN1W36+vt+ejL0ZY19Oaz9N
Ta3m1x/Teai54B7kqM5A1IHO4i/fcJJ4cmYZ5HcSc84yPf8kdp2hLtxwxnxF
nW2qadQg5NJ0dnl65de0t3Pmpnfsh5y74Yy/IXhF4V46L7yw8DCdL752w0B/
D3Fx4VU6n3514VuCy85NV02xD249AqfmNlddOU6+Ottzj6mOeWXh5/Q3AG/Y
1un89wUbnoDdzrCNw35c9TWm81b7GHuXPeXkF9WZTOfCl214bs/T2Qf7mO9v
q/8p5k972pdua1OvvW3DYefILyy8ms58T9uwztnhpRXPSc47tzY+03nkGzcf
Ob8+a8M9Z5CXVC6kdf7yyp1pf/vswuepLhNXweX0NyjqXHIoiW9nunK5dL4q
1lnjv1D5YC8u7Y/D2eXh6e8L0DFqhLQHKTcg35J1+PuGxR/scVtP4X2p/lRz
+D2cib/zWPrUnj5+tj+QzsjRkWqQ5Cz8HYn8JP2dAa+p15KaZj/aHkjiyzUz
AjsT3685JrGe+HXNm+AC6TzkuuLtaS9brgh+JPdcsyfqW/rbBfajNkx/EyBP
IJfSGYM8EGxI9uHvKtTd6e8b5PD+xkDNvLMwJNVs9hrtDanZxDnyOO2VqyvB
8nT2r0YQC4hPexz2H1Jd9+m2uHGqz+Q24E76ewW+V32aakhnvPYd/O0J3EQt
ls60rQvu0/43WCNXT/a6Zm34L9VUrFVumdcURtuXS39/oJbxNfLT3yfJddMZ
mLN4eEGqV+3n3fp/wo2LzA==
         "]], Polygon3DBox[CompressedData["
1:eJw1mgnYR0VVxmfOnEFQWZQCxQJELChZIzEtFQlQwQXREIkEWo2KEjdEEsoI
KglZMkAQNI3NhaQocEHBQARKJCWEMgJcSgElS03p97vn9jzf//nu3HXuzDnv
+5537kuOPvKJv9VaC/4+xf9sbXyS/xfT/lBr8yp2bUz7ya31X6H9BH77s/23
7Hst557K8c+xfSz7rubYB2nfRfs02p+lfSXnXEr7T7nfObQv5/9b6lyvGX/G
+f/O9jvZdzfHP0L7L9neh32bs811eR/b7vsKx6+hfS/t99L+Mu2P0b6H9gW0
uc/8KPd8B+0TeM4f0/4A7Q/X8bi0+pNfon0R53+V9sf5PZ9t9rfXcO6fcPxC
tnnm+AGO/RvtL9d49P+g/Qn2706bMYmn0N6S43fW+/Vbaf8Nv8PYvpl9PH/Q
73kA7b+j/TrajMv4TbYP5PqjOPYMfj/P8ZvY90cc473mETV2juG4jN/1bPNO
4b2Pof3LtJ9H+5do/xS/X+D8W9hH3wfvNdjfnsvxX+TY02i/nDbPiZ+jvQe/
V3L+P7DvrRzjvfJf2f5z9t3BMfo5ua7/E/tO5/j7+f0F26dw/Rk1v8O+MkbB
uE5j4O9pn0v7r2m/mh/P78YE5w/GfxI3/XbaZ9Fm/odj8y7OZ64nY9LPo30o
v++xj3OH7/JutpnL+Xp+vG//PPvO5JjP55zGnAX759Np816NcYiX0mZuBuPf
9qLNPedP8vtVrv8C+87mGH3ML9a2+4zv+ets/0uN8SCuk1xoW7DvRRzbjN+r
2L6r3nEYP577dvb9M8c4f1xX8RR/VeOXxHE7n+PEznSMmKvO3DXnjjme9Kt/
usbUsc330H4O7a+zzTlpbO9N+7Fsc3z+RsW2MWwsD+a7cX4QN/Op/Iinfk/N
yXBMf422MUm+DZ47mPtG3obnbkubMWtb0XZstqHN2LXH0zY2tuZ3NNffV3Mw
yK+xI+1n0d6A7R04Dl70e2sOh3P0AtqMY2OuBjGTt1f+9Ws55pgQB/0P2UdO
D2J7XF35HpdUvoxdaD+SNs+Z5Fz+N22eG8zD/Azt/6FN3segbY5tyvbX2Mc4
5x9w/U5sb8i+H+UYYzadu8PqncdutF9BW2w7iTZ97r/NjzHoxgy//DbHwLx4
BOfeRvt/ad9Amz5N4i6/S5scjI1oE9f5EG3moT9Mm1id5Fc3R8G1cUFhQifH
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
/0e/R85zrUAPUG/2E4vMX/pqH+yLaxbLepFaTMxEd/YzC5PHK8vD0styzSsv
qOvFBmt0a/VpbjsGzOfQ80abjCfXGDlWru+FftU3Smu5BtL1uLeo8Zuu5aqH
Hiyt6fpeqJceKC2aYo2egnwC9qd+oB6V9Qw4klvVXHY4wno3rV9fVDlqruZH
Kxa6/q1joF42Bqy9NijNaO6qidWSaT38goohYymvqVw3Bxf/+6nV9+C91d5i
pblh//XrOnncN6j3DTW3WuigwhyxJ62PrRHFPr8fMZfVsFu28g+th+ApPUe9
x7y2sEpMEpvS+laPV6wwR15R/VUjq5XV3Grn2L4tWjzFLmtOsQC8SOsrPcAT
2uJFputhco71m/6zteC2tK3Vjckji+uW9WvrCWuHz5TG1N9etL5rPq5Xb1ox
bWyPjVcucS2ePoSxyDP7qYX96nn7rP/r2qcc4hgY0/q7sXPFevq9yI1V8+jv
pN6cHpre5Q7FQXqn4wnFTanfzpjpWetvpX67/rje5fFVC/h9TN+u3i+sfYxJ
59LY9VsN5iTUd8fVeHhuo7bpYs5W9bxlDR7+yCPq/fRk9cuS+VcrL+t15H94
/SMLY0P/3G9p4Ga/KdDfz+uKa+Q4uc5vGro1it6OnjLP7q7h6PVZb5qLaia9
PfWS2sE1e9cTxWfnzjUbvR89LLlYP9Qx0nPfprCk++2Ec7g1267h6EX5PYFa
5aEaC/0q52Pxnrmv63fma3dO9P43qJwz98xRvSdz1Fxd/H09SufWNSr9eOJ6
qce2L4wUK/Pk4irXCPKoiuH4ZsWose03Bn67pce21J/HFpZa06f+1YYrnooz
foOi97LnGh/qjRuLe+VcuTflFr/puXjVZuoR6xtizfWKYSxvXRgR8MXYaMXn
XUvXpNznNzmXlJZLayW/8bmotEv6rYTfTJxTWiT1n/ym5dLSetZCYqlr/q79
J3WZ629qBrVD+i2G39icV9oi9SMOL02gNshbivvULGqXlHv1mS8sLZH6L37D
9c7SHun6pt9QnF1aKPUT5Q/9losLc8w7808tlzcUHqop1Bb63+a2a7gDnnX9
xdhxjIbr2a53ynnWqsTt8j0FuDOst9XHcFY/qzDQtUjXlDo84Tcvy/qw256j
9mOcUj9bzaM2ZZzT3PMbN/0+PQnuq1ej56L3kmpPv+mTy/aonO3fq5w0l10z
6gdVjriWlObidsWh4svUu+P99Jj0Uxb/n3P1LJZ4elTFut+cyE0Lf2Txk/Ex
rTX8Bs21U7+fel1hRWOM9A9ym+JGPR+9nwVv9LRc935ucZ6xbU6ZW2JkPLow
T+xc/C/x757q6+JXGJ9HFLda43VjiFi39kvyVC9q4Rc1A/dWOy78Zf64Fuc3
JNYacFluWlgjBogFuUlhwfL9ifH+mMIaMUVsyc0KW8QosSpd29pr5SvnE0x1
PcJvbBZ/3PqY//Gs0pbpWOuhHl9aLP0WQA2vt6kekCvhG2tYa+N0LvTg1Pp6
Tv+P12INfc3HFjaKiWJjyl+7F+aIPdPa9euF6YPYTt6t+U2VtdzTS+M4P3FY
aZ+kj9YW1hiuZegftm8XZ4g36drmy9f8JoeTMdPLc43e9RnXsLqawr5a/55d
XCrHi2+pN7NTYbrYrmby/eKFpaWW74n09NWZz6scNVfFiKGG/v7Kt89f+d31
cj0Xv9cx3lwfVtPpDRKL6bcd1iTWstQz6fd3anK9utcXxov18p9rFamesAYz
d623XN/JwkCxMO4vfhdzxV5j3tiLiyoXUm1njeVaon6i3zeq8fWOmKPUy7MG
cr2IMUi/77QG0juTT11LtqYx3uV2a0U5++7yp5f60jGnH35v6Lqd2nnpH7md
zqc1ibUA9WgeWnPvmqRrk3lQ5arfTLr+seilr1VM6TemXuqt5SG6nu4z/LZR
7PfZaki1pBrTbx+MKe8XV1asLeNlvLluuv//AcogpJg=
         "]], 
        Polygon3DBox[CompressedData["
1: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
Fy91X02uoMuJh2GupX6ryVuj/b7F8TB8KHboS8PsJ+S/hUNlr/3DsBvDfg+m
DqzJ6WI05ZVgwzW5fmpg/Er5IOxjue+UWq3lllSvxNyH3BNK/PTkGPEY/LrE
T9HPnrifOGXfNfcc3Gp6nvweuLjmDjL+5e/8AxgOLzasB+1zynG7PDH5YrPX
Nj6tGeqBhefljG18+g1zLXeAkgtb3+SXENvLtxIzczebO1rTm4N7jVhve0z9
w94WOxSfNh6n+Az155K7ij16ak4aH7RmWb9oUssZORxw1sVeZf/NhqlmDDG8
3Atr4pINU24NHF7WLXVfWztxNOjPctaams0doeT3FlcHd8rxkZZqnlDfLPOX
XNR0ON1/wjzLHuvYvQ4dttOq0axtagrcTL6JY3b14tSNLXclnoQaaIn9OnxX
J029VHPuyb1zr1WLLDVCqMVzcuXYmX1S3IbYWfZTfNu0LNk8xO2aOxQ7tPcU
U0F7Fj4UfzftSroazrWuA5OX25rpLhU4vya/ytfb1B+4VZOn3Wdr7rqT98V1
qKnWaCa8aV+KyRCzS6yUOr7VBamWjdk7f5X6red+Y1yo6RZOlDtATx4fXRfr
SzyW7y3G0/mCrdfc3XCw8StpZsz9CIeLnrWYSHVciOvFr8W2Ld5TzRvqjCU+
i0+axqU6LWjWEo813J2a3TnDXpe4LWu394N6E+/nPjr30mafgzspn86dcu6W
PVrt3OHesMRombtpV8pDYT9rbObMrZZJMRr2s4wpOadpf5oznH2xa7FXG3dw
T536cu5q9Kdx/uD/hakD1OVzN2/rHNzV5/4wdyE8bjGRNCXwdpm/7KlP2mnh
aGKqdXr+K8CjpFPBD2v8Ov9R6H9Q544+zL1ntPNZO1/n+IJ9t0O+D3gQTZ4=

         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0csuXlEYBuC1rZ+qKgYo6jySOE3ERNVMIg5BpCmVpumkYcBEpDpoIgYk
hoQLkLoA0QsQLkCcWmfGEhOjJo14dgze//nW3vnX+r61h6e/1k2FEBJZRutz
nTTwLoTYyCK2sUb+qbvYEkLmJ/9Lp3qej9Ln/QQ/cU5+qCe5xnT9i0vc5jp3
uckD/uYt9+y38NxS0uHnkM2SF0JWifURS3nMNzxhGf+wnH9ZwVO+lUr1Gat4
zmpeMJ3nkrW8Yh2vWc8bvWScmSXvrPWVmDl55Xk6s37jPfUf/SeYJ+7TfHGH
5o1bXOQGv3NVVtTuJ85yjN/Yy1E6J6qDWeN76jMzwwfntrOQTZIjX6wL+Jmv
Oc582jPoMflI95V84EuOMJdDMqh+wW4ZUKf7ucekX53NYvEdQzp/2k9kD91F
TN+n69Yngoo5uQ==
       "]]}, {
      Line3DBox[{811, 1136, 1294, 1021, 810, 1137, 1138, 1508, 1022, 1187, 
       1188, 1190, 1189, 1139, 1515, 1178, 1179, 1023, 1166, 1167, 1191, 1168,
        1295, 1157, 1180, 1182, 1024, 1165, 1169, 1513, 1290, 1158, 1025, 
       1186, 1293, 1296, 1026, 812, 1297, 1192, 1412, 813, 1298, 1027, 814, 
       1299, 1028, 815, 1300, 1029, 816, 1301, 1030, 817, 1302, 1031, 818, 
       1303, 1032, 819, 1287, 1304, 1033, 1140}], 
      Line3DBox[{820, 1141, 1142, 1193, 1509, 1171, 1172, 1128, 1143, 1516, 
       1183, 1184, 1170, 1174, 1129, 1159, 1512, 1034, 1173, 1285, 1305, 1035,
        1181, 1286, 1306, 1036, 821, 1307, 1037, 822, 1308, 1194, 1413, 823, 
       1195, 1414, 824, 1309, 1038, 825, 1310, 1039, 826, 1311, 1040, 827, 
       1312, 1041, 828, 1313, 1042, 829, 1314, 1043, 830}], 
      Line3DBox[{831, 1163, 1130, 1145, 1185, 1505, 1292, 1175, 1177, 1131, 
       1160, 1196, 1506, 1176, 1144, 1315, 1044, 832, 1316, 1045, 833, 1317, 
       1046, 834, 1318, 1047, 835, 1319, 1197, 1415, 836, 1198, 1416, 837, 
       1199, 1417, 838, 1320, 1048, 839, 1321, 1049, 840, 1322, 1050, 841, 
       1323, 1051, 842, 1324, 1052, 843}], 
      Line3DBox[{857, 1059, 1332, 856, 1058, 1331, 855, 1057, 1330, 854, 1056,
        1329, 853, 1422, 1204, 852, 1421, 1203, 851, 1420, 1202, 850, 1419, 
       1201, 1328, 849, 1055, 1327, 848, 1054, 1326, 847, 1053, 1325, 846, 
       1418, 1200, 845, 1510, 1148, 1161, 1147, 844, 1291, 1514, 1133, 1146, 
       1132, 1164, 1150}], 
      Line3DBox[{871, 1064, 1338, 870, 1063, 1337, 869, 1062, 1336, 868, 1430,
        1212, 867, 1429, 1211, 866, 1428, 1210, 865, 1427, 1209, 864, 1426, 
       1208, 1335, 863, 1061, 1334, 862, 1060, 1333, 861, 1425, 1207, 860, 
       1424, 1206, 859, 1423, 1205, 858, 1507, 1135, 1149, 1134, 1153}], 
      Line3DBox[{873, 1151, 1162, 1152, 1511, 872, 1213, 1431, 874, 1214, 
       1432, 875, 1215, 1433, 876, 1216, 1434, 877, 1339, 1065, 878, 1340, 
       1217, 1435, 879, 1218, 1436, 880, 1219, 1437, 881, 1220, 1438, 882, 
       1221, 1439, 883, 1222, 1440, 884, 627, 885, 1341, 1066, 886}], 
      Line3DBox[{890, 1342, 1067, 888, 1343, 1068, 892, 1344, 1069, 894, 1345,
        1070, 896, 1346, 1071, 898, 1347, 1072, 900, 1349, 1350, 1073, 902, 
       1351, 1074, 904, 1352, 1075, 906, 1353, 1076, 908, 1354, 1077, 910, 
       1355, 1078, 912, 1356, 1079, 914, 1357, 1080, 916}], 
      Line3DBox[{915, 1454, 1236, 913, 1453, 1235, 911, 1452, 1234, 909, 1451,
        1233, 907, 1450, 1232, 905, 1449, 1231, 903, 1448, 1230, 901, 1447, 
       1229, 1348, 899, 1446, 1228, 897, 1445, 1227, 895, 1444, 1226, 893, 
       1443, 1225, 891, 1442, 1224, 887, 1441, 1223, 889}], 
      Line3DBox[{918, 644, 917, 1358, 1081, 919, 1359, 1082, 920, 1360, 1083, 
       921, 1361, 1084, 922, 1362, 1085, 923, 1363, 1237, 1455, 924, 1364, 
       1086, 925, 1365, 1087, 926, 1366, 1088, 927, 1367, 1089, 928, 1368, 
       1090, 929, 1369, 1091, 930, 1370, 1092, 931}], 
      Line3DBox[{933, 1238, 1456, 932, 1371, 1093, 934, 1372, 1094, 935, 1373,
        1095, 936, 1374, 1096, 937, 1375, 1097, 938, 1376, 1239, 1457, 939, 
       1240, 1458, 940, 1377, 1098, 941, 1378, 1099, 942, 1379, 1100, 943, 
       1380, 1101, 944, 1381, 1102, 945, 1382, 1103, 946}], 
      Line3DBox[{948, 1241, 1459, 947, 1242, 1460, 949, 1383, 1104, 950, 1384,
        1105, 951, 1385, 1106, 952, 1386, 1107, 953, 1387, 1243, 1461, 954, 
       1244, 1462, 955, 1245, 1463, 956, 1388, 1108, 957, 1389, 1109, 958, 
       1390, 1110, 959, 1391, 1111, 960, 1392, 1112, 961}], 
      Line3DBox[{963, 1246, 1464, 962, 1247, 1465, 964, 1248, 1466, 965, 1393,
        1113, 966, 1394, 1114, 967, 1395, 1115, 968, 1396, 1249, 1467, 969, 
       1250, 1468, 970, 1251, 1469, 971, 1252, 1470, 972, 1397, 1116, 973, 
       1398, 1117, 974, 1399, 1118, 975, 1400, 1119, 976}], 
      Line3DBox[{978, 1253, 1471, 977, 1254, 1472, 979, 1255, 1473, 980, 1256,
        1474, 981, 1401, 1120, 982, 1402, 1121, 983, 1403, 1257, 1475, 984, 
       1258, 1476, 985, 1259, 1477, 986, 1260, 1478, 987, 1261, 1479, 988, 
       1404, 1122, 989, 1405, 1123, 990, 1406, 1124, 991}], 
      Line3DBox[{993, 1262, 1480, 992, 1263, 1481, 994, 1264, 1482, 995, 1265,
        1483, 996, 1266, 1484, 997, 1407, 1125, 998, 1408, 1267, 1485, 999, 
       1268, 1486, 1000, 1269, 1487, 1001, 1270, 1488, 1002, 1271, 1489, 1003,
        1272, 1490, 1004, 1409, 1126, 1005, 1410, 1127, 1006}], 
      Line3DBox[{1020, 1156, 1504, 1289, 1019, 1503, 1284, 1018, 1502, 1283, 
       1017, 1501, 1282, 1016, 1500, 1281, 1015, 1499, 1280, 1014, 1498, 1279,
        1013, 1497, 1278, 1411, 1012, 1496, 1277, 1011, 1495, 1276, 1010, 
       1494, 1275, 1009, 1493, 1274, 1008, 1492, 1273, 1007, 1288, 1491, 1154,
        1155}]}, {
      Line3DBox[{329, 757, 807, 548, 1508, 330, 783, 752, 782, 801, 1516, 802,
        803, 792, 754, 791, 1506, 570, 369, 767, 1510, 585, 384, 1423, 600, 
       399, 1431, 615, 414, 1442, 630, 1343, 429, 645, 1358, 444, 660, 1371, 
       459, 1460, 675, 474, 1465, 690, 489, 1472, 705, 504, 1481, 720, 519, 
       1492, 735, 534}], 
      Line3DBox[{331, 758, 777, 797, 1515, 798, 799, 787, 753, 785, 558, 1512,
        355, 766, 571, 1315, 370, 1418, 586, 385, 1424, 601, 400, 1432, 616, 
       415, 1443, 631, 1344, 430, 646, 1359, 445, 661, 1372, 460, 676, 1383, 
       475, 1466, 691, 490, 1473, 706, 505, 1482, 721, 520, 1493, 736, 535}], 
      Line3DBox[{332, 748, 778, 749, 1295, 779, 774, 796, 759, 786, 760, 1305,
        356, 572, 1316, 371, 587, 1325, 386, 1425, 602, 401, 1433, 617, 416, 
       1444, 632, 1345, 431, 647, 1360, 446, 662, 1373, 461, 677, 1384, 476, 
       692, 1393, 491, 1474, 707, 506, 1483, 722, 521, 1494, 737, 536}], 
      Line3DBox[{333, 780, 750, 776, 751, 781, 1513, 775, 761, 800, 762, 1306,
        357, 573, 1317, 372, 588, 1326, 387, 603, 1333, 402, 1434, 618, 417, 
       1445, 633, 1346, 432, 648, 1361, 447, 663, 1374, 462, 678, 1385, 477, 
       693, 1394, 492, 708, 1401, 507, 1484, 723, 522, 1495, 738, 537}], 
      Line3DBox[{334, 808, 809, 806, 805, 1296, 335, 559, 1307, 358, 574, 
       1318, 373, 589, 1327, 388, 604, 1334, 403, 619, 1339, 418, 1446, 634, 
       1347, 433, 649, 1362, 448, 664, 1375, 463, 679, 1386, 478, 694, 1395, 
       493, 709, 1402, 508, 724, 1407, 523, 1496, 739, 538}], 
      Line3DBox[{336, 549, 1297, 338, 560, 1308, 359, 575, 1319, 374, 590, 
       1328, 389, 605, 1335, 404, 620, 1340, 419, 635, 1348, 1349, 434, 650, 
       1363, 449, 665, 1376, 464, 680, 1387, 479, 695, 1396, 494, 710, 1403, 
       509, 725, 1408, 524, 740, 1411, 539}], 
      Line3DBox[{340, 551, 1298, 341, 1414, 562, 361, 1416, 577, 376, 1420, 
       592, 391, 1427, 607, 406, 1436, 622, 421, 1448, 637, 1351, 436, 652, 
       1364, 451, 1458, 667, 466, 1462, 682, 481, 1468, 697, 496, 1476, 712, 
       511, 1486, 727, 526, 1498, 742, 541}], 
      Line3DBox[{342, 552, 1299, 343, 563, 1309, 362, 1417, 578, 377, 1421, 
       593, 392, 1428, 608, 407, 1437, 623, 422, 1449, 638, 1352, 437, 653, 
       1365, 452, 668, 1377, 467, 1463, 683, 482, 1469, 698, 497, 1477, 713, 
       512, 1487, 728, 527, 1499, 743, 542}], 
      Line3DBox[{344, 553, 1300, 345, 564, 1310, 363, 579, 1320, 378, 1422, 
       594, 393, 1429, 609, 408, 1438, 624, 423, 1450, 639, 1353, 438, 654, 
       1366, 453, 669, 1378, 468, 684, 1388, 483, 1470, 699, 498, 1478, 714, 
       513, 1488, 729, 528, 1500, 744, 543}], 
      Line3DBox[{346, 554, 1301, 347, 565, 1311, 364, 580, 1321, 379, 595, 
       1329, 394, 1430, 610, 409, 1439, 625, 424, 1451, 640, 1354, 439, 655, 
       1367, 454, 670, 1379, 469, 685, 1389, 484, 700, 1397, 499, 1479, 715, 
       514, 1489, 730, 529, 1501, 745, 544}], 
      Line3DBox[{348, 555, 1302, 349, 566, 1312, 365, 581, 1322, 380, 596, 
       1330, 395, 611, 1336, 410, 1440, 626, 425, 1452, 641, 1355, 440, 656, 
       1368, 455, 671, 1380, 470, 686, 1390, 485, 701, 1398, 500, 716, 1404, 
       515, 1490, 731, 530, 1502, 746, 545}], 
      Line3DBox[{350, 556, 1303, 351, 567, 1313, 366, 582, 1323, 381, 597, 
       1331, 396, 612, 1337, 411, 627, 426, 1453, 642, 1356, 441, 657, 1369, 
       456, 672, 1381, 471, 687, 1391, 486, 702, 1399, 501, 717, 1405, 516, 
       732, 1409, 531, 1503, 747, 546}], 
      Line3DBox[{352, 763, 764, 1304, 353, 568, 1314, 367, 583, 1324, 382, 
       598, 1332, 397, 613, 1338, 412, 628, 1341, 427, 1454, 643, 1357, 442, 
       658, 1370, 457, 673, 1382, 472, 688, 1392, 487, 703, 1400, 502, 718, 
       1406, 517, 733, 1410, 532, 1504, 770, 771, 772}], 
      Line3DBox[{533, 734, 769, 1491, 518, 719, 1480, 503, 704, 1471, 488, 
       689, 1464, 473, 674, 1459, 458, 659, 1456, 443, 644, 428, 1342, 629, 
       1441, 413, 614, 1511, 768, 398, 599, 1507, 755, 383, 584, 793, 1514, 
       795, 794, 368, 569, 804, 1505, 788, 790, 789, 354, 557, 1509, 784, 765,
        328, 1294, 547, 756, 773}], 
      Line3DBox[{540, 741, 1497, 525, 726, 1485, 510, 711, 1475, 495, 696, 
       1467, 480, 681, 1461, 465, 666, 1457, 450, 651, 1455, 435, 1350, 636, 
       1447, 420, 621, 1435, 405, 606, 1426, 390, 591, 1419, 375, 576, 1415, 
       360, 561, 1413, 339, 550, 1412, 337}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJx0u3c4lv///59R0pIRmRlFhRSlZDwbokIJRSFFaJGRZCSyRdl7XS57y048
iLLJiKxsMq/sze/p9fb5fI7f6318+6fjuB/XcV2n2/l43h/rPJVeaHPpbtu2
jXzbtu3j+H8K223/+fc//6O///n/3QaTuP7rBR37atfuaK5P/6sH7vwlXpe3
bhHYOPNdPL/N9n/0uC9c2oVckabxdvk+xOve//v5TxOZxgf58iszkxeV/sL5
/9U/Xz/Cz0QptF5AFvU0V/7k/+pFD20fKnyN+wvUL08+DFcbRaSNjY37O4xA
tTgzoOJ3JZBWjLrL/AER9vOdshoxlZJji3rM3SECpPXOwo8P3yOv/U0b1tLj
kt1c9kuZjcObepFInzPW6wXrWryLeF31jyifCPlHP1lcuqlfkfMPlNo3UTFn
9zjzP/pG9qZ+2dSFSYr1kcyYwTayf3QZtUys1xHV76tLtjlujNzpDfpHF26d
3fz8mbBFfilRgyKHtKV/rqfocEvZph4eXXCkKGHbpzP1sqPAZNzfSbgUt/l3
rbXLR8JO26s1bAlHwIzC4M/JfbexPqCnUV4FStu2j12o34CC1uSnAcYmiFSv
56OceB9s/XaO29yyg6E29Zgf9F1oSI90JWzeHVwj5MOOXq8AkuJTxjFLT1R1
09mfZf4XuPfyppJvcwHSYLh+cv9PlHXmsdgeYit4pG5XZNsWBaR5YuSd0TIU
d0tMmTbwELg+0GJZlNgA0nLxbuIua0Q4lSCws/AO2EqpXlbrSAXSakXBAR5t
FOJwLLODhQUMJ38SVlpNgLQ2TdZSqI78gxtHfbQbQfXFhDEVeGAONoVjCrHI
x9ux7NShCyAZ5PF8/ddjrOe72Q8dQd40JRVvjH7DIWdv1tV8e6zXJ1HX1CIv
4+Sqyk+oaPW53o5WHkast3QfVixAXhJh9mP7q4t+Npjo3v8ag/VfrbLGnMhL
cMlxsTQe5Hc+s8jVroBkxgsUsaMHEWkm4V6rxmWwUHmUM8n3AVo/jUU983qP
JvJtShXY/MCT8iQjZ+FNGGth966ZIaBuD/VHXeZ7weclwRiG7wHpabbg6XN9
qOI0e9MXZifwXU3Sm3uDgNR5X7U+nR3lSl/o2EWgB784BTZpia9Amro1fUdt
J0pOOMs/ziUOvr+YL98brwLSws1L3CwPUQwvo7mXESt4TVc+Fb3mhjnTsK+t
BCDCjU+jymTp4Fb4PVnCIQDH+RC91Yk+FPaulIp1NBLshJSIM/ciMWf+BI9E
FRRkmxhxoN4NTB3UY89RFGJ9qvBw/HHk/2T1+yVKUXjE6xLO2NCF+WhZGDbq
Id8LbwTudH4EZWnnIsldYVgP5jGe7EbePeUbMcNX4KKo2ED0Ki3W88YjH9Eh
b/oAtTCe7yDQNHRJlC4c6xW+ZwhiyCuGc/z5x73wLorsb8ITErTfsJY46pGB
JvgD7ZYoX4Pv48HCJokYGFP726+VVoB6gstieB8GQ6Djq/eJgw5AEpi9xE17
AtVkiexRVKCA4BM8new2o0CqaNRXfiqPvkzaFO5VOgAhe/Nb5h9IA2nEUPFu
MgPKKPJmvJlWAcHTlrW/WPB1zpBZVROoUYLVgPxzu0EIUm90++W1H8fzYiLf
TCKKfsqsIv7MC/x3ps2V6icAaUlD5styAiI83WDQuJwHXnovjD81Yf4rx1st
dU6j8I+tLwyuOYHLTFzlleYVHOeOC6q6tCjkYKAIt9oE2Jowlfj9TsecjZxK
Zy+gQKmHAzNuxvDyyorutitHMR+yylj2ZuRPni58Vv4+6OfMBSvt34d1Ndlq
s3vI9/5zsuuv2OCet3asp8phrL830Qu/hXzOJ/sLn/EC+cToqYSw01hPqNi1
NwF5W+601+o7Cv7+BY2WQb0wwlHVki7Ph/rrg7SWiy9DaOT06pXyQZgMdcgT
Z5tBjZ5kikN3xSE87ZaKp7UMkIitFWyF4ehryeiF9MkdEFHIw1xmVY/jNrAy
e1QO5TyRF6Y9bQyRO/g5T/XmAml80v+QrwJKo6xWf/GgHyIUzjfRLBMxZ77v
htYpKJ7cfJVwtBXCeBlaZpAl5qxz2WejF0XT6AcesOaDIPuSmwNHWYC0GKfI
Mj6DCM478uko6sC3rlgzd3Adx7mVc/TJWyjiOpfu1C8O+BimOrUW2IL5jyU2
+fag0BPWgtOmmuDkvl9fQ9kc85/lztp3HQW9H80ms9oLNm5M3g7GA5g/0dj1
qScKuN/ykFt0GUw79mr9ThTF3Oi8RCf/IL/Y14e1ZbPg8fqpxevBXzb5H2fM
a0S+d3cOv5s0gvvhirLqpbVYd6A8x3sb+eiO8d7QPgERYTRGaucuwYSe5pB8
ThhqO6XvPOP+EghqrDkNgK/z3kHy4kIZVHmpiDEqlxwIG9QfcvReAenbnxdm
IlSokM5TUmfsF0Rdy+1yqdYBUr/LzRyTJJR5+RnN3AsXiBLSoi970QmkSXK6
FDMRlBzpV7A9+yAQ3rNHfg/CfjJdfYSi5yGK49+ZP5SXDZHowOwUsxyQ5jI9
b90yQcTfsqIBNKchNDSCjs/7NfaTvwKZWf2IEDVBdyNpFQKaLghNO37Acf4j
SnN2AUV0vpAWrm8C7zJpet1bfZjz7W57nlIURh5DfkdoG7hz3B/5tYTjYdWC
bjApDAV7BF73Z68FBxGtijsv8H1cu/xmNvY1Cnx1iqVePBGsaeV3XtC4ifXK
Mhn1fcj/i/YzudF5MFltyCf4Yf9f5xJeaU5AfupTzPsd78GTw/Z0HTtPYP2e
hMirXchX7qJGmtEuIO7qns+qOAuTX/xpNA2aUEMMGog9exqICydMst5eBFKw
Msf4gXlUauFI3v3HEaIfXOJxuIh9oyn+8ruT4yjP+96pH4dIEG3qMC3tif1/
6Pmt3paTKONF7vMTRFqIZqdlC3guhjkf3iF+wwAl8RasBreLAlGKLlGmE/OZ
Fk62OnURxUbp7R0PLgFCadrPqcZFIM3OuZ4+YYuIpZf6lLK3QYTRw2/Z+vcx
Z9EqjpqniFDUcOFXZxYEe7O+o9dswpz5hNQOqqJI/nGqyipu8DMzSdNlJeA4
L0m5kE1AYenXQpd4ZcCTQJdbd3jTZ9aKWUNoUMgDzWO5vP3g0vdBwOUhF+bf
e//UOjMKut/R+oSZDd4dnJ1f1J3GnN807j5sjQKS+HJYF0bAoqCTT/YJzqdr
Q8OewWXI//INWR1SBRgvVJyjGNn0bUHJFcsi5McVwJA/TAExJeFXMsTFgYQu
/9TvOYCqabxkSnWuQazaVXPjmWtAytEuz5t5hoqFeP1rY95BrIdMysU47Bvt
IpBrVIKyG70XdkgaQezzi2J5qbuANBz40EfYAaVfpP2y+AEgpnunPVNXFpAm
fnA6hO1CiUc7R1gPCkF0zaDidzV8PVMWN7fPRKJYmbcrDIXmQOTfGd5G7Mec
TygOnTuAiNlBl+fv2QJhJ/e+pjfF2E+seMw1nyFCewHn5xwnCGOndv3qi7kt
vim1rmxGkdpqP84URkLA9NKAbst1zFkwUljoNgq/crycOPkDfHbIkBuprWHO
djoCgQEolH5Cs1jgE3io/GHil93kbP3TgcSCgnlzwq4wB4ETTTwfxG/DPE9k
Jf1+igKtaSaiuT+DrXQ1o+cMP9YTVK9YjaIAunFTXpZ+MA9PyxJR2o31NbE7
PoHIb7isil82HeKFLesXF38CyUp1p31fBfrOdc/g18lzEO9+vvSV7FsglRFV
uhiZ0Jcz8he+s+VAvJdk1solfF66nBLa3W+jzDXK4p9UihAvVaRZI62AOQ8U
c6xsR6ldn/0raIch7q1e+LPDUpiz2Hzgx1WU8DL+ZcFIAMReIPe8Zoo5/E16
QzZWj2J3JOiH1zNBtFV6qWmrPPbtB/oO7pqImP7N41KDDERdLi3xEcC+MVfI
/6x0GhHm86XbzYYh4q2NOM3LqzjOm7yPrh1FkT5tC+aiHRAsu+53/qEujvPA
Cde+chReST5387IA+Mmsj/jolGDOFB803/uj0IwgikYGH/CsOFOceQrnwdUD
df5Cgii4Jeu3A+tzcB3+KXJEkgnrneYHNZVQkChds8uSLdjHDNbHEt9jno/f
T3tRoYA6khqp4wK8eSRM/UbpGNarzlqfTUb+ERQn6cWWIdHMmErBD+ep4LYV
8oYd6OskzaeDp4ohMfSx07EBRyDVONPzLY2i/AfnytijJSDRtK7doFECSN0C
RUYyE+hT2tLaUR47SJi2XNllooQ5py/ccDqJUpK2V11L0YKE7cyhR4/hv2vc
0qf4ZjqKJ81xbYs+BXFhrH981nFdSqrP747tQzFt6Zf0S2Qh5vPBJHIjRewn
HlISsycR8RP7ScqzskA0XFSZm8M+P7vaWfveAEXR1TsqKe2CyJ6MI4/XcV5b
OMrVzpaNIkvaHL3UxiHUWlmUxjoOc6ZgirvNgSIuhJnW8ldAwBPzqn5tdRzn
DhRXFM6jMHSlOPvmbfCuLZIjvabA/JPl5h89QyEvv6Q1jOBKO7LyCr0q/p5V
59MsvPdQ0O/TNLQ/TMBp2f9HtHw+5nk4hNPMBAVaNkZy94uCXRDuTOwWsO57
iWMuHwVco13/sagNyX6kuWL+40BKnmA4HX4TFecJJFfeeQHJHymul09ZAKmB
rqjM7CDKVT0+zvlBEZLPJ80MPEjCnNuTaVXOoYx82syjB65Akvvab7nd7piz
IHUX+KLkUgn1d6nj+D7SFH0xYgDSWMRHYVomFP8euk4OiEL8n0vdfXlPsG+P
ZMhlyKCYz4ckd3NUQ+yI7cepveexn2RH3tpfi4h55M87zyRCtLs3R/tcDeZ8
/jT3KyUUdWJ9T55RABBmRQxT+zL+8ZMAnn4UOSGjsWpWB+F+CWVUggbYT579
EC0oRRFpDEkMPywgyOQdl+XlCMyZPHy7kz0KK27RdUskA9+i7XQi33H8rFxQ
9FxQRaGUq+XLnPHgGdazqhWOz9GqENV+izQU/JpfnE8/AtxQxjxv7Qusd4WY
7h9EQcw277/uKQKHt/fIfl7djGd17U8aQShguJLPcP4upAb7f6i/SQmk3JGI
gh5pVCQhReZ9YBZSH7uzG0uw4XyXOvRKwhZlNxwL4OECSBllzUm5in+3e0JF
8HsZSl+pe+hu3w4pdM+769xwnTZk6mHQVYiSaUzOqZDPQ1Ljyrh/H+Y2ml7F
emEWxUu1y2hxzkDi4VeKhNfW2E9WYpiEnFFMtNllEZMFiN9zPTztJQn7STvT
Ec8pRCzRohCmcICY8Lzddjf4sJ+YcXsM7kRRcoryPFmhELX6+PqNqzTYT2r0
HD94IwLjZ7WrA7YQKX8k3t4Ax+1C44CSFROK3H3xi4qBN4TojigmNuA4WXp7
qeOFLgoX2zdge+Y6+IcEaj2mpcP8G/54XnuPQt00VykfEMBbU/MmdwW+zpVm
qnGrbBSyo+b+X89E8DBdlDzzFtdvqz7xD8Rw3kw569kv5gbOWoF+0qG4fl47
lKQnNIf9PLclWvsPpF8eoKwFnJeLfmS4v2BEBU3XI0bUNyCdUZq+0g/75E/G
k6+1z6Ms4kQ7deVRSHN8l/DHHtdv3YGEOqcQlK63JJh7wRNSHedou65i3x70
1XCeWEBJdmJCG0apkMIVF559Tx/3KZnCFv20KJ7iaqX5oVhIUt4o5eD5gTlT
Ub5wV0cx/hoHPrQTIeGwyvCX+7ivIS3PsrhIIGKt+bmn2rshNo5mx4/rjdhP
UogmLuUoSr+c1fqsDRCXV1tz+55hzqwFbjnhiCCVcXSH+lEgXP7xPJcBx//C
OZ732g4oUuKiFR3FMITJpN1jS8J96OJS36hDLApP6Fz0tvSDwMf5JhozfzDn
hyz0T4tQGNX+9y9TP4AvzWSVmOQE5vxK6VPgXxTifsT2gfJz8JQL/8BIEY05
y3Q85c1EwWcbC8sproPbOYbf161ebdYtAuTPLqEg6uvhVpIikHFSu2rwERWQ
SoV5VXvHUf4cp8nLp9cgfbLTVNwI11E/MxyXBs1QZraevk67DaQ7V7aa2uLr
/72SGDrQhdK6+RZn/ekgbZTP7RjTPJAGgm6R3ehHSTTstdIxryFVR8b8Tyc+
138SFj9tc0Vxzcv5eVQbkPw6LvvA+jD27T2l2WFlKOaDyNTj30KQKMICEyK4
XyYdfMJLsw0RO8r9ISIb4mIHfygeuoP9pD9zJIKAohy09ggI3IHoKbFokcO4
/px9srfLxAARdF/xlqeZQZTIwWbf3WnYT0JsnZO9UOQz6vCw1zYQwXTV06UW
1y2LJi+uuX5EEQyfX1DoiEMwn7T08RP+OM4npsgdjqAw6+Q9jMw84JcTd/8F
iwrmfGDto4wvCqVu20D97uDV/NepuAX3KSsL8nnSHSj4c+WupcUl8KByIDfZ
X4Y5RyxI9AajoA8ZcqFNGvCJYRs69A7XG98mxZI541CexaujxZHHIQNOrvpd
wv7zEzK+RhuiT7NZfoyVdJBx5SIxfXkDcz5+4Gj3c5TG5pyVGpoF6ZG2Zgco
cP7td6XMbQxHiZ88BWZCUyAtKMjIVfAM9u2AC2e621BcBtPaBRcJSPEZGHjo
YIZ9e+9bri5KFOPWrCUc8BiSxMoGR549xb4tTKj+MYSIYyP2R2UjIT7ilotp
+yfMmekyYc0eRRF4+FVUJSCmR9jovKUG9pOsC+yu+xDhvcJaTQeuD1k5fs8H
s+I4X/3JJFyJIgMP6B1hEYbI562Rud5HcJz/6XksdwdFWBau6PZnQsivnuWd
L3CcLL02vGSN43n8nbh1ZCIEKPnPdN7YnKtkMp9LeIZC7U6f0wm6DT53bpr6
PnDBnGNoI82qUcjZ6zJZkTHwsVb591MGTcxZ41DJTgYUvHeIRaKrDFSpA9Vy
yyKg6tSuXckyNxBJKd7XyDoP3jr3lp/hOQcTyy3qRZUPUYtWEeeMdiEY/PYi
31kfBw08zrfCyc6iyebCtjrHw+Ca2m16XcwaRscF9HQPiqDe62W72h93g63R
Q+rA+gfQrrLBz3lsG5o4fsY73XAXeFsV/N03fgXGfnoeJazeQ90eczykU/vA
r1Y9yyX5Goya+jKfrD6GetcXj3tsyEC4vKK11s0bMMmRKe6l2Ix+Ovc99NL0
KGzpOxfPSVwoUraf/in+f3PdQhPNtZeSl0MK/xq/4Zj+P73Ixq/exLrucdGC
Ys9St5TQP3PX39tj4SRR2GbkpTKEHImmodGpQaQ1jtZHz1WLVplLP0jX7AaT
fN+/p3eM4c+PHqi38QTDE8+XQufVoIWGPKY+uAFNUi+7VJmJg+dzWLDUwPfR
SLnLT/w1Ki9/dKeLXge8Fri3l0jhc9d37kDGOS2Uraqf2DVLXqQ9zGU1E4L9
c72DjufaZ+TFrvKDl8xTSlb2YrUNHdWmTs/ypA/rCoFHShNAVO6hR89aEoTU
0t+fCGtEpNXlFoZRaXiUIEKgOOcCZduDzJ4N30KkEO47D7/2grPrWhNlWBQM
ijd5t/fqoGHSjC/7oDH4H3rOzZGJ40G55CFtmwOqnPf9nD/1ET7yvM901kiH
wWfNnhxhF9BwmTXzzOc1MMj3eZvs8xEqHMRsqRU+IdJjmS8+zKkQnJ6Tuhql
BJPTL+NXm0LQD+Eb/Wt/0yDYUdDjrN4LGB9tk3fVdkEd6nf4OOILwVPehpKp
0gkGzpNdsRA+i/5UJUTT/roHUZJT8lPXE4HEkpzdzrOCavOXZ8VWOyDE/+Tl
ouUFGBsUDBUp10fdN0fbhEhikGG3JHqNXxRIdQ3ceqcsUXbXxW8UzOGQQRR/
Jh+1B/cjBTut9legfIHf8jWZz8CzOd6KvqYSx79A/WT7Bgp+IPbs/JEc8PLg
PvesDteNq1RsATxKKDjc+5ZE/Kv/174AnICM5lyfE0zY5Y94DNuhXyWl5J7B
AO8tmOoudl7AeaEym6JNBhVV6fAn970oOj5z28PrGsM/c/JL2kabc/US2s9x
4C2m3RTc0QmT9iKBGlbrqOmCX/9FPh0IoKV5kfWXAiYPDtapHA5CPzOODNrG
aEDkd7mlrwHvYRIixO8EL6OGoKtZ0493QMbEuJvyEZw36yXOzHVToWzN+0ku
jrLw4VnS/MvHgvjvstHU7KpDQfU7lUyW+sDus0DfckMQtPuOMQadyUMTrLGF
DdSK4ElFuY/bjQYGhiVknvf2oT9iajV6OwJx/76S5BLxFHrVhE9UzZ1Do/0+
mqDwqcA1uW+iyZ7lywETeJdr+3/ni0U/Nuwc2+hm3P5ZO+WNvJj2ki+L7IeM
amZNMaYUIFUl72lruoFyWSkHhc05wFPdNKbxBT4vq1dOxutXomBR5htzY6Pw
kl1qdNlwBwxMn9K0u8SN/pyiu7qW2pjyq3t/DbsHMTWk3YSC/dL/3ZcTJgWl
tkkvIap6uu+b6ywiLVueXkQITIf/gIKrDvRUBbDrlxehMUnLV0K3WHL3siro
iS9n51bQalxUOf1/3yNxzOo0pzAL5Hm9ZWnYVYVI7UJ1SX81wVFSsEWE/wSQ
9uj4ZYYlorpZvRq+vY/Btqql+XX/KegzmBN9/PAsGj0ar+d7rwi0P7fqXihe
hwo3Jpk8nnh8XraPyjxZAxX6+YYB0VnI291baSwTikgd3yXtcr7By8c68+Ol
LNC8bG/psE8FTYpfW+FYCIQPGs5qDasZMPmI1X/4uzdqpqTXVnhlAY4xYd9o
GSxgJHx6NS7rEernlysI3j8OHgwosNZBEsY8Ko/fqh9APdL7C/IcycGdn8JW
9dAjGOwlts2VJaNhtRetrilq8MZOYYdIlyy0Pa/2H7q7hiY0g/Y9q3MD34af
BmoP8e/qJCQTHJJRM1lWr+6dSfBScrpWpnwbxv6EHgqWqEPdcrstV4sLwefd
yIV7+3JhLNrf9GLEddTD2jtEs+8XBK5wn0iLaYaJiAJXV9kz6Bevy3GhgCrw
E9zRIjNtDqMzZuhB2xDqlbx7WmzqdwHP8ID4h8bygoy93gNl/xdX8PqXfZLE
mwT4vfAqkbnqHBon291Jz04Obgym1X0T32DwS7AVJ9thNGzFeAeJd4Nb48pV
/oP7YZLLXOmX0jr66fpedvXPlGSZeGDFoAT/P+fx3Bzb5t6KquyiFnwip3hQ
f14VSNXbb+V4f0Y5DTdmzNOy4CNb1SiHYRWOTwMV1p28KGgyUpZBkv7/6Q9q
BrufJnhlwXe6t6fqcjYQyVHG1bFlHczHrLgU4iihZ1kr/c2Hq2jsEJAfkS8G
uwTD1kdh4jBWuKLxpXcVdQ98kfkdEwpecsSrepGZ2MeuGDOd3kBFHu81inKD
wcPAMeX3rVQgPdY/GPHtB6owps1mnkgDF30/GsH7JJjMeyo3a6KHGoayv+/u
aS2SlE1LYGGBzfM4cujQMD6Peyh7mgAcLHz7qvR3w8DZT/f0bsaiP7XqrOZv
osFd69voWz9ZGDnk0t8gy4f6f4QYXWZuA49fXwZu5/vB4NdD3wcmfdGwWfrS
Xc9b4H2dwJvRMQJ/WsSdsiXz0AC/puQbvSuQ0dE905aJ+5pv95WbycRQ3o+v
JQ1m9eCZHeZsVzyFeYoc/ls0h4JvS0zemmkr2uBQ/W6z6wXYvODoOHS7AefZ
76ytie5gX7fGF96GcP12mLhI6YaylS+NiMeOwjuB2lMqA7jOCTX72Hq2CpV2
PhS3+MwFj2/dlVdfK4G+vKtB1RONaGRm4Rm/vkVRyTiVhMacB4hFODfsVPPb
zPst83894HQeS2/d7DAQV/j4bmYWIdLSV0UXz23w8FBeyISEPVR+3Xl/8Ccn
Iqnp3RlPSAO79bsktbgQ6HHRndw7cRiN6QZ0eOudBIfLVfeP0V6DsYNKkyaZ
u1Dv9tzPT7Y7f8mRS/BR1TtaqM83cqY4/v/i5FXyzY9tsAST/gyemtEOqLEe
sTkeOQnbrb9uSy8XABPDz1UdNc6b9Uap9sTbQPIogY5dRd8CawwS7vp/P/S/
3yMjGDMZyXcXMlQUycSqmBBp4gwL0x7HuAzfrpwzlDzxr/gW3dlFb/3P57f8
U/M//nnx0//oudubLfckr1jkft27/eQGr9v/6F9iN68/KLBQdfP6J2L/93c9
DvCaFYzN4L674HZP0zb0iS7jE+/LPXC8OM1UvsEKvlIEDFdFCyNSqvkXHV3K
rb329629dsF/9tpT18DjsNY8QXJps79j9shWQbEeylI3JdX+s5+V3Pev/exz
4Ct+7iRag+vz9Y9q04+HkY9wi8ebpFyw0w69/qP5L46rjwfPENtR6IMDj7j7
I6T4W5+9XaOv+Oe87/qqgM/7D+3zwgJgmlccKZsyifvotBCfvl4U8POEvVy7
VhGr0UJL7ddv/3z+1ITBpj9IWNf5g/a4u45IzeacX8FClX0N+WZHL7RwUhXt
DRmpH0zo+M8+vUdy8/PSWh/vwo2WWwH78zb346HzYfKjyLvh8CWGv7JS9KQR
XTLFpH8+L0Z24B//efraBM68TD2ef2Qb1ktmbV/wIK9mi6WZRT4phimFk2dZ
vf75/MXXDpv1Q/k45Q9gfm66oK+RgPUGS88zBcjr0eNlgx+vinZ++PYxY3MO
jz8v+tln8/sPWv6pKlryeNQmUV+E9VaOy19fIa/zlZTiajFglsr2hFedG5q1
yMKbfsqjydsNbCf8z4D3B/acw72JMPl98HI60R01WLuwwPNB8EVUcn01PEBK
cQj6qVaFSv5+3x1mPAN+ki9mHYpxfTuoO8xs/hdljnHce/5hHvxMQ5NLuK/h
fn/la5xOIEqs8A5NzBYEX6uX5MZpZPi+p4Zb/ClH0Uknqo8d793aF/tt7YsD
t/bFuL7qK0tx4sX14Ur63e9/b6NwXrbzF3x6wd57lq2x45/9wsfAUXsUbCda
5sJrABaM4u7vVYLw/U2e8EuTQAHeduvru9rAICBKudMpC3Pg52fqzkR+t6VS
Awon4MFpkvT94VtYf6XETXcL+XwJKnkifxUUgwV5lQzGsR5FPfAFkHeK1ezt
Gh9A4zxfhDtxPbn+ecTp+R/kvb3io5efKPjoKjw1GDwEo3xH5D/knEJ9hlS1
0zvaIaBFgO5SgwhMpi/d8tN5ihr39ktYLOVCUGBySQHD5rzXjO7qqUxU+jPd
W1xvBIIjfChm7XuB1MHEohCfiXJVFxvCroxDCEVDDsv6GJAmdF6/3nEapRVS
R9EGa0Cwe+8xQypm3NfT71aS80LxZ21dT4mdhMApE/FrXpjDwvWLKw4yKHqX
2BUDKfOtfXHO1r44cWtfXApey/mzJ7Vwflmeu/+TTRFFHIy0u7DGB++frDyi
NhjEnM+svjjqhkLmDWYVCm3APirDzXRw8xxx5GTIjqEgRfFDfjt4wdLv4Aen
Xwew/mVA7vwiCuB8X/SVcACMOfbs/yThg7nxDMie40N+ukyFxJAe0GV1GLYz
2nyOQjdKfcgd+R6wtu3wZ4G7u4o/M7zh3jzvmmqUSsiHO5DvUEs4hB5NyTL1
dIZJ1FmTp0KOmmtTzF/sS4Vw8Rfoy3fMzeQe/c8gKlSuGxhmUPQCItRlkuvX
qnH9mWrSx0NAXxjP9U8NiEHEoFVK6VUcn4Pv0ksHmtGn+evWRh4xEFHWNi8Y
7Qskkol0RoUqSn50QDiO/iOEl74xiiy9ijlTnBeZMkdx27/M/ObC15NRd3Z4
BHOeT9+hjRIQseg++3b+51v7Yr5/7YtbwU9X54iwgAXmLL1cSy6NIr5Gtcf+
egde+7Jc+1vVcJz7c789WohC555p7dxdBa7TnmbrxS2Yf4D+/E0SCnYZClGA
c/Duj2fxfcFgzFnxaixbGwo001kuHOACSxez7CqFK1ivtyJnOYv887Py3O7W
gwnl/h/XVPH9XT88dof1BPJTZlsoZDYF/QrFyZWcN1jXHI66mIt8z8fclfZC
QBCVo1b7i+/vuUth9bv2ouqvs3sePq0Hwi8dkXz2e0BKNwhWXmVEJecjzJ/9
zoWoE456jdTkQGprqbc5cxblTHNwGLjIQ5REqfd0bxSQRvjUfQjGKL1qX2jM
/iEgTLWYs9+4hDmPNEt46KNE30DTenNGIJzjrKE0ZAPSzId0PvuHKFb19/R3
jrcQuW2DzoZ+AEhz64s2P1oR0f+33EGS59a+2On/vy9OpoTA54akaqfBzf2O
+uDFVRR5+Me5ZXoP8N1JtT/pz1fMf7lf8TobCstnNw0ZOwkfY0+PnZjGfr5K
Z9W+wY5CLN4Vslq0gsvRfu4Lypt9Yr9ciE8TCrL7kzGWbwB2/eol6WK4T197
/c3hHhEF/HD8nisfBhY1Jxwfd2yei55p6cGbyP+RLIVLUQqYCL2dDHNhxZyP
FkznWyE/sQ69R3bMQPx9MP+CYAmQHJM1zQQi0LfXLw1ais5DtKz76/DdOD+W
l8U/eHsefRFIbw02jILo59/9zzutAqmHW6byyDTKYhe8Rhhlh+irxruEafF9
HLVfqcP1TxrFTZeZiu1ArHyzkR1wH3MufJAca4sSzPgDfphGQFS3jV8xwxPs
z2PnxgwBxYxGRYVQVAPh3cVpg2cHMeeLN6yCbBDxXU7f3MXsrX3x83/tiwsg
RHD4maA8zr+L4z9c+O6jyPvXvZg5EsH/C0Fxw5d3cx4re0L6HQq/J8K9fWMd
vI0++9Y+wHl5xWOqLlUQhUqpl7lU5YMH3f3MoXIhzPnldApdNgrWipzeXpAL
TncWGMzcbm3OvZ+6fjFDgQWWw5HSNbj/Os0mxov9fC2oyOchLwq4JfyhvdAN
XpfeY2xkPof1v6jM2Bf5H2L62tw0DLGyZb1p27DPJFblh0h0oBIPqgA706cQ
aztrFMODz13jx4Pi6/tR3it7m68+FhD7ek7vYzg+v/1UJ97PlKFPqoMSS0oA
sUdKGKLyDTHnzpHzyQ9Ryu2Yj0aCURDz+sqHnKG7mLNUXYbdIIrP2t52XZEW
oh+Z+Dzvwr87LWhXrPoGxUTJkb33yIaooZTur46K2E+sntf+oUVESxSVEBGz
tS+u+Ne+2B3CCl5KKEaFYc4X9/vyaKJIL72Vso9lECT5LsVI6yeO8/KfSUPh
KHyQzmyf1hL4du8deVwkjTnvrOKljUChQ0893Gf5wPPXA8pIOSLmTFlF/TcF
hbDfqf19eRjcgmfEPZZ/Yb306k8bThTkVMB8hr0BHEKnD5uWtWKeN29a8dGj
QK4Kpx+1t+Ht8/N7Lht9wnqWw0QmD/KfcF473m4B8e90Ll+QxHV+4SXpMs94
VHQuaXHCohbiPYOWGIQ0gfSLWV1uxg/l7CY6cxl9gHjNEbht0wykgZvvctpL
UcbhO7uOUQ1BXPfRZu1f3Zhzyjn4FIqSj8l1+2w7C3FUieypr44DadKLekRy
A8Xzm8gQ0kMgpm7afu/cISBNaR3tyBpEMcany5gbqyH6dLZyquFJ7Cdpr2Te
0yCihRPnI13yrX2x7b/2xRMQuf/iu1+PR3Cc+2rffOGIIovPfmsxp4YQv/76
swH4XCwJQlTZXxTxIBtdPT8GAXw6FZIGhTjO35m7R+WgMEt95uYdTOBDFdbW
rY+vZ8U7UHH3GRRSJkBvSH0XPmSc3dnV3oM5P9IILrFEweetDEM93oOLqjpV
fqYx5kmWnjJXjQI75ZIvyFwEe6rnmX1oA+tmvi7iN1BA/PSLtcgYSAx8UYVC
rmN/eGTXOmqMPv8NL9dgfAeJNrro/OUyXD9Qzy/ZPkRZGlqFe0K8IZHnqLL3
gxjMOVebjS8Rpcu681SLfYQEq87uonzsV6OC1EPu21GSgpfmjYFdEG/D/fUj
UQfXG99uzr+tQnHlxLuO24Yh7rCWJ+9+7Ht/HaWf+wqgmJv1wVouwxBjlDMt
PI7z4PTvODavAkS0OeOfKnt1a188uLUvNtzaF9MCQdhqbZiVE8f5kGp3ym8U
ObZ8knmWGsJqQwu6Q5ZxnHs7Tm3zRBENj9d+mHFAkOLHILN5Acx/OcbuUi8K
26gVWr2eAn6sEQzoZgPmzCFtleKLQu/tIL6vowSvG0BxnOEp5kye/U6/CAV3
KjB85yWD9wtSFTl5YlhPXyVZmKAgR81os0+G4HTjVUlRD/7dNZF3lmfHUaBK
iLTu7RhI9nwnyHcR1121F8MVmm6jvOCOxKbkOkhWZDzZKs8OpE7n5ENF4iiT
s4FKuokASXXSDJVmuzHnwHd1C2ooTXrVOa0vHJLIGPsafn3EedBCfrJtCiXG
eayozthAQs/16hwJnJfHB+mni6RR3Jvj5dFVMxD/2H9w3QSfd1LUJ/NrB1GM
WCi1EcUZiA0bPKdmsxNzpk55wi+HiE4DZJLXDm/ti5v/tS8OhSjZi3d7enE9
My+asCS3AxEOvL1yzWsOIka1xDkT7HCcz/0y03uKItlWze04GCBEK3eXVtGm
nxhzTpZXonDL01Z7F4sg4ODVw7duOuI4jyueWyCi0D6SdMkoGficWr7ywRT3
Ryvh2l7wFIUYCbOy/a2Hj9bFXqzCm5w1b35S00HBnO/OsjjiesY57sfVXZv7
zUmdn/4XUeDM1U8LveKQ+kI6Zne7PpB+fOr2lTFBOb8Hv6gfqIFU6uWT0cwL
QOo6zCV/4SL6dEpBe/tMNKToGEjQf7fBnLmJu68GoVQZwtARt1xINvla4bOI
felP1A06OWmUyCfyOlo7G5JOedl5T2M/HJvr/X54CMVJLy9+cdwDCeFGJ75Y
H8N+kn/eyjQOxfBnxjcUGEBcUfBI+7AM9pOTawoPVxDRO0JFMqpma1988l/7
YgIQFbOsBBhVsZ848u+wW0QEyZt0mnKaELkoRsi4iuuNBVX72PRLKPIGD11D
eQmEqTVHphaE4zgf/PZxUh6Fj3M5cXhlQtC2b32GSBJzFtq5q20IhT38okE0
EQQ/yit3c6Zwvbdy9pVi3QYKWdrtZpxiA14vnTzsvZUwzx1fJ3eko+D0J05E
5p/gnmGg/CsA+8lqrDKrkA8Kcj7qnDNpA+lsvGR/Sk1wvouXKptwQtlujL8F
8+kgLc2S6k7nHcz5xK37e2lRxisVFumUKkgdHAif95nGedD4chLiRyk2TD1K
M0mQ0tThu/MA9vnhDNLpd5oo4av80wcidpD80lP5yGA79pMV0bvVOJ5ZXklo
SWZBYgULbYiCPPaTytXc6h4Uc5i3eTjjCsQ3p07fVBPFfqLSyfvpLCJGlur5
NIlu7Ys7t/bFFVv7YgeIVrSzTOsl4DhvSNeyuYQIOj/HDW+TcD0ZsX9pbvO5
iNw77u/fokjrnljVigcQgfavsdDgfLGo9vpuahCKUNVWfGJbCcGt+SRp51Ec
51mMVpUvUdgv6xHv+2ngX260mM6/gvnXbftqaotCX6/WLj0cAR+OTkeuhy8x
/xSTXpp3KOQsvbrLsBR8rL57u/4rrutW1R/XWKqjYDrykoekckhfOPXr+B1c
pzXFXv40W4yy3rh2mUmnQDohhk6YHPe5nc3aRif0UHrvITtBNVtIF+DJjPj5
Dkh9foLMIjwouUv0aU3HCqTxllq8lMB8hlKfHvzOgRJMGE1POG+HlCSlJFln
XD+MLKgypnqh2OVXAk+PSkPS8DVYuPUC+8nPvEND9CiGK7S96PgOSOgNoM+o
i8V+YvbSyZgdEdM7v/7+sLq1L9b6175YHWJkp5I2uNYxZzY+8sb3iOB6WyWv
Sh2i+qKrn9Pj/n3+wEWnNRYUmRBPJ32vCiLdTMuXot/jOK887h7RgyIKL1Pk
cV+H0Ah5Y3Ud7D9LomMNoTEo/Gp++BEWaQh8s1fNmE8Pc9amyw/SQ6FThD8M
TJ/At0g8k6Ibf//KrVdTYoYoJOeg9WnQAK+n1SY1jBOY894vEZP7ULCfrAi7
YSZkVI2klFVwAan5pIbptRWU+WGk19bRFjJ0ftSF8jzDnIWHfpmronT96StF
B/dC+m9lfeljuE/pDZK2T+FAyffux7FeL4N00WS/5AjA/WDI5OUPuJM71aWn
3UUJqa1vYhyOn8V+Mlb+pr4QxfaV2ZGvkEHymvar+Facd8Y6R/paPVEMD3tu
65ozJA5ZBPqO435n0nskGzkh4lcf8gjBha198ZetfbHD1r74IsSeO7jiswf7
1cwjk9b7VoiQuqu4MZcaiDX6xddY92E/MT4051qHIpuH/tJSkgHBUPRRx3t8
XxbOVrohdxRJo8/JdzMZwu/eiLoqifPLYq7jwagVFJ4Zm/nocz4E87o667Mw
YP4zmSQJGRT26FpjHXcz+Cs7azUaxWP+070RZ5JR6IkvUVKoHMgfnL86enI7
vHAU0M3ZtQORNv5afMwIgUtUd0XpqJMhqT//ND39dkSaadmvEasBGj4+fQrO
g/CVYpf1iVJBREq18NPodNp6z2J1a473+j9zvG/H4A0/H12ZEo7z1Ti1a3re
KFQ1p8oyuAf0RQ5/4RqJwP3RGXRRIBn5nVPrzIjSAQW5UUeGFlzPrxMXGuX7
kTehz+SegCgIBgUuMT3D/NerjZ3uvkBenlczLr6sBqqYYFndON3NeVfPu0/6
yOsMt7oiJUdR5zN2lZrj1zbn4bIkYS/kxfpVQ7paHEy9rR+t1ZyHxmcb1spl
bmgyRuSePVU6eOhw7xTZ/QXGDY+23c71Rl0a4tGjj3XBczclWOY74Pt+dFHv
sxXKqDVK2wjpgw9mVLQyPrgPWuAaV9m9B8V6zhow9fhvzbVs/zXX+g5u3qyT
TzvqcZyXLtUK3kfhHK1G8wJBYDvDcM6PygjXIfQFkiJXUTDZ+91C2hfAeMPO
ksmQY/M9FMYgcmfkb61wIXpwGrR+v/3cyZCI/64Xtkqjo8hnxC5neOEVyGZq
izYpfcZ66p4eizvI+/5hWSayRyBIvb9i39hVrFcxDgxhbsF8b+7W+sGuNq2K
ybu431n/yepSR0Re11JmmTprwKvFfGXPiRL4U/XypaDbJTQgRlL7xlICfp+L
ak9nd8BEw+5SX88u1CrMrBiWb4Pr4WyihTAtkMyv+g64HkLlrGq26eVpECDP
ou8Yi/W8qbHKt4uo2Ou13pHq6xBwfh/b79tF2N/sG11H+FGm0oBGH/cM+Pv6
qloI+WP/nxJ9v/8zSgwKVXZY3we+6ydFfHbOYM4BXFaU5Sg6Ndfv44WprblW
7L/mWt/By3wl/fPfEMyZ+vTQ9CMUQfueQpnLA1z1TtoM2nThONSSaHHVRiGZ
PCujzrxgm79vj7U8zl9rqqzct/+gwFxJS98vaWA6yO9h79SB9aUfrHulkL/o
HUeajKOga53hKHZnk7NG0/seWeQrl1N2Regr3GZaf9dAg/uFdX9nlhV55L1w
8UT+wV64FF1+fSkW94nrufsPLbIjb07ddy78wxDCl/aGM+gzTDRVipZVDaNW
jovj0rTrEPp5qNunHseV6g6k3q+GKkMXXW3qNCGMmfquCRmu95LXPR98dkAl
dWBo/1URwg612QdI7sd5vKDX708fyjlvpKNSmQuhMavDG0yhOP/6pDsmsaI0
ochXVLdOQchbM4bJM9hnZv4Omdf8QvGcLebrBsYQ9KDpmnLgNsxZ+MhNcwYU
vTdfjnrZc2uuxfyvudYv8J3bUFYxa8Nxfvf4vo+XUERBuGMNVTt4ng4Lr+TY
fK/ty8aMKBMK/d78oFyPC5xNRn4qt9Bg/tX5Sh9KcX2YbNtvIgRvc3kaTuzx
wpzdLh/8Ro4C6kJVW7fJw0v2vqPahM256062ichW5NfDKlwrlACPd5Z9gpHN
eFa7GKYlhHw16cWJqQagTt+j0d6H69V1N+ezjf3I5wLDk7I4Lohs3l06fw/7
EkuDL9/LZVRbNqyylvIaCJwV0lScuP73ldTa99QWlUlVsr+yKATCqbBJhR2B
uC4NUO7oIqLPhwjWkwrkQKBy1gl0x3X70F1j2jdN6JOmbpPyGUaIDDxyluNz
Hc6zmlLJxx6hZHpV+gOV8xAR5MAQ/gzX7TOtbb8vs6DYJTPxXH7c7zD8sfYn
YN+eD7Da4TeBiCVt/eeqd23NtSz/e65FfUtvRmoYx3ny4MRBZhTJpSTpmJAJ
PjIDpxd0NueHXLsP/ZVAYb6OBbRxT8DDYM2F5Tna3LNrmwjOopBjk33lLQgc
tfIc9/tQYM5sphVliiiIbJ9+sgQbvAmtfop+4PuylrERc8MJBXCN7VhTyQRT
oo2lMOsS5smIVkO0kZ9Pi27jVwV4Qr7Kmtqhvsn/uXEACfmq3pw/K+cHRPdt
twY6s4H09qVdUnwU+r73+I2JoN1AJAold41szgeuZ48Vb0fAuME7TB4GRFe6
t0FHsQ90Sv4902+EsuuOIS/7ICCKZOlT2w7gOufeUrubEUp/Ft9V1CwJUb7z
4X/2G2LOuRRHeg+jxIcPnDqp44AQJLOW0Ix5zty33FlyDcXeYtes3FMAkSfO
a3NLeuJ8OkTz+XYEIgbfLS58Rdqaa2n/11wruMngUJ8b7vuWyLJuHxlEkfdq
unt3yYD/nmFdRR3cdyw73xM56IHCxVU6tBirwctQhnfKAPc1K8U29y1KUMia
WIAA53ZwszV/QH4/E/NPFXvS1Y6C5s/3Wonqgv0T88WNCQPM+e63wMzvKPD4
3v70PRtgZfWX70r4Daw3HBVknkD+4exmr4Y1waTz5HuNPfi+rHPnRtFcQH4q
Me1ZQdoQM/f1y2EGHFcE823CJgfQ18BIdz+2HxAzykfxqwf7W22u+Ol9F9Bn
dvfBIMOTEBP/sq72HiWuf3j5z/LaocwHgpeKVXZBzDHLJxIPSnHd/vz42uef
KNXB6PGlV9kQrUUjJGu42YdaFqhcpkAJSrl2Et/ZgSimQpm0A9c503lkodSZ
KGb47CWPvF4gJCNOOg2cH+eO7u/SNMP9qchOGZ2erblW6b/mWh4Qpm/WAQK4
31y8IxeraY4iPf4E3ut6BoHBpX+SZl0x/0k2l0u4nqn8xSFFJg8+pEVy7gXs
/yviNnqR1ig01av4MO9Z+CjnQtdxZgRzliKkLLqi4NL35DoHfMG56bXeOJME
1je237U4g4Ko6/sQ+IMdcTRcwxmfrzWX8VfkvijAkZlGPXgULF6LEhYtNp8b
HykUml5C/me7DsXVq0K8qKVofEsMzl+xfJbuKgjMBbidZgwhnlIrheYxzr8/
P97wGixHuYzxH0JL6CAuNHpKcE8V7pvuK7Svq6GM5sBQ+rZnEDu36PyJDte3
o6E0FAdSUfKKr0AbIyfEUhg/3ZGF/W1y2tXy6R4UH8q4K0GQDKLzQiyfpOC8
NrXIX98fj2IIDA2RdN1A3Me13WKyB9fnD7vUijoR8U2RvHTHla25ltV/zbUi
GgIfrU0q4DhPmCEW9qPILzmdf58chuC1y2cZ7+G+bEnloUz4MRQh+7dhwJAe
/GVtglkFMf/lbP8S5mwUdnWq6Cp9PngNS9VU5V3C/GslD1bxohAzJaeBLgTu
e8iqPj4txJwJAeJ6JSioxmK0yqACHM3O1itP4npsTdJJhdUOBSpW7Lvyawxs
6V52j+cfxnqKm8YxdhRA+UJd3ek3JN4663TOVQdIZe2WQ0YBqKAo4+U35URI
WK6yO+70EEhtYT/3FamjbDrKb/15A5BgqDJ0Ov0VkAZk3Ee+a6D0MpdJztos
iI+i8jZoz8eclfUpauZQ0tACi+uSFMS5+QRKnXmDOUspiezzRvEsvv69aSsQ
y/F+b0XrGuZ89AzrxWMoxthV7J5QPUTfYwFWpw3sJ37+04qjmDNV1WvXN1tz
rd7/nmvtZbh8INMMx/mqFOX2KRT559UVUnUNhElyHqF+ZorjPD+Q23wZRXzW
fVEtdwYCrcclVybxOVo+oXqX7zwKayRtbzA0AN9dWrVp+xcx57sty/cdUSi9
gHONQiOuP2WHVIseYM4XzaLQcxRs4fh2VJIZXAUcNwjFmNsqaZtfzCUURHWZ
f97tMNg/Ur8hSX0IczbkK6x7iQKKRCp51XwhWYHd3EMb97nVJUdJDfQo/+gU
dfgGPyQ15XgctS4BUkcutNaGokziNYGH6V8giafifmIt7rMGTAPYVDVQ2vpV
5kb9OEgU6WBteYPropGvYEZlhJJYLZRGrKUgflkxdpIS+9uEwRiyzkdxBTVs
2utvIM7o7C9fTdzH/ZVfEX72DsXcklUae3wEYnwfk36Y4D5lusyC6iDum+w+
y54Se7Q11/rx33MtHvdR88RNP5HvT5MrQwTaReX+tC6IeBCsWe9zC3Nmf0x4
toEi6Q7pXvvIDcH+wt+Fx7DPL8VYf6M7j8IVSwMvKtKCPz2MC1yKw/wHlD47
jqHQKB4RBf4o8Fqp2X97G+4HV34neX3oQiGMVFfDhGXAvcJhB38jN+YcZqry
qBsFpVCJbFP9CE5JQuq9fp6b7y/HP6ltQYGPjQNXmdghVYj1XtyuACDVf4v3
fK2Mcq8U6Z7RDIUUn3KXPyq43ujMeEIZTkKfvCdo1CvqILkkU+xdfSvmfIJc
aHcRSm2OzR8roIOk9H3xt253Ys4U2rJ6jijRju2WlS4REu901iXvPIn7fTfG
ascoFGdGXdps2QTxGbJvWQ8ew7795PJfy50oRnzqTf39OYgtPhrb24jz6RRJ
yP7qa0R0M+D17rqwNdcS+O+51glDyx07X2A/CclL7Z5CBLHSxHUhBYjMOW69
+8cg9pO3QVdE5VDk5TJJypw+CA1opslxUsGcWdpitsWj8G/KP8kUdkMgFc1u
umYRzPl5TNpeThR2JFSTk8ABPm3lnHdScN+3YnG5UOAsColJWty4WgCeh/8c
L1B/jjlfXTpg0oCCrxjOo/304NqfRqYtz4n1Ia5G32wUtH1wNJRsFtKWJ+wO
qmJfaqS/Rxe1E2W36nv1DDFCmlSoWE4XjqvOhUMtYa9QRklOi6VJHqTKJdDG
NeB6qT/stNkuf5QyUeo7mGIPKSzMQsU+3bjf5ynZa/QQJVI//e2T/AGSiDoK
XJ9wvzYWsOI30YziUNp04ZQ0JAwYRYm8w3l/0qaM60YwijmRSxo1uQVx3dH6
31Nw3p9iFPIpO4+I/oLU7m8ptuZav/57riVkdj1WBtfPs3+8DGmsEeHBlZko
XKcSMhbGS7cJ4TjvXvJ0wpxNeg9p6mlDuKP8V0UO7AOLH5R8mF6hCOHwR9Xz
dRA0rGxF2bD5/ub0t+VVExQWSceRNW8MfnFi8631ZZgzraLR6HMUyr9L7WZs
NHj9muRhysF5c2UqoahDDQU37SvU8okGjz3WHJf0yDfjPMXpMjkKCvwsqmEz
BOltn9eSeohAarpWnLWvC2XlG6Z93tsI6c/cxmpmfDHnb1c14jdQBludQS13
MqSVuSRxel0HUt8vrmHzQyhFtHLZe9gXUl8mJhxavw+kYYGk1MoZlJB0uFGt
cjck9ynw3uLb3GMGdwzSWKA4Jl1NEwiBpN2V57Itcb6e+OClWp6BYvjyD2xj
E4T42Xg1hdZi7CdiRV5PIxEx+rYUU8PrrbmW+r/mWvcghm/O7MFPHIezIvd6
56UQwbHk7Dj5GkTF0Dv6OzzDnKVeiikyociIOXJN1RMQeTLn9ZVV7AMLGzVj
8jQoIvhoI1rlhJCcVTF+F8x/6dWnlSVXFE4vy7kxFQYBurMMJNE0HOexv0WO
M6PQePbGa/nc4GMn9Nt/RBVzDog8csIOhajWX08IMQBPOqKQxPJ5zFlJ54/K
ORTMndq3u1kQMtKmJKcvuACpmT1kX4QcykwdThX+8AoyhMoMrr3lwZwvkPnv
e43SA/lCPv6+DukB1/bsZNLCdd0E55p6KUomaiWcmjwIaSVjPbQWHLhP4clT
3PMeJTzgWZfM4ILUA84H3UvxuRjxbb78tRn3IyeVFzLMIPnoVK1/Cva38SB9
2VMtKOYI8UVJF0DiNuIOBVNq7Cf3trOb70DErJccfGv0W3Ot/P+eazHvYjHW
3dzjWy2nTDshQqIx+wr5WyB6xj1u6sd+Oxc8LHLtDoqsfsE/zSwJBKZT/QGy
dzDnF+hCgjaKWCNTtTCihLDXTHY3P+B6e3FRT7q0BYXbEo41Tv6FICaH8b73
LzFnseXZ97MojOMh1SMRN/Dj8BYQrt/sN89PH4sKQCE/zzLf6ojdet/hwdb7
Dju23nco/I/+bfA/uqzUlp4CpoSAuxHXOKH/zb02k72TaOThafFFfTV458Jx
OP3IE5j0pG+d2BOOGmczm2baRv/z3G/Joa3nfr9tPfe7Cs6pbJySoWwweq39
tG4WF+qTIudv1wjYep5W7V/P0xZB2N6X02G9pTBp84MDTpmippsHmMtq/Apz
Nt93iFYrEvnnfQel/33u2tCv3sRh4mTRsGLP0qDh0D/vNSzYPS2ao7+tZSvj
D88ZdSiCuZ9ifSb5su67rfcUGLfeU3i59Z5Cw5YutKVbbOm64Jmpgw5LPQFS
pcFVumt/UOFpqpg/Yz3gnfd+snBfNZB66lyotE6j7MbYChvlI0WXin9Z8/78
57k4ZXn1IuRF/zf0ZrJC0ZxywpOG17Obc7nxGKoY5HW6WvWhzxk4ZNWetiuP
AI4V9D/qRMvxdbpqaTJUgt/LZoWCShwnd2PcTfbcRZVOjKTbn15AUMgPpzyP
UCDt91vhRNWozkNG1ADOAcGbVTlC6BSQ5ETuZj3yR1UPNRoKuHkggz4pteHb
TXyOdj69v/oLZSG98iEgAy/f3wS/s3qbe/D+aDUbFBx9RJF9Vha8s4cssrhw
f71SoZj04C0KIXPmP7jzLXgPULreVFTGepHUB4FJFELL1qapdundwq3nHsH5
T+zL4vQLmK/o/Ot9AYut9wVebb0vMAfvqWwERFf7gJQceblX7wP6ykM1Gnqe
Gt6o/3+FfXk0ld/3P0oJqUQpQ3PGBpSS6iQpRUmJQkJCmUokGSJkltk1X9c8
z4SyZYxkikyFkMhwFRky9Dv307O+f2i91+/fs+66z3n22WePr/16qkdtQqZh
VNvw9jZnPfTZh7eScvwwcNjlZq+M4wa35v251fto+NUbl068oyP0+R6hzxz/
p89/n6tCPPfG3+eGPQUR0casQNZPkEiquK5lH42o0+5e71S+g6s+Z5qkNo7D
Le3mUeluVH1UqNBukyM8jqxo0YtShy49Exk72SY0OrLFRGqhiMC3NxJ6bvJX
z+/Rw2UL8zV61bWQU91ZMVBwDFG/OQiubQkGjxVR1fzjGjAyRW04u/0L6tle
11a31E/o2y5C3ywJffMDO7Ox2OrjitDPK+Kt+OMBGk6qfjFkcAfc7JR3ssQp
QP83jf4bpjJoeG0B1xY7NrA2JFU02Y5Au4/L84DVEmjMUy3H994DrE+aad+L
UuCLt8dFUQ4q+l6qPW2wzxD84eE+ppRhGJPmP7rbfgp1DB0cMw4+TtzH88R9
LCXu408gnTex/+KyBKOT2lv0vyWgLsnjf2TClSHg3dWokU/tMLI3lRqjYIx6
R9X6XmgtQrBItNolmVIY1c+oPfaGE302rbPqcpwhziWSOBdnQh/SQW5KmJT0
aA3kv6ZzELzAgqg9ka5yluVwR26/cnlGLzRGbNwl+SMTjX/bk36MdRQehl/u
6vcSgE8CoQ9GZZrR6CttE/rpAPCta3polYPjoq5i3/VqrqggLr1A5nnbX7y3
3iiB9/Yg8N6vCBw4B7GeRKxTCBz4cQIHzkfgwL+CF/3gNw2DefjaNPiJnu0M
+qbP2ZQn+Axcr2+JvaqM48kBw9gnCT9RboWGAAfXHnCk5+ToIQsAtXIH5/F7
NajEYycDeWR7SXZv3usrv6RBmCNw6JY4A81eTbk7RRC46HQCF739Ly6aH/6u
lwYR6wF/13c3AON96Zeq5yTA7Db9t0MztP/53n3zwOYSSulzKZdqe9gQaDha
o2dF+/+l2tpf4CXGfaDelBGoD05ee/rmBqp+WU5NStaG5/63ClaQsH373d9b
xGKKovfZK7gsXQQbY8HLCsK0ei+f7nO/JBR6uD5ToywUDNf/2d1cjvO4JQ5V
IdJGFDgc2C34yxWUHSZyVS+dovHe3F347oz8Tys+u3tpCiQH1TUX7Gh8OCXs
ryrkkC+1372mPBe4g8JNqzloOOEmpV43HeR7x5dJdrtJyWx3+5OHeTTep7aw
z762yPfIrqLA694gu0a3evf1VIjj3HU0QlwMUedYv3O6JeH4+evZm/M43hj/
GLvHeD/KCF07oNWlCf6qHS0OR3F8O7OfbF+yCcVlDvLHnyaDD2VPfOdBHIf8
PuVh9O0Eij738LzJCRZw5aWeY/p5CNvD3fEJ8qYoYsVOtlGD9WAb+4l+HUkM
y+E2Q9odBUSqlhSw/rIK7m+VvW+tSOs7cGV6TH1Bgbk7XK/u+QNaa3KKBdoC
8bpl+uzmCOSfq6gp8VsJLvYzlbRL0viaErfzF4QiP2d6T+a5ATgmwxTI443j
0qXSYNJkMfL93L6oZKoIe2pfRPEercLrdVnZgXnI10V1S3WmLpj7dHvaea+D
huyheDGTPESlyx/7MTEEwakN9tuzvIGaIravKPscKtuhdPXjYiKQqnP33BbB
8c/XFc9HZhhRThOdCMvHCCBNq+yPXovjk5+mKbPlOJ9KnYAnss8gOPn+7GFF
fO4zfPc2mnmj2MywlL5MEgTY2zCeQvdxvBcj43flGI7PdeNlb+yGF9WS7bZJ
OP6Zt+C7cyYXRQpNRmTbrYXnzMw5GSWJND4xqVs9aSj0KcXFoCkfrHtlVn/Y
5Y7lGatT/cATBXuXWF94Vw/3zWYGslbhvGmJX3h7WhAKvNHts+1NEOiYiqeu
dbqG180kb+e6Iv8GxbPKZQ1wtTWxX156Fq9HcIc5MyK/upW/dYzC4EykU4f2
+3i8nheyKYuC/IREm+KNrxLzOM3EPM4hYh6nHsKifn6sOo7jLpNCVq8vq1E1
tFIvObFB+LRs5fx4Eo7z9am1uzRRYarFtZvCaRDhtf3ixfc4jx6Ri78b8wJl
kt1cet3mIWLbF26DZjMc73G7XnOvRokgbqvadwjCTk13uZ0pxnF1VhopoRXF
Hi9r3KKfCsFVx7568+/A8lzZ+lL8Goq2WunD0sAG/ltDCjqS7mH9/HjUpToD
RY7+UWPdOQuecs8C9KUXsDyl+t4lMaCwGM8261fT4PiU801eNs6/Fg9zrlg1
gUhfBR5sZDcBKwMWAc+H2M8uthQ6n3yHgjIr3pK9noJpvptf58kCLB+JVhvr
GhTIYPZnYGcv3N6VzZ+uSJtfM0vQXmuH/Gu6ZPkPeIOKVVNu2zjOy5aCNStm
QpAf9TcPEroGkdT9NtZ5UjA+yvOjXeMJalRfMfrWQgXIKvOrDUIfAzUry3mV
nwV6s+/0m3mzciBXfdTUDVkEas/N04kF3ihP6tB+7+SfQG6NKa5yrsV5za0I
d04rlL7tlOHZHwNA1lD0fHkNx/OTa9gY2KZQQlbWyfUjDBCpv32l+gccz0zv
Xl13KR7FLCzymPZyQGjaJnWFu5k4Ttb9KsB2DkX72l1XuXgHAiceNHauwvbk
94kE8lETFOVAV9XdOAw+36v2x2bg+ziflyf3vASF2619dB/naa4UqvHrL2o0
vWURt2FCIaNelq+ihsCBz0jschWOrxYdhNRPPkXB1SHJv7vK4RH1TtVSPrYz
i7Muk++KURBbZjeH5WEw/mR7VcDzGZbbGYN3iWUooGi765GNOE7+I/SiRrMc
r5sPrBT7jvyLRxovHy8DCl3drnULf4BqWCaZYziBqpsS8sOL+4Ec0684V/AW
xqr3bJBluoDaVAWjx+pUgRJs+57reCuOS0NcN48ZoeKfr+hWXU8GSos4t3EY
jg8HLjVi5UPZ9c95r1jcBkpyvZDrS35sJ9nmHugLodTTu8RvnZ+C6JlPklKF
+Pc/E/R5vD1QAtOXSjMJLiCTTyhr76TxPzjXUgt1UEyby2HjxnCIUPLdQd+L
nztTrkIv/hpFJw1Oih1TANKz2Z3Gkth+ziUUkeNaUNT8hdGdMvvB/75PmIIM
vo/zYmd+svxBEfvXPQksBvDSV6ojf0ym4UbCyu6uRaFlF+LrzXaD8y0R4bpz
NB4ekd3zj3YgUqZGTk3+A7DbYn7b4LAkXi8oiFmvi4JmOe6d5i4D89SAqrBZ
mr/YqNitFI0CA992Hbn6DAzbzn6w2HgFrytaJEm+RgH2bVzoFTfEyjjxNqxh
A2rkrhIx5XZUvt4g5l2SFsGbJLeMN8kJYnS+pzEtjMJ4/QeX+B9DqGknWVaI
+c8y/qVNBP/SRYiNG40qFCLjeNt1kTHrM3p5zGgsTZZhGf9SGcG/ZAax2VFC
+9tx3j0YOJ2yajPKOj8wxYPjgL+8TGuW8TKVQuw1JeHz92LwOXJfLt67F6Ws
pg+z2a1I8DXl/MPXFGM6lsbdEIXPlyey/g4nig/6ztngwEPwOK3/h8cpeiLM
cGsAFahTn5/u0OFEMW+8j+zosCH4nfr+4XeKqtBsKrzqjPVh+2bHxXAUXXZp
6PWZD0S/A/7hfQrtt+rx2ROB9YS9eMGXGZHFCv/sTK9YxgfVSvBBRUNg5W72
nG003q2MvopOWxRRNmhUmvFoGU+UCsEThfO4sULbR7V4P/PjfVRhbhT2qKGK
Ib9qGX8UieCPygG3+x1fnRewf1xoNSDx7EYhlm0p1A9rCF6pbf/wSj0Lfpfw
gcYXsWhuskTWRMGVsjxk9qy/fFMJS//wTT0J9C8iv7mN13tIk/LiKOjm6Ssa
X3IIHiqhf3iozFLjlKZTr9P84HNO93kUeExjnsLqS/BTMf3LTyXbeuUHygdq
2XxV6YAhelXkVs3BxAIJAwOfZzw2ANXcyW1UXABVAdle4oYdJF6uSE5mLQHq
512Tkqy3UO6RYh1NBnNIXHk/Zw8DXv/2ueXSlvcog/2CdJhhEiTIq3ftH8F+
auzS1inRQpTkcZBHLIsZ4jdEvUjxo9WdqgSNtZRQPFvsl/NWUhCrFH5sw0es
b5NPBg3e30cxWVrWT5kPAIVHcdTa/Be2J61BrCriKHpSsreIhweixA+e0X+1
GevPsHX5ptuI7JXMf6BiJ4Qsatr/ErxO6/PuCl2qRZEvXd02xD2HgKWhg7+y
sH7Ob/ySx22JwiMGNr+yegQ+TrZNCc9oddFdxzaV30ahpXnuSiorwc2ogZoz
vgWvfzvM5LYZhfA1t7g8iQJHybKs6Hkafv7BSr2JfSi4wPR06mkVsElx+DMa
IYPXG3vVctpRkCt3kF2PBCRzPXwkU4LjtNokvY9hoaiIM4A+uMUckr7y3OFz
PwlUf6v9bzclovJisavKpR8gaf5g11xRM1C7a3+oTNGjnBXSct+7FSDJ2dtQ
9F4NlvObvSONfShtJp/pofxJSIxJV7/eOQzU0VSNI1VklLRhl7W48G9IkP0Y
2nejG8uZidOy+yGKG6A6GbsfgLh7Tx+fLMbn+7NcNNz+BZZz9ZIZ61uI2S1c
T/FkwHLeN8enZ4IoLLXuCbHOQCZZ7EkXt8Byvjr7ruclIuer7RH76QFh1JN9
beWXsJwF7YdADEXtLHjjfzcJgno7JQM8aTwbsQ32nQUogrvrzuJbOfBT0Ihp
DVuN5V/tuEWzHYVdlDILWO8KntmeQ+qMwbR6KWpzaUUhuSIq2bEL8HzPvXmP
gzS+NQmxrbXYnit2ykxPGoF9T86lGyFheJ0i2SlEj4L5vGMCSrZCSsuWUand
+BwbHhgJPNNBL7dGeh10JENK7criajucd8Q/rBWk6KI3np4LV1SdIcWHj+SR
3YTjiqge/2xdlM2Zas6ixw3Jk+se5Tt7YDlrpwdPv0dpW4VqHm1qh6QRzh15
KjgfGZmsGMD5b2LWNbOd7j6QaMRpRffgB1Cp0m7p8YYornI65+KjexBvWeSi
+pJWr15d1+2ahO3e+7P7mCgQu8NK9NgX2vyCk/a265cQZbexrLS0GUR79h9I
f4H1ZPr1ttFz5Yj8aWmn11gkRNQJKcaZYz81GxcZwsiOopyTVrE3hQApYxtr
5TsaDvCQ8DTyRRE+0txVl0UhYMXI9iF/Wh3vbrl+Rw4Kq//q77NoBC++xHlp
HBLBcr48EX+4DIWeND1ueE4a3BjfqgZuCMXrsz8rVZ0R6fMShf5OGjjePUD/
KY5E03N56/krKDj1zKClkiOkWX8w3ZeoBNRmY+sOri6UHyB+4i6XJaSRjI3T
DuO4OpvkdGCrF4KPVszffvlCGruBnsoM/n3PMH2fnCbKUjOrELnPCKmKBV3q
wkXYf33gilOdRKl3b7y1ag6FlN2rnyb9foDlLLQjTkkfJd655JOtqwRJz282
TRSfw/7LXDzMhxvFZchfCE8VgYQng+6WyTgP/XF+r/O5URTzKsvJ0CcH53tx
HRv5sL+YbG+RuLAOUU7wt/blZwHl8SU7xtc/aHHgJ79PziiagY6qdVsBooLm
Axz/YHsyu13/oQegqL73fGoSnhBqJOG9Vh/nNXNvfu7L5EYRC5NBrw0ZIDC1
Qd0nYiOWMzNrPrcgCj+XLqE2KAa+tlFhvocGaPh5zXHSHhQKNg4SBY/Bo6O1
WPYJtrcLher28X0o5LZ6dBQ1EZypVnl7K7WwnE/uYI2pQCSxU5POrVqQwc7u
xDaP45aWE/mXD71GeVpHI7bTAWRcpTD8XPcTqEUhdqpsR9Fr5d9rBTfUQbrT
nY8uljjv62k6MX+2EGVW0GkMeZVDWkQZS6z8ASznnbyec6IopZOv/qxNIqRe
tq0ik/bS+rzXD7eLoUQBp5msL66QHHThl4Tzfmy3o6U2Pq5FcVEiBTsteSHR
QlHFfdc4ticuboO+OK6rHKrR/kaCePoODUE5HJdOCl8bPhGJKNcWTTyy8iFG
vdevqAnnL788thSPvkXRewoMSqTLgJy0SvidJc4LZkIqvS+VIDIvZUvgyBCE
bz103SHkOZbzJb6jXKwo8vZNugvPSyFYzlkz4d5KrOeJRpu3pqDwwh1ptikM
4E+nfDFniwuWf1a0UIY3Cjtab+TYtAW8o8UyuOLqsZwt7d9v90YhX8TOPSyP
Bdf71WFyvjTcAlP1wWoyImWZXrz8rgMyFYyC9egrgdoqXSp/bRDlGigyaq6V
gcynzOZfNmB/AdNran1MULH6O5mFG86QMbRGNVJfF8v5YUOTeQnKPL+Db+tJ
L0jvWXF8dRq2V19VxfqfSaMU3Zz8GvYVkGa23kzHHd/HYbMtiuq5KGEmf1+j
x0tIiRAijRbj+zVaY2o34oPiAq7kX3/gBkkGq9fIzChge1IuMCr/GMU0sbSW
+q+G+G+MZ5440nhKrYc/zdYiismYS8VRQ4g96mm35RU+lylq1bmuJRQtp1N7
TL4Yop9SBjdcxvngzIakNWfaEfnc5KfcjkMQUfTxtM8KGh9ve6rrqW8osiJg
2pRvFEjtGuSD62xo85Wjq6Y5UMRuy7l5biEIsIq4YNuB9zmv+W6AB9uTFH/u
m4e0wCdt8uLXfBpfirhF1NM3KPS6z8vyCVdwH/nBsMELx1ELTReiFdeiEKHY
yCALAchiGhJ8pN6P5Zxnup3NFOVEKNl5GB+HzCgrs+O52C9096Vt3b4VZVS1
7k4/UQ+ZzA7VNxtp8yCP+cpaLVHKCs+GIGVxSHff8IgijfV5yFXOdCgSJTTa
dcd/tIDU8HWtv2dofcYxXfUb1SjO6616zXp/SL46oaeSgf3F+MLeTPatKOZz
He9SkBAkVE4GTbRMYrtR69MxfgZRXGbqt9mKQNw6rj8ZimewPK+0y7Rpo+h7
otePkmeBcnlLXVgltmPTrszkvlOIfD9FLvNHC0QpBsLYFqyfs9qkoAOlKGqH
teTVkqMQevPxjhcjWK/meoI0r7qgCPeEHQc1KRD4fc/zuRQrGq6SGrkwjcK5
Kj0e7mADP0YejzY/HC/Nj8nfg9cotPaG8R6tUfDS8t7s00WizbGmrK6WRCGR
1TvV5hgIvDEfgTc+SOCNw0F+lYzX3pxoyB0sTdHZMoGoA3EFe+ougnnUZHJU
dgN8fvdN8K7lOjSqNHDHNCwFnIfjw/iMPsPY16LUylVJ6GO9BptR31Vwqwl9
y0zrU8e5JL2UvoXKBr+papveBI8jEm5LUhJYD788TNF2QKn8rlv/yMkT+ORR
Ap/sT+CTq8Fw/WKNLdP4/+p+nHeSUeBwkFZiIiOt7nfEWH7hf3W/xfFOWt3P
RsTgBUgO3jxOihT4W/crWfu/ut877nzgDooYdYzJ/l/d73MTB63uxyN74kvJ
bPe7AE2O5v/V/XpXn6TV/RIVPqSVNOq5afR04Hx/qUNPLEsR+Qo2XidvqwMf
E8Gjxc7DMJa9zURcZitqa54qcU4uAb8iSUefDGugZqT1Sj1uQG8Kf5cmHhsF
/4acyZEb+Ly+e+kfUFVDWR8fRDExKoP/yc6eTHN9rCf0UfR8b1HS7IXKRSZF
AodsvgyHfBTMHLZ55Vuk/o8PX5bijYIeiT3cw3QHdJgH5CcZcP6+pB/ErCiK
Ajj+ONwLL4LLCktwcA0NH0g5EmVSiPxSn/unxDuDVE0ja0Ug7b1KCjKFQ5Dv
CE/Fg/YDsPeZ4hC9Bq2uVXewMW8e+XrQbc4OcSBwxbwErng7gSv2BNLJ2I3i
d3mAWv3Jxu91J3qtYJTHxSgNpAK3wYmr2E+Nirzepz6BMrNOZwWWb4PgWSWS
1Rp+bM95d019LEUJDrN6ihpPCNxvB4H7HSZwv6nwcPGWU88gtj+L8409Xx6h
IEGjn3TiuqCnVVdhZEabp1ZfvYupGAVcFbNyPLsEqq0HIwJrO/G6L1NWjhjy
55oeDrriC3KaCx0qIjhvWspwYVOLRn5XI3klyQcIvO5WAq/bT+B1YyBi36+T
KgrYzox/0NPpcEBppUpFE09+QzirzoN8bUba/Av91pStKL7ylVFN3zMCN+tF
4GZXELhZeTBf72TAtYnGh88sYdqQgwJbAkTNz6wEAzX/Wp+N92m4zWOhXrko
QL3IwuLRDGiQbtjsd6G9l8ubY231yP+y/JdmzaMErrVpGa71G0RBnM2MB46r
p0TCDHhuoHjzHwbGHGMEjnTtMhxpNjx0KVil9YkmHy7O2msrUKC7s7MVnSjc
ZfXR0X8vQtvPj406rFie3Rv9r0QReE4fAs95gcBz5oFZ8QuN5+Y0Po3dUtff
KqLAi2phL28k/kcdw/0/6g9W/1FnKP+PeoL4f/A/W/0H/7PDf/A/uxD5vuey
fJ9C5PUKy/L6ZiJ//7Msf88l8vRdy/L0UIL/mf4/+J9F/oP/mfXf/PrCqLzq
L1GgdmTVHSvmQnluE4O/OjdDIlPliwxHnPcNWuop1w6gTCnr+MNMWyDhJjtH
yTaE71346s492ihZxfC05j4/iBcfchE+lojjLtXQGR1GFO/+69ZFtYsQ69xx
Mq4B58WTe22MLpmj2BV2ZWu6pQi84plleMXtEEqJZmN0Y6HhLtpkuCkoiukJ
O+uqNAgMf7piVzOtzjncfbC2GIUPsIod834Avutm970xxvHSwoo5+lJFFLqk
4cFd+gzcr1l+37Ef55ULjWPNedYoRJmfMpNSAI6TfMff6WA7uaj9PFx3BAUP
+Pu/DuAE27fdMYmV+P8Xq8ScZY+ioDR7g7b4RgKXqLMMl9gLSaFGD19H4/vy
1dJztP4rytzm9QaWWCHxQ7C7a/dp7N9NR2f+KKBkQ1tH8SV9SAjMq1G7i+NM
6iGWrffxvS61sHzZaghxXUGcQvt6sZ/awlnvQUKx52QYvumGEnhCg2V4wv1A
2sHNID+A9fy3/LFmlg8oIjp/iO2aOPgbrVMV+d93Nxw9xrhzUVj5r1V8Wr3g
HZ6dD560+MfwzVCULQrluUY3y2AFLnmDtY8Eemn2nz2UvR6RkmLWv61TgGc8
8bq9L3CesugWwPLMHAXfc3McljYl8IG7CXygJoEPjIbkMyJq3/rI2O+c/P6m
TwslW77Y2HziASRObp1eVDHF9m1Ndl76ZRQ/ruL+9FEyJIh0n/4mpYnv18pd
YaylKNYpPntvezyB31Nbht9bC4ElSjb8tx7h950vbFOyROFPOqaqtx4AX9OW
Ig4NbDfm/6hdj8lHoR/7vmvXqoKHE7fB54Ul/L4lK0xPdOD8RUa6ZQnHD8a+
3Dp1OO9YPCe38ioFkfjG1jze1Uzg7j4TuLvnBO4uHJIVatd3zGO7PfpxJ4tz
GUrg2l6fXM8CiU8uKC5twvpAHXRumcHn9bpM+OyD7wT+bf8y/BsP+HtlHzEX
xn5h3qP16MNOFOY8yHDv0S54odq910rQFe9TRze2uRWFsmefXj97Clwb4kql
yf00PDN6mYvv9Tvu5KigVgKfVr8Mn3YSkiqM+ZJs32A5g/3Hb0ModrK9oP+z
FIEHK1uGB4sB36B8wyOl2J4v0CFDG0cUWnigiNQ7Ap4nHMNu/cB6tZBleuzM
fRRiCmfDb90kcFmWy3BZAgTeSeUfvNOLHMVnvkOptLngBnfu4yh0rfv4s1NZ
BA8eF8GDd+X/ePD+8tod/4fXzoHzfNCY2lvoNJ8TC9K3QWM7f8bYnF0Evz93
mejTzGDk9aH10S3tqKefYXvRkAbBLypL8IvuIfhFLxLrcst4R2UhPIGl6G6i
M4wJ8Jl/YluJOhV/vhWZnoSIfuHhL4LpMI6+rmgz80ct7zhEI1/wllBKc4zX
7LWFDYEvf9kMRP3tO5dqAYMuq2zjrUww9WnWkA+i4XAmTDgENUBgWmS9zRFX
CNBcPYZEUxB1SXvz79/poDfJOPatjh8a642LyqzU0HivZX3AjjUljWoi/UMP
9f4XB95PZMRxYL07WfA6yAS7hVjkkSB2aVjY8xAfos5xk5YkxEH16eXrTlVJ
UOAxeWx1Iyeifpbp1G9/DE8/CEyVhiZAd9CCw5rHO9Ao95173/VkIahQLDa0
+RRQLxiGJShLoNp4+Z9d7KzgJJ/mce8HI3S/2nzp8JvtaHTD5spVtpqE3M4S
cuMn5CZH8IIqLeMFLVjGFxr+f3yhEdra1fOeD2GsPTvUVPELamPgGXdzO0/w
hToRfKGHCb7QmxC9iV1H8HI2jGsk/j7UvBe1bPkQw+lzHaLfwXy1M/ZHUsln
jczuondPLTnU3Dgg9M57NYdTF2FExnc388bLqLc47Y+guiFknekfTKfVT6oU
7B8lrEYvqZdtbXslIeviVtlwNXxfyoPqvLouoMLyDV+Qagh4H5i9/OoI9lML
TorrKSYopJzjeD3DHDgaNV6UHdwIwzM27lft6FBfdks+V/xDcE39erNpK/Zf
1pVmzys1UFXn3Rmts0/wvVZ5WckuAqOzPXEh1HjUJSDISg1G4J+e+ljpXDOM
PuFsUt47gz4LjXx8sXcdIbfLy+SZDdGOR1KCekJhnLpJu76SBTUe5486qZ8A
VtfcSMOTTvDBW3JuMdUAjT9mablm/2MZ/+rR/+NffR4+t5Ex7DGM9avnvV+U
QR87w86v6Y6DJ88+FKtM7oE+vZmqQes69H1f7v6gzCB4UqyrKRDzEfpnoo4b
vihEw/Rq1oEBVeAg3MC6Q+QBDCn++uZ8cQkN1K80l6VrBBdTOfYhORegHqiZ
Gvs5hupiTpyX4pgCN0aG4x3NFPiWd2G87L4f+mq7K23Iuh5MkngmPBbzoX7F
D6687b2Iyv3cjbkvgrAPHIR9uETYhxDwVXO5Ojx+D8Znwgckf/Chxs023dTj
XYTdOEbYjT7CbqyGF55RsQe6PsA3gykd5n1S6GtD6uTAqh0QWL7beA9XPoyH
79u+NvUDag7zNbXSzQOfuc5Ov6MqMLxKn77+SQrqp1bsXPkgjMDnPCHwOQ8I
fM4UmJD4JeONyPBx5AcHM9URjfU6ikpml4PTSemKOKkuGE3faB1lVIE+aV8x
tvzYD/67k96GlmP/2ySUJX96GhUNR9haiEiC8/5RtwoStj/3g4Jjh3+jjo1i
t+bLThG4nVUEbodC4HYSifU1xHocsR4HLg/ZzrA7lcKXLPdbhzJc0fcksdwy
9c3gfqQm94w4B1DbOveuPxqBCrc0eJMcR0CeVYhEqhiH3HGOgQ1Cqjjv9rPd
MPsNzommb5otL4PssaCnx7XXIuqwv8zdIA7QCvJro+dKhLefeIMDP+A8/fZS
oZx7OVytTmaxyzgFJV1SJ19ECyBqxZke14pz8HRVlP+P07Uw6JLhamwyiQYL
eQ8+4nIA19H2N7X+JKDelXz+ECbR2zuC1c53NMDweHamjssY1IwKZbiUxCGq
irj60o3b4Cs8+CuUE9/3OSX+KH1JRGnQ20y+cwLc9e57npq4iP1ONN+qjnco
smjkwM7NpyFAoOSGzTchGB1MXqPFWIe6zO7+NFY2gMAge9OcmRgcR8VWX75F
RZSmA31igr/AN2yjioz0DPbXFZrrj51HZObHN9d53Qa3KPOwe/oh2A7Iv5g9
dRKF090ND39dBeHi6wLHFHA8QEIPNmT2oPI/BduFn1pAiGnji+m79jiObb/G
FjOJKLOBrPKSrRBoWPTM91AN3j/ViGobj8iua7KEZCXAJ9S7rJLZl8aPdMlY
VxlF3BJOPeg+BS7w6b1xUu//4hZ5SV0UeuX0iRCH9RDlWFEhsQ7nL0IZRQxb
l1Bd6flL979vBrIF25PzRXeAWpqsvCrbBJVkrvQ1FxQG8mtdheY31jhO43bS
ZWxBOVq2Pwx7N0L4T69Xxytw3jG9mN4hYoRi9r5eZfK0Dkhf/KVrPjDhfW7p
7lJ2QOSxopTA0iYIYP7Ak/C8FcunIdRbEFCkqXKT7v458L5Y/L5vpz7e504m
4428KMyP//NNkxxwTq73u1MHOL5itxPUPoBCdlX6b3aNBwpfl1MypyRQ7a2O
mTDooqo1Wm3s3J+BErGNV/3rIlAb4oRF0T1UJLz+3E+hfUApqYkRscPvO+jX
mnY8DWW1hbtIRPYB5SEPL8shbLepgktPXMxQyo7tn3ayaQKZV9O+WYgLv9fm
X1MCYyhGxXCYp2Y1hG+lO/Mg7Ao+91NKn4qFULTs/s1RC1MQLFUv2sSD/cJv
tpZXQyIoSkm/6PAdX/CTemx33ohW13IQP6kxgMJDOVAmhQc8FA3V3/g10b7X
MHiL/TYKlR6uBYdBcEytPBt/LRC/7xU9Ga9ZRJIxpQtevwNirFfGqYp/h/Gv
Iw5fJL+hxsf+xeFdihArf+aP0qHLQI295rzGTB+VGfimhgTvhVjKRoNRPTag
foxW/HaxGxW4Ou+5+lgYYqNZymT/mOG89cmA4EEKyhy4pab+cT/EirPrvHuM
fz8ecuHISBtKdn/N0J7IATFSOUmTK3F8/tOil3n4Doo/07C6ONmImNd7tmxe
rwui9sxucaR/h/VWe31Q5n0U7X96OoW7AkJPHr2QgFZifTgvYei7Ed+LN/X2
unoQyO+V8+YH3s/vTr8kGycUYVMy7m0/BT46aN9upigsH7ajNbdXozBJgY8h
j/zA1VU0XiuVNt8xotKgQo9CTj8LPukUAQ7dpu+v0r7buOioyzDOhIJJ2/VO
al0g5vLm/pnLo2ilqcZ9x/v85UV/wXMzouwPOlHE+gySGQ2T3HtsgPrqsZ0A
51dUwpObobzABDHZAsIPOvC9myK5r5gSRpQnlxLRzAeIlrQUKNfEv59uGPv6
cApFr2Ov9/F2gJS3IlLNW7E+w2ehDjcSevXuNWvC1yuQQuZwPpiejfM+q6p+
fn6US5LPJ/tJQexifOf7I1hPJsNrZxznEKVUuEJdaRNQniHB21Ov8D6pG5nv
PUDR6up+HW5fIKqKfT0DuwGNh8e/leUYIh+4G3EgPg7SHKTia4Q3AbXMNHpw
/Q9UTHFTXun2BtJO7HWbGcd2qWNX7OaD61CuYO92/897IDW+ZJ9ScxBt3vDG
M/XnKOMNXbil0TTEn+EbVLtCj889hLOnzRLF0KcEFBnOQUzF0wflnbS+xqqf
g9VsKJrSLZY7xA3R2/ffNWU4hPcj5F4dI4PINrJdu/nbIXyxTsH3SxUNhx/+
dM1jFDnFUXLekwkyxBJrWg94AbVCItRAdRwVxUoaBN14BOkfWrLLX/YAtT0w
dY+VEsqpCaFsP+gJ6buzE4IpOI/rE3+QI/wQZXjcPOvC7ANpXAeHUn82YH0u
qrqs/RbrLVWGZeQbJDxXGbh/qw/ng56/lhTyUAx6KxoykgNx9MpCLNuV8Dlu
Fgo2tEXRg0Eh5ccbgKIqqlC2FI/P8brMjLwQIlfUNw+Mh0LUjZy3wh/T8P7P
+H2/9BhFeb1lutQ0DaFn51SSo89jff6oHabiiSKqlMr/vCiFTNM1HhO3ad+/
u8zGsOs9KqwznvhCVwGZYtVFbk9xHt3W7BTiGIFyHi0lFqc+h4zIimClB/i+
9/5I9BGXRhmayq3ygtOQbnt18+MgWt/q9sAFEEbJQaJNhvydkDpjxBxeeBDn
xZfMXnf9Rgl6q7c85OKCxIr5OzlFtO/UPGb9ZluHYqzFfnldHIR4ybBC5UAr
rFfbzKWujCMK/yH3ILk4iHFjDBi5RofP0c434+ZdFL3m7XuLW6eA3Fr1cmKb
Iz5HN/kLJ7HdXleT89TXEsLtPhrYK2D7OXd0UfzsBRSp6Ze/+Ws7BL+SWJd/
GOH7+6K7rnUbCq+ukL/NqgiZc4UqLpWl2P50T3Ie7Uc5B/1TUqhbIdN9sGzt
9QWg9oSwbXrjjjIkyRuovp2Q0bu1Yt8JfL8GltblCIqi5BjtXaORjJB+XiOf
d2wKqEOzSx9EV6AEj4L3fduuQurlukX1t3ifo1dvCD7eieJujHxuC31FzJus
XDZvsg4STNZn/+wcwfq8zffRhZ2IcufEjwr+axCbb3mvtAjbh6mI8yt8uVC0
/Du6W8wiEP1bybPqTTPWh6o3dDH4fl27tvk6hzVEZti06pXuxPoQYG2iZYki
qbkJDi/2QkhdhjYzF9bP36t9HbTEUMTNEzNCivEQeC/8o/TcYWz/BXwFBp+i
MKorRWdTGPhO5KTznGgEqrFb8e2+76h6sXJdzOdR8Lf6QZf7awjLR+O2mQkD
yr/Yu/eMT+nfOQirrcQcRDwxByGxbE6hg5hToCPmFAyWzSnIEbh9LQK3L/wX
t885RuA8mwicpziB8/xA4LfnCPy2LIHfdgT3cIosqe8qUL+u9qq9UIpybfob
o1dcJ/oy7ERfhuf/+jL/y3e+zv/Nd2wniHzHHdzzC4NuV3jT+KAWfjTToRzD
EFtyxyXwtLNyipTmBuoN/uOz8RGoJqafy0U47G+f5eqhZX2WPjC9ci3Vkkrj
1fwlJHkjAgU9r4x4OEMPmry3wyvPYX+xZFgs42KEAlbeYdwSlwJyv1XXtclO
0nDFv+1VTiA/+zGS9ioJEH1jwyQrzInXq+6JyYch39ywrJzn7sBpbXd+P30t
Xv+w7ZfHKuR7/eIRPjdT4lxY/jkXP9W9RaVlx4Dqy3WNKt6JKj47VQpbJ4H/
C487hgdoc2268Rtm6lDewX12Jr87wT9eRoHnxBHad+uGyIuXUFph5Kp7I9Pg
N3/otugiXp/xXmCNT0dxh/8cs5LRIvospGV9Fjkw17hXrYNoPBhdS2/NWlBQ
B/OBtJFo0Ct/MKfwkqY/l3zNN2xFAVFaS2dvH4brB8X1D0bQeG+8LCyP0SP/
g4ay4QsdIOd99USc4Q5a36G2oqIH+Snl3dxSYghHyl7a+IbS+lNlnntMQpFv
I/MBh62mRJ+Fe1mfhQKkHa2pMyXu2B9FHnsd9xiVZCkwvbjZC6QSngMvt4sC
ddh8KWjnO5T145TswUh9IPmU7ZqrXML2yuO1kIQVSjIIYn/XMwrBp9Z9Up8o
pc15GbV130axl4ulDh3kI/ovP5f1X/LAwpdf5oJMP14fkbFOskZB9wcuVrpK
w70gNkeGQ6F4/2cnk+MEUcCrM+5M8t/gVoLT4L0Uadp3mVvOtJYg/+e3FNJy
WeDKpVUf3lGf4nXyZz6XaOSXM2GGxUb0X7iW8aWkQYTs20KLPxuBOjb3S/iu
HEonuw+8LvKH8KA9UffdR/F7/X7EVcODEsqsxfTij0JoXXpvx9gCLX4WOruv
DMWMvHT+8/gV0ZdJXtaXuQwWenqGZXo8tHr7ZWWRQhTEQk72qWMEIybvX888
afww5zqu/45EARmbqKtNNEB7rPHT4UljvP6YGV0rQv4plrapbvZEX6Z5WV/m
B5DXXHE4G037rlnd0kKhMorvdmlwtYmDiO8TyjlnafbQOHXpN4738vy5JEXT
iH4N17J+TS6YJ59983oTrR+0tsaHMocC8wP44g/ng5F0B6+8MbYbS/Kans2n
UQCJ2Vy/Qobo1wQs69cUA1mzXjT3K37urwbdCAkVFBM018t7+CY8zGXnc/+A
/fISd0d9110U+MC3htU4bBlf6yeCr9WU4GtVXcbXakPwte5dxtdaSvC1Gi/j
a40h+Fqv/wdfq+c/fK1/42TXf3gt/vK4Kv4Hj2v1f/C4hv8Hj2vLf/C4yvx/
eFzTCR7XIYLHtY3gcd1B8Lg2Ezyurf/B45rxL4/rBftbP0ZxnPOxfUFqtBbl
+wqqnvgzCIm8T3duA+yPBujlm03PoaxbXJvcqwohIfZzUGzBBJZzMpuhvz5K
vdn9c4rVHOI/RKnQWbzG+UjclafJx1Gi9O9Vcjh/iCO/2KHfJkfro6mo9txG
cVYHvl4+3gmxzGTPzaI4n5qsIVUwSmB5bm9lfPuF6Aep/MNfEXbeP5ijBa/P
SfPXF06gKOWr2yyHtCHoU9n+D0mz2I/7Z5BEeFHE3e8N0yJ04AfPj/+WpOHK
op/NSUmisEyLodl+OfAWrDrHy4fv48L976W9fSh0t7V2Hd8tcPl0TX/xN47D
F1mWOCJrEamS5eoV8UF4Fnbeui2N1kezHXCPF0LBvmZS12Uj/6Mf1A9JyeF3
JcVwnjJgbNb7LABlhvbSTdR7QBLbJLvUJicsN+mLK4O4UUqorDCvtAgk8hSs
MtfH9nNsOmOfkgJKGGrSHJaegfj3W/TyHmF7O/HquadYCYpTZ+OuuOsDcTt4
T4q04Ps7ubH/4GszFGPbM6nRakH0iayX9YkkgFT+eG94CL6nv3nP5Hw8giK+
9A84RgAE+P2JYRK7jeVzXN1bIRyFS4R0XqVuAZ/3GrdFbuK8Y4HnmP6dAhSa
W3tnrvcleKyhDykwofXRqvZY6w2jEPVrhx5ufwbOVhfS92tvx/I5U/ErUQ6R
BCkJIoszRJ9oz7I+UQIk6wv5j7dew34ki1FCxRQlLz1dpUVJhiSVS7N7VPF7
jR1d4f0rHSVQQLejzhcSRg049cNX4fs7WzMVN4DiZM0ucyvGQrwIn16nKLbD
P9VqDKrmUYxTumjTCymif2SwrH/EDkHKfds42C5hObTe5qyxQ+HZKvos3CfA
z7K7wnGXJZZDpUrIUy4Udozr1dc9U+C9k1K104tWh7Htdw34gEIGK/lUsm+A
68XXFaUeevh91xz1OqeB/ddbHa2VWUT/qHdZ/ygGkp+FTnHIWuC414j6iZsb
JRga++RNGEIS3bXEsIfYHlIPqF33EkVxEq5sdrK1kLDvcOkrNxofaWSsduMv
FOM1MR1cy0n0lSSW9ZW2QQDnEz6lXSfx/o1UssLeobD86/15XZ3gE1Dd3joe
ScM7XXnDvAuF3uUSXHyWAx6bL4h8TfSn8XEpGxkCCjmhsMZ6eJHoKzUv6yvJ
QDKzjs/LXzhuH9feGH9wBMWJ/NLqXDwIiXsS5vsbPLB+9uRwF5WjmBDxfubs
XKLfVPUP/4DfulOpWkE0PvBBd5Xzbii0v0hns6AJeLVeYogMNMT78RCJbz6H
Qoq1/firOol+k+0/PABJmxxihK/gOGeCb1uVzBUUE7+t4IenAtGHuv7v3L3M
e8qaQZqdlGvhkghHoeJrF8KjU4i8g/WfOfe/c4IpxJyg4f/mBF1XbSfm6W4t
m6fbCW6nD4aeM8bxxnz/z7IWARTRszrqyUgqMUdmvWyOTAx8Hm29W6JE44+S
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
Cjo=
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->Small,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{40, 80}, {0.001, 1}, {0., 48.28962515594332}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.425682647390625*^9, 3.426080176140625*^9, 
  3.426087938703125*^9, 3.42617113609375*^9, 3.4555582005704527`*^9, 
  3.4675860668606997`*^9, 3.472400349076324*^9, 3.473165539457611*^9},
 CellLabel->"Out[82]="]
}, Open  ]],

Cell["\<\
Note how sensitivity to volatility increases near the strike price and with \
increasing time. This follows from the fact that high volatility has more \
impact over longer time periods and for options that are in the money \
(because of the larger delta and gamma of in-the-money options).\
\>", "Text",
 CellChangeTimes->{{3.425682792984375*^9, 3.42568296228125*^9}, {
  3.425683024953125*^9, 3.42568309696875*^9}, {3.473429637177868*^9, 
  3.473429638433776*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"vegaEuroCall", "[", 
    RowBox[{"s1", ",", "60", ",", "0.29", ",", "t1", ",", "0.04"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", "20", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t1", ",", "0.01", ",", "0.5"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42568266728125*^9, 3.425682669203125*^9}, {
  3.425682719203125*^9, 3.42568274765625*^9}, {3.455558209083146*^9, 
  3.455558221858383*^9}},
 CellLabel->"In[83]:="],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
LrrueK4f0zsFpMZbu+D5d8w/JFeuay7z/hSW866OwovgxVh++rwty9aZb+eb
m4pYfuAO+bqDHtsMsfzALU2DWtM37MXyAzdbRZ7TOFaP93HRnORuuZocEuWP
964An735WHSpDHNPHeRjEfKlWfQ1864TlvPhuZxvd1/jOVYsZ7e6xiZ5YawX
7B+z3balb8crcawXcIfHvY81Bo9ivYBbar9Z9eWwONYLuGnENpER3s1YL5qT
/OUq2Ste9GK9gEuY3Gk2/mOL5yKBC6S62u9Zsh3v06A5MShytGDPhjtYX/hd
65tu2rxhh7G+WP7W5x5GHCFYX/AzbQ3irl3YJ4z1Be6QHson0jeC9QVuubRH
9foDdTz3DX7p94/TlfnmjmF9aU7O+tk6Wz/7FtYXuPSGwP0Lsh5jfYGLNNWc
dUvvw/oCZ68ZO3QwQg/v/YDf/SjQeH7LakOsL5TT/gFrSv1YIdaX8hv3smxX
/hiTUlmO9QXucHfVD80FN7C+wC2n1If26XDg96U5Yfwkr7nf0B/7HfCC2pAf
FmsCUR/gf2Xy7t1nnUN9aE6KBXo4pi9j3vsDLqs01Ddd7S/qA3zObk5Xx7sy
qA9wHg/3wpwfLqgP/O5Xy/AA2cXM/R7AX33vW5QrbYH9CHi8c6zh3QhtbFfA
3W5Kz/70Nw91Bn226jes6n+0FnWm98WxbBcS58s9wlBn4A4xn3Z95h9GnYFb
mO1QD/19EnWmOeF3ytO/J6UVdQZekzrElzvPBHWG/Xjc806dDtY6jDoDl4gz
chXeEYw6A5drf3F3R5Ua6gxcanW34NN2bdQZOL/fhwGLjFzUGcozbKLwY6nG
HdQZeNPUzcGnJjH3jQB/nPdQpDGVuVcT+GUt3pzuFOZdReAWwyd3sbUuY95B
o/bdsWxFFdd32MROeLfLGN/twvfU6PQO18P2ab7XnvD+lzG+/4XvqdHptyT+
mffNadWE97+M6fe/+pl31qj0xPWWCEvOVkvmnTWaf2zMmzSFS3fCu2DG9Ltg
J5n31+j9hFMdy55rFpIT3gszpt8LC2HeZYP9h0pZczoT0ye8I2ZMvyNWwbzX
Rqef7+UsO/uF4oT3xYzp/Yq/mHfc6PQygn9/+sTJTnh3zJh+d6yBed+NTi8k
v0yq/fPVCe+RGdPvkS1h3n2j07P98l/r3s834Z0yY/qdsiTmPThaz04u/gPz
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
9HfUwn66xfNAi4zWEN4bD/103aH7HidGdbCc0B/T5zc5VatI4H2wwG9P29Fz
y8efeUeS7kcWe9ocZRNWMe9I0jxfb/2Hb4nhE96RNKbfkVSe8I6kMf2OZA9+
r3/8LqmxCe9IGtPvSN5i3pGk+++ltEh5vhudzDuSNH+nkOGe3qyP+QO/98q7
r+e8H/OOJN1/46QNF71c9Im2z9nYfzt2eOzmndtD968bOK9o5BI59kzXCu/3
Bq4ttYpf/FvohHdm6X5N8uPvQv73Jd/UjgbfnvD+LPT3z8z7s3Q/3Rvbuuaz
30vm/VmaF2TmzrGVG2Ten6X779Fky+HlqwKY92dpXia3dXnKWi/m/Vm6X5+X
uhog9XM68/4szauVggdPndKk+3sPcJb9XSvzr09bmXcnae6wKUq16e8+2r+1
wzhaYYGauvCuFeTGhFD9sQy0J+SSfm6rK9/P0f1dnuG/pV+f/vuF7u+eWB7q
XI8ubee5kXdsYb+4dEc13rcM9qQoRT9rRQdz/zD0o/Z01x65AnnmnUe6PbQt
9Fp95u9d7KeQPlt00tgmh5PMu4p0+89ZwarVli9n3lWk+bX5jz/LdExn3lWk
2+Hj3ILa7eybaM6a0M4j6PG3DtNnHslp32o2QtuxU/gdfwiltOy7D364Ds7/
cJad8vumVMu870nrM1bYuCKoaRjnYUCf07PvRsq8f4RxLtjP1QMle5obfHBe
Bf2l13eu7zn9Dt9nAX5ih/vh09ZbMH+wk4U9ZWMRictwHgZ4vNpCVlnDeZwv
Ant4xmBSvEB2Lu0XCSLf2BX2t9ZhI+0PuCM/cDlggdKUUJzPAR5qeHOmrM0d
/F7wHYM8Cy27I+zxu4DdOzLdf38fyxfntf6Ni1fh/M+/8aM2pofvlRPgm/np
ZCK9DzAWOXVephvTQ3t7QXi+czL/Qs+HvEROva/nRPPKCbwG7Rvwx1IjEWeH
FmP+YGeqeNV0Xr07TsetuH5BlK51LtucOg3n3+A79v+8zpXuTND+fAzyZ5Z3
jJJ/euL3gnFTUl3fPlPcnlxfKpf4a0E56h9+4YJMgl41adYeupqrmwN5gMaK
3OqUvTjfhf7t5JcLV4nE0/V9jd9l/B00V22al/3L94fR/cIfOfU+2maaB07g
8bT/dhE59T7afPTr/uWTaN1GsV9f8BCTCO44R2p/yRz8+WIr8tvsXc7uMifo
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
4PQiof80csb/AE61bR0=
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
s2CN1t2X9049X2odpt4TvLWtMXLLchpi5p5TvyewND81ZJ6fMmzzL7FG/XHP
oaJDCf1Le4We5WeEzK2F1YN7SNFrH/Od4xm3j7n6nNZ11o1zXf//Gtf3/T0v
/LP1MWtJxjX1rBEvm9f/wMhpK/f3hI50XUF+2fiONZmrT9ZtxFl8tj0jXqMu
qe9d77XbA0bdwfqD9WR8mXVN9Us9637hLTGPule5Z0JWFV+d9fng5gImVntG
rKe9LX7nNf42nxLXeG21J8XYGT5arddas8AOmrzPfOQqgQ1JPGJv8qkht/z2
2F/32X6L/I5xnPP5jJBb1m++K84n1ybngvukI+Ncv+a0sEPt0XpD5fqELljH
yVvGvY1p6gmxF/Zg9J4C80T67Y8Mv27+97DY5/zT4AG9bmXvi7rDfE0ee1Tg
Q3G+PWJvnbeeGrGYe1jUB3C+nj3mWhF7WI+P457vMaf8Y7WoYTnOL4kYtPcl
IOesTlqLB+vrC2K9BTxOq46aBIcW9Rk+kr4QxzzXr7skzhd1Tr6j3ehTHxHP
62+ysfzJI3eCHfQ6shwZzLLHxmeuL4z5vH99SeBSYe+rsfnqMc5vC9km87bW
Ft4fmGOvkDrZ44SPBt6Ynyv4E/sxKntX9ANw9Gz8Bb/sfTX2yZhfXY8x9y8X
TD2fWl8TeiXGWItL+oZnBW8v+M+JZ8/cW15gjq/r6ObhW8Wyzu09bmxyXXBH
97eIl/j99snBgbGJBRwsPww7aHCsau+EHB/brGKgeAw3WuRs9i2wRwvrnfB/
CTkvxm72PBwXupfhkQ3/ne8b9zeWsD/EOlSGa5VPhN0388wfD/zLxvUPinGC
W8pn+5pvDmwT43rt4Nox3iF8eJI3rxz7YA6u905sPsbuyYnhr+yHMj5N20y9
3iR+i+O9J+qEmMfaaPV6bMi6UlaHrYf+KrhBsg64Rfjt/tt1wld4XDyXkyTO
23+lz3HcfdDVcV9x0vpO2mHEkqeEThb93kvjuDUM8V7c7/n014bcMuvIxrsr
he3kzYasNx/4+diBjXcEL+mY/LMxz8PHGrYNf2UM6/XWj5wj7RhYo871XP5B
8dzWoK2R9Xo0+pCRezosrsnIb1kr9CRpH+Y51gzdsrcoPT30Ph8T+G9+q54W
mCl2qsPmJu1RynDkiViifij0zd/WD4559o//e9/a/nFfaw72sPV1fDpsp5q7
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
7ck1vjPXZZ5f3+A5/H+Tc9g/yLjYo2YsbZ+dMYy1fzkaa7PmZf9ov5d5XHVk
3eAm86tiT8z59pqKOVbrD+ZJVg+fp+/rve+bhF1ov9aV5nNCtwvysRe92Fcz
egTsbfL9F+st9p73euqJQ/fsHXpN6Jh9DtaO7OHtPegnxxoKcpvAl2I9DD22
J8D1GHdYl7R2U8y3y0mNVe3LVdfwqfbwi2/inPW4+d1hD1VsYV7rpD1PIkfA
lzXfoXpV+LIGlvuuS8dYdcE8E2tq2ITvrXWs8B2DpwV2NevfK4ad2vv+5OG/
8DO+26YtN3vt9x3+zveNDh38UM59WPCZbG3N93Swx8Ycvp/gfjY4g+8Y+IwN
HfDdA/ek2WvyvMGvfNfiGcGjGrjiO2zyqMaz+m6bHDVbY8SeijVC69rydJ9z
m4iDqnxXfi3eem97QO4f2OK+2ave9CvWz+4XfMO4Jq0dv+05OntX+U0Dqxb5
CHy4gW2+hybPbPbZ4AvkwPaTyVvsJ2ty9AOC75nL6/3X+iPiA3N5xvvms+Ra
xtc9p4f92Hvc5OxvCv1v4s0a47es0XcA+vOaG3Ff7KMzBrRuxvlmzPnE8K32
htmbkuEU1qp7z5kxsjpnnGicY+0AXbT3tT0kcF6/Y0+yvKa5hk2Dz+gL7NOz
P8v3LZp9bY8KfLYPoPfD+Y6DNVJrI/J/8z1rDx2wr3DjwSF9n+SI4LrN2rI+
VL6N/HwfT97e7G8zfwwfbOid74eIFc1+nyODg4ndYnjvBWWNvvMph2/u617B
l/ImEbvmTYOn2JtmH6N9Tca7Yor94fZBVdbX1gp9so7T7K3T78P/m+8FnRI8
0D6Q/nw8azNnbG+zeIINmWPqeZ49I09nbGUO3zpZVn+wS3vCzC00bNL+M/td
e01ZDnhR5ODMf9h/ak3QupL1pWydAj6a3zrwZ6WIQ/J2kcvL7wz77u+jWfc0
Vy/HWxFxWFo5ML/n3PaNuKv3JBvPyZ+tqf1+4Dzn7OPJzmc+6vSIxzpfPyn4
e/MdEvugON7MzZuj02/6jt0a4Yv1rb1+bk7X2uW3QxbNHLF1FmL/5vtXxhPq
8yHhSxv2mq0NgSHZPg/fB90jxr5r5juYVT94ROQnM1hvztParWPf+7N3x/cP
fOdTPmAexTyYdZJmr91NcVy+IJc0r2K+xdqKdRNrNuZcek1B+0DnrM2ZV+nv
MG4TvNH8v7nDZj1DPiB/FldZh32E5hz6Wu8XPEeOaV2hx/LmheawU2s01oaV
b5M3+O6CcaB9LdeG/vTeD/dbzuY7n+YczIFYK1TW1uDEvUcNjuv7Zto0Prz3
mhp32N9inpm1Z56t6bfMI8ndj4vcgDWcpj7ZJ2WPsTVPYxpssYkF5nDMV1j7
vjv4mH6891EYm9p/Zb8g19sLIceWa5cbAh+MK+2LUH+Np62v9bVcEfjU31PW
pq3V2YfCnI09tf/P2M2YIJmnsg5pv+yPQy+Njaw19hyjNdc/hQ7b/2C/gpyt
++V7x5p8b8J+HXv4G/tmj6a5XGvo1rascTXfE5M3EsM2+4as9ZnzN+e2Iuyu
oSv2MhpLWjfvtUf5tLl5310g7jC/ba2vmTf+SfiKctX/ADjqxik=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwtm3n8h9WUx5+7h8ianURChsbWWDJFISkqalSoLImylbVUSokaZEv2spVB
jaayFVlqrI1lRAwmZKYsRWVrmPf7nueP7+v37M9z7z3ncz7nc85v1+fvd5fn
LcuSl6V8kb91WfpDlyV9nO2T2X4IxxP7j+a3FdtvWJaxH5e/mvP/yOVf49gd
2T+Y/U3Z/yTnn87+Mexvw/2/53cl2//Bsb9x7oPsP5BnfYhjf16W9r/c8ym2
N+M5d+L8rfntzbWHcmxLzl3ANS9g++849nLObcx1P+P+J7B/K84/n+fx/flG
bD+L82fw90yu9zp+4+b87Vy/I7+t2X4T5z/B+Tvwl+1xMb+9uP8VHLsvxz7H
NYVrH8yPZ5Y38vx7s/0+tnnueC7fwxgXxlV+y/6H+fsO9m/INXx3+QXH9uB5
L+LYXXjeudzPHOWN2ObecRG/fdg/ivP/wDH2K/OXeM5yPff/iec/m23nlHEN
7/sM+w/i3CbsP5nnPYdzG3CcdRgXcvxfOb8/xwbHePbYJebaOW87ceyzbLt2
fM/Yk/0b8z7GtdySY+9i/6lsP417Gtv8rWfHXJTbc/3u7DPPieuWx3PsPvFd
8/t2jjmsj+K8a3w6x37A/sdj7IXnjyfy9985fz6/Ezl3E37/wnn+Fr59fITx
3J1zJ3CMde3MfcUW0uvYdzx3i2fOZ9+O/YPjmdlvvnm8a+zGPnO/3Iz9j7KN
TaTt+N0y3lGZq/TaeH75eayJtlXuEGvVte+Hs897hs/bl2cczTUcq18JH9AX
CnMzPsacPidsXZsfN+X8w7j/jLimacc/Yn9bfpwrX4g5zC/k/CYxt+Vyzvn9
t4rzbZ9Yi+x6YnNtHZtjHDfg59q8KtawMp7m95zHvYdx7p/5yzdm1iq5FtrL
pzmPj5U7c/6f+O3KNoeWb3Eva9Z43nIL7tFWsNvBe/KRYWP1y/y0vwM5hp3U
A7gePFhYv/JKrn0949U3WLflr5z7NftXsI0fZfbHB7gOf06sccKHy//xww7T
PbgGmyzMfXlffGvi/eV/eMbL1/dx72CO+t9zju2q/Yknj+Uc67acxbWsW3sZ
2/hSfj/nGGM5K65PL2H7Ou7HdhPnKvYyzg2/1X8TOFJ+x/FHss170y/ZZp3G
DjwL21jAhca9/UHhj/rlYCzjMZy/jPP4WcP+B1iSHTPz3FiTztgSNlPAssH6
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
2kOtxmlvgph1TviQGkizR14N1p5Z+3fsWfZ/DW4dOZm5WXc98IPC8+wX7B+O
9XGd7D/Up/QtawT2o6ixW/MXc6c+oD/BxewJt7+mXxf4bkwbclg19WMixzHX
MSc0N7RfpVuTVrs6ceVnD46Yauwte0Ssbdb2mTP/J8N+MDmL81n2Cy5jTdW+
XGO0tdZZf+I+azzdeKgWpeZs7NZe1O+OCY4h12hqba6x2pN6j7WLU1Y+yJj9
nwFzqqlPqTmrBZpTW8t1zdUKzcldG3tO5NP3i/zO+tbkw/JVtSqube8K7mUP
sf1Z8//fsFF7IGY/Mn4z/+fJepH/wwE2VHzXerW1czUVtRU17/al4G/T560F
fj34mnV9Na920bqGp4S92ltqj8DsmTGmWQ8Wn+FV8//lrJ+rrYpZPmvriHnV
MT80YqE9mlV+LLa+Z+VrB8WcOLfNeM07baO1/u7/vFU5kv0Xn1jzPfmA2gTP
U/oR79Sg1KKmHn155NiNGNieH9+qZtNPXp/nelqPNf7Kz/hue4Dq+bG/2ONh
PeCd6/efFNd0+wX0pa8EJovNczzycWuZG8SYHJucVm5rD+z8/6+bBZ44h86l
PUTWT/w+v2XihxqRWpz79hpaf/D/AeVYYtu5q/3L7+09NgZvGDHT/8nqv4r7
rV3YY2O92Zq2tW01WOvXzd5+Jtd+GHs5rZlYOzEGqs/a4zTzRXtbjQf4jbUd
e5rsH6j4xfx/gh58ufq/Bo+JGG+snz3Dzw68ExtmPWuveGd/VvBTa8f2sHT7
seAX+YaR75g/G4/tXbNeZN1o9rPqn4zT/syuPmw/3E0iPzFH8l6f0e3/flFg
w8wHxTb56K0Dkzp2p15kb+1i7LT/5H2rHvDk+F57muf/W1g7MD/YM7btMbE3
qWs7j4o5cC5m/uH41SaMz8YvNT3ioFqbNZMFP1MzUDvo167284fgU9M/nxLP
7HIGtRY1U/ut1bTUO+zB8f8fzEmtH10fOZq1Tjnm/J8Qe89/G+uh1mmPoHq6
PdTz/xEfE/mR/RT2Vs3xvD7woMgB1L5PCM1BbivHtZZjj/C0J/zX+q36lXNr
DaLLL5g7a4NqJtZ72v6BVfYsij/ui0VqVuKXeno2p2d+unNurvK2ODb19VfH
u4xHnfvsd7dWZA1v5ofW282B1P70SWuDD45j6vfGUGNp+W7Ej/n/lHLeLv/6
f+EFc4A=
         "]], Polygon3DBox[CompressedData["
1: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
f9j/ARTtBxQ=
         "]], 
        Polygon3DBox[{{1277, 1276, 1794, 1123, 1124, 1795}, {1699, 784, 615, 
         614, 964, 1493}}]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0r1LV1Ecx/HvOfdeNcsHiKCpUJKiUAiXhCJ7gNSCoNGIyGzowVwcbHDW
pbWW1tzaqq2otPABDExLe24JdPA/EHz9avjyfn8OnHvO+X7vldGhtvsRkdQT
mP3v6ZVqiiifyq34DA/iS+zCN3gKF/ASruNV3FCb/E5ElfEB+k5M4X58jIdw
GrvxBZ5F51bbzjyhFuVP+E5diChqd1vhk7z2zVXewwv+mffhF7nENfxprZ+7
U/GLD6glXln7GpGPyhflOvkb1uN3bMAfuAt9o2hE+4vd+BvtTafVR/kPzihv
r67Jy3gZrVW9+ByPo/7VPXTmGf6It9szwb2l2uLH+DjXs3QYxbjNx/TxLx/k
5lN6X7hzOYcn8TV2onPigH3enfapebkF36rzzh2Vm3EEzSHfwz1odvku97ZS
Tu4Y3lu853u5HpTumY/I52S9Kc0yd8jmlT7wW9b1LjkvD3P9TOacb8a/h+Qb
aCb5OppVrvXJ/Ao9T721f20HfWBGcA==
       "]]}, {
      Line3DBox[{1189, 1490, 780, 1188, 1801, 1374, 1190, 1802, 1375, 1191, 
       1803, 1376, 1192, 1772, 1804, 1491, 1552, 1377, 1551, 1786, 1972, 1574,
        1539, 1378, 1573, 1971, 1493, 1699, 1961, 1609, 1494, 1696, 1697, 
       2003, 1379, 1666, 1454, 1611, 1797, 1983, 1380, 1553, 1455, 1554, 1984,
        1613, 1381, 1612, 1789, 1805, 1629, 1382, 1193, 1798, 1806, 1687, 
       1383, 1194, 1807, 1384, 1195, 1962, 1495, 1385, 1496}], 
      Line3DBox[{1197, 1700, 1875, 1196, 1701, 1876, 1198, 1808, 1386, 1199, 
       1497, 1498, 1387, 1575, 401, 1809, 1499, 351, 1555, 1968, 1492, 1686, 
       1388, 1200, 1810, 1702, 1877, 1201, 1695, 1703, 2002, 1698, 1610, 1811,
        1389, 1628, 1456, 1615, 1996, 562, 1556, 402, 1812, 1500, 473, 1616, 
       1790, 1813, 1631, 1390, 1202, 1999, 1688, 1689, 1391, 1203, 1814, 1392,
        1204}], 
      Line3DBox[{1206, 1704, 1878, 1205, 1705, 1879, 1207, 797, 1208, 1457, 
       1501, 1558, 1559, 1557, 1576, 1973, 1458, 1502, 1393, 1668, 1995, 1667,
        1394, 1209, 1815, 1706, 1880, 1210, 1707, 1881, 1211, 1708, 1882, 
       1212, 1614, 1816, 1395, 1630, 1773, 1817, 1617, 1669, 1670, 1560, 1577,
        1974, 1459, 1503, 1620, 1621, 1619, 1986, 1618, 1632, 1396, 1213, 
       2000, 1690, 1691, 1397, 1214}], 
      Line3DBox[{1216, 1709, 1883, 1215, 1710, 1884, 1217, 502, 1104, 503, 
       237, 356, 1003, 238, 1218, 1818, 1398, 1219, 1819, 1711, 1885, 1220, 
       1712, 1886, 1221, 1713, 1887, 1222, 1714, 1888, 1223, 1985, 474, 505, 
       1105, 239, 358, 1004, 240, 480, 1082, 479, 1224}], 
      Line3DBox[{1226, 1715, 1889, 1225, 1716, 1890, 1227, 1506, 1891, 1779, 
       1228, 1608, 1634, 1460, 1633, 1461, 1578, 1229, 1963, 1504, 1540, 1505,
        1230, 1820, 1399, 1231, 1821, 1717, 1892, 1232, 1718, 1893, 1233, 
       1719, 1894, 1234, 1720, 1895, 1235, 1793, 1896, 1635, 1236, 1636, 1958,
        1462, 1542, 1463, 1237, 1787, 1959, 1464, 1561, 1465, 1238, 1989, 
       1638, 1466, 1637, 1467, 1239}], 
      Line3DBox[{1241, 1721, 1897, 1240, 1722, 1898, 1242, 1468, 1507, 1899, 
       1580, 1579, 1243, 1581, 1582, 1508, 1641, 1640, 1244, 1682, 1683, 1998,
        1681, 1639, 1245, 823, 1246, 1822, 1723, 1900, 1247, 1724, 1901, 1248,
        1725, 1902, 1249, 1726, 1903, 1250, 1727, 1904, 1251, 1791, 1987, 
       1622, 1672, 1671, 1252, 1990, 1642, 1643, 1509, 1469, 1253, 1975, 1583,
        1584, 1562, 1470, 1254}], 
      Line3DBox[{1258, 1823, 1400, 1256, 1824, 1401, 1260, 1472, 1512, 1784, 
       1964, 1402, 1563, 1588, 1589, 1513, 1403, 1263, 1825, 1404, 1265, 1826,
        1405, 1267, 1827, 1828, 1406, 1269, 1829, 1407, 1271, 1830, 1408, 
       1273, 1831, 1409, 1275, 1832, 1410, 1277, 1795, 1833, 1411, 1645, 1774,
        1834, 1623, 1673, 1412, 1564, 1775, 1835, 1515, 1546, 1413, 1514}], 
      Line3DBox[{1280, 1475, 1544, 1591, 1590, 1977, 1279, 1474, 1543, 1646, 
       1967, 1796, 1278, 1644, 1914, 1794, 1276, 1913, 1735, 1274, 1912, 1734,
        1272, 1911, 1733, 1270, 1910, 1732, 1268, 1909, 834, 1266, 1908, 1731,
        1264, 1907, 1730, 1262, 1473, 1511, 1587, 1586, 1261, 1585, 1976, 
       1788, 1510, 1471, 1259, 1906, 1729, 1255, 1905, 1728, 1257}], 
      Line3DBox[{1282, 1736, 1915, 1281, 1647, 1836, 1414, 1648, 1649, 1650, 
       1516, 1969, 1566, 1415, 1565, 1592, 1593, 1517, 1416, 1283, 1837, 1417,
        1284, 1838, 1418, 1285, 1839, 1737, 1916, 1286, 1840, 1419, 1287, 
       1841, 1420, 1288, 1842, 1421, 1289, 1843, 1422, 1290, 1844, 1423, 1291,
        1792, 1845, 1424, 1676, 1997, 1476, 1545, 1547, 1425, 1518}], 
      Line3DBox[{1293, 1738, 1917, 1292, 1651, 1660, 1739, 1991, 1652, 1653, 
       1477, 1519, 1970, 1568, 1569, 1567, 1478, 1541, 1426, 1294, 1846, 1427,
        1295, 1847, 1428, 1296, 1848, 1740, 1918, 1297, 1741, 1919, 1298, 
       1849, 1429, 1299, 1850, 1430, 1300, 1851, 1431, 1301, 1852, 1432, 1302,
        1992, 1654, 1433, 1655, 1993, 1479, 1625, 1674, 1675, 1570}], 
      Line3DBox[{1304, 1742, 1920, 1303, 1521, 1522, 1743, 1965, 1594, 1595, 
       1480, 1524, 1785, 1960, 1572, 1571, 1520, 1678, 1434, 1305, 1853, 1435,
        1306, 1854, 1436, 1307, 1855, 1744, 1921, 1308, 1745, 1922, 1309, 
       1746, 1923, 1310, 1856, 1437, 1311, 1857, 1438, 1312, 1858, 1439, 1313,
        1859, 1440, 1314, 1988, 1624, 1441, 1677}], 
      Line3DBox[{1316, 1747, 1924, 1315, 1481, 1523, 1482, 1978, 1596, 1317, 
       1597, 1483, 1525, 1484, 1994, 1656, 1318, 1680, 1626, 1679, 1627, 1319,
        1860, 1442, 1320, 1861, 1443, 1321, 1862, 1748, 1925, 1322, 1749, 
       1926, 1323, 1750, 1927, 1324, 1751, 1928, 1325, 1863, 1444, 1326, 1864,
        1445, 1327, 1865, 1446, 1328, 1866, 1447, 1329}], 
      Line3DBox[{1331, 1752, 1929, 1330, 1485, 1526, 1486, 1979, 1598, 1332, 
       1599, 1487, 1527, 1930, 1776, 1659, 1333, 1685, 1657, 1684, 1658, 1334,
        1753, 1931, 1335, 1867, 1448, 1336, 1868, 1754, 1932, 1337, 1755, 
       1933, 1338, 1756, 1934, 1339, 1757, 1935, 1340, 1758, 1936, 1341, 1869,
        1449, 1342, 1870, 1450, 1343, 1871, 1451, 1344}], 
      Line3DBox[{1346, 1759, 1937, 1345, 1488, 1528, 1601, 1980, 1600, 1347, 
       1602, 1603, 1529, 1938, 1777, 1348, 1548, 1939, 1549, 1349, 1799, 1940,
        1692, 1350, 1760, 1941, 1351, 1872, 1761, 1942, 1352, 1762, 1943, 
       1353, 1763, 1944, 1354, 1764, 1945, 1355, 1765, 1946, 1356, 1766, 1947,
        1357, 1873, 1452, 1358, 1874, 1453, 1359}], 
      Line3DBox[{1373, 1538, 1537, 1966, 1372, 1957, 1771, 1371, 1956, 1770, 
       1370, 1955, 1769, 1369, 1954, 1768, 1368, 1953, 1767, 1367, 1783, 1952,
        1536, 1366, 1982, 1535, 1951, 1782, 1365, 1534, 1950, 1781, 1364, 
       1663, 1693, 1800, 2001, 1694, 1363, 1664, 1665, 1550, 1662, 1661, 1362,
        1778, 1949, 1531, 1607, 1606, 1361, 1604, 1981, 1605, 1530, 1489, 
       1360, 1780, 1948, 1532, 1533}]}, {
      Line3DBox[{605, 781, 1801, 606, 1876, 788, 626, 1879, 796, 635, 1884, 
       804, 644, 1890, 813, 654, 1898, 822, 664, 1906, 831, 1824, 676, 1128, 
       1129, 841, 1836, 688, 1130, 1131, 1991, 852, 701, 543, 1056, 1965, 863,
        714, 431, 1978, 1027, 385, 728, 434, 1979, 1028, 387, 742, 1980, 437, 
       1029, 389, 757, 1981, 440, 1030, 492, 770}], Line3DBox[CompressedData["

1:eJwNzztLQnEYx/Enz4EDDdEiBGEh0dqrqKag8A0YOQaGOrg02tJSuDU0Bg0N
XSCKUncD915Be0VJefsMX363P4fzlI4OitWImMNORK4ckSxEZPP8Pp/nF/kG
X6DHEeku9uR1+cRe4Qc6b5MN3Rm/pD+Ub/GJL3zbLvRP9mX5AT/4xVB/Y7+y
rciP+MO//o6ObDRd5Z8xxsR2T6e2rq3Iv1CnZNfUTWnO9kZrtld9n9/EFrZt
79Rt2am9w9dpU/+ha/O+m7Rk/5ld8j1v1ug5khlN8iuR
       "]], 
      Line3DBox[{609, 783, 1803, 610, 278, 1498, 279, 233, 1501, 282, 237, 
       285, 509, 1633, 241, 289, 1508, 246, 292, 1511, 250, 1513, 294, 254, 
       1517, 298, 257, 1541, 326, 301, 1678, 579, 1679, 489, 583, 1684, 536, 
       744, 1939, 342, 343, 1550, 314, 328}], 
      Line3DBox[{611, 920, 921, 1804, 961, 924, 1037, 925, 1809, 1038, 968, 
       1040, 929, 1001, 1973, 930, 1041, 970, 1043, 935, 1003, 936, 1044, 989,
        972, 1963, 1006, 973, 1161, 1162, 1998, 1117, 1119, 1118, 666, 1907, 
       832, 1825, 678, 842, 1837, 690, 853, 1846, 703, 864, 1853, 716, 875, 
       1860, 730, 1931, 888, 745, 1940, 1180, 1181, 1182, 2001, 1183, 1140, 
       1142, 1141, 772}], 
      Line3DBox[{612, 1031, 1032, 996, 1035, 1034, 1972, 988, 962, 998, 1968, 
       963, 1163, 1164, 1165, 1151, 1995, 1150, 637, 806, 1818, 646, 815, 
       1820, 656, 823, 667, 1908, 833, 1826, 679, 843, 1838, 691, 854, 1847, 
       704, 865, 1854, 717, 876, 1861, 731, 889, 1867, 746, 1941, 901, 759, 
       1950, 978, 979, 990}], 
      Line3DBox[{613, 1060, 1061, 1033, 1971, 964, 614, 790, 1810, 628, 798, 
       1815, 638, 807, 1819, 647, 816, 1821, 657, 824, 1822, 668, 834, 1827, 
       680, 844, 1839, 692, 855, 1848, 705, 866, 1855, 718, 877, 1862, 732, 
       890, 1868, 747, 902, 1872, 760, 1951, 980, 982, 991}], 
      Line3DBox[{619, 1159, 1066, 1069, 1067, 1805, 1096, 1097, 927, 1000, 
       928, 1812, 1039, 969, 1100, 931, 1099, 932, 1817, 1078, 1076, 1985, 
       1077, 652, 1896, 1110, 1111, 662, 1904, 829, 673, 1913, 839, 1832, 685,
        849, 1843, 697, 860, 1851, 710, 871, 1857, 723, 882, 1863, 737, 1936, 
       895, 752, 1946, 907, 765, 1955, 917, 777}], 
      Line3DBox[{620, 1166, 1167, 1806, 1168, 1169, 1073, 1075, 1074, 1813, 
       1101, 1102, 933, 1002, 1974, 934, 1042, 971, 1106, 937, 1105, 938, 992,
        1113, 940, 1958, 1112, 941, 1085, 1987, 1083, 1084, 674, 1914, 1123, 
       1124, 1833, 686, 850, 1844, 698, 861, 1852, 711, 872, 1858, 724, 883, 
       1864, 738, 896, 1869, 753, 1947, 908, 766, 1956, 918, 778}], 
      Line3DBox[{621, 786, 1807, 622, 1170, 1999, 1171, 1172, 1173, 1174, 
       1080, 1986, 1079, 1107, 1108, 1109, 1004, 939, 1005, 1046, 1047, 1959, 
       1007, 942, 975, 1121, 1990, 1122, 1120, 945, 993, 1967, 1126, 1127, 
       1125, 948, 1834, 1088, 1086, 1087, 1845, 699, 1132, 1992, 1133, 712, 
       873, 1859, 725, 884, 1865, 739, 897, 1870, 754, 909, 1873, 767, 1957, 
       919, 779}], 
      Line3DBox[{623, 966, 1962, 967, 624, 794, 1814, 633, 1175, 2000, 1176, 
       1177, 1178, 1179, 1082, 1081, 1114, 1115, 1989, 1116, 1008, 943, 1009, 
       1049, 1975, 1050, 1013, 946, 994, 1052, 1977, 1053, 1017, 949, 1835, 
       976, 951, 1160, 1997, 952, 995, 1135, 1136, 1134, 1993, 954, 1091, 
       1089, 1988, 1090, 726, 885, 1866, 740, 898, 1871, 755, 910, 1874, 768, 
       984, 1966, 985, 986}], 
      Line3DBox[{769, 911, 1058, 977, 1948, 756, 899, 1937, 741, 886, 1929, 
       727, 874, 1924, 713, 862, 1920, 700, 851, 1917, 687, 840, 1915, 675, 
       1823, 830, 1905, 663, 821, 1897, 653, 812, 1889, 643, 803, 1883, 634, 
       795, 1878, 625, 787, 1875, 604, 780, 960, 987}], 
      Line3DBox[{773, 913, 1064, 1063, 1982, 981, 761, 903, 1942, 748, 891, 
       1932, 733, 878, 1925, 719, 867, 1921, 706, 856, 1918, 693, 845, 1916, 
       681, 1828, 835, 1909, 669, 825, 1900, 658, 817, 1892, 648, 808, 1885, 
       639, 799, 1880, 629, 791, 1877, 615, 784, 1961, 1062, 1144, 1143, 
       1145}], Line3DBox[{774, 914, 983, 1952, 762, 904, 1943, 749, 892, 1933,
        734, 879, 1926, 720, 868, 1922, 707, 857, 1919, 694, 1840, 846, 682, 
       1829, 836, 1910, 670, 826, 1901, 659, 818, 1893, 649, 809, 1886, 640, 
       800, 1881, 630, 792, 2002, 1185, 1187, 1186, 616, 2003, 785, 1184, 
       1146, 1148, 1147, 1149}], 
      Line3DBox[{775, 915, 1953, 763, 905, 1944, 750, 893, 1934, 735, 880, 
       1927, 721, 869, 1923, 708, 1849, 858, 695, 1841, 847, 683, 1830, 837, 
       1911, 671, 827, 1902, 660, 819, 1894, 650, 810, 1887, 641, 801, 1882, 
       631, 1811, 793, 1095, 1065, 1154, 617, 1983, 1153, 1152, 997, 922, 
       965}], Line3DBox[{776, 916, 1954, 764, 906, 1945, 751, 894, 1935, 736, 
       881, 1928, 722, 1856, 870, 709, 1850, 859, 696, 1842, 848, 684, 1831, 
       838, 1912, 672, 828, 1903, 661, 820, 1895, 651, 811, 1888, 642, 1816, 
       802, 1098, 1072, 1158, 632, 1157, 1996, 1156, 999, 926, 618, 1071, 
       1984, 1070, 1068, 923, 1155, 1036}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
BsJaIVvXKwgc3zjVdm0/g8SLjf05ao5QocuyewaDwd75vcyrh+S8+LM2P3M7
AtV72G71nSsEaQ7Pn38/mCJqyXC00LgAUbzb2HZjPjit/W7S9q4Sid3dYsc5
8qG6Z7DmQK4iON7iq9swNoCU0infh5YW8N2D6+F5nmVw8ppJSKi5ReZtMnum
00JdyiuGS5/74TXr2nrlRWukHFadmrh4AxrP+e/c9igGo+bim0Yss5EoY35+
7bEgfPyzFF2k74CRkQJWCjsWkNjOf1vMygiqO7np1t/fhBF/35HlYydSmF7/
jWLXg8aWoWID1yT09xGdfrZeBzsbdjDe95mFEdGDRwJCXiKD/57lFyeKkPcO
fWD+neL/vp8+vAHW1vuTdgZuQ2KK52Rd9VtIkueiymbZAKbeIu3SURdJC6+w
b4LPHwr/ptFn2q8HbruAJ5H3o9Hf5u06jQuTpP9pFviltxfunte9euBBIH63
ib7HfqgcKBVPunetPQM2rKIvFDUfIpHqM+y2gRqKWqkiJUr7wbx1yu7Lszqk
RKYabjHngjrTZrxcrAMn9/Xo6EikY1qvvWfeyTdAUHhZhYRaQVFT6Jvud0n8
XpvM/8p5BigfFcaNrNyRuU3JbUPwLF5zsisyKF6/Mi+Rq/NleHLdlLzIwWvo
//FxeYTQRfI+v6p+tavHB1xVcrqVVFicEmoptSEIiHjxsL4tn8DaQcVpt3wi
UhyE6m5tlYb6oye5KuVPgum7v5fdFpNwhL+t4cSjHugcSfVtJHbDmcEXLQsG
g5hxoHht4IlmIEbkjbov/YW772x58z4tY1WCpfnEgUIgrkmPnrrAh44/+9oq
z27H3lef5wTeGsGgb9fpc8fvorlg1lUa6ePYkvj74JGGPBhzqLP/qT8HThq7
lUQOkOve+pjx9IleyJ0O6rojzwwOt7EsbsIZCa8R4+ZMTSgt89t5q1AGbPMc
uBZ7biNlJrhnUHIIvvFarrN8Gg6n0T1/V4gNpvyxZY7eQO7j44tBN+KC4cbc
knKE3wwWF7N9oRJPByLOjS17VgODDgvs/rnsgsQYlcwTKkVIo9/TKy/rjQEt
DDkRk2PkOjqzSW/eAkVhjW+5HNnQ72GO+WDEKFIGnqb1e4zBN1dmcQlqK7B7
ezq+LJP0Ldo1VkabHkN9y7GsXsZEsI67vdjQaoSjhvqW8retoP3ScTXxe1vB
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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->Small,
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{20, 100}, {0.01, 0.5}, {-0.002187536797837912, 
    16.590256670486525`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{
  3.42568267278125*^9, {3.42568272859375*^9, 3.42568275259375*^9}, 
   3.426080181671875*^9, 3.426087943*^9, 3.42617114034375*^9, 
   3.455558233534944*^9, 3.4675861658227*^9, 3.472400376953573*^9, 
   3.473165567417529*^9},
 CellLabel->"Out[83]="]
}, Open  ]],

Cell[TextData[{
 "The interactive capabilities of Mathematica 6 provide an excellent platform \
for getting the feel of the behavior of the Greeks. However, for sake of \
responsiveness, it is a good idea to evaluate the derivative outside the ",
 StyleBox["Manipulate", "Literal"],
 ". You can use ",
 StyleBox["With", "Literal"],
 " to evaluate the derivative before the call to ",
 StyleBox["Manipulate", "Literal"],
 " and ",
 StyleBox["FullSimplify", "Literal"],
 " to make sure it is in simplest form. "
}], "Text",
 CellChangeTimes->{{3.473429654056773*^9, 3.473429678481285*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"manipulateDeltaEuroCall", "[", "]"}], " ", ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"k", ",", " ", "v", ",", " ", "t1", ",", " ", "r"}], "}"}], ",", 
    
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"deltaCall", "=", " ", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"priceEuroCall", "[", 
            RowBox[{
            "s", ",", " ", "k", ",", " ", "v", ",", " ", "t1", ",", " ", 
             "r"}], "]"}], ",", " ", "s"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Manipulate", "[", 
       RowBox[{
        RowBox[{"Plot3D", "[", 
         RowBox[{
          RowBox[{"Evaluate", "[", "deltaCall", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "40.", ",", "80."}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t1", ",", "0.001", ",", "1."}], "}"}], ",", 
          RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Speed\>\""}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"k", ",", "60.", ",", "\"\<Strike\>\""}], "}"}], ",", 
          "10.", ",", "100."}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r", ",", "0.04", ",", "\"\<Rate\>\""}], "}"}], ",", 
          "0.01", ",", "0.12"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"v", ",", "0.29", ",", "\"\<Volatility\>\""}], "}"}], ",", 
          "0.01", ",", "0.40"}], "}"}], ",", 
        RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
        RowBox[{"AppearanceElements", "\[Rule]", "All"}]}], "]"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.42608057959375*^9, {3.426081156921875*^9, 3.42608119875*^9}, {
   3.42608124871875*^9, 3.426081269484375*^9}, {3.4260822403125*^9, 
   3.426082314609375*^9}, {3.4260826225625*^9, 3.42608263353125*^9}, {
   3.42608266921875*^9, 3.42608277684375*^9}, {3.426082840796875*^9, 
   3.426082943859375*^9}, {3.426082980015625*^9, 3.426083004609375*^9}, {
   3.426083039859375*^9, 3.426083142140625*^9}, {3.426083186171875*^9, 
   3.426083206703125*^9}, {3.426083385859375*^9, 3.4260833870625*^9}, {
   3.4260834333125*^9, 3.426083445984375*^9}, {3.426083492015625*^9, 
   3.4260834993125*^9}, {3.426083532875*^9, 3.426083535828125*^9}, 
   3.426083588390625*^9, {3.426083850359375*^9, 3.426083896796875*^9}, 
   3.426083959578125*^9, {3.426171088609375*^9, 3.426171107015625*^9}, {
   3.455540474811751*^9, 3.455540517051413*^9}, {3.4740427412690983`*^9, 
   3.474042743261286*^9}},
 CellLabel->"In[84]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"manipulateDeltaEuroCall", "[", "]"}]], "Input",
 CellLabel->"In[85]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 59.2, $CellContext`r$$ = 
    0.04, $CellContext`v$$ = 0.29, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`k$$], 60., "Strike"}, 10., 100.}, {{
       Hold[$CellContext`r$$], 0.04, "Rate"}, 0.01, 0.12}, {{
       Hold[$CellContext`v$$], 0.29, "Volatility"}, 0.01, 0.4}}, 
    Typeset`size$$ = {182., {71., 72.9116159364925}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`k$76365$$ = 0, $CellContext`r$76366$$ = 
    0, $CellContext`v$76367$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 60., $CellContext`r$$ = 
        0.04, $CellContext`v$$ = 0.29}, "ControllerVariables" :> {
        Hold[$CellContext`k$$, $CellContext`k$76365$$, 0], 
        Hold[$CellContext`r$$, $CellContext`r$76366$$, 0], 
        Hold[$CellContext`v$$, $CellContext`v$76367$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        Evaluate[
         Derivative[
         1, 0, 0, 0, 
          0][$CellContext`priceEuroCall][$CellContext`s, $CellContext`k$$, \
$CellContext`v$$, $CellContext`t1, $CellContext`r$$]], {$CellContext`s, 40., 
         80.}, {$CellContext`t1, 0.001, 1.}, PerformanceGoal -> "Speed"], 
      "Specifications" :> {{{$CellContext`k$$, 60., "Strike"}, 10., 
         100.}, {{$CellContext`r$$, 0.04, "Rate"}, 0.01, 
         0.12}, {{$CellContext`v$$, 0.29, "Volatility"}, 0.01, 0.4}}, 
      "Options" :> {ContinuousAction -> False, AppearanceElements -> All}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{255., {138.6875, 144.3125}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.426082788328125*^9, 3.42608279153125*^9}, 
   3.426082900484375*^9, {3.42608294725*^9, 3.426082949765625*^9}, {
   3.42608300721875*^9, 3.426083045703125*^9}, {3.4260830760625*^9, 
   3.4260830921875*^9}, {3.426083127453125*^9, 3.426083146859375*^9}, {
   3.426083190171875*^9, 3.42608320953125*^9}, {3.4260833898125*^9, 
   3.42608339321875*^9}, 3.426083450046875*^9, 3.426083503421875*^9, {
   3.426083540890625*^9, 3.42608354440625*^9}, 3.426083593234375*^9, {
   3.426083867*^9, 3.42608387059375*^9}, 3.4260839050625*^9, 
   3.426084238875*^9, 3.42608794496875*^9, {3.42617114328125*^9, 
   3.426171255265625*^9}, {3.455538833128334*^9, 3.455538833495975*^9}, {
   3.455538903816781*^9, 3.455538931283317*^9}, {3.455540141052165*^9, 
   3.455540165664256*^9}, {3.455540462015538*^9, 3.455540490666584*^9}, 
   3.4555405246671143`*^9, {3.455541172194421*^9, 3.455541194601116*^9}, {
   3.455542435376709*^9, 3.455542457901882*^9}, 3.4675861660217*^9, 
   3.4724003772655735`*^9, 3.473165567628196*^9, {3.474309190632845*^9, 
   3.4743091922031107`*^9}},
 Magnification->0.91,
 CellLabel->"Out[85]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.438470348648984*^9, 3.4384703509288282`*^9}},
 CellTags->"14.6 See Also"],

Cell[TextData[{
 StyleBox["Modeling Financial Derivatives with Mathematica", 
  "CitationTitle"],
 " (Cambridge University Press) by William Shaw is an excellent resource for \
the quant interested in modeling vanilla and more exotic flavors (such as \
Asian options) in Mathematica. It concentrates on analytical solutions rather \
than solutions based on numerical methods."
}], "Text",
 CellChangeTimes->{{3.438470356777323*^9, 3.438470357801063*^9}, {
   3.455536596366776*^9, 3.455536774912835*^9}, 3.4555585682705173`*^9, {
   3.473429694289888*^9, 3.47342972686654*^9}, {3.474215465193898*^9, 
   3.4742154671808567`*^9}, {3.476187102601844*^9, 3.4761871026221113`*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Black-Scholes and Beyond: Option Pricing Models", 
  "CitationTitle"],
 " by Ne",
 StyleBox["il A. Chris (McGraw-Hill) cov",
  FontTracking->"Extended"],
 "ers the basics of modern option pricing. Wikipedia also provides basic \
information on the Black-Scholes model: ",
 StyleBox[ButtonBox["http://bit.ly/c8IrYX",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/c8IrYX"], None},
  ButtonNote->"http://bit.ly/c8IrYX"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.476187104826285*^9, 3.4761871791349154`*^9}, {
   3.476187218627075*^9, 3.4761872304477787`*^9}, 3.476187335914188*^9}],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Computing the Implied Volatility \[LineSeparator]of Financial Derivatives"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{{3.425683791921875*^9, 3.42568383028125*^9}, 
   3.474042797006938*^9},
 CellTags->"Computing the Implied Volatility"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.42568436140625*^9, 3.425684363828125*^9}}],

Cell["\<\
You want to compute the volatility of an option that is implied by its \
current market price.\
\>", "Text",
 CellChangeTimes->{{3.42608753975*^9, 3.42608760834375*^9}, {
  3.473429735851336*^9, 3.47342973921047*^9}}]
}, Open  ]],

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.42568436696875*^9, 3.425684369484375*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["FindRoot", "Literal"],
 " to solve for the volatility."
}], "Text",
 CellChangeTimes->{{3.42608761146875*^9, 3.426087639140625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"impliedVolEuroCall", "[", 
   RowBox[{
   "price_", ",", "strike_", ",", "maturityT_", ",", "rate_", ",", 
    "optionsPrice_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"volatility", " ", "/.", " ", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"priceEuroCall", "[", 
       RowBox[{
       "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
        "rate"}], "]"}], " ", "\[Equal]", " ", "optionsPrice"}], ",", 
     RowBox[{"{", 
      RowBox[{"volatility", ",", "0.2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4260877113125*^9, 3.426087815640625*^9}, {
  3.42608787065625*^9, 3.426087912046875*^9}, {3.42608811853125*^9, 
  3.426088128484375*^9}, {3.455546588605641*^9, 3.45554658910859*^9}},
 CellLabel->"In[86]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"impliedVolEuroPut", "[", 
   RowBox[{
   "price_", ",", "strike_", ",", "maturityT_", ",", "rate_", ",", 
    "optionsPrice_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"volatility", " ", "/.", " ", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"priceEuroPut", "[", 
       RowBox[{
       "price", ",", "strike", ",", "volatility", ",", "maturityT", ",", 
        "rate"}], "]"}], " ", "\[Equal]", " ", "optionsPrice"}], ",", 
     RowBox[{"{", 
      RowBox[{"volatility", ",", "0.2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.455547669505458*^9, 3.455547681352504*^9}},
 CellLabel->"In[87]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"impliedVolEuroCall", "[", 
  RowBox[{"58.00", ",", "60.", ",", "0.5", ",", "0.04", ",", "3.8"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.42608795621875*^9, 3.4260879938125*^9}, {
   3.42608805378125*^9, 3.426088095984375*^9}, 3.455545065442072*^9},
 CellLabel->"In[88]:="],

Cell[BoxData["0.25486742500127624`"], "Output",
 CellChangeTimes->{
  3.426087996296875*^9, {3.42608807828125*^9, 3.42608809734375*^9}, 
   3.426088136546875*^9, 3.42617114559375*^9, 3.455545074211102*^9, 
   3.455546597536956*^9, 3.4675861725687*^9, 3.4724003821951823`*^9, 
   3.473165572587682*^9},
 CellLabel->"Out[88]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellMargins->{{0, 36}, {0, 13}},
 CellChangeTimes->{{3.425684373609375*^9, 3.425684375875*^9}}],

Cell["\<\
Implied volatility is the volatility that is implied by the market price of \
the option given the pricing model. The idea is that the market will find the \
fair price for the option, and from that, you can back out the volatility of \
the underlying security that the market is pricing in. This is in contrast to \
historical volatility, which is a direct measure of the movement of the \
underlying\[CloseCurlyQuote]s price over recent history. \
\>", "Text",
 CellChangeTimes->{{3.455543060157571*^9, 3.4555431066861773`*^9}, {
   3.4555442351900578`*^9, 3.455544332034719*^9}, {3.455544764718609*^9, 
   3.455544856448893*^9}, {3.45554494717286*^9, 3.4555449471802597`*^9}, {
   3.455558583763749*^9, 3.4555585911610394`*^9}, {3.473429761411673*^9, 
   3.473429817909281*^9}, 3.474042817600659*^9, {3.474043159266756*^9, 
   3.474043161274768*^9}}],

Cell[TextData[{
 "In the solution, ",
 StyleBox["FindRoot", "Literal"],
 " searches for a numerical root of the pricing function that will yield the \
observed price, given the other option parameters. "
}], "Text",
 CellChangeTimes->{{3.455544948219578*^9, 3.4555450858736763`*^9}, {
  3.473429837890051*^9, 3.4734298417899723`*^9}}]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Speeding Up ",
 "NDSolve",
 " When Solving \[LineSeparator]Black-Scholes and Other PDEs"
}], "Heading1", "ProductionPageBreak",
 CellMargins->{{0, 72}, {2, 2}},
 CellChangeTimes->{3.473429861670971*^9, 3.474043088058371*^9},
 CellTags->"Speeding Up NDSolve When Solving Black-Scholes"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 "You  want to compute numerical solutions to partial differential equations \
(PDEs), such as the Black-Scholes PDE. ",
 StyleBox["NDSolve", "Literal"],
 " can sometimes take too",
 StyleBox[" much time or lose ac",
  FontTracking->"SemiCondensed"],
 "curacy near critical values. You would like to speed up ",
 StyleBox["NDSolve", "Literal"],
 " without loss of accuracy where it matters. "
}], "Text",
 CellChangeTimes->{{3.473429875127241*^9, 3.473429901767764*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     SubscriptBox["\[PartialD]", "t"], 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "t"}], "]"}]}]}], "==", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"], 
     SuperscriptBox["x", "2"], 
     RowBox[{
      SubscriptBox["\[PartialD]", 
       RowBox[{"x", ",", "x"}]], 
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "t"}], "]"}]}]}], "+", 
    RowBox[{"r", " ", "x", " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", "x"], 
      RowBox[{"u", "[", 
       RowBox[{"x", ",", "t"}], "]"}]}]}], "-", 
    RowBox[{"r", " ", 
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "t"}], "]"}]}]}]}], ";"}]], "Code",
 CellMargins->{{53, 0}, {2, 2}}]
}, Open  ]],

Cell["Solution", "Heading2",
 CellMargins->{{0, 36}, {0, 13}}],

Cell[TextData[{
 StyleBox["This recipe was motivated by work done by Andreas Lauschke and \
used with permis",
  FontTracking->"Extended"],
 "sion. Refer to the ",
 ButtonBox["\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section \
on page 578",
  BaseStyle->"Hyperlink",
  ButtonData->"14.8 See Also"],
 " for more information."
}], "Text",
 CellChangeTimes->{
  3.4555586254085293`*^9, {3.473429923883439*^9, 3.473429925207691*^9}, {
   3.473429988475183*^9, 3.473429988477618*^9}, {3.476116284013736*^9, 
   3.4761162948425694`*^9}}],

Cell[TextData[{
 "To illustrate the problem, I use the PDE for a European put on a \
dividend-paying\[LineSeparator]security. For the interest and dividend, I use \
fixed rate plus time-varying rate that is strictly increasing. For \
volatility, I use a volatility smile, which reflects the observation that \
volatility is higher for in- and out-of-the-money options and lower for\
\[LineSeparator]",
 StyleBox["at-the-money options. In the PDE, ",
  FontTracking->"SemiCondensed"],
 StyleBox["x", "Emphasis",
  FontTracking->"SemiCondensed"],
 StyleBox[" represents the price of the underlying and ",
  FontTracking->"SemiCondensed"],
 StyleBox["t", "Emphasis",
  FontTracking->"SemiCondensed"],
 StyleBox[" is time. ",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.455558632794298*^9, 3.455558645610723*^9}, {
  3.473430025314962*^9, 3.473430123765449*^9}, {3.473443754851858*^9, 
  3.473443761701899*^9}, {3.4740431196771*^9, 3.474043150066139*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"iRate", ",", "dividend", ",", "sigma", ",", "makePutEuropean"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iRate", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"0.035", "+", 
   RowBox[{"t", " ", 
    RowBox[{"0.01", "/", "3"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dividend", "[", "t_", "]"}], " ", ":=", "  ", 
   RowBox[{"0.01", "+", 
    RowBox[{"t", " ", 
     RowBox[{"0.01", "/", "3"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigma", "[", 
   RowBox[{"price_", ",", "strike_", ",", "time_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"1.", "/", "10000"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"price", "-", "strike"}], ")"}], "^", "2"}]}], "+", 
   "0.25"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "makePutEuropean", "]"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"Method", "\[Rule]", "Automatic"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makePutEuropean", "[", 
   RowBox[{"strike_", ",", "lower_", ",", "upper_", ",", "timeToExp_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"x", ",", "t"}], "]"}], ",", "x", ",", "x"}], "]"}], 
           " ", 
           RowBox[{"x", "^", "2"}], " ", 
           RowBox[{
            RowBox[{"sigma", "[", 
             RowBox[{"x", ",", "strike", ",", "t"}], "]"}], "^", "2"}]}], "+",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"iRate", "[", "t", "]"}], "-", 
             RowBox[{"dividend", "[", "t", "]"}]}], ")"}], " ", "x", " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}], "-", " ", 
          RowBox[{
           RowBox[{"iRate", "[", "t", "]"}], " ", 
           RowBox[{"u", "[", 
            RowBox[{"x", ",", "t"}], "]"}]}]}], "\[Equal]", " ", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "timeToExp"}], "]"}], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"strike", "-", "x"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"lower", ",", "t"}], "]"}], "\[Equal]", "strike"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"upper", ",", "t"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",",
       "u", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "lower", ",", "upper"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "timeToExp"}], "}"}], ",", "opts"}], 
     "]"}]}], "]"}]}]}], "Input",
 CellLabel->"In[89]:="],

Cell[TextData[{
 "You can adjust different aspects of this model to suit your needs. The main \
point here is to consider the performance of ",
 StyleBox["NDSolve", "Literal"],
 " using different options."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"NDSolve", "::", 
   StyleBox["\"\<mxsst\>\"",
    FontColor->GrayLevel[0]]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"timePut1", ",", "put1"}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"makePutEuropean", "[", 
    RowBox[{"50", ",", "0", ",", " ", "250", ",", " ", "1"}], "]"}], " ", "//",
    "Timing"}]}]}], "Input",
 CellLabel->"In[95]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.0155060000000162`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"u", "\[Rule]", 
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "250.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4675861817137003`*^9, 3.472400385861189*^9, 
  3.473165575874858*^9},
 CellLabel->"Out[96]="]
}, Open  ]],

Cell[TextData[{
 "It took just over eight seconds to solve this PDE numerically. However, you \
can do better using an adaptive grid method where you instruct ",
 StyleBox["NDSolve", "Literal"],
 " to sample more points around the strike price while being looser away from \
the strike. Here I define a function for the adaptive grid but defer \
explanation until the discussion."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{
  3.4555586471625853`*^9, {3.473430175693534*^9, 3.473430181038505*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"makeAdaptiveGrid", ",", "makePutEuropeanAdaptive"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"makeAdaptiveGrid", "[", 
   RowBox[{"strike_", ",", 
    RowBox[{"size_:", "200"}], ",", 
    RowBox[{"deg_:", "1"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{
        RowBox[{"2", "deg"}], "+", "1"}]}], ",", 
      RowBox[{"incr", "=", " ", 
       RowBox[{"2", " ", 
        RowBox[{"strike", "/", "size"}]}]}]}], "}"}], ",", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "strike"}], ")"}], "^", "a"}], "/", 
         RowBox[{"strike", "^", 
          RowBox[{"(", 
           RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "+", "strike"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"strike", "*", "2"}], ",", "incr"}], "}"}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[97]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"makePutEuropeanAdaptive", "[", 
   RowBox[{"strike_", ",", "lower_", ",", "upper_", ",", "timeToExp_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"u", "[", 
             RowBox[{"x", ",", "t"}], "]"}], ",", "t"}], "]"}], "+", 
          RowBox[{
           RowBox[{"1", "/", "2"}], " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"x", ",", "t"}], "]"}], ",", "x", ",", "x"}], "]"}], 
           " ", 
           RowBox[{"x", "^", "2"}], " ", 
           RowBox[{
            RowBox[{"sigma", "[", 
             RowBox[{"x", ",", "strike", ",", "t"}], "]"}], "^", "2"}]}], "+",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"iRate", "[", "t", "]"}], "-", 
             RowBox[{"dividend", "[", "t", "]"}]}], ")"}], " ", "x", " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"x", ",", "t"}], "]"}], ",", "x"}], "]"}]}]}], "==", 
         " ", 
         RowBox[{
          RowBox[{"iRate", "[", "t", "]"}], " ", 
          RowBox[{"u", "[", 
           RowBox[{"x", ",", "t"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "timeToExp"}], "]"}], "\[Equal]", 
         RowBox[{"Max", "[", 
          RowBox[{"0", ",", 
           RowBox[{"strike", "-", "x"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"lower", ",", "t"}], "]"}], "\[Equal]", "strike"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"upper", ",", "t"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",",
       "u", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "lower", ",", "upper"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "timeToExp"}], "}"}], ",", 
      RowBox[{"Method", "\[RuleDelayed]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<MethodOfLines\>\"", ",", 
         RowBox[{"\"\<SpatialDiscretization\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<TensorProductGrid\>\"", ",", 
            RowBox[{"\"\<Coordinates\>\"", "\[Rule]", 
             RowBox[{"N", "@", 
              RowBox[{"Union", "[", 
               RowBox[{
                RowBox[{"makeAdaptiveGrid", "[", "strike", "]"}], ",", 
                RowBox[{"Range", "[", 
                 RowBox[{
                  RowBox[{"2", " ", "strike"}], ",", 
                  RowBox[{"5", " ", "strike"}], ",", "2"}], "]"}]}], 
               "]"}]}]}]}], "}"}]}]}], "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[99]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["Off",
   FontColor->GrayLevel[0]], 
  StyleBox["[",
   FontColor->GrayLevel[0]], 
  RowBox[{
   StyleBox[
    RowBox[{"NDSolve", ":", 
     RowBox[{":", "\"\<eerri\>\""}]}],
    FontColor->GrayLevel[0]], 
   StyleBox[",",
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox["NDSolve",
     FontColor->GrayLevel[0]], 
    StyleBox["::",
     FontColor->GrayLevel[0]], 
    StyleBox["\"\<eerr\>\"",
     FontColor->RGBColor[0., 0., 0.]]}]}], 
  StyleBox["]",
   FontColor->GrayLevel[0]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"timePut2", ",", "put2"}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"makePutEuropeanAdaptive", "[", 
    RowBox[{"50", ",", "0", ",", " ", "250", ",", " ", "1"}], "]"}], " ", "//",
    "Timing"}]}]}], "Input",
 CellChangeTimes->{{3.473165249115353*^9, 3.47316527064856*^9}},
 CellLabel->"In[100]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.12938299999999003`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"u", "\[Rule]", 
      TagBox[
       RowBox[{"InterpolatingFunction", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.`", ",", "250.`"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", "\<\"<>\"\>"}], 
        "]"}],
       False,
       Editable->False]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4675861825167*^9, 3.4724003863915896`*^9, 
  3.473165576248254*^9},
 CellLabel->"Out[101]="]
}, Open  ]],

Cell["You can see the speedup is quite substantial. ", "Text",
 CellChangeTimes->{{3.473165321761524*^9, 3.473165325821496*^9}, 
   3.4734302224756403`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timePut1", "/", "timePut2"}]], "Input",
 CellLabel->"In[102]:="],

Cell[BoxData["23.306817742672905`"], "Output",
 CellChangeTimes->{3.4675861825737*^9, 3.47240038656319*^9, 
  3.4731655762668743`*^9},
 CellLabel->"Out[102]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell["\<\
You can see that the result of pricing the option appears the same for both \
versions.\
\>", "Text",
 CellChangeTimes->{
  3.455558661845793*^9, {3.473430238576179*^9, 3.473430242719718*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsColumn", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", "t"}]}], "]"}], "/.", 
         RowBox[{"First", "@", "put1"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "40", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "300"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Underlying Price\>\"", ",", "\"\<Time to\\nExpiration\>\"", 
          ",", "\"\<Option\\nPrice\>\""}], "}"}]}]}], "]"}], ",", 
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", 
           RowBox[{"1", "-", "t"}]}], "]"}], "/.", 
         RowBox[{"First", "@", "put2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "40", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "300"}], "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Underlying Price\>\"", ",", "\"\<Time to\\nExpiration\>\"", 
          ",", "\"\<Option\\nPrice\>\""}], "}"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellLabel->"In[103]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[{{}, {InsetBox[
       Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
nh5P59P6+88lWoUuBure0Kbzaf/rf7gE0bgmdW9s/Sk6z8Nlq+RaHyOZ+bsn
/qig82nf2ay9k30kSf3fDh85Ne/RczWf33T+VACps3nMlnLd4ehZsO6ildRk
rWiWV8T30UQ1h5e1vm49qab4dFRSvBB6FqxDKCeVLW7Mm5X5ms6nlXBuTCIW
kwpxt6qddVwG5dMyqXxaH53n6e//JVIq96HsObKZzvP091+DFGcdGr0mpRQ9
C/ofQQp/PV8XeiAFPff3P0OU4Lf7jNAq6kHPgv77E12/CP6bdx7oWdD/RqLt
UMq42CNn6Hxaf//XEc2vsoyHu9F5+B8lnEsXuxpIZmtOgmyuDXr+wWUrSLDc
SQOjudfEfjmi5x9sVgDHsZTUKTgz6+uPRvRcw+fX5e1wIjXPHmTcLv+Anmt4
Ja5TLr4h1U5/Of7y1S/0XMPhvb3wbgapnMfhOuvR7/FrWNzJYi33SUUb+7+T
ghuD8mmjqHxaFXoW9J9Pyug/OhFWbY2eBf3fTkps3732Knsqehb0v44UNQvX
uz/jD3oW9H81KWTbGGbFmYKeBf0vJHq35DscUryEngX9n0N0dBlP+5Y0BT0L
+p9B/FEfun3E8Fw6z8PimnrfdiQNlXrvu3mNQ88/SzhnPxW+IA3s6odk6Pmh
559ctsw04amk7qSe6vhDbuj5J5vlFzvqDqklX2RjkLSPzqfx+T8kFw4l1XU2
yz0Lod8r1fJKFm0KOEuqrDaJcj2iSufTOLwX+deUScXyjC9y/MRB+bSDVD6t
iM7z9Pd/OSnrcmbmZzFf9Czofz4peT98lHJzM3oW9N+OFPPxM4oUkUTPgv6n
kcL7bm4cpkfneQT9n0jwy0J0c6aF0/m0/v7fJLrnn5BI3vaKzqf1959JtDt3
7XM/PIzO83B4j2asuUEamj2vnN8wks7zsLgj4o8YkgabPU5YVDPRc10J56Q0
7ySpe+JIhYKrEnqu47LFfcrlSa1dRb0zSgPQcx2btfWzVCipHrOAOb3lB51P
4/Orpo/rIlVqpbt0FSzpfBqvZH7css2k0mbfFwpybwfl02qofJo/nefp7/8j
Ui4kXcxsmiKd5+nv/zhS6pvU5vPKQuhZ0P9rpPjF0PyXY7TQs6D/eqRI8p2+
95POomdB/6NIIQ2/tacci+l82v/6P16a6OVer9qx5DOdT+vvfyDRGVQ4lfm/
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
wzE=
         "], {{
           {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
hm83e6ueP7/1N52/IHQ=
               "]], Polygon3DBox[CompressedData["
1:eJw1m3n8plVZxs+uUrlh4ZKBikpAmCQKWoniviGjsZqRhsbmiFDQQDjiCsKg
wyLqKKKgIrgBxqIywIgrmYxlKUoIgmaxKBYJCH6/53784/eZ97zP+77Pec65
7+u+rus+s2Llqx71upRSSak+g39bSv0L/Psa3npISuOtjM9n/JeMN2F8FB/5
HcbPYrye8SP53vUp5S/y3ja8/iHXH8zrPbn+Ja6/nu9vYPwmxk9gfBzXf4vx
MxnznfEIrl/K+G8Z/x7jt/MbF/F7a3iPa/UIrvOX38X493m9L3/e67V8/nf5
/NuW+zPnfCGvr+XvZ1x/LNc/wvUHcj/ulVYxvpHxlXz/3fF55zp+m3/v5fqz
uf5Zxjx3/Xeun8Mfb9er+LudF0/m+llcfxXjuxizVuVcxvvxe3/PZ3mu9A5e
/xn3+zSvH857X+c661n53Xw077F++Wt85vO85ntlU66/hc9/ivHDuPZVxsyp
/i/jHbn+McZ/w/gXjJ/C+KOMX833/4kx61DYh/FGxvxGeihj1mj8gN/jt9Jf
Mfb+b+A67+dL4jP9zVxnXdNfc51nG4fx3qFcZx0T8+m7cb/LGJ/CHwtQWed+
Mde4b3kQnz+GMb+ZiYvEPnf398Ll9+7P9dWMD+G6c2Kd+qO5H3NN7+W3WIvx
Pd5zLjxX4fuD+dTL+fx7eG/w7xVcZ10T88j3LPNzfV7O54nRwVo3niO9kjFr
OQ6ZIZvScxifx5j51hczNiZ24vUn+f4JjB/PdeYwrln2b3vGXBvEeD9viVfu
P4iT/k6+e17ETGdfK2uZ7uC9zfkjVvuB/PsPscf9vtzfQHku3ydPBnFcv8F1
Yi8TB/U/+OOZ8wWxB+5xvZvP/wmf57kGMVx53nxE/GY1Ln/F9Sdxne8PcqK+
jPGP+eN7lbl14+svuF65fjj35zfSKxh/hbHrR7ylPRh3xvxm35/fdo95vv58
fsPYZl3TTbw2f1jb9BP+uG89a9mPU/k7ktfMsTFOT2XMHAYx0ty/rRnzXIOY
bu4X88zk+WCP+mcY78793W+eq97K+DGMz2BMjNTbGG/J+MOMH8Dnz2b8Er5/
V+xnZ37ppYyZzzh0yYc/5PMfZ2zMfYLxrly/e4nvzy3xTi4P8qyCZ9lcexx/
G7nO99LzeP1/Cx5tHdfLhxiTQ80Aehpj4ni4p8dy3Wfi3/6PXAdTEmtRiKHB
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
Qz0JxjS9mJWhmdXO7TsLvqhXWfOmN+X5ksUbaXo7rw8NrZZuekX2WtSj1Pdm
f/j44NDzPI3e0aHhMeg12GuY66EXAKY0uZYa3fhWHxg7+ungSjfn3Ev9SLWU
frjcRA2t/2RP3LUy5uQyWwQH8qzt9E+c06pYi+mv+AznRyxO/5PYVjN61mzy
ac+0nLvwa/mufpX9ITHa2HKNPBtlT5EaphZVg3uWyR6j2lyN7lkne35qd8/o
e1bfM6JNzBPbPUPiWQ3PXH4/fEQ9kw42qak9G6bGV2t7Bn/6U55FEnPFev1t
/SrPfHnWzDNNal37Dfb49Pg2Cz6sR+vZNzW63q0afvJ9+buejmfl7Bepb1YH
R/Qss2de5I6esfGst2dkPHujZvcsoJ6FWl7PwrNZU1+Y49Ye+SJaoIkhYr34
DTY0z5zaW9XD18sQI1ZHbsx+kjVpbdSiqd/ELGuXnJA8bMaUtUvOxzM0Nb+9
V884qifFpA8tekr9pD46Lmrp1K/WWHPJ/rbeiH7lmsC+qR/FRGudZ6zEImug
Z/PAYz0LvQI9lKkH1X/qJbHM/ppnudTUclVqqGcaumf2PJdgv019x17qSXh2
T89Fr0IPyLNv9mz1hvSIpl5TL8oPzXUxXH0uZ9Cb1iOCF+m9+38O/L8H0w+0
xntW0zOi5JC9Sj2VIh/z7IhnZPRKPH+wT/Ab48XesGeeO9jZPOvPfPW0/f8T
elDFM2g8h96UNcRaogfUfxnjekhoNGuNHotnJ/WA9F7s8em16xHqFU49oAaw
vspZPCsovwT/9DqsadMv3hh6SI/Es516PHon7ezggnJiubGei2cFp7/s/8kQ
68VsvRj7O3pFJ8U9p19n7bCnbu20R+/ZRj01zw6dGXik9yTHlmvr2Xi2VU9J
L8czZEWNIVd7ZNR8a7/f6foN1g7PIDFvvTbn6//lsMcuf9VTK/ZT9aLsJ9qv
dD6bhR4ZC/eZ/oOf9/93WOOsXQ/7NeiiUjs=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt13WgRkURBfC9s7vX7m4RAxQVu1sxMLGwEFGxUGwxUFHB7i5QsRMLbOwW
FVSUsLs7Qf2d970/9r1vz927Oztz5szcPfbfZ4eHtNbKOMmYrY3/ttbPC7qF
+aHmjwT/FnZj2MGw78Lg8yewa8AeB/sq7MXGx81f39pyHOzinv/Rul/7f0P4
U2HfseY1sB/Drg57rHFAa+s94afAzm1+M+usGQ83ToWdB3Zz2GvNH+Fdz+ot
zvgZ7Gqe/xV+NOxw2Ldhl4T9GfZh2KthX4adH+YOkz3dXvWszX3HG2AvM3+V
de7VLmX+HMP7fXe43+371r0R9icYn9SzYSfDnDc/af4743LGZd2DPfP31t3U
/BnG02H3grG93ukMa9v1Pf837FOwvxlXhXs2n2mwo95kzrcLH61ng/3Bej4p
z9uJzuXfaZ9+E9ghsO/BDjM+Ye4+y7dgl/CcveMo2Mthn4Hxbf+Vd/mk3gz7
KczZ/S/WfQj2CtjnYPzdxWzC+y3hz4X9wBp2zcTDXfoDrcWZiRMTZ/rlrXPP
9gHr+HYOWHyyN+z9sNzt3t65P5wvu98zcfugNfzfD988y5oRW69tztbuThO/
xkesE/d+JJw98zEGeyo+DHfvYM2ZYXhZ77VG/Bb3X91lHOH5Bcy/4v2PWoNz
82Kw/5hb3/lu4vzku/J8wcN2G++dDsau+hjMvdttYaeHPcn8fN7jq/558ycb
9qj3wfmsiUv/n7XXMq7pmfcrseSjaU2JT53Luvt5voMh5g3Wr2c8zJp/GWJc
fLngR8OlscBeB+PLhd/abrCkK19WOLhsUni9EExuFB9WFtzJurPC3mHu/nVG
WHKN/fOt5p81xK/dGRauvc38S4Z7tnvA+G++3VwO1Rlge8Fow8TfLj+7fGw/
hOHT5Oc61jgH7L6wi8DeY/5N4+yw+8AuDLO2Pm102B1hZ4Hhf9GQOhMMZ4Z8
neJYdKTOCdsXdlHYu8y/brhTeW/lv/luv79hsL+FP3wwcu6L2JeYiNekcYNW
DZozxbh+5F38HPJ1yIEZfrnHKod7dOU0/rO3u8cUgxGu2L9u5Bm+jv3g7O/0
ou4CY9egb1MQOv2pPWHuNJ5iiGO9FC4vFrGc8TUuDOdPfC45vdpnJB7Pty5x
z177w+Ln3JV+NnuMB8Hl/CLGnV87v0w6O8Ix/OjR8h39pxkjPqG3qxiPrKEJ
45+eyZOiQS16/QAD3zpf1g1gLzGX20N8Gv4uv/RM7s/nweLnF5rjUcOP/nMY
nncxLbnR5MpIbtm3XuDdL2zsnHRwXMW4st/RZPutu5jT1bJHp1+NPwctGdcx
5P5MHaGB667m8mJcFxZ9o1nrFcwzPJvRNzq+7mSfv9vn0v4nl9SB1XTsbHg2
5U3R95UfVmtW+IzmsWG9jDUZ8JlYsWflqymnOs7VHjaiNePxW+Wxdbyu2/kh
90a0CWeG+8xo2QneFf+JS91961HWfdFzcR3hN81Y/gFTR4Y8mb+xDqfqabDj
YbR1HgOTn5X6Q3/XxEndKr4u927WjrsZYlx0q/ih4cu4q6H2FM4UexpdGrg2
8XgR0y7veurdPvDULHEv927yY0QnUt/SClzRH3V+3N1IHYy2XAmGdyOaEK7m
jnK00aJ5QXO+76e1jt61cCW5nvohH4ofmjo49tqu+3Ku8K7YtOLHOHFbHw/e
xH6LA8lxMSx52HKvHbdz/5iNzkXvVr6dON6dX+xqcn48GubdTu+L/Q1nR9Yl
V+hCsaHRqZH6QR+KrQteLdEq/J9qZYnBwqaFVs5dtjX26E09SV1Z99uOkfuX
OBT7Vjo25U6J1eL8hd0zvQTNWdLT8E1nz2TXyB2+BhfPdnvz+O/YbX4+YcPD
LT4ev83Pgza5kxyasL7T5sycvaZPok/deeWspjaO1NZb2T+1/ZWGuj7VtCFW
XVIUDWz6mhEenLSdZ4dsciy5tpUXJ2/0NTqb87f6HP1TJdf5ak1Oy90KL1NL
+Xg4c9DOCi/pctM3DvwdvzDnuxLDJj7j1vZTg3rq+QGb2jzDDTW808tuTaP5
k28mWxe1cokOuu9M3aIrnf4UrhSurOnX6ODyYLha1RMfOTZTY+h2+rL0Z2t6
kOh4tFisGg3u9HCqbV19Kuc1OTJSK+heiXXRi4YrI/0A7ankF01o6t7YfbvX
U4vTw6aXXdP/qC2ldyn3atHw1G/9VMmREruWGCfu8afzS7zbE81TC+lBsb3o
UzvQPH1N9pJLRZOac0b6EPlS2RN32kPN9Yfj5G19TK7R94HPQ2wre+J+01sM
ve+gTZX7JX9z1902/VT6qk5Pe/owtg46XYkdnze+HfqaybcL+7sc6vJt4vB0
346blbjpHQbtn+m16FuxvyXHvT/pXxfXcs+m1g2+mWKwqEcLHnYaNHFu0MiS
tws7G973U7f7Ynm4qGeLHFjD3fQuNGFhZ6NPHccnfVzssfBFj/ap2SP9zFGb
fjJ95cg3jr6t2L+wvbG909GBV0XDF3dudGwQwxm76GvxXUsdTd7Q8zpyUxtT
I4c+a+Y8Z5eeqLF/+EaY7OrsKnnQ7D1ozZTPnb5W+iY2jPSy9u3OKvWv0Z8Z
vbJmkXtLvp30EpMvB80o7yw403BvJEfkW2dDiUmjKwO3Z2q2+NdBm74y/eVM
L40PJb8aXR2+ASaudPcsda3Ze8iJmXqcvMK9RseGXmeKwSI/ltQqvc6Uj5OP
utwrvG00eLB7pL+MltKEllqul5u0fmHnkh6DZs3049ES8V9O2K7XuDbTb9Gf
wuWmdx10a6Tn1Acs9KSpkSN6jKsLXV3yPRr+pHdLHy4GhZ8tWhe9onPds8Ll
pjcatH7yXRf7skfL/ntv6+nOm1qUmrRGY9T/Tn8L15v7DHVp6kM7nSva2sR+
8PdMn0HTSq1r+DX4YvJtpxmlb2x0dKT3xNkud4tGNf3PSF0+brvPOHDTO6SH
2Pp2OWLz3ZfvvzW9Xb5ro6nq7ZKeRZ5PdaLzW+kFG/8M/cBUPzrNLXnRcHjY
d/Jvt3fJvWafQeOnutajh+kTxWHQiin2XUxL/jX9/4iesG2rH05fQYO3euf0
j+42cWbJdwHezXxnyM8Suybvx57bunvKRpuj0WtiR9O676nyTksvlL5aHnUx
LXWj5ft1321t952Rvif9z5qa4h5b/Xr6nuRlco5Pt/q++FKuDHk28l2V/ita
mt4+31tyv+NhqTlNfzzyzZW+Ij13+p70l+kl+XSrL02/jjf5Lpi4VIdutCka
NdOv400dttGX6Mzc9f907j4k
               "]], 
              Polygon3DBox[{{1233, 727, 880, 1528, 1064, 1065}, {1429, 665, 
               471, 470, 976, 1413}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klIVlEYBuBz/H+nnEHaiIpGCokStBKyAZe5yCDBhCRtY4RCVCYmmNqs
W0Nca8s2tpZUBCFdOE85QNDKvcuei4uP5/0uh/vdc8590NdV1RtCiGoSTy9y
fMjzEFJ/Wcx/rPS8QD6TG0LIvKEvkZtCSGezhZfZwRpVKz9jMwesfSy3yp/Y
yW9MZs9yiD85ziXvvm19mXqt32CXuhZCxrB+k++4xRFuc5Q7HOMu33OPH7jP
j8rccMDPPOQX/uFXHjGZfcwJntjnSzPLVb/+lN2qzjd+169ziotM3jPHQc7w
+cVZpu03mJu+zze8q+7IPbzCRyzlPWbypn2/NWNarpfNinnqur5Cf1W2Lr7Q
F/GJSp6t6QvZrlZldxTNib/lfPtwNvGWnLxrhZc8c0bxh5wr21+sVsv6HDqH
WKXcQ3CvMfkvFuQs+sb4S/YdKXcRG+W0nKxpk1OcZ4b4Sq5I/qn/K8lDXA==

             "]]}, {Line3DBox[CompressedData["
1:eJwNz8kuQ2EYBuCP9oirEG1xH4YNVUN1J6aGIIaaFqyJWEp7E2bFPQg7JOy6
EMMd2JmexZP3m07yn2KlnFmNiCbGI1LvEUkb3VQjWm7N3tTtZPR3EekjdYU1
Nlgny6/9vZxxcyxHGGWTIjn7R1lm1s2JHGaMkp03JD3mp3KZP7Nm/Zk3fOi/
9Cn9uXpO/SQ72OeAmllD7rHLof7V/YXvP/Ur+rT+Uu2fk1aWzF7kjnldDjDJ
lHkiexlk3v5K5plm2/5Z/tDHEAturmWBb/sHucUEXfSz6OZGdv4DroIv2Q==

             "]], 
            Line3DBox[{999, 1311, 1319, 1428, 1735, 1366, 326, 1320, 372, 
             1747, 1365, 329, 1321, 1738, 1204, 1367, 330, 1349, 1741, 1205, 
             1379, 1524, 1542, 1206, 1000, 1543, 1207, 1001, 1544, 1208, 1002,
              1756, 1413, 1429, 1755, 1421, 1420, 1430, 1759, 1003, 1545, 
             1209, 1004, 1386, 1546, 1210, 1399, 1526, 1547, 1415, 430, 1382, 
             1527, 1548, 1425, 1211, 1368, 1742, 408, 1403, 410, 1323}], 
            Line3DBox[{1005, 1289, 1324, 1431, 1723, 1369, 1371, 1290, 1326, 
             1432, 1724, 1370, 1372, 1291, 1328, 1433, 1725, 1006, 1322, 1549,
              1212, 1007, 1550, 1213, 1008, 1551, 1214, 1009, 1552, 1215, 
             1010, 1553, 1434, 1634, 1011, 1435, 1635, 1012, 1436, 1636, 1013,
              1554, 1216, 1014, 1536, 1555, 1217, 1423, 1760, 1422, 1218, 
             1015, 1751, 1402, 1219, 1404}], 
            Line3DBox[{1029, 1225, 1562, 1028, 1224, 1561, 1027, 1223, 1560, 
             1026, 1641, 1441, 1025, 1640, 1440, 1024, 1639, 1439, 1023, 1638,
              1438, 1559, 1022, 1222, 1558, 1021, 1221, 1557, 1020, 1220, 
             1556, 1019, 1637, 1437, 1018, 1727, 1297, 1329, 1296, 1017, 1726,
              1295, 1327, 1294, 1016, 1531, 1743, 1293, 1325, 1292, 1331}], 
            Line3DBox[{1031, 1298, 1330, 1299, 1728, 1030, 1300, 1332, 1301, 
             1729, 1032, 1333, 1350, 1334, 1739, 1033, 1442, 1642, 1034, 1443,
              1643, 1035, 1563, 1226, 1036, 1564, 1227, 1037, 1565, 1444, 
             1644, 1038, 1445, 1645, 1039, 1446, 1646, 1040, 1447, 1647, 1041,
              1448, 1648, 1042, 1566, 1228, 1043, 1567, 1229, 1044}], 
            Line3DBox[{1046, 1302, 1335, 1303, 1730, 1045, 1304, 1336, 1305, 
             1731, 1047, 1449, 1649, 1048, 1450, 1650, 1049, 1451, 1651, 1050,
              1452, 1652, 1051, 1568, 1230, 1052, 1569, 1453, 1653, 1053, 
             1454, 1654, 1054, 1455, 1655, 1055, 1456, 1656, 1056, 1457, 1657,
              1057, 1458, 1658, 1058, 1570, 1231, 1059}], 
            Line3DBox[{1063, 1308, 1340, 1740, 1232, 1061, 1339, 1571, 1233, 
             1065, 1572, 1234, 1067, 1573, 1235, 1069, 1574, 1236, 1071, 1575,
              1237, 1073, 1576, 1238, 1075, 1578, 1579, 1239, 1077, 1580, 
             1240, 1079, 1581, 1241, 1081, 1582, 1242, 1083, 1583, 1243, 1085,
              1584, 1244, 1087, 1585, 1245, 1089}], 
            Line3DBox[{1088, 1671, 1470, 1086, 1670, 1469, 1084, 1669, 1468, 
             1082, 1668, 1467, 1080, 1667, 1466, 1078, 1666, 1465, 1076, 1665,
              1464, 1577, 1074, 1664, 1463, 1072, 1663, 1462, 1070, 1662, 
             1461, 1068, 1661, 1460, 1066, 1660, 1459, 1064, 1528, 1659, 1351,
              1338, 1060, 1732, 1307, 1337, 1306, 1062}], 
            Line3DBox[{1091, 1309, 1352, 1471, 1733, 1090, 1418, 1419, 1758, 
             1246, 1092, 1586, 1247, 1093, 1587, 1248, 1094, 1588, 1249, 1095,
              1589, 1250, 1096, 1590, 1251, 1097, 1591, 1472, 1672, 1098, 
             1592, 1252, 1099, 1593, 1253, 1100, 1594, 1254, 1101, 1595, 1255,
              1102, 1596, 1256, 1103, 1597, 1257, 1104}], 
            Line3DBox[{1105, 1341, 1398, 1407, 1408, 1753, 1406, 1405, 1417, 
             1473, 1752, 1106, 1598, 1258, 1107, 1599, 1259, 1108, 1600, 1260,
              1109, 1601, 1261, 1110, 1602, 1262, 1111, 1603, 1474, 1673, 
             1112, 1475, 1674, 1113, 1604, 1263, 1114, 1605, 1264, 1115, 1606,
              1265, 1116, 1607, 1266, 1117, 1608, 1267, 1118}], 
            Line3DBox[{1119, 1397, 1476, 1748, 1410, 1409, 1477, 1754, 1120, 
             1478, 1675, 1121, 1609, 1268, 1122, 1610, 1269, 1123, 1611, 1270,
              1124, 1612, 1271, 1125, 1613, 1479, 1676, 1126, 1480, 1677, 
             1127, 1481, 1678, 1128, 1614, 1272, 1129, 1615, 1273, 1130, 1616,
              1274, 1131, 1617, 1275, 1132}], 
            Line3DBox[{1134, 1482, 1679, 1133, 1483, 1680, 1135, 1484, 1681, 
             1136, 1485, 1682, 1137, 1618, 1276, 1138, 1619, 1277, 1139, 1620,
              1278, 1140, 1621, 1486, 1683, 1141, 1487, 1684, 1142, 1488, 
             1685, 1143, 1489, 1686, 1144, 1622, 1279, 1145, 1623, 1280, 1146,
              1624, 1281, 1147}], 
            Line3DBox[{1149, 1490, 1687, 1148, 1491, 1688, 1150, 1492, 1689, 
             1151, 1493, 1690, 1152, 1494, 1691, 1153, 1625, 1282, 1154, 1626,
              1283, 1155, 1627, 1495, 1692, 1156, 1496, 1693, 1157, 1497, 
             1694, 1158, 1498, 1695, 1159, 1499, 1696, 1160, 1628, 1284, 1161,
              1629, 1285, 1162}], 
            Line3DBox[{1164, 1500, 1697, 1163, 1501, 1698, 1165, 1502, 1699, 
             1166, 1503, 1700, 1167, 1504, 1701, 1168, 1505, 1702, 1169, 1630,
              1286, 1170, 1631, 1506, 1703, 1171, 1507, 1704, 1172, 1508, 
             1705, 1173, 1509, 1706, 1174, 1510, 1707, 1175, 1511, 1708, 1176,
              1632, 1287, 1177}], 
            Line3DBox[{1191, 1344, 1722, 1530, 1190, 1721, 1523, 1189, 1720, 
             1522, 1188, 1719, 1521, 1187, 1718, 1520, 1186, 1717, 1519, 1185,
              1716, 1518, 1633, 1184, 1715, 1517, 1183, 1714, 1516, 1182, 
             1713, 1515, 1181, 1712, 1514, 1180, 1711, 1513, 1179, 1710, 1512,
              1178, 1529, 1709, 1342, 1343}]}, {
            Line3DBox[{447, 864, 948, 655, 1736, 448, 903, 904, 902, 939, 
             1747, 660, 464, 913, 914, 912, 1724, 670, 476, 854, 1726, 682, 
             491, 857, 1729, 697, 506, 859, 1731, 712, 521, 1659, 880, 727, 
             1571, 536, 985, 742, 1758, 551, 964, 1752, 757, 566, 967, 1754, 
             772, 581, 1680, 787, 596, 1688, 802, 611, 1698, 817, 626, 1710, 
             832, 641}], 
            Line3DBox[{449, 846, 895, 847, 1537, 898, 886, 866, 932, 867, 
             1542, 467, 673, 1550, 479, 685, 1556, 494, 1643, 700, 509, 1651, 
             715, 524, 1662, 730, 1574, 539, 745, 1588, 554, 760, 1600, 569, 
             775, 1610, 584, 790, 1618, 599, 1691, 805, 614, 1701, 820, 629, 
             1713, 835, 644}], 
            Line3DBox[{450, 961, 942, 944, 943, 1538, 451, 663, 1543, 468, 
             674, 1551, 480, 686, 1557, 495, 701, 1563, 510, 1652, 716, 525, 
             1663, 731, 1575, 540, 746, 1589, 555, 761, 1601, 570, 776, 1611, 
             585, 791, 1619, 600, 806, 1625, 615, 1702, 821, 630, 1714, 836, 
             645}], Line3DBox[{452, 868, 869, 1539, 453, 664, 1544, 469, 675, 
             1552, 481, 687, 1558, 496, 702, 1564, 511, 717, 1568, 526, 1664, 
             732, 1576, 541, 747, 1590, 556, 762, 1602, 571, 777, 1612, 586, 
             792, 1620, 601, 807, 1626, 616, 822, 1630, 631, 1715, 837, 646}],
             Line3DBox[{454, 936, 937, 935, 1746, 870, 977, 975, 1756, 976, 
             470, 676, 1553, 482, 688, 1559, 497, 703, 1565, 512, 718, 1569, 
             527, 733, 1577, 1578, 542, 748, 1591, 557, 763, 1603, 572, 778, 
             1613, 587, 793, 1621, 602, 808, 1627, 617, 823, 1631, 632, 838, 
             1633, 647}], 
            Line3DBox[{457, 945, 946, 658, 1540, 458, 667, 1545, 473, 1636, 
             679, 485, 1640, 691, 500, 1646, 706, 515, 1655, 721, 530, 1667, 
             736, 1581, 545, 751, 1593, 560, 766, 1604, 575, 1678, 781, 590, 
             1685, 796, 605, 1694, 811, 620, 1705, 826, 635, 1718, 841, 650}],
             Line3DBox[{460, 901, 849, 891, 850, 1541, 924, 888, 952, 960, 
             871, 951, 872, 1547, 982, 980, 981, 1555, 487, 693, 1560, 502, 
             1648, 708, 517, 1657, 723, 532, 1669, 738, 1583, 547, 753, 1595, 
             562, 768, 1606, 577, 783, 1615, 592, 798, 1622, 607, 1696, 813, 
             622, 1707, 828, 637, 1720, 843, 652}], 
            Line3DBox[{461, 919, 873, 892, 874, 925, 1749, 889, 953, 875, 938,
              876, 1548, 993, 994, 990, 992, 1760, 991, 488, 694, 1561, 503, 
             709, 1566, 518, 1658, 724, 533, 1670, 739, 1584, 548, 754, 1596, 
             563, 769, 1607, 578, 784, 1616, 593, 799, 1623, 608, 814, 1628, 
             623, 1708, 829, 638, 1721, 844, 653}], 
            Line3DBox[{462, 877, 893, 921, 920, 1744, 949, 922, 923, 908, 963,
              1742, 962, 959, 957, 1751, 958, 489, 695, 1562, 504, 710, 1567, 
             519, 725, 1570, 534, 1671, 740, 1585, 549, 755, 1597, 564, 770, 
             1608, 579, 785, 1617, 594, 800, 1624, 609, 815, 1629, 624, 830, 
             1632, 639, 1722, 882, 883, 884}], 
            Line3DBox[{640, 831, 881, 1709, 625, 816, 1697, 610, 801, 1687, 
             595, 786, 1679, 580, 771, 1748, 968, 970, 969, 565, 756, 1753, 
             966, 965, 979, 978, 550, 741, 1733, 861, 535, 1740, 726, 1732, 
             860, 520, 711, 1730, 858, 505, 696, 1728, 856, 490, 681, 915, 
             1743, 917, 916, 475, 669, 1723, 909, 911, 910, 463, 659, 1735, 
             905, 863, 446, 654, 1734, 862, 885}], 
            Line3DBox[{642, 833, 1711, 627, 818, 1699, 612, 803, 1689, 597, 
             788, 1681, 582, 773, 1675, 567, 1598, 758, 552, 1586, 743, 537, 
             1572, 728, 1660, 522, 713, 1649, 507, 698, 1739, 879, 492, 683, 
             1727, 855, 477, 671, 1725, 853, 465, 1738, 661, 906, 851, 907, 
             928, 1737, 927, 926, 897, 865, 947, 918}], 
            Line3DBox[{643, 834, 1712, 628, 819, 1700, 613, 804, 1690, 598, 
             789, 1682, 583, 1609, 774, 568, 1599, 759, 553, 1587, 744, 538, 
             1573, 729, 1661, 523, 714, 1650, 508, 699, 1642, 493, 684, 1637, 
             478, 1549, 672, 878, 466, 1741, 662, 931, 852, 933, 934, 930, 
             1745, 929, 894, 845, 941, 896}], 
            Line3DBox[{648, 839, 1716, 633, 824, 1703, 618, 809, 1692, 603, 
             794, 1683, 588, 779, 1676, 573, 764, 1673, 558, 749, 1672, 543, 
             1579, 734, 1665, 528, 719, 1653, 513, 704, 1644, 498, 689, 1638, 
             483, 677, 1634, 471, 665, 1755, 987, 989, 988, 455, 656, 1757, 
             983, 972, 974, 973, 887}], 
            Line3DBox[{649, 840, 1717, 634, 825, 1704, 619, 810, 1693, 604, 
             795, 1684, 589, 780, 1677, 574, 765, 1674, 559, 1592, 750, 544, 
             1580, 735, 1666, 529, 720, 1654, 514, 705, 1645, 499, 690, 1639, 
             484, 678, 1635, 472, 666, 1759, 986, 456, 1761, 657, 971, 984}], 
            Line3DBox[{651, 842, 1719, 636, 827, 1706, 621, 812, 1695, 606, 
             797, 1686, 591, 1614, 782, 576, 1605, 767, 561, 1594, 752, 546, 
             1582, 737, 1668, 531, 722, 1656, 516, 707, 1647, 501, 692, 1641, 
             486, 1554, 680, 474, 1546, 668, 950, 940, 956, 459, 955, 1750, 
             954, 890, 848, 900, 899}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
          "]],
        Axes->True,
        AxesLabel->{
          FormBox["\"Underlying Price\"", TraditionalForm], 
          FormBox["\"Time to\\nExpiration\"", TraditionalForm], 
          FormBox["\"Option\\nPrice\"", TraditionalForm]},
        BoxRatios->{1, 1, 0.4},
        ImageSize->{300, 300},
        Method->{"RotationControl" -> "Globe"},
        PlotRange->{All, All, All},
        PlotRangePadding->{Automatic, Automatic, Automatic}], {157.5, -225}, 
       ImageScaled[{0.5, 0.5}], {300, 300},
       ContentSelectable->True], InsetBox[
       Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
89jo373gv5swrFRdf9xxQ89FSeyAlYXridbcM5Eusq/Qc5E+y2PcaAeiNqrg
p8LqU+iZu35vNlFyKwkczeOHngt5eDTe5Iwhcpnl7f7F89BzgXdS73kdRSLV
sdKgQHU3nU9je39dsZOPiAr3j5aLiRqRT2um8ml36TzPUP/DCO+NkyZfK0+j
Z27/jzH7s++99q54i565/d/G/HNw5Ucjvj/omdt/N2ar7dOMb6ne6Jnbf2tm
/VTSML78Cnrm9n8qsypypVL33Qo6nzbUfy1miUaQ0/0VK9FzKds7w6hhMmG4
TwhokD6Lnktt9KP65zCI1sU6LbGxr9FzSRL7wLtgCaIWX+v13eUkeuauE+4h
Sn8l1/j796DnYpbNtNVTfxL5U1q9JYqL0XMxD4/8+JNfiIy7Vt2bQiH0/M07
qaWHnUbEhf/MH0wLHpFPu0fl046gZ27/FxP+kMFB3uhR6JnbfyaT86jwd0t8
OXrm9n88s9fK9nfcTH/0PNT/HyrMjoq6rOAn8uh5qP/TBJjNH6vfnDp9ET1z
+9/GrDsmoMSn4YCeuf0vZVbFT4tKmb8XPVd4J5V9WtxMGPtCkitk7dBzOdv7
2eWY70Sr8UFJ1up09Fxuox+2ruc9UR+t13JrTCR65q4XTSTKLJvA0rTj6Pn7
0Hqu6/89L/jX1AW/Q89lLJvxH9rOElkjsT7e2n3ouYyHRzTMfB+R+KzVGBCr
PSKf5knl086h56H+L5Eigkvnb7vGTEXP3P73E96IGZmj7tKeuf2vZ/5NG5w0
1mEdeub2v5DZbaIS+9aQgZ65/U9nth/LDee/VICeuf2PYzbNGjNn9Cw6b8nt
fxiz9sv9DZO0wtFzFYfTP+V7EWFc+nJoyaxe9FyVxN54VdieaM+/8CyIj4We
q4b2Q7wh6lcONW/Ypoyeue9JZxAV7Y5Sk+xGOp/G9k7MOfaQKPzcv99mznk6
n8ay0TOJ0yeyv+WSMls/0/k0G/0LV75eJVLeG109F2mMyKfJUvm0qeiZ2/8a
ItTu/fFzuRB65vbfjfCbxpjo3dRDz9z+5zM5HRGe63sK0TO3/9bMPods35pk
UTqfNtT/NOaf3V8n7P/QQ+fThvo/hdm20q2fN6CZzqcN9f8u83dZmq6c6Fk6
zzO0vs+EMBJ7fvP1NqNn7nqAe0T7ilPwm9eZ6PlHEntdXo0O0RA+qXjPRQ49
c9cVhBGVmJdvbzk6oecf+qy5ETMkiOIRUSmL9nY6nzb0Pvookbuyr16taTOd
T2PZaG043Uuk67dHs5e2jsin+VD5tGw6zzPU//lExCfo85fqIvTM7f9zIvAi
R2yD5UX0zO2/MeHdq2nepvgJPXP7H8scmJ59JjdAAT1z+6/B7JmX9uhjuQ6d
TxvqP4vZyRuj6O4SS+fT/tf/M8LMVo+XZQpOxXSeh2WjkG95gTAKDyRUfvtC
53ls9I/N2CZCtJscVjXto9931HA4bZFXDhGN7ZPkD786gJ656y46iaq+ewOj
2wA913gn5W5q3ESUZNMkVxpJoGfuOoRKIm96t83gdhmdT2N735/OdCEy0Q92
XK5WHZFPy6HyaYfoPM9Q/28Q0fxkRpfTGDrPM9R/FSKkH5j9IqASPXP7f47w
lV/bYdajj56H+p8hwOR0+/y4qqOLnrn938fs+z1f1jBqGXrm9r+V2XX6Zfrv
j8l0Pm2o/+uZ7W+/xaUt0EbP9WzvG9f7Wgij88sa/7YM9FzPspER1vckOnoL
blU8HEDP9Tb6h7wdyojG16uZ84Vr0XMdh9NYsGcxUY049WbXsjz0XJfEXjHz
+nuiFF6ufyGwGj3XeSd9iMo2I/IF3oHdj63Rc50+a4Zgx1Mia2V7cbbf/RH5
NEMqn6aKnrn95xBx7ZfzzJwU0TO3/7uJ8O6Dnvt6q9Ezt/+NRMD4zLn73fPQ
M7f/awmvdesncy8e9MztfzFzYGfRniy5H+iZ239HZk/f6Kctvkromdv/DOYf
5XG79syxpfM8+iwjn0cORFduYE5roQl6bmB7RxQVZxId26bkQN/36LmBZSM+
m28W0Zz+9+qz+FT03GCj73fTMJ6oSZXsdf3ZT+fTOJx6EWcDoqyxPWl1+hs6
n5bEXrr1UARRWDsh7K+XOp1P807KLLwjT2Qrs/gj/siOyKedovJpdP6B2/+V
RGL5tbhI3Vb0zO1/IRF5etaBE7UDPXP7b0sEt+17M6twFXrm9j+d8J2Ic9V2
J3Q+baj/05iciqM754aOofNpQ/1/wOxfFFLTmi1C59OG+s9gdjv16Lt60+O5
yTsp1czjPtE1ztDyvHSAzvPos8beOqtLdLZ7XbriKoCeG9nel8WSLhPNi2fD
53fXoOdGlo3Qtkopora/JL54Tht6brTR3/VN9DhRvrRERWPXdTqfxuH8mDO5
jyj8Eve4IJpL59OS2Iui3bYTue07Y055LRmRT6uj8mn0fIPb/1QiefTV3u3z
dOg8z1D/JxPRnyJPV4QsR8/c/t8hQtePv1E9Y4Weuf3XIvxPEsyErX3RM7f/
oYRXxe/ku6Mb6Hza//pvIsYcYN2b+HWMHJ1PG+r/YWbvka8C7IhmOs+TxLaW
VBEmuvYbFF0O0+t/uOtdDxGdsJcvu3Zb0XkefZZ+yaZOotly2qllIBo9c/eJ
bCZqP/l/3pU+jZ6bWTa8MS+riYrEDLMNllPRc7ON/jbxumVEcUP7RUkPbzqf
xuGU75DJJXJ9m0PHDL4YkU+zoPJpRnSeZ6j/KkTqmsJs91ALOs8z1P9zRJy/
QGii0EQ6z/O//m8WIMJv1t9e8HgUeub2fz8RKPSLGVg8GT1z+99O+Kaajdoy
ej565vZ/A5OTNnDh1glR9MBd12dH7QNdgB6ueqeuy4/eQqQUVd6cmiOOfChv
oytMpCbL3AgxC8f+DB0n5TB3f2jYYezP0HFiUphrdmSkLbxRinzoODpNzPO7
GrfGeYzB8/VMP4R5z24lUcnymN8e9mxYPmcvJ5TK53Rje25+w4CoytccfatP
vzfnPv/6EM3sa0EnrlZhe+7zfiRRDWD+9Qz1pdeT/O95bUc1YUzzCSkPXYLH
GXq+0+4gWvLyUXorjLE997kjkjBsn6l4Rpdge+5zyiOitf51TOWyl9ieO392
JYx1wr/avA3o99FD870zhHHEOGvam3PIjw4tE1xFGH7P5xZ0LkU+lKeqTv3v
70o+83M9hX+Xu/5wLtGsc/RtuKeDv3fI/40UolKmmaX39wSeR67nbCKdVTcz
7vwR5EP5qyc9REbVedIk3TAc5//rz3O+Ccwud5bPUsPZyIfyfn5RzEFblqf7
5I84/ofWoU1o4NbZO52G533o79qvZL7cdWrB0lJ6PHD/7npm1v26fDF9cRy3
Q7+rcNfQPotWd3q+MZRXPHWeu99hqRjyofzeZQnu+mTBT8iH8nUmVcyXLeeL
Lv53fUGcGfpdgr1mf/+3r/OFyYh82jwqn3YMfXLzAOJEjU9x9Ptf/eif+9y0
mWi92Bv4SaKNvi8MxYdXRHdq0HmFqfTzFJd/Z/Zfzmj45BeAfCg+KP9iDugV
8RqOv0xz2N/twe5YrCABx6frWB7m5L8Xc8PzCOsYpRrXrmg+hPND3PdHROJf
qE2n12XBusH7jZcEXZT00duwdd1f0odf77Af/DKdzwe+W/r5E+NFUngc4E7e
UQsWP9+Lvwv4xG89+eP7i0fEpZr/Ly4BlxLrnqQe8wPaj9intgzPF7RX+eJw
yctOE4/DzVcvJ1LxmSlmik/gdw3fdxai/n/5m/IzhbPDHm9/Vvp7AH/v0HXa
3cOU+9/+so4oHA+wn0UzNLLR/wY9v+XmnyWofWRlIzhBDuMHjsOYneC5yK8e
fxdwlZy7Hj3Kzci58aGZqKTX5q49EoeeYZ3wrcNfVt4QPILHh31eDMPTe0VO
ZiAfygPP+++53ihSyb3oLXJuvGUSxvhYrR3BXth/OI5mzCKnzG17kA/lmSMG
qP1iHsP5NWWKr8Pjw74whtErle6zdD+5eUuH//opO7FujxNybjxPJowJUQMB
553AA44HFQ7nZfxtg+HxJIdw920J70I/3DhmwNx3YWvBcxl55Nz3FN5MJ5FA
42jdXOTc9wUPmefndYr0N9LX71B8s73GvD43b3pMZDOOE+54q2VG8we9mahx
bXgcOzuWG8dWiuB55N5nm4hKdpgGZ90C5Nx+1hKVtN1Plrr5Icf9Vi9XiH0c
/WL4dfT8MF5HwLntNal99wYj7rNUHYanfXi9AJfuW8SJrZ814jjJ1HHGjeCw
r38M3heG7c8SaPq/66VfwXpphwm+w9unUO35e9EbjOcn9zL3GV8SGPGeaC71
nuj3sPcvezlG3PcvV9f837jxYu+orVTcWIrzvaFxkr+L2ieyCPnQ+TodTAQ/
bPzuG1KBHOKMoJh4xyw1QZy/Dd1/o7Yw45TYK52DxiAHDwmyW5MnL6XXqQ7F
E04PUekoWe8+ip7fwvE1c5uJ2RQmjjeIz8cu3uj2v/9ixO+l9nNFXMVxCPx1
u/kGe8de5EPjuaqZ+WSmpOPFzTLD76dhhHs/5TUbHv9T7bjx/1rC8PXnE5K5
68/jOobziZpcntCD/ee+b3JkPnd9MXnpuVDk3PdiR5nZTnPmt00VRA7rrpMa
Es+PPfcA+w/7DpJbqg7yKekNP495hDqPxngc7ns9MeaT8DymQv4s5EPzkKej
mHcbxv2YNWUcvW6Nu1+KaG8W/njl6gSMP7hP526d1fFHPjQfyl+pEMaDRsW7
HQV4HG6e5DPRTneZ3nh+P7bHfTrvN4xxC6Sf37n5EyvCeDF+8ZoAS7r9UB5m
LWFkml5701GOzxFDvzd3JzPtf/t3no3F5w4Yb2U5LtcSv+oiHxpvfauY6f/b
v5NOP3cPjdtbAcwises90+aMHz6vM6LmdWdGvh/cQr0fvDCiPdRblqbXBw7l
D38RxrX3VvLHRWhvQ3k8AcKIyV5auiYJzy/3vhPLLDwjvH2Mz1vk3PeJ45jF
q/P27jlAv++GcZInlFMxUbIAf9dQXGUEMqvmSps8Sq8Hb7ivh3FHp+HuMfp9
NzdPq0C0FTSSIi2uo2fudRHErLbyvVu5it5fANdXa4Xe5ld/6HVu3PuyKfO3
R2DMqecDyLnzYRlmyxVr58MDjXjdce+PB6l9MZHIue+FlzO/tL/TuxkUhBz2
7+R8WT+nbpCeJ4OHDIbstBOWOsOPH3GJe/ycR7hfjHufkiA6fTOcZuy5iftJ
gesV8iZKMUSwPhJwHgnGcsdKuv4txZmFP73WWK9XwOOkU/tY9R7qrCq5Mxf3
hwIXF99YxrO0Eo8PnH/bJeNS0Qe4z5fizL7bBZO7BjTw7wKvYS9YqaDqiPtG
gZcuJbG9G8uwP9zxE0b0WD6nxc6m4z594MorLE2rv3vgPmXgcqm8fxbJv8X+
A5c0KRi9s5+uCwpcSKXSoe2qIfYfOM+M4nulaS9wPxfFmd1a0qvtii/g7wLe
yif3meGpib8LeE3YwD6pcVa4rxN4mffr2lFq5lgfAPi7aW7KWVsHRuzH98H9
+LAfFrhG5OvoQxFT0A9w5a/fq26q6qEf4PK+MxKfRtxHP8CllTt+5liMRj/A
RRwvT6rOdkI/wPkuOUs920Pvd6M4s/9rqGl2pAj6Ad65RdDqluFx9AO8yVNX
uSp/NvoB/vOT87Xxtx1xHxzwsr4b0xuur0RvwAsaV90YtfUT7vcE/lH5r258
VST65D4nyhOdhrj3rCuTcLwB1/PX6dp1XBk9A9doGDAfc10BPQNXcerNzL3o
hJ6BK+hd3fnRdgx6Bi7jcbPRtsYEPQMXm3mIoy77Cz0DF7gR3eBoQtcPpziT
02p540HLKPQMvMclb9Lkr0z0DLzd1sT0yv1l6Bn4b513Hi5nZqNn4D9+MKaN
ihRCz8DLys2lD9z/hZ6BF76bymh9sgs9c/MtyUSHs1Z+XrQ2egaud2z3wdN3
Z6Jn4JpzRnHMxmehZ+Aqn9OvN/XNRc/AFd5ODs33SkXPwGUNUrIcRZPRM3Dx
5vAHqlvY6Bm40LZEvbrOMPQMnPfj33rrw1PRM8WZ/T+MVn1S90PPwP9cVb+n
JJ+GnoG3sgQVWHaj0DPwX8av+zmsNegZ+A+eSTyyU+j6OcDL9lsERX3bg565
+asVhKF82c/73kTkFUO/j4P1lsE/tNc7/YkTmfMbObSHus1wXqC95oXNVv2m
psih/ci6zdBe1XrzO4F9m5FD+5H1nKG94iotI7fkScih/cg6z9BetsS5ue/k
FuTQfmT9Z2gvuS+svMaerocJ7bl1oQNxPEB7EXmxrJntXcihPfc9tQ2OE2jP
v8tRdepcel82tOfWkbbA8UO1Z3J0jXRS525HDu259aUn4biC9j3xM/je+xsh
p9pTdaeDcbxB+47NO74HsHcgh/bcetR2OA6hfbNz2UJxtS7k0J5bp1oPxye0
rzur5b2uYDpyaM+tXx2H4xbaV0/KdpixZjxyaM+ta92H45b73j+fMBz2KPXu
Ho/jE7he9HKVQruLOA6Ba80oiDh/OQDHG3C1MT9EUn8tx3EFXGn70aLpqtdw
/ACXVwotVfpciOMEuIyq3fHYK/R3NICLtR74rbjdHs87cCH3TYemRc7G8wuc
b5fx8g8xdN0MijMH537NOW1/Hc8X8J4HY7tP+7/D8wK8U6gvWtQqC/0Db51s
unzbGnv0DLxB66fv+8RLdB2boff7t4je4wO+Wc/2o0/gWqf1BUVe30CfwNUu
sNnfbbzQJ3ClFhf/D0emoU/g8jEBJrkTtqBP4DKJf5c8Z9qgT+ASM3Rmzdlj
gD6BCz9kksiWFPQJnP91rVTgqwnoEziPp+vvTulM9ElxZr9a/56adGX0Cbxr
0WTJqAB6XgG8fbH+9YpfK9En8Gb+j6Pqj9M+ue/rdxO9N72dTdk86BO4Vskh
lVX7pqNP4GpdLFNJi/XoE7iyZ07xeq1I9AlcYfyaY7fLedEncFmrDU+XLKfn
D8AltyhWdT+l64EDF/m1X+SiqiL6BC4wMEnGKdYZfQLnvbrjoNPrP+iT4syB
rSdrUja2oE/gPQELBTYt7EKfwDs9Vn/tfXQIfQJv/d32ToURg3GA+/7dmjBu
vBn95+Bl9Axcr3BMiv6lV+gZuLZB1o/446fQM3B1F5vWaEtT9AxcuThwSaDB
GfQMXOGBUtsjVgN6Bi77JSldpfc3egYuda7U8LTWdPQMXEz+zOOZZZHoGbjQ
mFnvJ3nPQc/A+V43rWhJz0XPFGdy7k5va/Rcip6B990OPRQ43x09A+/ylJ23
3Ok9egbe/ilJTjxhLF33e+g9uxphvLzeqRhO6DrhFNerqX5kcqCYrgdOce3t
bUFl31PoeuAUV0+0sFz3Ip+uB05xFQvp1VeY1XQ9cIorjtqaOG9yNF0PnOJy
TsWT5nB+0PXAKS590/dBTs0Kuh44xcWNts2SLCmg64FTXNg8T3qHvjddD5zi
/Oz5dSl99PcagPPUhir4WWfR9cC5nPk3adbNBRkr6HrgFO9xPTdt6WZ6PAPv
jH4uvfgCPU/jrgdoJIySsbXPD/+h64RTXK/7z2nNrxJ0PXCKa6fybXt5Opmu
B05xDck3LVV21+l64BRXeVD+ve32MboeOMUVr8gm7Zr7la4HTnG5L2HPtLbf
p+uBU1zGyf6sY60/XQ+c4hKm+cUN++j7GnARp20/H89eRtcDp7hAfYr1cw26
jiJw3mZNwTfaF+l64FzOHHyydU3dcmu6HjjF++Y6Clmez6brgVO8a1u2jOW3
03Td76H3d2mE0WnTHHJnNV33m+I6vDzvgr7Q33MBruEx8EBH15qu+01xVRl3
VYmScLruN8WVhM/v9thIfwcKuLz11aJj93Pout8Ul/niciVgwxi67jfFJeeo
3hOeG0TX/aa46LINzN2THtF1vyku+Nu99XxzBl33m+J8jeIfrwXk0XW/Kc6z
cJRCyWAQXfeby5l/1YpzxAta6LrfFO+ZYnteKHk7sVjK3n2gg4F5JI2/P2tj
lPyJpWRS9cEzh5Aru21U3Fp6gFhmshwP6ZUhl20K/DZR8xyx2u/9/NCLGchF
f4af6UzsIdaTbQwOO11EzmtUYO3raUesf+mzDje2Y56q88GK/ZEN9sR2KXuT
v+YD5EUvg8Jv/UoidpJJX/2TRJFnzDr+iveYK7HLZM076uiJ/BFjbgjpOEfs
93s/PFqbiTwsjc1bH/fffGmyjdqxwzrID71hjVuX008cfukHHFc+gtzD3zng
6sFKrFcGeTAVpkZw2xRtqg5bHnL5qao+mY+ksa4acEmLza17NBWItfrQiwvk
gkcGi1+ELMS6YZAfGygLNqxK1yO2XeyNvDfpPNt3/9Xb2xUqsH4X8C/z7WYu
XrsD690BT1yeFJk3Q41YhrF3HhzIxHyXgs/f9+6LcomVQ1LFoTAGcpkZj07G
OM4n1gIsu8NGh5CLlCvmhRzoJNap3smH37KR8+3jmbFgyWliF8b2OjpmAea1
KoMLFHex4oi9Q1LB0fQHyIsC4q9XnH1GHARYzGPLRZF/ZJTtU2bHEIdU7/vH
2jYgT3/tapf/YDdVvxTzSET2bNGBU7EDWO8OuPjbteVha6uouruYRyKCB4p0
RJTqsW4V5IuqXHx2niU+VH2kAeTfyn5yZtqHYN0z4J9NMqeLhIsTq6/sbYdF
vDBvI+W+y7LiQRaxPptUdvh6JnKR0d/So0L+EPuv7HXHJrdj/qTqRvL9CeOW
EoezSZ+PfVyIvMS7yyD05UZivZu9lXMW8w9ELJTvennrMayHBvmBqrjWR9NL
yT/yAAn/eH6v+cdzevw/nscn/OO5+9Y/nq/P/OM52v4fz8vW/3guNvnH82/o
P55zHf/xPGvwj+fWhH88nw5iPMTnzUyG3eYTxhgP8XnzoVH35eybVDxk08+b
v1dO3UW2YTzE583jrvaGBYEYD/F5c1/qgXfMVoyHwMXDO7/vUp6O8RCfK9vm
SdzKlMB4CM99HPlGg2W+HIyHwHtdj0bOHbOEiocZ9HNlmHJClKEExkN8row9
22PVdRnjIT5Xlrrs+7txEhUP8TmLqIfWOunleGA8BK5cttzwe+8NKh7icxZR
2H/h/YOCNCoenkIuu/NTcuDXDVQ8rEUueVJw89LGFCoeDiDnNQ3Wf7I4joqH
rvi89tc/JjeoRZKqn5aMvPuA3JPqjOdUnFRA3mGjrZbLcwHrBAJvudwTfckv
FOMnPB+pvD5vvO7tCYyfwBU9zVdPm0IwfgKXW22xc/eJrRg/gUuvlD4idCgQ
4yc8H3FCZRo8+UwwfgLvc8703Jw3FuMn8D91mxau3bEB4yfwdqOs5pvT2zF+
wnOHkqXWCRHHLRg/gcvPzTHZeXsSxk/gMucCd0amiWP8hOeLAcZH28wgQYyf
wHsOfRBkFcRi/ATeGbx+8qJ7m6n46YnzcAXVRHeR2nNU/MxALrt+6h/OyzNU
/GzD+Xa/ZNDZwG4jjJ/Au5q/6LkZ7KLiZzI97zW5wP9x83SMnzCf7LU2n2a6
5h6xM/VO8C/D+Q/ztfcLr+avVcTcnOV0QCoM73e6J70O9gjbEPN+7/QDsR3I
taMHZ5S+SycWj23GH2QuRK62zcqyTsl8xHcufKjvXPT9g/eM+P6FD/X9i/B/
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
6mHm3zAUj5vJ2gkAVmU5+w==
         "], {{
           {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
hm83e6ueP7/1N52/IHQ=
               "]], Polygon3DBox[CompressedData["
1:eJw1m3n8plVZxs+uUrlh4ZKBikpAmCQKWoniviGjsZqRhsbmiFDQQDjiCsKg
wyLqKKKgIrgBxqIywIgrmYxlKUoIgmaxKBYJCH6/53784/eZ97zP+77Pec65
7+u+rus+s2Llqx71upRSSak+g39bSv0L/Psa3npISuOtjM9n/JeMN2F8FB/5
HcbPYrye8SP53vUp5S/y3ja8/iHXH8zrPbn+Ja6/nu9vYPwmxk9gfBzXf4vx
MxnznfEIrl/K+G8Z/x7jt/MbF/F7a3iPa/UIrvOX38X493m9L3/e67V8/nf5
/NuW+zPnfCGvr+XvZ1x/LNc/wvUHcj/ulVYxvpHxlXz/3fF55zp+m3/v5fqz
uf5Zxjx3/Xeun8Mfb9er+LudF0/m+llcfxXjuxizVuVcxvvxe3/PZ3mu9A5e
/xn3+zSvH857X+c661n53Xw077F++Wt85vO85ntlU66/hc9/ivHDuPZVxsyp
/i/jHbn+McZ/w/gXjJ/C+KOMX833/4kx61DYh/FGxvxGeihj1mj8gN/jt9Jf
Mfb+b+A67+dL4jP9zVxnXdNfc51nG4fx3qFcZx0T8+m7cb/LGJ/CHwtQWed+
Mde4b3kQnz+GMb+ZiYvEPnf398Ll9+7P9dWMD+G6c2Kd+qO5H3NN7+W3WIvx
Pd5zLjxX4fuD+dTL+fx7eG/w7xVcZ10T88j3LPNzfV7O54nRwVo3niO9kjFr
OQ6ZIZvScxifx5j51hczNiZ24vUn+f4JjB/PdeYwrln2b3vGXBvEeD9viVfu
P4iT/k6+e17ETGdfK2uZ7uC9zfkjVvuB/PsPscf9vtzfQHku3ydPBnFcv8F1
Yi8TB/U/+OOZ8wWxB+5xvZvP/wmf57kGMVx53nxE/GY1Ln/F9Sdxne8PcqK+
jPGP+eN7lbl14+svuF65fjj35zfSKxh/hbHrR7ylPRh3xvxm35/fdo95vv58
fsPYZl3TTbw2f1jb9BP+uG89a9mPU/k7ktfMsTFOT2XMHAYx0ty/rRnzXIOY
bu4X88zk+WCP+mcY78793W+eq97K+DGMz2BMjNTbGG/J+MOMH8Dnz2b8Er5/
V+xnZ37ppYyZzzh0yYc/5PMfZ2zMfYLxrly/e4nvzy3xTi4P8qyCZ9lcexx/
G7nO99LzeP1/Cx5tHdfLhxiTQ80Aehpj4ni4p8dy3Wfi3/6PXAdTEmtRiKHB
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
Qz0JxjS9mJWhmdXO7TsLvqhXWfOmN+X5ksUbaXo7rw8NrZZuekX2WtSj1Pdm
f/j44NDzPI3e0aHhMeg12GuY66EXAKY0uZYa3fhWHxg7+ungSjfn3Ev9SLWU
frjcRA2t/2RP3LUy5uQyWwQH8qzt9E+c06pYi+mv+AznRyxO/5PYVjN61mzy
ac+0nLvwa/mufpX9ITHa2HKNPBtlT5EaphZVg3uWyR6j2lyN7lkne35qd8/o
e1bfM6JNzBPbPUPiWQ3PXH4/fEQ9kw42qak9G6bGV2t7Bn/6U55FEnPFev1t
/SrPfHnWzDNNal37Dfb49Pg2Cz6sR+vZNzW63q0afvJ9+buejmfl7Bepb1YH
R/Qss2de5I6esfGst2dkPHujZvcsoJ6FWl7PwrNZU1+Y49Ye+SJaoIkhYr34
DTY0z5zaW9XD18sQI1ZHbsx+kjVpbdSiqd/ELGuXnJA8bMaUtUvOxzM0Nb+9
V884qifFpA8tekr9pD46Lmrp1K/WWHPJ/rbeiH7lmsC+qR/FRGudZ6zEImug
Z/PAYz0LvQI9lKkH1X/qJbHM/ppnudTUclVqqGcaumf2PJdgv019x17qSXh2
T89Fr0IPyLNv9mz1hvSIpl5TL8oPzXUxXH0uZ9Cb1iOCF+m9+38O/L8H0w+0
xntW0zOi5JC9Sj2VIh/z7IhnZPRKPH+wT/Ab48XesGeeO9jZPOvPfPW0/f8T
elDFM2g8h96UNcRaogfUfxnjekhoNGuNHotnJ/WA9F7s8em16xHqFU49oAaw
vspZPCsovwT/9DqsadMv3hh6SI/Es516PHon7ezggnJiubGei2cFp7/s/8kQ
68VsvRj7O3pFJ8U9p19n7bCnbu20R+/ZRj01zw6dGXik9yTHlmvr2Xi2VU9J
L8czZEWNIVd7ZNR8a7/f6foN1g7PIDFvvTbn6//lsMcuf9VTK/ZT9aLsJ9qv
dD6bhR4ZC/eZ/oOf9/93WOOsXQ/7NeiiUjs=
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt13WgRkURBfC9s7vX7m4RAxQVu1sxMLGwEFGxUGwxUFHB7i5QsRMLbOwW
FVSUsLs7Qf2d970/9r1vz927Oztz5szcPfbfZ4eHtNbKOMmYrY3/ttbPC7qF
+aHmjwT/FnZj2MGw78Lg8yewa8AeB/sq7MXGx81f39pyHOzinv/Rul/7f0P4
U2HfseY1sB/Drg57rHFAa+s94afAzm1+M+usGQ83ToWdB3Zz2GvNH+Fdz+ot
zvgZ7Gqe/xV+NOxw2Ldhl4T9GfZh2KthX4adH+YOkz3dXvWszX3HG2AvM3+V
de7VLmX+HMP7fXe43+371r0R9icYn9SzYSfDnDc/af4743LGZd2DPfP31t3U
/BnG02H3grG93ukMa9v1Pf837FOwvxlXhXs2n2mwo95kzrcLH61ng/3Bej4p
z9uJzuXfaZ9+E9ghsO/BDjM+Ye4+y7dgl/CcveMo2Mthn4Hxbf+Vd/mk3gz7
KczZ/S/WfQj2CtjnYPzdxWzC+y3hz4X9wBp2zcTDXfoDrcWZiRMTZ/rlrXPP
9gHr+HYOWHyyN+z9sNzt3t65P5wvu98zcfugNfzfD988y5oRW69tztbuThO/
xkesE/d+JJw98zEGeyo+DHfvYM2ZYXhZ77VG/Bb3X91lHOH5Bcy/4v2PWoNz
82Kw/5hb3/lu4vzku/J8wcN2G++dDsau+hjMvdttYaeHPcn8fN7jq/558ycb
9qj3wfmsiUv/n7XXMq7pmfcrseSjaU2JT53Luvt5voMh5g3Wr2c8zJp/GWJc
fLngR8OlscBeB+PLhd/abrCkK19WOLhsUni9EExuFB9WFtzJurPC3mHu/nVG
WHKN/fOt5p81xK/dGRauvc38S4Z7tnvA+G++3VwO1Rlge8Fow8TfLj+7fGw/
hOHT5Oc61jgH7L6wi8DeY/5N4+yw+8AuDLO2Pm102B1hZ4Hhf9GQOhMMZ4Z8
neJYdKTOCdsXdlHYu8y/brhTeW/lv/luv79hsL+FP3wwcu6L2JeYiNekcYNW
DZozxbh+5F38HPJ1yIEZfrnHKod7dOU0/rO3u8cUgxGu2L9u5Bm+jv3g7O/0
ou4CY9egb1MQOv2pPWHuNJ5iiGO9FC4vFrGc8TUuDOdPfC45vdpnJB7Pty5x
z177w+Ln3JV+NnuMB8Hl/CLGnV87v0w6O8Ix/OjR8h39pxkjPqG3qxiPrKEJ
45+eyZOiQS16/QAD3zpf1g1gLzGX20N8Gv4uv/RM7s/nweLnF5rjUcOP/nMY
nncxLbnR5MpIbtm3XuDdL2zsnHRwXMW4st/RZPutu5jT1bJHp1+NPwctGdcx
5P5MHaGB667m8mJcFxZ9o1nrFcwzPJvRNzq+7mSfv9vn0v4nl9SB1XTsbHg2
5U3R95UfVmtW+IzmsWG9jDUZ8JlYsWflqymnOs7VHjaiNePxW+Wxdbyu2/kh
90a0CWeG+8xo2QneFf+JS91961HWfdFzcR3hN81Y/gFTR4Y8mb+xDqfqabDj
YbR1HgOTn5X6Q3/XxEndKr4u927WjrsZYlx0q/ih4cu4q6H2FM4UexpdGrg2
8XgR0y7veurdPvDULHEv927yY0QnUt/SClzRH3V+3N1IHYy2XAmGdyOaEK7m
jnK00aJ5QXO+76e1jt61cCW5nvohH4ofmjo49tqu+3Ku8K7YtOLHOHFbHw/e
xH6LA8lxMSx52HKvHbdz/5iNzkXvVr6dON6dX+xqcn48GubdTu+L/Q1nR9Yl
V+hCsaHRqZH6QR+KrQteLdEq/J9qZYnBwqaFVs5dtjX26E09SV1Z99uOkfuX
OBT7Vjo25U6J1eL8hd0zvQTNWdLT8E1nz2TXyB2+BhfPdnvz+O/YbX4+YcPD
LT4ev83Pgza5kxyasL7T5sycvaZPok/deeWspjaO1NZb2T+1/ZWGuj7VtCFW
XVIUDWz6mhEenLSdZ4dsciy5tpUXJ2/0NTqb87f6HP1TJdf5ak1Oy90KL1NL
+Xg4c9DOCi/pctM3DvwdvzDnuxLDJj7j1vZTg3rq+QGb2jzDDTW808tuTaP5
k28mWxe1cokOuu9M3aIrnf4UrhSurOnX6ODyYLha1RMfOTZTY+h2+rL0Z2t6
kOh4tFisGg3u9HCqbV19Kuc1OTJSK+heiXXRi4YrI/0A7ankF01o6t7YfbvX
U4vTw6aXXdP/qC2ldyn3atHw1G/9VMmREruWGCfu8afzS7zbE81TC+lBsb3o
UzvQPH1N9pJLRZOac0b6EPlS2RN32kPN9Yfj5G19TK7R94HPQ2wre+J+01sM
ve+gTZX7JX9z1902/VT6qk5Pe/owtg46XYkdnze+HfqaybcL+7sc6vJt4vB0
346blbjpHQbtn+m16FuxvyXHvT/pXxfXcs+m1g2+mWKwqEcLHnYaNHFu0MiS
tws7G973U7f7Ynm4qGeLHFjD3fQuNGFhZ6NPHccnfVzssfBFj/ap2SP9zFGb
fjJ95cg3jr6t2L+wvbG909GBV0XDF3dudGwQwxm76GvxXUsdTd7Q8zpyUxtT
I4c+a+Y8Z5eeqLF/+EaY7OrsKnnQ7D1ozZTPnb5W+iY2jPSy9u3OKvWv0Z8Z
vbJmkXtLvp30EpMvB80o7yw403BvJEfkW2dDiUmjKwO3Z2q2+NdBm74y/eVM
L40PJb8aXR2+ASaudPcsda3Ze8iJmXqcvMK9RseGXmeKwSI/ltQqvc6Uj5OP
utwrvG00eLB7pL+MltKEllqul5u0fmHnkh6DZs3049ES8V9O2K7XuDbTb9Gf
wuWmdx10a6Tn1Acs9KSpkSN6jKsLXV3yPRr+pHdLHy4GhZ8tWhe9onPds8Ll
pjcatH7yXRf7skfL/ntv6+nOm1qUmrRGY9T/Tn8L15v7DHVp6kM7nSva2sR+
8PdMn0HTSq1r+DX4YvJtpxmlb2x0dKT3xNkud4tGNf3PSF0+brvPOHDTO6SH
2Pp2OWLz3ZfvvzW9Xb5ro6nq7ZKeRZ5PdaLzW+kFG/8M/cBUPzrNLXnRcHjY
d/Jvt3fJvWafQeOnutajh+kTxWHQiin2XUxL/jX9/4iesG2rH05fQYO3euf0
j+42cWbJdwHezXxnyM8Suybvx57bunvKRpuj0WtiR9O676nyTksvlL5aHnUx
LXWj5ft1321t952Rvif9z5qa4h5b/Xr6nuRlco5Pt/q++FKuDHk28l2V/ita
mt4+31tyv+NhqTlNfzzyzZW+Ij13+p70l+kl+XSrL02/jjf5Lpi4VIdutCka
NdOv400dttGX6Mzc9f907j4k
               "]], 
              Polygon3DBox[{{1233, 727, 880, 1528, 1064, 1065}, {1429, 665, 
               471, 470, 976, 1413}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0klIVlEYBuBz/H+nnEHaiIpGCokStBKyAZe5yCDBhCRtY4RCVCYmmNqs
W0Nca8s2tpZUBCFdOE85QNDKvcuei4uP5/0uh/vdc8590NdV1RtCiGoSTy9y
fMjzEFJ/Wcx/rPS8QD6TG0LIvKEvkZtCSGezhZfZwRpVKz9jMwesfSy3yp/Y
yW9MZs9yiD85ziXvvm19mXqt32CXuhZCxrB+k++4xRFuc5Q7HOMu33OPH7jP
j8rccMDPPOQX/uFXHjGZfcwJntjnSzPLVb/+lN2qzjd+169ziotM3jPHQc7w
+cVZpu03mJu+zze8q+7IPbzCRyzlPWbypn2/NWNarpfNinnqur5Cf1W2Lr7Q
F/GJSp6t6QvZrlZldxTNib/lfPtwNvGWnLxrhZc8c0bxh5wr21+sVsv6HDqH
WKXcQ3CvMfkvFuQs+sb4S/YdKXcRG+W0nKxpk1OcZ4b4Sq5I/qn/K8lDXA==

             "]]}, {Line3DBox[CompressedData["
1:eJwNz8kuQ2EYBuCP9oirEG1xH4YNVUN1J6aGIIaaFqyJWEp7E2bFPQg7JOy6
EMMd2JmexZP3m07yn2KlnFmNiCbGI1LvEUkb3VQjWm7N3tTtZPR3EekjdYU1
Nlgny6/9vZxxcyxHGGWTIjn7R1lm1s2JHGaMkp03JD3mp3KZP7Nm/Zk3fOi/
9Cn9uXpO/SQ72OeAmllD7rHLof7V/YXvP/Ur+rT+Uu2fk1aWzF7kjnldDjDJ
lHkiexlk3v5K5plm2/5Z/tDHEAturmWBb/sHucUEXfSz6OZGdv4DroIv2Q==

             "]], 
            Line3DBox[{999, 1311, 1319, 1428, 1735, 1366, 326, 1320, 372, 
             1747, 1365, 329, 1321, 1738, 1204, 1367, 330, 1349, 1741, 1205, 
             1379, 1524, 1542, 1206, 1000, 1543, 1207, 1001, 1544, 1208, 1002,
              1756, 1413, 1429, 1755, 1421, 1420, 1430, 1759, 1003, 1545, 
             1209, 1004, 1386, 1546, 1210, 1399, 1526, 1547, 1415, 430, 1382, 
             1527, 1548, 1425, 1211, 1368, 1742, 408, 1403, 410, 1323}], 
            Line3DBox[{1005, 1289, 1324, 1431, 1723, 1369, 1371, 1290, 1326, 
             1432, 1724, 1370, 1372, 1291, 1328, 1433, 1725, 1006, 1322, 1549,
              1212, 1007, 1550, 1213, 1008, 1551, 1214, 1009, 1552, 1215, 
             1010, 1553, 1434, 1634, 1011, 1435, 1635, 1012, 1436, 1636, 1013,
              1554, 1216, 1014, 1536, 1555, 1217, 1423, 1760, 1422, 1218, 
             1015, 1751, 1402, 1219, 1404}], 
            Line3DBox[{1029, 1225, 1562, 1028, 1224, 1561, 1027, 1223, 1560, 
             1026, 1641, 1441, 1025, 1640, 1440, 1024, 1639, 1439, 1023, 1638,
              1438, 1559, 1022, 1222, 1558, 1021, 1221, 1557, 1020, 1220, 
             1556, 1019, 1637, 1437, 1018, 1727, 1297, 1329, 1296, 1017, 1726,
              1295, 1327, 1294, 1016, 1531, 1743, 1293, 1325, 1292, 1331}], 
            Line3DBox[{1031, 1298, 1330, 1299, 1728, 1030, 1300, 1332, 1301, 
             1729, 1032, 1333, 1350, 1334, 1739, 1033, 1442, 1642, 1034, 1443,
              1643, 1035, 1563, 1226, 1036, 1564, 1227, 1037, 1565, 1444, 
             1644, 1038, 1445, 1645, 1039, 1446, 1646, 1040, 1447, 1647, 1041,
              1448, 1648, 1042, 1566, 1228, 1043, 1567, 1229, 1044}], 
            Line3DBox[{1046, 1302, 1335, 1303, 1730, 1045, 1304, 1336, 1305, 
             1731, 1047, 1449, 1649, 1048, 1450, 1650, 1049, 1451, 1651, 1050,
              1452, 1652, 1051, 1568, 1230, 1052, 1569, 1453, 1653, 1053, 
             1454, 1654, 1054, 1455, 1655, 1055, 1456, 1656, 1056, 1457, 1657,
              1057, 1458, 1658, 1058, 1570, 1231, 1059}], 
            Line3DBox[{1063, 1308, 1340, 1740, 1232, 1061, 1339, 1571, 1233, 
             1065, 1572, 1234, 1067, 1573, 1235, 1069, 1574, 1236, 1071, 1575,
              1237, 1073, 1576, 1238, 1075, 1578, 1579, 1239, 1077, 1580, 
             1240, 1079, 1581, 1241, 1081, 1582, 1242, 1083, 1583, 1243, 1085,
              1584, 1244, 1087, 1585, 1245, 1089}], 
            Line3DBox[{1088, 1671, 1470, 1086, 1670, 1469, 1084, 1669, 1468, 
             1082, 1668, 1467, 1080, 1667, 1466, 1078, 1666, 1465, 1076, 1665,
              1464, 1577, 1074, 1664, 1463, 1072, 1663, 1462, 1070, 1662, 
             1461, 1068, 1661, 1460, 1066, 1660, 1459, 1064, 1528, 1659, 1351,
              1338, 1060, 1732, 1307, 1337, 1306, 1062}], 
            Line3DBox[{1091, 1309, 1352, 1471, 1733, 1090, 1418, 1419, 1758, 
             1246, 1092, 1586, 1247, 1093, 1587, 1248, 1094, 1588, 1249, 1095,
              1589, 1250, 1096, 1590, 1251, 1097, 1591, 1472, 1672, 1098, 
             1592, 1252, 1099, 1593, 1253, 1100, 1594, 1254, 1101, 1595, 1255,
              1102, 1596, 1256, 1103, 1597, 1257, 1104}], 
            Line3DBox[{1105, 1341, 1398, 1407, 1408, 1753, 1406, 1405, 1417, 
             1473, 1752, 1106, 1598, 1258, 1107, 1599, 1259, 1108, 1600, 1260,
              1109, 1601, 1261, 1110, 1602, 1262, 1111, 1603, 1474, 1673, 
             1112, 1475, 1674, 1113, 1604, 1263, 1114, 1605, 1264, 1115, 1606,
              1265, 1116, 1607, 1266, 1117, 1608, 1267, 1118}], 
            Line3DBox[{1119, 1397, 1476, 1748, 1410, 1409, 1477, 1754, 1120, 
             1478, 1675, 1121, 1609, 1268, 1122, 1610, 1269, 1123, 1611, 1270,
              1124, 1612, 1271, 1125, 1613, 1479, 1676, 1126, 1480, 1677, 
             1127, 1481, 1678, 1128, 1614, 1272, 1129, 1615, 1273, 1130, 1616,
              1274, 1131, 1617, 1275, 1132}], 
            Line3DBox[{1134, 1482, 1679, 1133, 1483, 1680, 1135, 1484, 1681, 
             1136, 1485, 1682, 1137, 1618, 1276, 1138, 1619, 1277, 1139, 1620,
              1278, 1140, 1621, 1486, 1683, 1141, 1487, 1684, 1142, 1488, 
             1685, 1143, 1489, 1686, 1144, 1622, 1279, 1145, 1623, 1280, 1146,
              1624, 1281, 1147}], 
            Line3DBox[{1149, 1490, 1687, 1148, 1491, 1688, 1150, 1492, 1689, 
             1151, 1493, 1690, 1152, 1494, 1691, 1153, 1625, 1282, 1154, 1626,
              1283, 1155, 1627, 1495, 1692, 1156, 1496, 1693, 1157, 1497, 
             1694, 1158, 1498, 1695, 1159, 1499, 1696, 1160, 1628, 1284, 1161,
              1629, 1285, 1162}], 
            Line3DBox[{1164, 1500, 1697, 1163, 1501, 1698, 1165, 1502, 1699, 
             1166, 1503, 1700, 1167, 1504, 1701, 1168, 1505, 1702, 1169, 1630,
              1286, 1170, 1631, 1506, 1703, 1171, 1507, 1704, 1172, 1508, 
             1705, 1173, 1509, 1706, 1174, 1510, 1707, 1175, 1511, 1708, 1176,
              1632, 1287, 1177}], 
            Line3DBox[{1191, 1344, 1722, 1530, 1190, 1721, 1523, 1189, 1720, 
             1522, 1188, 1719, 1521, 1187, 1718, 1520, 1186, 1717, 1519, 1185,
              1716, 1518, 1633, 1184, 1715, 1517, 1183, 1714, 1516, 1182, 
             1713, 1515, 1181, 1712, 1514, 1180, 1711, 1513, 1179, 1710, 1512,
              1178, 1529, 1709, 1342, 1343}]}, {
            Line3DBox[{447, 864, 948, 655, 1736, 448, 903, 904, 902, 939, 
             1747, 660, 464, 913, 914, 912, 1724, 670, 476, 854, 1726, 682, 
             491, 857, 1729, 697, 506, 859, 1731, 712, 521, 1659, 880, 727, 
             1571, 536, 985, 742, 1758, 551, 964, 1752, 757, 566, 967, 1754, 
             772, 581, 1680, 787, 596, 1688, 802, 611, 1698, 817, 626, 1710, 
             832, 641}], 
            Line3DBox[{449, 846, 895, 847, 1537, 898, 886, 866, 932, 867, 
             1542, 467, 673, 1550, 479, 685, 1556, 494, 1643, 700, 509, 1651, 
             715, 524, 1662, 730, 1574, 539, 745, 1588, 554, 760, 1600, 569, 
             775, 1610, 584, 790, 1618, 599, 1691, 805, 614, 1701, 820, 629, 
             1713, 835, 644}], 
            Line3DBox[{450, 961, 942, 944, 943, 1538, 451, 663, 1543, 468, 
             674, 1551, 480, 686, 1557, 495, 701, 1563, 510, 1652, 716, 525, 
             1663, 731, 1575, 540, 746, 1589, 555, 761, 1601, 570, 776, 1611, 
             585, 791, 1619, 600, 806, 1625, 615, 1702, 821, 630, 1714, 836, 
             645}], Line3DBox[{452, 868, 869, 1539, 453, 664, 1544, 469, 675, 
             1552, 481, 687, 1558, 496, 702, 1564, 511, 717, 1568, 526, 1664, 
             732, 1576, 541, 747, 1590, 556, 762, 1602, 571, 777, 1612, 586, 
             792, 1620, 601, 807, 1626, 616, 822, 1630, 631, 1715, 837, 646}],
             Line3DBox[{454, 936, 937, 935, 1746, 870, 977, 975, 1756, 976, 
             470, 676, 1553, 482, 688, 1559, 497, 703, 1565, 512, 718, 1569, 
             527, 733, 1577, 1578, 542, 748, 1591, 557, 763, 1603, 572, 778, 
             1613, 587, 793, 1621, 602, 808, 1627, 617, 823, 1631, 632, 838, 
             1633, 647}], 
            Line3DBox[{457, 945, 946, 658, 1540, 458, 667, 1545, 473, 1636, 
             679, 485, 1640, 691, 500, 1646, 706, 515, 1655, 721, 530, 1667, 
             736, 1581, 545, 751, 1593, 560, 766, 1604, 575, 1678, 781, 590, 
             1685, 796, 605, 1694, 811, 620, 1705, 826, 635, 1718, 841, 650}],
             Line3DBox[{460, 901, 849, 891, 850, 1541, 924, 888, 952, 960, 
             871, 951, 872, 1547, 982, 980, 981, 1555, 487, 693, 1560, 502, 
             1648, 708, 517, 1657, 723, 532, 1669, 738, 1583, 547, 753, 1595, 
             562, 768, 1606, 577, 783, 1615, 592, 798, 1622, 607, 1696, 813, 
             622, 1707, 828, 637, 1720, 843, 652}], 
            Line3DBox[{461, 919, 873, 892, 874, 925, 1749, 889, 953, 875, 938,
              876, 1548, 993, 994, 990, 992, 1760, 991, 488, 694, 1561, 503, 
             709, 1566, 518, 1658, 724, 533, 1670, 739, 1584, 548, 754, 1596, 
             563, 769, 1607, 578, 784, 1616, 593, 799, 1623, 608, 814, 1628, 
             623, 1708, 829, 638, 1721, 844, 653}], 
            Line3DBox[{462, 877, 893, 921, 920, 1744, 949, 922, 923, 908, 963,
              1742, 962, 959, 957, 1751, 958, 489, 695, 1562, 504, 710, 1567, 
             519, 725, 1570, 534, 1671, 740, 1585, 549, 755, 1597, 564, 770, 
             1608, 579, 785, 1617, 594, 800, 1624, 609, 815, 1629, 624, 830, 
             1632, 639, 1722, 882, 883, 884}], 
            Line3DBox[{640, 831, 881, 1709, 625, 816, 1697, 610, 801, 1687, 
             595, 786, 1679, 580, 771, 1748, 968, 970, 969, 565, 756, 1753, 
             966, 965, 979, 978, 550, 741, 1733, 861, 535, 1740, 726, 1732, 
             860, 520, 711, 1730, 858, 505, 696, 1728, 856, 490, 681, 915, 
             1743, 917, 916, 475, 669, 1723, 909, 911, 910, 463, 659, 1735, 
             905, 863, 446, 654, 1734, 862, 885}], 
            Line3DBox[{642, 833, 1711, 627, 818, 1699, 612, 803, 1689, 597, 
             788, 1681, 582, 773, 1675, 567, 1598, 758, 552, 1586, 743, 537, 
             1572, 728, 1660, 522, 713, 1649, 507, 698, 1739, 879, 492, 683, 
             1727, 855, 477, 671, 1725, 853, 465, 1738, 661, 906, 851, 907, 
             928, 1737, 927, 926, 897, 865, 947, 918}], 
            Line3DBox[{643, 834, 1712, 628, 819, 1700, 613, 804, 1690, 598, 
             789, 1682, 583, 1609, 774, 568, 1599, 759, 553, 1587, 744, 538, 
             1573, 729, 1661, 523, 714, 1650, 508, 699, 1642, 493, 684, 1637, 
             478, 1549, 672, 878, 466, 1741, 662, 931, 852, 933, 934, 930, 
             1745, 929, 894, 845, 941, 896}], 
            Line3DBox[{648, 839, 1716, 633, 824, 1703, 618, 809, 1692, 603, 
             794, 1683, 588, 779, 1676, 573, 764, 1673, 558, 749, 1672, 543, 
             1579, 734, 1665, 528, 719, 1653, 513, 704, 1644, 498, 689, 1638, 
             483, 677, 1634, 471, 665, 1755, 987, 989, 988, 455, 656, 1757, 
             983, 972, 974, 973, 887}], 
            Line3DBox[{649, 840, 1717, 634, 825, 1704, 619, 810, 1693, 604, 
             795, 1684, 589, 780, 1677, 574, 765, 1674, 559, 1592, 750, 544, 
             1580, 735, 1666, 529, 720, 1654, 514, 705, 1645, 499, 690, 1639, 
             484, 678, 1635, 472, 666, 1759, 986, 456, 1761, 657, 971, 984}], 
            Line3DBox[{651, 842, 1719, 636, 827, 1706, 621, 812, 1695, 606, 
             797, 1686, 591, 1614, 782, 576, 1605, 767, 561, 1594, 752, 546, 
             1582, 737, 1668, 531, 722, 1656, 516, 707, 1647, 501, 692, 1641, 
             486, 1554, 680, 474, 1546, 668, 950, 940, 956, 459, 955, 1750, 
             954, 890, 848, 900, 899}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
rTzgZw==
          "]],
        Axes->True,
        AxesLabel->{
          FormBox["\"Underlying Price\"", TraditionalForm], 
          FormBox["\"Time to\\nExpiration\"", TraditionalForm], 
          FormBox["\"Option\\nPrice\"", TraditionalForm]},
        BoxRatios->{1, 1, 0.4},
        ImageSize->{300, 300},
        Method->{"RotationControl" -> "Globe"},
        PlotRange->{All, All, All},
        PlotRangePadding->{Automatic, Automatic, Automatic}], {157.5, -450}, 
       ImageScaled[{0.5, 0.5}], {300, 300},
       ContentSelectable->True]}, {}},
    Background->None,
    ContentSelectable->True,
    ImageMargins->0.,
    ImageSize->{303., 567.},
    PlotRangePadding->{6, 5}], {0., 5.518348623853228}, 
   ImageScaled[{0., 0.}], {303., 567.},
   ContentSelectable->True],
  AspectRatio->1.3955223880597014`,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{268., 374.},
  PlotRange->{{0., 303.}, {38.520179372197354`, 461.1569506726456}},
  PlotRangePadding->None]], "Output", "ProductionPageBreak",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.4675861833866997`*^9, 3.472400387062391*^9, 3.473165576527906*^9, 
   3.474043191378313*^9, {3.474043729827201*^9, 3.474043758301214*^9}},
 CellLabel->"Out[103]="],

Cell["\<\
And, indeed, you can see that the max difference in both approaches is \
negligible.\
\>", "Text",
 CellChangeTimes->{{3.473430255533564*^9, 3.473430256960732*^9}}],

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", 
         RowBox[{"First", "@", "put1"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "40", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], "]"}], " ", 
     "-", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"u", "[", 
          RowBox[{"x", ",", "t"}], "]"}], "/.", 
         RowBox[{"First", "@", "put2"}]}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "40", ",", "60"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "1", ",", "0.01"}], "}"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellLabel->"In[104]:="],

Cell[BoxData["0.000025135118878027995`"], "Output",
 CellChangeTimes->{3.4675861838637*^9, 3.472400387265191*^9, 
  3.4731655766565933`*^9},
 CellLabel->"Out[104]="]
}, Open  ]],

Cell[TextData[{
 "A few words about the function ",
 StyleBox["makeAdaptiveGrid", "Literal"],
 " are in order. The motivation for this function can be seen considering the \
plot of  ",
 StyleBox["x^3", "Literal"],
 "."
}], "Text", "ProductionPageBreak"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "^", "3"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellLabel->"In[105]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
IS83IbNUY2tB80//f30e8f993v8Aiv49Qw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-3, 3}, {-26.99999669387769, 26.99999669387769}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.4675861839327*^9, 3.472400387343191*^9, 
  3.473165576690654*^9},
 CellLabel->"Out[105]="]
}, Open  ]],

Cell[TextData[{
 "The slope about the origin is small compared to the slo",
 StyleBox["pe at the extremes. This is per",
  FontTracking->"SemiCondensed"],
 "fect for our application because it means that simply shifting the origin \
to the strike will give a function that generates a dense grid around the \
strike and a looser one at the wings of the option (away from the strike). \
The two optional parameters of ",
 StyleBox["makeAdaptiveGrid", "Literal"],
 " control the number of grid points (",
 StyleBox["size", "Literal"],
 ") generated and the\[LineSeparator]extent of the density around the slope (",
 StyleBox["deg", "Literal"],
 ")."
}], "Text",
 CellChangeTimes->{{3.455558669771968*^9, 3.4555586881007442`*^9}, {
  3.4675825409552*^9, 3.4675825462012*^9}, {3.473430280030374*^9, 
  3.473430280587428*^9}, {3.473430570395544*^9, 3.473430595754024*^9}, {
  3.473443775413332*^9, 3.473443777102501*^9}, {3.474044395245263*^9, 
  3.474044404082103*^9}, {3.476187510645637*^9, 3.476187515878852*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"strike", "=", "50"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"makeAdaptiveGrid", "[", 
        RowBox[{"strike", ",", "200", ",", "1"}], "]"}], ",", 
       RowBox[{"makeAdaptiveGrid", "[", 
        RowBox[{"strike", ",", "200", ",", "2"}], "]"}]}], "}"}], ",", 
     RowBox[{"DataRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", "strike"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Thin", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"PlotLegend", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<deg = 1\>\"", ",", "\"\<deg = 2\>\""}], "}"}]}], ",", 
     RowBox[{"LegendPosition", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.75"}], ",", "0.25"}], "}"}]}], ",", 
     RowBox[{"LegendSize", "\[Rule]", "0.5"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->"In[106]:="],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{}, {}, 
      {Hue[0.67, 0.6, 0.6], Thickness[Tiny], LineBox[CompressedData["
1:eJxVlglUlFUUx8FwS01Nc19AxQVZZEe2+TMMM8Os38w3G2VpKZqVuJTHPFRi
mccsAVsskIpKK4sWNY8SaWQuEWlqmYlppGRqlrgUkim9b969ntN3Duc7f+78
3++9795333PPvS+iMCQkpJP4a6D3/x5dM73bdn7Z8GfjNV2r1Oj6dOvc2YZZ
uquk+y4a84haehnkw8Bey+yh6S8gjPSw5TO1B91Ih1/suemlsyfRMyhDMbp8
4d/XIzrQh+JjI9a4t2em4HbS49e9NCiqIh79SU8cXCGeSgwgHVPSOOGe14Zi
EOm4Jtfg/V2nYgjp+H5auDuGES8hoXjTjd1zMILiidZE7UE46aS7p68ofPEj
RJBOnh1+V/2QVIwinVL0uO+hKyMxmnTqnFJtxhhDOm2mXG8k6ckF2nTmYSzp
9LzPQt8qisM40hnR096bsfMqxpPO7DV0/sLSUZjA+ox8R5HO2h7REWs+i4mk
s5+T3yea1qfTZhcRg+iO4AP0EsvvVolY+j0e+kY8+xDHumFlU+1fd2IS6ZzR
b1YtqnwQk0pIFw8/Xfl9NOI5fqDLqm2f7kU8xfWj5HoTKK5fYMpLu5CMBI5/
rn3uu5FI8dxbN8+qbu+ORIrnqm7PtPcKkcTxCpnfJI4ff6FH84nvkExxw0jz
ksbn05FMccM9wfpECserbtvx8zogheNHZH5TKZ7XJ/3aE6tF3iieZ4o77zt8
AGkcf2yoVkFI4/hH3So7LYzEZI43U14pbuwtpnfoGaRT3JiZ0jcp7BzSOT5L
KycnMji+WtZ/RonMl3GbzEcm5c944tCK/fMykLlE5s90y7i6uPN+ZFI+TZE/
pC0vsCKLxjcZfzs881s9sml8E9VfNseXifJNOQUdx6sPbh0YOAkdx+sOjbzU
UgZwXIyWc6kf6B8w/SHzAfq9OUzb7nagnvSQEDFgAXLIb441n3ln+G/IIb85
J1iQyGG/KvORw/7pZ3u3LzBBz/6Hlx45dmUF9Ox/suvUuYfCoWd/2VPFltHp
0LO/Sr5z2f/O8p1jS15FLvs3BRsKctlfF2wQyGX/rk/39mmcAAP7v5H5MLD/
+yEpJ38fBgP7m2qOnsnWw8D+5tKV8088gDz2/9owvP+p7chj/zmZjzz2/zlP
K0Dksf9isJ/CyP4rrT8aDvSHkf1tYrmTv4CR/e0yH0b2X/Ouzer6FUzs/7dW
7OBHYWL/9f3aB4SJ/Te0dtAJJvZ3yHyY2d/xsmjoZTCzv+O7L+8V5WBmf8el
ltKVC2C+6b8xZfVBB/LJf/MN1qLdxW5CfgnrYINDfj3r6MzXztfDctN//7Fn
a+bDctMv82Fhf+i9LW2FN2Bhf6f4q9XlsbCy/xbjT6KFwxr0hyI/TGuvabCW
kO4i82GtJ91t2Zaf9uhgCyHdo7e24WDTyf2Wf1vv8jV1FbDRfszvW7Y7bOlc
2D4nfYfMh432Z36wXHJh5/mPFKuNWAM7zz9SHTvwix2w8/wnagXTAgfPP1Hm
w8H+DNFOk47AwX5D5Ien49vhYL/9xOwP9LvgZH9gcdbRJdPhZP8M+Xayf95j
2oLhZP/j4vPFNENh/3NPjB/T41Eo4aSrBrR2WVULhcerkflQppHesUE06J+h
8PjB9jIYSjXpXzu0jgCFeddEdntuhtIsteV2mQ8X8S1RFZN29PoDLuJbDDHN
omLgIr5lqjbcCLiIbylepxNfEC7iW+j8cBHfUjtIGxEu4luaJuxd/PYWuJj/
r9hu/TbATXxrRMyi+LLdcBPfapL5cBPfWnTZ/sCAEXAT3/qKOC2VjXAT3xo8
jgbATXxrq3YcL4Kb+DYa1018m9JWeH3lMajEtz3VIhKcAJV+Z9smZhc1CSrx
bRe08guBSnz7eJkPlfj26RdzxI0FKvHtb2gHUmeoxLc3by1JmrMHKvEdo+R9
wUN8B50fHuI7aj54/3XvWniI7/jL9srULm3wEN8Jcd17/i14iO/Ubgd9GuEh
vvO4zIeH+MrAYIOCh/iKfr44EM/BS3ylKHbjroSv4SW+slaM3lmFl/hKgxzP
S3ylXfn4UvFmeInvihLbPXULvMR3TRHXm4JP4CW+q1yu30t81x759hHfRf3T
x3lKkuerj/juonKtQ8JHfPeGWm3HwEd892n5/XzEV8do1ykXfMRXZ8j7no/4
6vqt2gEIP/FVcXqKCxf8xPfEyPrzE9/zsOjGjvXwE99Tl/xuYHE2/MT3hmnt
rD/8xPc6tetbFvzE91bJevET3/v7nCn/1DQhQHxfxj5tQASI71sl6ylAfN8v
st8EiO9PlfkIEN9fJu8rAeL7z2gF0RcB4gdyD4gGdBwB4geqgwceCohP7/8A
KKx9IQ==
        "]]}, 
      {Hue[0.9060679774997897, 0.6, 0.6], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJxVlglUU9cahQEnFIqogIhCGZQqIvMMkh2mxCSEzIm0IOJsC66n4CxCtVXr
sKqtilYUtLYoPFGrr8UBh+IsiFb0WUewTqgoqIhD4dHw/3G9rJV17s6+3/lO
cte9J6pp6W4TzMzMLDreZ2j8v5fgTueILhs3T1sfVSB4TrlfqFDbs7lA0Ep5
EC6mXQ91AXFwn5m9wLfke3Sl7LklWDD/6WpYUvbaZLNB0hAEa2M0h09m2i8v
/9oAW+r9rY7t9Hnoir6UA86Pm7XMIxd2lIPmHEgNFiyAA+UQu0kTda5iOFIO
LbC0ccj0hhPlcLsQdfm3X2EQ+SLmLj1SWnwULtRH1qzJXL9SAVfKIx3uDsyo
3Ak3ytHyHsMW5kbDnbJg5pJd36yfAQ/KEGdHTzimwGDO1dcclgy3wBDKQnmZ
3Zhb6fDkfDp4dNubJnxCOSayeN7l+h8wlPOO2K8OHgvFMMqxfdD5u3GeUfty
8mkHDOd8MfIFclrgTd8vbtjPjimxbfBuN74Qt0BqOyzjLnzo/LjzyYNKLf3h
Szm+fzen1Ypz8OOcMu/rwOB0+OVS3vI4t6imBf7c38q7XPJIBX/qEwZMeffg
i+UIoD5BUe1R3jgHAdwvvhow1jMEgdzvLz337vNNCOT+brb+26BjCKJeZKPr
6vhdNoKoF4VMr1qy9xCCuf+0Me8PjQLB3Oc0nHgvd0II91uWDuzfYxdCuD98
76769QWEcv+n+yRLt3qEcv8y+dr+Dl8Y9WLrkjH96vYhjHqxh6+t40+PEc59
54kI5176zw3xAhHcf/ak4e0YPSK4zwhzDlh7GZHcz/ftXnywEJG5nddLvOz+
o9mX2xBF10+8Lss1bHQ5ohZ2Xj9xUYN7295tiKLrKS79dEXGr/0wkuff/6fL
Aa9URPP8FTNP7ws3IJr7k8KdF17XQMB9lWTQiFu9IOD+j81l2xKEAPfXEsOO
N7iCPoD4VnrNvbQYgM+vf3zDf0MJcJTy/Zc228dIIWS+4et/OV/IgpD5p/+e
OOZ6CoTMP5++27VyE4TMN9/Ostm4DTHMv3yP//42EjHMt1zsFybsjRjmWyck
t26xQQzzb4wHiGX+7YNJ+kvvEMv8u7rZwfE3Ecv8+1+KzI9XI5b5v9NvjMso
Rxzzf7/4T3zROcQx3zZVUZf5HHHMt52dcrK/EnHMt/dPrVtRhXjm2zWBSxvn
I5759kVr87oPQTzz7T/Xdz9xHPEm/nevq5WtSDDxVyMjKvKRYOLv/fNEQ4KJ
f1awd4QNEkx8i1rudxAiE/+2aJMoCyIT/7fANsQHIhPfVn6t9hVEJr694/E8
GWIT315rXR8FsYlvf1VdvRtiE9/eVjypL8Qf+PZXseEYRbxpxIfc69ApjMo1
ZXN9fiNGHTXlXv7+Ckg+8F4vnCsh+cAv6puZD4mJN0/w9LKCxMRbHH125hKk
Jr5b6rjfVkBq5M07cs/SPRfiIc3lbJueeKkZ0qOcndJfNzVAZsZ5aOUJ4WTI
BJ332yizqNqhkZaQLeRscH4TEQ3ZEc7zp+a8uQ5ZO+eS87P6LEaiaf0Pi1xm
BCKR128evC78YRkSef3ma8tcVttCzuu3sB7VscNBzrxFgcemNSLIme8iS20b
GQA5811dlpw94IEk5rs55heP6IYk5rsbD5DEfI+N23ukNSOJ+Z4+T05VNEHB
vFWXI5+IfofClfJHrsubJqRAwfP1Xpl0O3I8FGmU+6o2FA7eBgXPbz9nVb3f
CigKKQ+wakou3A8F+5ztPKonaqG4Q9mtwNdpSwWU7Pfce2qk/R0o2e89VvFZ
+REo2R+w/+4ltxYo2R9eofWz9IOS/cJlodKTxVCyXzKkLr52K5TsV/84Y434
KZTsT7W/aZ6YAhX7pyy/feonEVTsnznAuJ+r2L+o5o0+Lg0q9q85VV811Rsq
9m/rZ9+tcAdU7N93umJny0dQsf9056hi/42aZw9G20PN/heawicuMqjJL7Ha
7inp2F/V5JcMuZn/+pYL1OSXxDgZ93M1+SVps/562KqCmvySPPuILnvuQ01+
yY99crxLdkNNfsmZlQGzE+OgIb+kaYdxP9eQXzrom+Jp5wTQkF8qUQd1/X48
NOSXzhtatfnaWWjILy3zv5HQZwk05JfeX2fczzXkl7nlDNc47IKG/LI0u4Wp
vr2gJb9s6+I5589uhpb8sodv72WWBUNL/sTA7cb9XEv+xC/3Pbuyxhla8ide
MTzYesgCWvLLfSqtj+R1zE9++Qovq/WhDdCSX95oLKAjf5Lu0Ny46DPQkT+p
Ur94uPME6MivGHhPbbbIEjryKwzF2TW2F6AjvyL/u6xDUxdCR37F9RNpVR8b
oCO/0j3VLiXZAzryK7/ICS78uAl68isPiMIHr7oCPflVVtfHd/xjg578qrEp
NXa1NdCTX3Wg+fM+P9yGnvxqx8Pv547Php786rn3PafOaoSe/Oq61ZOn73aD
nvwa2QN3519dYSC/5nDvtVnxrTCQXxsQ+ChvXAYM5NeW5nhf2VoOA/l13gMM
tulyGMiv2+OvSO61Egby6yObHzXLVsFAfv355Q1laVdgIL9h3HDrRQkDMZr8
NP4P+RR03g==
        "]]}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->True,
     AxesOrigin->{0, 0},
     DisplayFunction:>$DisplayFunction,
     FormatType->TraditionalForm,
     PlotRange->{{0., 100.}, {0., 100.}},
     PlotRangeClipping->True,
     PlotRangePadding->{
       Scaled[0.02], 
       Scaled[0.02]}], {-1, -0.6180339887498948}, {
    Left, Bottom}, {2, 1.2360679774997896`}], GraphicsGroupBox[{
     {GrayLevel[0], RectangleBox[{-0.7, 0.2}, {-0.2, 0.575}]}, 
     {GrayLevel[1], EdgeForm[{GrayLevel[0], Thickness[0.001]}], 
      GraphicsGroupBox[{RectangleBox[{-0.75, 0.25}, {-0.25, 0.625}], 
        InsetBox[
         GraphicsBox[{{{InsetBox[
              GraphicsBox[{
                {Hue[0.9060679774997897, 0.6, 0.6], Dashing[{Small, Small}], 
                 LineBox[{{0, 0.5}, {1, 0.5}}]}, {}},
               PlotRange->{{0, 1}, {0, 1}}], {0.08, 0.08}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"deg = 2\"\>", {1.2100000000000002`, 0.58}, {-1, 0},
               Automatic, {1, 0}]}, {InsetBox[
              GraphicsBox[{
                {Hue[0.67, 0.6, 0.6], Thickness[Tiny], 
                 LineBox[{{0, 0.5}, {1, 0.5}}]}, {}},
               PlotRange->{{0, 1}, {0, 1}}], {0.08, 1.24}, {
              Left, Bottom}, {1, 1}], 
             InsetBox["\<\"deg = 1\"\>", {1.2100000000000002`, 1.74}, {-1, 0},
               Automatic, {1, 0}]}}, {}},
          AspectRatio->0.75,
          FormatType->TraditionalForm,
          PlotRange->{{-0.1, 3.26}, {-0.1, 2.42}}], {-0.75, 0.25}, {
         Left, Bottom}, {0.5, 0.375}]}]}}]},
  AspectRatio->Automatic,
  Background->None,
  ColorOutput->Automatic,
  ImageSize->Automatic,
  PlotRange->All]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.4675861882107*^9, 3.472400388809594*^9, 
  3.473165578032009*^9},
 CellLabel->"Out[107]="]
}, Open  ]],

Cell[TextData[{
 "In the ",
 StyleBox["NDSolve", "Literal"],
 " options, I use ",
 StyleBox["MethodOfLines", "Literal"],
 StyleBox[", which is a very efficient way to numeri",
  FontTracking->"SemiCondensed"],
 "cally solve a PDE provided it is an initial value problem. In particular, \
the solution uses the suboption ",
 StyleBox["\"SpatialDiscretization\"", "Literal"],
 ", which itself allows the coordinates to be ",
 StyleBox["passed in. Here the expression ",
  FontTracking->"SemiCondensed"],
 StyleBox["N@Union[makeAdaptiveGrid[strike], Range[2 strike,", "Literal",
  FontTracking->"Plain"],
 StyleBox[" 5 strike, 2]]", "Literal"],
 " simply tacks on some coarsely spaced points far from the strike so we can \
ensure the solution is valid for a reasonably liberal range of prices on the \
high end. Refer to the references in the following ",
 ButtonBox["\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section",
  BaseStyle->"Hyperlink",
  ButtonData->"14.8 See Also"],
 " for more details about ",
 StyleBox["MethodOfLines", "Literal"],
 ", which is quite feature rich and worth learning if you plan to use ",
 StyleBox["NDSolve", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.473430612842826*^9, 3.473430687876677*^9}, {
   3.473430721605398*^9, 3.473430721607205*^9}, {3.473443783881132*^9, 
   3.473443786110442*^9}, 3.474044491491927*^9, {3.47421559147959*^9, 
   3.474215592692378*^9}, {3.4761164103047523`*^9, 3.4761164120424747`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellTags->"14.8 See Also"],

Cell[TextData[{
 "This recipe was motivated by the notebook ",
 StyleBox["penalty.nb", "Literal"],
 " developed by Andreas Lauschke. The original notebook is available in the \
downloads section of this book",
 "\[CloseCurlyQuote]",
 "s website: ",
 StyleBox[ButtonBox["http://bit.ly/xIgx7",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/xIgx7"], None},
  ButtonNote->"http://bit.ly/xIgx7"], "URL"],
 ". Also see Lauschke\[CloseCurlyQuote]s site at",
 StyleBox[" ", "URL"],
 StyleBox[ButtonBox["http://bit.ly/1Zhdfv",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/1Zhdfv"], None},
  ButtonNote->"http://bit.ly/1Zhdfv"], "URL"],
 StyleBox[" ", "URL"],
 "for useful Mathematica and web Mathematica samples, products, and \
services."
}], "Text",
 CellChangeTimes->{
  3.4675852993569*^9, {3.4675853382544003`*^9, 3.4675853398644*^9}, {
   3.473430752810663*^9, 3.47343081468019*^9}, 3.476116540378528*^9}],

Cell[TextData[{
 StyleBox["NDSolve", "Literal"],
 " was introduced in",
 StyleBox[" ",
  FontColor->GrayLevel[0]],
 ButtonBox["Recipe 13.9",
  BaseStyle->"Hyperlink",
  ButtonData->{"13PhysicsEng.nb", "Wave Equation"}],
 StyleBox[".",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.4734308333491898`*^9, 3.473430853504587*^9}, {
  3.476116442113505*^9, 3.47611644274437*^9}, {3.476116523325136*^9, 
  3.476116523385281*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["MethodOfLines", "Literal"],
 " can be found in ",
 StyleBox["tutorial/NDSolvePDE", "URL"],
 " in the Mathematica documentation."
}], "Text",
 CellChangeTimes->{{3.473432146065012*^9, 3.4734321479956636`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Developing an Explicit Finite Difference Method \
for the Black-Scholes Formula "
}], "Heading1",
 CellChangeTimes->{{3.473432187529505*^9, 3.473432188796928*^9}},
 CellTags->"Developing an Explicit Finite Difference Method"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to use the finite difference method (FDM) to compute solutions to \
the Black-Scholes formula in an efficient manner.\
\>", "Text",
 CellChangeTimes->{{3.473432196917061*^9, 3.473432227437941*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "This solution was developed by Thomas Weber and rearran",
 StyleBox["ged to conform to the for",
  FontTracking->"SemiCondensed"],
 "mat of this book. Refer to the ",
 ButtonBox["\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section \
on page 582",
  BaseStyle->"Hyperlink",
  ButtonData->"14.9 See Also"],
 " for references to the original notebook."
}], "Text",
 CellChangeTimes->{
  3.4734322411505404`*^9, {3.4734323038370237`*^9, 3.473432303839794*^9}, {
   3.4761165476307592`*^9, 3.476116556815403*^9}}],

Cell["\<\
In this solution we will price a European call option with the following \
attributes:\
\>", "Text",
 CellChangeTimes->{{3.473432336452763*^9, 3.473432341608971*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"strike", " ", "=", " ", "100."}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "strike", " ", "price", " ", "at", " ", "maturity", " ", "of", " ", "the", 
    " ", "option"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sigma", " ", "=", " ", "0.2"}], ";"}], "    ", 
  RowBox[{"(*", 
   RowBox[{
   "volatility", " ", "of", " ", "the", " ", "prices", " ", "of", " ", "the", 
    " ", "underlying"}], "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", " ", "=", " ", "1.0"}], ";"}], "        ", 
  RowBox[{"(*", 
   RowBox[{
   "time", " ", "to", " ", "maturity", " ", "of", " ", "the", " ", "option"}],
    "*)"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rate", "   ", "=", " ", "0.05"}], " ", ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"riskless", " ", "interest", " ", "rate"}], "*)"}], 
  "              "}]}], "Input",
 CellChangeTimes->{{3.4740446579540443`*^9, 3.474044690140238*^9}, {
  3.47404487037957*^9, 3.474044885123125*^9}, {3.474215633124928*^9, 
  3.4742156789155416`*^9}},
 CellLabel->"In[108]:="],

Cell[TextData[{
 "The presented calculation scheme is a version of the explicit ",
 StyleBox["finite difference method", "Techical Italic"],
 " (FDM). While applying this calculation scheme, the new values for the \
derivative ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["V", 
     RowBox[{"j", ",", 
      RowBox[{"i", "-", "1"}]}]], "Literal"], TraditionalForm]]],
 " are stepwise calculated from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubscriptBox["V", 
      RowBox[{
       RowBox[{"j", "+", "1"}], ",", "i"}]], "Literal"], ",", " ", 
    StyleBox[
     SubscriptBox["V", 
      RowBox[{"j", ",", "i"}]], "Literal"]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["V", 
     RowBox[{
      RowBox[{"j", "-", "1"}], ",", "i"}]], "Literal"], TraditionalForm]]],
 ". The concepts are elaborated in the \[OpenCurlyDoubleQuote]Discussion\
\[CloseCurlyDoubleQuote] section on page 580. "
}], "Text",
 CellChangeTimes->{
  3.455558746982973*^9, {3.473432396401085*^9, 3.473432410493306*^9}, {
   3.474044906709516*^9, 3.474044929605237*^9}, {3.476116573668118*^9, 
   3.4761165898801937`*^9}}],

Cell[TextData[{
 "In this solution, the number of grid points for the discrete prices of the \
stock ",
 StyleBox["n", "Literal"],
 " can freely be chosen within a specific range. Increasing the number of \
time steps improves the accuracy but also increases the overall calculation \
time. For a first demonstration, the number of discrete stock prices is set \
to 20."
}], "Text",
 CellChangeTimes->{{3.473432422155398*^9, 3.473432440443921*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "20"}], ";"}]], "Input",
 CellLabel->"In[112]:="],

Cell[TextData[{
 "The grid points for the stock price should be placed in a range not too \
tight around the current stock price. In this example, the range is chosen \
from zero up to twice the strike price. From the chosen region results the \
step size ",
 StyleBox["\[CapitalDelta]S", "Literal"],
 " for the discretization of the stock prices range. One way to generate the \
list of grid points is to use ",
 StyleBox["NestList", "Literal"],
 ". ",
 StyleBox["#+\[CapitalDelta]S&", "Literal"],
 " within ",
 StyleBox["NestList", "Literal"],
 " is a generic function defined for local use."
}], "Text",
 CellChangeTimes->{{3.4555587534634647`*^9, 3.45555875593524*^9}, {
   3.4734324501564817`*^9, 3.473432500271789*^9}, 3.474045121843849*^9}],

Cell["\<\
On the list of discrete stock prices, the exercise function of the option can \
be applied. The resulting list provides the starting or initial values for \
the numerical method.\
\>", "Text",
 CellChangeTimes->{3.473432509093598*^9, 3.474215708777079*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Delta]S", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "*", "strike"}], ")"}], "/", "n"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S", " ", "=", " ", 
    RowBox[{"NestList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", " ", "+", " ", "\[Delta]S"}], " ", "&"}], " ", ",", " ", 
      "0", ",", " ", "n"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"V", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"#1", " ", "-", " ", "strike"}], ",", " ", "0"}], "]"}], " ",
        "&"}], " ", ")"}], " ", "/@", " ", "S"}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.474045141720789*^9, 3.4740451423150797`*^9}},
 CellLabel->"In[113]:="],

Cell["\<\
The necessary number of time steps for the explicit FDM to converge depends \
on the step size for the discretization of the stock price, the volatility, \
and the strike price. The number of time steps can be calculated as follows \
(for more information, see the Wilmott reference in the \
\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section on page 582):\
\
\>", "Text",
 CellChangeTimes->{
  3.455558773559413*^9, 3.473432519237891*^9, {3.4734325525617228`*^9, 
   3.473432579383061*^9}, {3.476116601280528*^9, 3.476116631329212*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"nt", " ", "=", " ", 
    RowBox[{
     RowBox[{"Floor", "[", 
      RowBox[{"\[Tau]", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Delta]S", "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "X", "*", "\[Sigma]"}], ")"}]}], ")"}], "^", 
        "2"}]}], "]"}], " ", "+", " ", "1"}]}], ";"}], " "}]], "Input",
 CellLabel->"In[116]:="],

Cell["Then the size of the time steps are", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]t", " ", "=", " ", 
   FractionBox["\[Tau]", "nt"]}], ";"}]], "Input",
 CellLabel->"In[117]:="],

Cell[TextData[{
 "In ",
 StyleBox["pricingFunc", "Literal"],
 ", two terms ",
 Cell[BoxData[
  FormBox["\[CapitalGamma]", TraditionalForm]], "Literal"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[CapitalDelta]", "Literal"], TraditionalForm]]],
 " (",
 StyleBox["see the ",
  FontTracking->"Extended"],
 StyleBox[ButtonBox["\[OpenCurlyDoubleQuote]Discussion\[CloseCurlyDoubleQuote]\
 section on page 580",
  BaseStyle->"Hyperlink",
  ButtonData->"14.9 Discussion"],
  FontTracking->"Extended"],
 StyleBox[") are the speed-critical",
  FontTracking->"Extended"],
 " computations since they are inside the ",
 StyleBox["Do", "Literal"],
 " loop. The Mathematica function ",
 StyleBox["ListConvolve", "Literal"],
 " is used because it is a very fast way to compute finite differences. After \
the ",
 StyleBox["Do", "Literal"],
 " loop is finished, ",
 StyleBox["V", "Literal"],
 " contains a list of option values. Each option value corresponds to a \
discrete stock price on the grid. ",
 StyleBox["Interpolation", "Literal"],
 " on these numbers produces an interpolating function for the option price \
given current price of the\[LineSeparator]underlying ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "0"], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{
  3.455558783776792*^9, {3.4734325975213823`*^9, 3.473432615921349*^9}, {
   3.4734326628241997`*^9, 3.473432746772769*^9}, {3.473443797593453*^9, 
   3.473443803902779*^9}, {3.47404517290699*^9, 3.47404517339641*^9}, {
   3.4761166496913137`*^9, 3.476116653044392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pricingFunc", "[", 
   RowBox[{
   "X_", ",", " ", "r_", ",", " ", "t_", ",", " ", "\[Sigma]_", ",", " ", 
    "n_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\[CapitalDelta]", ",", " ", "\[CapitalGamma]", ",", " ", "s", ",", " ", 
      "v", ",", " ", "V", ",", " ", "S", ",", " ", "\[Delta]S"}], "}"}], ",", 
    " ", 
    RowBox[{
     RowBox[{"\[Delta]S", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", "*", "X"}], ")"}], "/", "n"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"S", " ", "=", " ", 
      RowBox[{"NestList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#1", " ", "+", " ", "\[Delta]S"}], " ", "&"}], " ", ",", 
        " ", "0", ",", " ", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"V", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"#1", " ", "-", " ", "X"}], ",", " ", "0"}], "]"}], " ", 
         "&"}], " ", ")"}], " ", "/@", " ", "S"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalDelta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"ListConvolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", "0", ",", " ", 
              RowBox[{"-", "1"}]}], "}"}], ",", " ", "V"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", "*", "\[Delta]S"}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[CapitalGamma]", " ", "=", " ", 
         RowBox[{
          RowBox[{"ListConvolve", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", " ", 
              RowBox[{"-", "2"}], ",", " ", "1"}], "}"}], ",", " ", "V"}], 
           "]"}], "/", 
          RowBox[{"\[Delta]S", "^", "2"}]}]}], ";", " ", "\n", "      ", 
        RowBox[{"s", " ", "=", " ", 
         RowBox[{"Take", "[", 
          RowBox[{"S", ",", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"v", " ", "=", " ", 
         RowBox[{"Take", "[", 
          RowBox[{"V", ",", " ", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", 
             RowBox[{"-", "2"}]}], "}"}]}], "]"}]}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"V", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", "0", "}"}], ",", " ", 
           RowBox[{"v", " ", "+", " ", 
            RowBox[{"\[Delta]t", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "/", "2"}], ")"}], "*", 
                RowBox[{"\[Sigma]", "^", "2"}], "*", 
                RowBox[{"s", "^", "2"}], "*", "\[CapitalGamma]"}], " ", "+", 
               " ", 
               RowBox[{"r", "*", "s", "*", "\[CapitalDelta]"}], " ", "-", " ", 
               RowBox[{"r", "*", "v"}]}], ")"}]}]}], ",", " ", "\n", 
           "        ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Last", "[", "S", "]"}], " ", "-", " ", 
             RowBox[{"X", "/", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{"r", "*", "i", "*", "\[Delta]t"}], ")"}]}]}]}], 
            "}"}]}], "]"}]}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "nt"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
     ";", " ", "\[IndentingNewLine]", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"S", ",", " ", "V"}], "}"}], "]"}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[118]:="],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pf", " ", "=", 
   RowBox[{"pricingFunc", "[", 
    RowBox[{
    "V", ",", "S", ",", "X", ",", "r", ",", "\[Delta]S", ",", "\[Delta]t", 
     ",", "\[Sigma]", ",", "nt"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S0", " ", "=", " ", "100."}], ";", "   ", 
  RowBox[{"(*", 
   RowBox[{
   "price", " ", "of", " ", "the", " ", "stock", " ", "at", " ", "valuation", 
    " ", "time"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"pf", "[", "S0", "]"}]}]}], "Input",
 CellChangeTimes->{{3.4734327952402267`*^9, 3.4734327981075583`*^9}},
 CellLabel->"In[119]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"pricingFunc", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0.`", ",", "10.`", ",", "20.`", ",", 
      "30.`", ",", "40.`", ",", "50.`", ",", "60.`", ",", "70.`", ",", "80.`",
       ",", "90.`", ",", "100.`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "10.`", ",", "20.`", ",", "30.`", ",", "40.`", ",", "50.`", 
      ",", "60.`", ",", "70.`", ",", "80.`", ",", "90.`", ",", "100.`", ",", 
      "110.`", ",", "120.`", ",", "130.`", ",", "140.`", ",", "150.`", ",", 
      "160.`", ",", "170.`", ",", "180.`", ",", "190.`", ",", "200.`"}], 
     "}"}], ",", "X", ",", "r", ",", "10.`", ",", 
    FractionBox["\[Tau]", 
     RowBox[{"1", "+", 
      RowBox[{"Floor", "[", 
       RowBox[{"0.04`", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "]"}]}]], ",", 
    "\[Sigma]", ",", 
    RowBox[{"1", "+", 
     RowBox[{"Floor", "[", 
      RowBox[{"0.04`", " ", 
       SuperscriptBox["X", "2"], " ", 
       SuperscriptBox["\[Sigma]", "2"], " ", "\[Tau]"}], "]"}]}]}], "]"}], 
  "[", "100.`", "]"}]], "Output",
 CellChangeTimes->{3.4675861885417*^9, 3.4724003891215944`*^9, 
  3.473165578368413*^9},
 CellLabel->"Out[121]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellTags->"14.9 Discussion"],

Cell[TextData[{
 "The PDE from the Black-Scholes formula for a",
 StyleBox[" derivative ",
  FontTracking->"SemiCondensed"],
 Cell[BoxData[
  FormBox["V", TraditionalForm]],
  FontTracking->"SemiCondensed"],
 StyleBox[" on the security ",
  FontTracking->"SemiCondensed"],
 Cell[BoxData[
  FormBox["S", TraditionalForm]],
  FontTracking->"SemiCondensed"],
 StyleBox[" is given as:",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{
  3.45555879287227*^9, {3.473432815204488*^9, 3.47343282761446*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "S", ",", " ", "\[Delta]S", ",", " ", "t", ",", " ", "\[Delta]t", ",", " ",
     "\[Sigma]", ",", " ", "r", ",", " ", "V"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pde", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"S", ",", " ", "t"}], "]"}], ",", " ", "t"}], "]"}]}], " ", "==",
      " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], "*", 
       RowBox[{"\[Sigma]", "^", "2"}], "*", 
       RowBox[{"S", "^", "2"}], "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"S", ",", " ", "t"}], "]"}], ",", " ", "S", ",", " ", "S"}],
         "]"}]}], " ", "+", " ", 
      RowBox[{"r", "*", "S", "*", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"S", ",", " ", "t"}], "]"}], ",", " ", "S"}], "]"}]}], " ", 
      "-", " ", 
      RowBox[{"r", "*", 
       RowBox[{"V", "[", 
        RowBox[{"S", ",", " ", "t"}], "]"}]}]}]}]}], ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.474215736554142*^9, 3.474215741015581*^9}},
 CellLabel->"In[122]:="],

Cell["\<\
Numerical approximation for the partial derivative follows, for example from \
the Taylor series. The partial derivatives in the equation are replaced \
through the appropriate Taylor series.\
\>", "Text",
 CellChangeTimes->{{3.455558805440518*^9, 3.455558831713743*^9}, {
   3.473432842358489*^9, 3.4734328585824423`*^9}, 3.4742157463760643`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rls", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"S", ",", " ", "t"}], "]"}], ",", " ", "t"}], "]"}], " ", "->",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{"S", ",", " ", 
           RowBox[{"t", " ", "-", " ", "\[Delta]t"}]}], "]"}], " ", "-", " ", 
         
         RowBox[{"V", "[", 
          RowBox[{"S", ",", " ", "t"}], "]"}]}], ")"}], "/", "\[Delta]t"}]}], 
     ",", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"S", ",", " ", "t"}], "]"}], ",", " ", "S"}], "]"}], " ", "->",
       " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{
           RowBox[{"S", " ", "+", " ", "\[Delta]S"}], ",", " ", "t"}], "]"}], 
         " ", "-", " ", 
         RowBox[{"V", "[", 
          RowBox[{
           RowBox[{"S", " ", "-", " ", "\[Delta]S"}], ",", " ", "t"}], 
          "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", "\[Delta]S"}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"V", "[", 
         RowBox[{"S", ",", " ", "t"}], "]"}], ",", " ", "S", ",", " ", "S"}], 
       "]"}], " ", "->", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"V", "[", 
          RowBox[{
           RowBox[{"S", " ", "+", " ", "\[Delta]S"}], ",", " ", "t"}], "]"}], 
         " ", "-", " ", 
         RowBox[{"2", "*", 
          RowBox[{"V", "[", 
           RowBox[{"S", ",", " ", "t"}], "]"}]}], " ", "+", " ", 
         RowBox[{"V", "[", 
          RowBox[{
           RowBox[{"S", " ", "-", " ", "\[Delta]S"}], ",", " ", "t"}], 
          "]"}]}], ")"}], "/", 
       RowBox[{"\[Delta]S", "^", "2"}]}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{"prox", " ", "=", " ", 
   RowBox[{"pde", " ", "/.", " ", "rls"}]}]}]}], "Input",
 CellChangeTimes->{{3.474045217513685*^9, 3.474045237023604*^9}},
 CellLabel->"In[124]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      RowBox[{"V", "[", 
       RowBox[{"S", ",", "t"}], "]"}]}], "+", 
     RowBox[{"V", "[", 
      RowBox[{"S", ",", 
       RowBox[{"t", "-", "\[Delta]t"}]}], "]"}]}], "\[Delta]t"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    RowBox[{"V", "[", 
     RowBox[{"S", ",", "t"}], "]"}]}], "+", 
   FractionBox[
    RowBox[{"r", " ", "S", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"V", "[", 
         RowBox[{
          RowBox[{"S", "-", "\[Delta]S"}], ",", "t"}], "]"}]}], "+", 
       RowBox[{"V", "[", 
        RowBox[{
         RowBox[{"S", "+", "\[Delta]S"}], ",", "t"}], "]"}]}], ")"}]}], 
    RowBox[{"2", " ", "\[Delta]S"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["S", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"V", "[", 
         RowBox[{"S", ",", "t"}], "]"}]}], "+", 
       RowBox[{"V", "[", 
        RowBox[{
         RowBox[{"S", "-", "\[Delta]S"}], ",", "t"}], "]"}], "+", 
       RowBox[{"V", "[", 
        RowBox[{
         RowBox[{"S", "+", "\[Delta]S"}], ",", "t"}], "]"}]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Delta]S", "2"]}]]}]}]], "Output",
 CellChangeTimes->{3.4675861886147003`*^9, 3.472400389230795*^9, 
  3.4731655784547567`*^9},
 CellLabel->"Out[125]="]
}, Open  ]],

Cell["\<\
In the next step, the notation is changed to make it more consistent with a \
grid scheme.\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{3.4734328667875*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prox", " ", "=", " ", 
  RowBox[{"prox", " ", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"S", ",", "t"}], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["V", 
       RowBox[{"j", ",", "i"}]]}], ",", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{"S", ",", 
        RowBox[{"t", "-", "\[Delta]t"}]}], "]"}], " ", "\[Rule]", " ", 
      SubscriptBox["V", 
       RowBox[{"j", ",", 
        RowBox[{"i", "-", "1"}]}]]}], ",", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{
        RowBox[{"S", "+", "\[Delta]S"}], ",", "t"}], "]"}], " ", "\[Rule]", 
      " ", 
      SubscriptBox["V", 
       RowBox[{
        RowBox[{"j", "+", "1"}], ",", "i"}]]}], ",", 
     RowBox[{
      RowBox[{"V", "[", 
       RowBox[{
        RowBox[{"S", "-", "\[Delta]S"}], ",", "t"}], "]"}], " ", "\[Rule]", 
      " ", 
      SubscriptBox["V", 
       RowBox[{
        RowBox[{"j", "-", "1"}], ",", "i"}]]}]}], "}"}]}]}]], "Input",
 CellLabel->"In[126]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SubscriptBox["V", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "i"}]}]], "-", 
     SubscriptBox["V", 
      RowBox[{"j", ",", "i"}]]}], "\[Delta]t"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    SubscriptBox["V", 
     RowBox[{"j", ",", "i"}]]}], "+", 
   FractionBox[
    RowBox[{"r", " ", "S", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SubscriptBox["V", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "j"}], ",", "i"}]]}], "+", 
       SubscriptBox["V", 
        RowBox[{
         RowBox[{"1", "+", "j"}], ",", "i"}]]}], ")"}]}], 
    RowBox[{"2", " ", "\[Delta]S"}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox["S", "2"], " ", 
     SuperscriptBox["\[Sigma]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["V", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "+", "j"}], ",", "i"}]], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["V", 
         RowBox[{"j", ",", "i"}]]}], "+", 
       SubscriptBox["V", 
        RowBox[{
         RowBox[{"1", "+", "j"}], ",", "i"}]]}], ")"}]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Delta]S", "2"]}]]}]}]], "Output",
 CellChangeTimes->{3.4675861886696997`*^9, 3.472400389293195*^9, 
  3.4731655785031977`*^9},
 CellLabel->"Out[126]="]
}, Open  ]],

Cell["\<\
To better illustrate the structure of the equation, more notational \
adjustments are made. The new structure will later help to simplify the \
calculations.\
\>", "Text",
 CellChangeTimes->{
  3.455558834713626*^9, {3.473432894392991*^9, 3.473432900935547*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"prox", " ", "=", " ", 
  RowBox[{"prox", " ", "/.", "  ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["V", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "i"}]], "-", 
        RowBox[{"2", " ", 
         SubscriptBox["V", 
          RowBox[{"j", ",", "i"}]]}], "+", 
        SubscriptBox["V", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "i"}]]}], 
       SuperscriptBox["\[Delta]S", "2"]], "\[Rule]", " ", 
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"i", ",", "j"}]]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        SubscriptBox["V", 
         RowBox[{
          RowBox[{"j", "+", "1"}], ",", "i"}]], "-", 
        SubscriptBox["V", 
         RowBox[{
          RowBox[{"j", "-", "1"}], ",", "i"}]]}], 
       RowBox[{"2", "\[Delta]S"}]], "\[Rule]", " ", 
      SubscriptBox["\[CapitalDelta]", 
       RowBox[{"i", ",", "j"}]]}]}], "}"}]}]}]], "Input",
 CellLabel->"In[127]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SubscriptBox["V", 
      RowBox[{"j", ",", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "i"}]}]], "-", 
     SubscriptBox["V", 
      RowBox[{"j", ",", "i"}]]}], "\[Delta]t"]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "r"}], " ", 
    SubscriptBox["V", 
     RowBox[{"j", ",", "i"}]]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["S", "2"], " ", 
    SuperscriptBox["\[Sigma]", "2"], " ", 
    SubscriptBox["\[CapitalGamma]", 
     RowBox[{"i", ",", "j"}]]}], "+", 
   RowBox[{"r", " ", "S", " ", 
    SubscriptBox["\[CapitalDelta]", 
     RowBox[{"i", ",", "j"}]]}]}]}]], "Output",
 CellChangeTimes->{3.4675861887247*^9, 3.472400389371195*^9, 
  3.4731655785533*^9},
 CellLabel->"Out[127]="]
}, Open  ]],

Cell[TextData[{
 "Solving the last expression for ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", 
    RowBox[{"j", ",", "i"}]], TraditionalForm]]],
 " and simplifying leads to"
}], "Text",
 CellChangeTimes->{{3.473432928999152*^9, 3.473432941223631*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"diff", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{"prox", ",", 
       SubscriptBox["V", 
        RowBox[{"j", ",", 
         RowBox[{"i", "-", "1"}]}]]}], "]"}], " ", "//", " ", "Simplify"}], 
    " ", "//", " ", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"diff", " ", "//", " ", "TraditionalForm"}]}], "Input",
 CellLabel->"In[128]:="],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["V", 
     RowBox[{"j", ",", 
      RowBox[{"i", "-", "1"}]}]], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"r", " ", "\[Delta]t"}], "+", "1"}], ")"}], " ", 
      SubscriptBox["V", 
       RowBox[{"j", ",", "i"}]]}], "-", 
     RowBox[{
      FractionBox["1", "2"], " ", "S", " ", "\[Delta]t", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "r", " ", 
         SubscriptBox["\[CapitalDelta]", 
          RowBox[{"i", ",", "j"}]]}], "+", 
        RowBox[{"S", " ", 
         SuperscriptBox["\[Sigma]", "2"], " ", 
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{"i", ",", "j"}]]}]}], ")"}]}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.4675861888276997`*^9, 3.472400389449195*^9, 
  3.473165578608149*^9},
 FontFamily->"Birka",
 CellLabel->"Out[129]//TraditionalForm="]
}, Open  ]],

Cell[TextData[{
 "The presented calculation scheme is a version of the explicit FDM. While \
applying this calculation scheme, the new values for the derivative ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", 
    RowBox[{"j", ",", 
     RowBox[{"i", "-", "1"}]}]], TraditionalForm]]],
 " are stepwise calculated from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["V", 
     RowBox[{
      RowBox[{"j", "+", "1"}], ",", "i"}]], ",", " ", 
    SubscriptBox["V", 
     RowBox[{"j", ",", "i"}]]}], TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["V", 
    RowBox[{
     RowBox[{"j", "-", "1"}], ",", "i"}]], TraditionalForm]]],
 ". ",
 ButtonBox["Figure 14-1",
  BaseStyle->"Hyperlink",
  ButtonData->"Explicit FDM"],
 " illustrates this approach."
}], "Text",
 CellChangeTimes->{{3.4734334751040916`*^9, 3.473433600460828*^9}, {
  3.4734336360399113`*^9, 3.473433636983096*^9}, {3.476116675814309*^9, 
  3.476116676102827*^9}}],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12  scalefont  setfont
% Scaling calculations
0.0238095 0.17316 0.0238095 0.17316 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.03 0.0075 moveto 0 0 lineto
-0.03 -0.0075 lineto fill
-0.03 0.0075 moveto 0 0 lineto
-0.03 -0.0075 lineto
-0.03 0.0075 lineto stroke
} ifelse
grestore
} def
/MAarrowhead2 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.025 0 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.025 0 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
/MAarrowhead3 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.025 0.00625 moveto 0 0 lineto
-0.025 -0.00625 lineto fill
-0.025 0.00625 moveto 0 0 lineto
-0.025 -0.00625 lineto
-0.025 0.00625 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
.8 g
.5 Mabswid
[ ] 0 setdash
.17965 .19697 m
.90693 .19697 L
s
.19697 .17965 m
.19697 .90693 L
s
.17965 .37013 m
.90693 .37013 L
s
.37013 .17965 m
.37013 .90693 L
s
.17965 .54329 m
.90693 .54329 L
s
.54329 .17965 m
.54329 .90693 L
s
.17965 .71645 m
.90693 .71645 L
s
.71645 .17965 m
.71645 .90693 L
s
.17965 .88961 m
.90693 .88961 L
s
.88961 .17965 m
.88961 .90693 L
s
0 g
.17965 .19697 m
.94156 .19697 L
s
% Start of user PostScript
0.9 1. 5.3 1. MAarrowhead1
% End of user PostScript
.19697 .17965 m
.19697 .94156 L
s
% Start of user PostScript
1. 0.9 1. 5.3 MAarrowhead1
% End of user PostScript
gsave
.54329 .54329 -96.625 .28125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 25.125 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(V) show
70.188 18.563 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(j) show
71.625 11.250 moveto
(i) show
76.750 11.250 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
81.875 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
87.500 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.71645 .71645 -54.2344 .28125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 25.125 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(V) show
70.188 18.563 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(j) show
75.313 18.563 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(+) show
80.438 18.563 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
71.625 11.250 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(i) show
86.063 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.71645 .54329 -56.4375 .28125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 25.125 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(V) show
70.188 18.563 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(j) show
71.625 11.250 moveto
(i) show
77.250 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.71645 .37013 -54.2344 .28125 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 25.125 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(V) show
70.188 18.563 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(j) show
75.313 18.563 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(-) show
80.438 18.563 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
71.625 11.250 moveto
%%IncludeResource: font Courier-Italic
%%IncludeFont: Courier-Italic
/Courier-Italic findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(i) show
86.063 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.71645 .71645 m
.54329 .54329 L
s
% Start of user PostScript
4. 4. 3. 3. MAarrowhead2
% End of user PostScript
.71645 .54329 m
.54329 .54329 L
s
% Start of user PostScript
4. 3. 3. 3. MAarrowhead2
% End of user PostScript
.71645 .37013 m
.54329 .54329 L
s
% Start of user PostScript
4. 2. 3. 3. MAarrowhead2
% End of user PostScript
1 0 0 r
.54329 .54329 m
.54329 .54329 .01299 0 365.73 arc
F
.71645 .71645 m
.71645 .71645 .01299 0 365.73 arc
F
.71645 .54329 m
.71645 .54329 .01299 0 365.73 arc
F
.71645 .37013 m
.71645 .37013 .01299 0 365.73 arc
F
.8 g
.37013 .28355 m
.54329 .28355 L
s
% Start of user PostScript
2. 1.5 3. 1.5 MAarrowhead3
% End of user PostScript
.54329 .28355 m
.37013 .28355 L
s
% Start of user PostScript
3. 1.5 2. 1.5 MAarrowhead3
% End of user PostScript
.28355 .37013 m
.28355 .54329 L
s
% Start of user PostScript
1.5 2. 1.5 3. MAarrowhead3
% End of user PostScript
.28355 .37013 m
.28355 .54329 L
s
% Start of user PostScript
1.5 2. 1.5 3. MAarrowhead3
% End of user PostScript
.28355 .54329 m
.28355 .37013 L
s
% Start of user PostScript
1.5 3. 1.5 2. MAarrowhead3
% End of user PostScript
1 g
.28355 .45671 -9.84375 -7.71875 Mabsadd m
.28355 .45671 9.84375 -7.71875 Mabsadd L
.28355 .45671 9.84375 7.71875 Mabsadd L
.28355 .45671 -9.84375 7.71875 Mabsadd L
fill
.8 g
gsave
.28355 .45671 -70.8438 -11.7188 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.4375 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Math1
%%IncludeFont: Math1
/Math1 findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
(D) show
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
(S) show
78.688 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
1 g
.45671 .28355 -7.8125 -7.71875 Mabsadd m
.45671 .28355 7.8125 -7.71875 Mabsadd L
.45671 .28355 7.8125 7.71875 Mabsadd L
.45671 .28355 -7.8125 7.71875 Mabsadd L
fill
.8 g
gsave
.45671 .28355 -68.8125 -11.7188 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.4375 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Math1
%%IncludeFont: Math1
/Math1 findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
(D) show
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
(t) show
74.625 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.800 0.800 0.800 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 g
gsave
.17965 .97619 -68.2813 -11.7813 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.5625 translate 1 -1 scale
63.000 15.938 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.938 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(S) show
71.313 11.125 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(j) show
73.563 15.938 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.97619 .19697 -65.8438 -11.7188 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 23.4375 translate 1 -1 scale
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(t) show
66.313 17.688 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 8.500 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(i) show
68.688 15.813 moveto
%%IncludeResource: font Arial
%%IncludeFont: Arial
/Arial findfont 12.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Figure",
 Editable->True,
 CellFrame->True,
 TextAlignment->Center,
 TextJustification->0,
 ImageSize->{204.25000000000006`, 197.99999999999997`},
 ImageMargins->{{124.375, 0.}, {0., 0.}},
 ImageRegion->{{-0.1468788249694002, 
  0.9999999999999997}, {-0.18308080808080826`, 1.}},
 Magnification->0.76,
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],
 ImageRangeCache->{{{185, 363}, {621, 444}} -> {-6.18993, 14.3491, 0.0247969, \
0.0247969}}],

Cell["Explicit FDM", "Figure Title",
 CellChangeTimes->{{3.473433646262311*^9, 3.473433646675849*^9}},
 CellTags->"Explicit FDM"],

Cell[TextData[{
 "An efficient Mathematica function for the calculation of the differences \
needed in ",
 Cell[BoxData[
  FormBox["\[CapitalDelta]", TraditionalForm]], "Literal"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["\[CapitalGamma]", "Literal"], TraditionalForm]]],
 " is available through ",
 StyleBox["ListConvolve", "Literal"],
 ". To demonstrate this, ",
 StyleBox["ListConvolve", "Literal"],
 " is\[LineSeparator]applied to a list of symbols."
}], "Text",
 CellChangeTimes->{{3.473433669686104*^9, 3.473433673389331*^9}, {
  3.473443811562867*^9, 3.473443812319952*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"V", ",", "\[Delta]S"}], "]"}], ";"}], "\n", 
 RowBox[{"v", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    SubscriptBox["V", "j"], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "6"}], "}"}]}], "]"}]}]}], "Input",
 CellLabel->"In[130]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["V", "1"], ",", 
   SubscriptBox["V", "2"], ",", 
   SubscriptBox["V", "3"], ",", 
   SubscriptBox["V", "4"], ",", 
   SubscriptBox["V", "5"], ",", 
   SubscriptBox["V", "6"]}], "}"}]], "Output",
 CellChangeTimes->{3.4675861888817*^9, 3.472400389527195*^9, 
  3.473165578653015*^9},
 CellLabel->"Out[131]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ListConvolve", "Literal"],
 " used for ",
 StyleBox["\[CapitalDelta]", "Literal"],
 " results in the following expression."
}], "Text",
 CellChangeTimes->{{3.473433681309882*^9, 3.473433683557749*^9}, 
   3.4740453437308273`*^9}],

Cell[BoxData[
 RowBox[{"\[CapitalDelta]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"ListConvolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", 
        RowBox[{"-", "1"}]}], "}"}], ",", " ", "v"}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Delta]S"}], ")"}]}], " ", "//", " ", 
   "TraditionalForm"}]}]], "Input",
 CellLabel->"In[132]:="],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["V", "3"], "-", 
      SubscriptBox["V", "1"]}], 
     RowBox[{"2", " ", "\[Delta]S"}]], ",", 
    FractionBox[
     RowBox[{
      SubscriptBox["V", "4"], "-", 
      SubscriptBox["V", "2"]}], 
     RowBox[{"2", " ", "\[Delta]S"}]], ",", 
    FractionBox[
     RowBox[{
      SubscriptBox["V", "5"], "-", 
      SubscriptBox["V", "3"]}], 
     RowBox[{"2", " ", "\[Delta]S"}]], ",", 
    FractionBox[
     RowBox[{
      SubscriptBox["V", "6"], "-", 
      SubscriptBox["V", "4"]}], 
     RowBox[{"2", " ", "\[Delta]S"}]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.4675861889827003`*^9, 3.4724003896675954`*^9, 
  3.473165578708046*^9},
 FontFamily->"Birka",
 CellLabel->"Out[132]//TraditionalForm="],

Cell[TextData[{
 "The first list in ",
 StyleBox["ListConvolve", "Literal"],
 ", the kernel ",
 StyleBox["{1,0,1}", "Literal"],
 ", is applied piecewise to the second list, multiplies the elements of the \
second list, and adds them up according to the values given in the kernel. \
This operation runs internally in Mathematica and is much faster than any \
loop written in Mathematica code."
}], "Text",
 CellChangeTimes->{{3.4555588776467457`*^9, 3.455558888506583*^9}, {
  3.473433706260395*^9, 3.473433729406169*^9}}],

Cell[TextData[{
 "The approach used for ",
 StyleBox["\[CapitalDelta]", "Literal"],
 " can also be applied for the calculation of ",
 StyleBox["\[CapitalGamma]", "Literal"],
 ". ",
 StyleBox["ListConvolve", "Literal"],
 " can replace loops that are common to the explicit approximation of PDEs."
}], "Text",
 CellChangeTimes->{{3.4734338093098783`*^9, 3.473433839746235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"ListConvolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "2"}], ",", " ", "1"}], "}"}], ",", " ", "v"}], "]"}], 
    " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"\[Delta]S", " ", "^", " ", "2"}], ")"}]}], " ", "//", " ", 
   "TraditionalForm", " "}]}]], "Input",
 CellLabel->"In[133]:="],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      SubscriptBox["V", "1"], "-", 
      RowBox[{"2", " ", 
       SubscriptBox["V", "2"]}], "+", 
      SubscriptBox["V", "3"]}], 
     SuperscriptBox["\[Delta]S", "2"]], ",", 
    FractionBox[
     RowBox[{
      SubscriptBox["V", "2"], "-", 
      RowBox[{"2", " ", 
       SubscriptBox["V", "3"]}], "+", 
      SubscriptBox["V", "4"]}], 
     SuperscriptBox["\[Delta]S", "2"]], ",", 
    FractionBox[
     RowBox[{
      SubscriptBox["V", "3"], "-", 
      RowBox[{"2", " ", 
       SubscriptBox["V", "4"]}], "+", 
      SubscriptBox["V", "5"]}], 
     SuperscriptBox["\[Delta]S", "2"]], ",", 
    FractionBox[
     RowBox[{
      SubscriptBox["V", "4"], "-", 
      RowBox[{"2", " ", 
       SubscriptBox["V", "5"]}], "+", 
      SubscriptBox["V", "6"]}], 
     SuperscriptBox["\[Delta]S", "2"]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.4675861890477*^9, 3.4724003897923956`*^9, 
  3.4731655787528954`*^9},
 FontFamily->"Birka",
 CellLabel->"Out[133]//TraditionalForm="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellTags->"14.9 See Also"],

Cell[TextData[{
 StyleBox["Derivatives: The Theory and Practice of Financial Engineering", 
  "CitationTitle"],
 " (Wiley) by P. Wilmott contains the technical background underlying this \
recipe."
}], "Text",
 CellChangeTimes->{
  3.455558900820971*^9, {3.4734338483037167`*^9, 3.473433923352387*^9}, {
   3.473443817673251*^9, 3.4734438189349813`*^9}, {3.4742158107999153`*^9, 
   3.474215815045334*^9}}],

Cell[TextData[{
 "This recipes was derived from work done by Thomas Weber of Weber & Partner. \
The original notebook and other interesting financial applications in \
Mathematica can be found at ",
 StyleBox[ButtonBox["http://bit.ly/bR0bF",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/bR0bF"], None},
  ButtonNote->"http://bit.ly/bR0bF"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.455537728145281*^9, 3.455537728147236*^9}, 
   3.455558906796391*^9, 3.4675853701184*^9, {3.473433931003971*^9, 
   3.4734339404839163`*^9}, {3.473433985007216*^9, 3.4734339963039618`*^9}}],

Cell[TextData[{
 "The method used in this recipe is based on the explicit FDM. There are also \
implicit methods. See Wikipedia for a general explanation of the difference \
and the trade-offs (",
 StyleBox[ButtonBox["http://bit.ly/tr3IN",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/tr3IN"], None},
  ButtonNote->"http://bit.ly/tr3IN"], "URL"],
 ")."
}], "Text",
 CellChangeTimes->{{3.4555377295197973`*^9, 3.45553785816593*^9}, 
   3.455558914324305*^9, {3.4675853940283003`*^9, 3.4675854021808*^9}, {
   3.473434030534463*^9, 3.473434075543593*^9}, {3.473434106720388*^9, 
   3.473434137454236*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Compiling an Implementation of Explicit Trinomial for Fast Pricing of \
American Options"
}], "Heading1", "TopOfPage",
 CellTags->"Compiling Trinomial Fast Pricer"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You need a very fast pricer for American options. You want to make sure the \
implementation can be compiled for fastest possible execution without any \
calls to noncompiled code.\
\>", "Text",
 CellChangeTimes->{{3.473434183448131*^9, 3.4734341881547117`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "This solution was contributed by Andreas Lauschke. See ",
 ButtonBox["Recipe 14.8",
  BaseStyle->"Hyperlink",
  ButtonData->"Speeding Up NDSolve When Solving Black-Scholes"],
 " for more information."
}], "Text",
 CellChangeTimes->{{3.4734343309880047`*^9, 3.473434343726952*^9}, {
  3.473434373959777*^9, 3.473434386185149*^9}}],

Cell[TextData[{
 "Mathematica has a built-in compiler that creates optimized code for a ",
 StyleBox["Mathematica",
  FontSize->10.199996948242188`],
 "-specific virtual machine. ",
 StyleBox["Compile", "Literal"],
 " is discussed fully in ",
 ButtonBox["Recipe 18.5",
  BaseStyle->"Hyperlink",
  ButtonData->{"Advanced.nb", "Compiling"}],
 ". Here we simply show an application that creates a pricer for American \
options using ",
 StyleBox["trinomial scheme", "Techical Italic"],
 " (see discussion). "
}], "Text",
 CellChangeTimes->{
  3.455558933693308*^9, 3.473434404601039*^9, {3.473434789288437*^9, 
   3.473434798076786*^9}, {3.4740454637542677`*^9, 3.474045470224539*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"americanPutCompiled", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kk", ",", "r", ",", "sigma", ",", "tt"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "=", "5"}], ",", 
         RowBox[{"nn", "=", "100"}], ",", 
         RowBox[{"mm", "=", "20"}], ",", 
         RowBox[{"tt0", "=", 
          RowBox[{
           RowBox[{"sigma", "^", "2"}], " ", 
           RowBox[{"tt", "/", "2"}]}]}], ",", 
         RowBox[{"k", "=", 
          RowBox[{"2", " ", 
           RowBox[{"r", "/", 
            RowBox[{"sigma", "^", "2"}]}]}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"alpha", ",", 
           RowBox[{"h", "=", 
            RowBox[{"2", " ", 
             RowBox[{"a", "/", "nn"}]}]}], ",", 
           RowBox[{"s", "=", 
            RowBox[{"tt0", "/", "mm"}]}], ",", "x", ",", "ss", ",", "tmax", 
           ",", "f", ",", "pp0", ",", "u", ",", "z"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"alpha", "=", 
           RowBox[{"s", "/", 
            RowBox[{"h", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"x", "=", 
           RowBox[{"Range", "[", 
            RowBox[{
             RowBox[{"-", "a"}], ",", "a", ",", "h"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"ss", "=", 
           RowBox[{"kk", " ", 
            RowBox[{"Exp", "@", "x"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tmax", "=", 
           RowBox[{"MapThread", "[", 
            RowBox[{"Max", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"{", 
                  RowBox[{"nn", "+", "1"}], "}"}]}], "]"}], ",", 
               RowBox[{"1", "-", 
                RowBox[{"Exp", "@", "x"}]}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"f", "=", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"k", "-", "1"}], ")"}], " ", "x"}], "+", 
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"k", "+", "1"}], ")"}], "^", "2"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"#", "-", "1"}], ")"}], " ", "s"}]}], "]"}], " ", 
              "tmax"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"mm", "+", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          
          RowBox[{"pp0", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"0", ",", 
               RowBox[{"kk", "-", "#"}]}], "]"}], "&"}], "/@", "ss"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"u", "=", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"1", "/", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"k", "-", "1"}], ")"}], " ", "x"}], "]"}], " ", 
            RowBox[{"pp0", "/", "kk"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"z", "=", 
              RowBox[{
               RowBox[{"alpha", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Take", "[", 
                   RowBox[{"u", ",", 
                    RowBox[{"{", 
                    RowBox[{"3", ",", 
                    RowBox[{"nn", "+", "1"}]}], "}"}]}], "]"}], "+", 
                  RowBox[{"Take", "[", 
                   RowBox[{"u", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"nn", "-", "1"}]}], "}"}]}], "]"}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "alpha"}], "-", "1"}], ")"}], " ", 
                RowBox[{"Take", "[", 
                 RowBox[{"u", ",", 
                  RowBox[{"{", 
                   RowBox[{"2", ",", "nn"}], "}"}]}], "]"}]}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"z", "=", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"z", ",", 
                  RowBox[{
                   RowBox[{"alpha", " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "alpha"}], "-", "1"}], ")"}], " ", 
                    RowBox[{"u", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "+", 
                   RowBox[{
                    RowBox[{"alpha", "/", "kk"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"k", "-", "1"}], ")"}], " ", "a"}], "+", 
                    RowBox[{
                    RowBox[{"1", "/", "4"}], " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"k", "+", "1"}], ")"}], "^", "2"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], " ", "s"}]}], "]"}]}]}]}],
                  "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"u", "=", 
              RowBox[{"MapThread", "[", 
               RowBox[{"Max", ",", 
                RowBox[{"{", 
                 RowBox[{"z", ",", 
                  RowBox[{"f", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "mm"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"ss", ",", 
            RowBox[{"kk", " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "/", "4"}], " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "+", "1"}], ")"}], "^", "2"}], " ", "tt0"}], 
              "]"}], " ", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "1"}], "/", "2"}], " ", 
               RowBox[{"(", 
                RowBox[{"k", "-", "1"}], ")"}], " ", "x"}], "]"}], " ", 
             "u"}]}], "}"}]}]}], "]"}]}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.46979083337514*^9, 3.469790835132484*^9}},
 CellLabel->"In[134]:="],

Cell["\<\
You can see that 10 runs of the pricer over various strike prices execute in \
32 milliseconds.\
\>", "Text",
 CellChangeTimes->{3.4555589395810623`*^9, 3.474045502315833*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"time", ",", "pricing"}], "}"}], " ", "=", 
   RowBox[{"Timing", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"americanPutCompiled", "[", 
          RowBox[{"strike", ",", "0.05", ",", "0.4", ",", "1"}], "]"}]}], ",",
         "60"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"strike", ",", "50", ",", "100", ",", "5"}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"pricing", ",", 
   RowBox[{"PlotLabel", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"time", "*", 
       RowBox[{"10", "^", "3"}]}], "]"}], " ", "<>", " ", 
     "\"\< millisecs\>\""}]}]}], "]"}]}], "Input",
 CellChangeTimes->{3.474215833823244*^9},
 CellLabel->"In[135]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwdxQ0w1HkAh/Flj3ASZS+2O2cjtygnre289fti7f5XZzli7oh1ZIhcXV52
Zr1dE9OqnJObNGdEBsk4wmyIhFHonCUbHcKm9VbK1ThvHffyzHzm8T8dwYqi
0Wia/3L97+RJbvOs3kkOqK6PVyq9tMmI0q0yif4S1P2rWyspqWQ0UKEvruwF
dbeAfM94RZ4x/xgjaXOg5Iazn5fkkymGi3h/WxqommVFUqI3UT080rhPwwFU
JTcghqNPpsv6omTTTqBKOtgbykKiltfI8raKQV07z6lI5ZHZTXuHAw8KQOVG
fx3XoiYLmTYr48lGoLKC3Drqc8iiiPGm4Y0bKCnX9EHKKFk6eMk8udAZVPxC
3D65A/lTLWvm9meDCg+oM+15TN51hw+ZZspBfeXLrJoMJstj6vVWlRIU7hzI
qPqSrLJP5Z+dlYGyC4vkS/XIev3TDJqlAhTTpLVDJ4T8fa7akbZ2GxS9Thg8
oAGaSL/J970vBAuvSxnxQ9DU0lVUp2ZAoMgLSmbkgb7gYK4h1YWgLkC4QdVC
WzO8wdrqLQS5szTpcT3o+L8TuTvmQRD718i1yyroqZ4eTHB3gMDD0jZi0wDb
5UXChfcsCBjakUMSCQxj29MTw+6BP209pywtx07LzpCUokHwqw3Wd7PFMN6O
xpiRefBPs6Pbn/HxkfWnbM+3geDbjrJrj0/AJK1LLRU5w0sleVRL7mCPkU3x
mLMCXrkeTTeLE/HJ/Hy/z2AZvDgx/j6qEZhfqPjNqXYNPMXWQLpcH3t59W28
hGHwvt229CR/CZb2OVqcQDo8Z05EXGyLgJUfa9B7cgWeYaOLm+M8sCtV4zOO
Mnj0GvreUmvBFgMh46yX8LDIbAsrrIad2ZVIs3vpcD/10671LQ/Yl91fyQsd
BkpDf6zxc4XDibHgAOYLkKx+MnezDJxju5O1r34It4Ip6bmATnAlJ618EjLh
kkzz3jtI8IXSu5mz8AucmI27kgxi4XKmd5UZXQFuxoZF+O0NHAkoqPou+AwO
FZtzu9YcgU79UN0YV9i3t7wyYPXCI8v1SkmTGrZLkWm9R8fAk0xJ3FN3wqq2
bqJCagr+9eUSu+wesFRd2c8biiCk/R/28DOf/1AuxtEbJjquN0Qw3iH+2Wjm
IkSydUFsznXoh2ydH45qgt/k5cDfE3tAP1Sxg56+CP/y4UfKX+fJ6uP48gxV
Lo4Vzkm2JdmQ11ntgRpKMwQ97G4q7+smqp7WqNCBNHyzX/NwH/cFGcq9dDZS
GIeQwRbzRdEg6Tps90GTUIywtrsT4am3SIPM2KL0M9Y/y4G1kA==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwB0QMu/FJvYiFlAAAAAgAAADwAAAACP9e3suSLc7lASz4f3TkYvD/aNkPS
5x3oQEs5JhmQOwg/3Pf9Wmk5qkBLM6ZfYstRP+AB99IvuHNASy2Sl+eXCD/h
sPSCStGKQEsm2zEBMx8/441E/Ki0hEBLH271WQYPP+WbraLjYFhASxc64Eg2
qj/n4XMv08xiQEsOKe0diLE/6mRoNzJZWUBLBCThQ06uP+0q/BCltRNASvkS
ELt3mz/wHiWqPJBiQErs1RxZO3E/8dAZChwRJkBK306pD+DsP/Ovr/7vfMpA
StBcD5xc5z/1wbdOnBH6QEq/1wO79a8/+At8+jYrnEBKrZUyDG6IP/qS3dVk
y3xASpln05pTCz/9XlSLs1uwQEqDGzYHiTFAADqFHSbvukBKanY3FxgBQAHv
dGRX+/FASk85skrFnEAD0leXpCKLQEoxH98bfh9ABegD8AGf1kBKD9ueLgMn
QAg10MUTqtdASesXs7nLpUAKwaU8eu4fQEnCde0nzipADZIHaZhhUUBJlY4v
ubEQQBBXFoJBPd9ASWPtbc8DakASDwbxgAHQQEktFIAdGVBAE/U8MW5gzEBI
8Hbf5kYDQBYOk/zzU+dASK15Pu3AM0AYYG8SsSQrQEhjb/mNsvVAGvC+/Gzv
pkBIEZ1e8/lJQB3GFUlxJxdAR7cvyx7JAEAgc9oxd5m0QEdTP428EgZAIi7R
Er90xUBG5MyYi2DBQCQYXjexsp9ARmq771FV70AmNWfsH/cdQEXj1NLL0W1A
KItYZjjDKUBFTr2fZSV/QCsgK6YwbhZARKn4V6FIuUAt+n7LciVPQEPz3tFo
EaRAMJDQg1DoOEBDKp58YOWWQDJO0ynstAVAQkwztoyLdkA0O74Wjp2UQEFW
ZKMmXDRANlyANQc+pUBARrt2k+4SQDi2jUO7mKtAPjUAUYyy+kA7T+vLujVD
QDudYvvNj9tAPi9EkOnYakA4v/qm6lxHQECt+dDv5PFANZVwPD8SIEBCbw2Z
ilkPQDJtm4OpJSpARF9cOuP+lUAuu6Cj9walQEaD3U/7O65AKPR221C5g0BI
4g4wMzEoQCOri2R5XyxAS4AAAAAAAEAeAMVfjYK2QE5kZzxCsXBAFhDpIuB9
mUBQy1Z0FDRKQA8x/3dr1kxAUo+AxMhm3EAFHzaqHXIEQFSDORJQWOY/+03f
Atl4HkBWq3+2Ic2uP/DJkC7BAXdAWQ3bsYMuDj/jkAJvgMu8QFuwaNb6PGI/
1YRMl203KkBemedxBQnmP8Y8sp7Ktx5AYOjmxxt3wz+1fBYnMl4/mOWlEg==

     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwdinkw3HcAR1cIg3WfFWeDuJoadtzy/VhHdtlfumPUXbtxNGnGrKNsiFEm
yTSTEBpxVlNmsJXWMYRgIs1GQlkxqSrSxG0daVYSRMuimvbNvHn/vNCUeKsk
Go126L0+/5X8MfvTAv0rAqr7w74hmYBMVbL3o9yXQbV3utrJy8jst46N6ZIC
UE2deWH5nWReePHug7YNUCJ9Vs31XLLIaW44Ky0H9b24pHB9gyyFhTCdzkyA
Kv+hgv1Mi6yUFM35TmeBut5RUVrZQ/7UcJ80qLIBdenXhtIyCyKT1Pq4rZmC
ylo4ZzKfRd6MjtgL3hmASh5Z7PS5TdbLEFtj//7nZZjLdpXJpkC0+fCKLihu
+7KcXk+2sicDGh3VQSFRYP52j/zdqyExrwGo43GyEboSkXvr7bRmJoIyyXCr
cukje/ufGIW3poJSSvN/7UQHTWmV48pmgyMzaz2lpgyFDobFSPwtcEa9rcf4
ClD8Zkqbt3sTnDuX+/LNEnC4poFXPVgJTknLGfFyM1SWxsUK/fXgCBI2+Pdr
oPYFJv453gtOEOvzHW9AwznCoUPUAs4HW4e6tDKgbXWEOyPuRsjqNkM7URs6
Y3G8wv1mhLT/fl5SHAu9O1RiQf0iQoQHRknFchj031U5fXQQIYyZ/s6EBhhr
rTBzn0oR/EpiaFJnCZOKn/fNw2kIrj4sSVZVh1lCjx7vhh6C/fo2PdpfwNI3
b+fS1VawZ02nyzYKYLXxIGcwuBzsdMMhByYDR8d3owM9b4C1U8WvpAthI1Nt
M18/C1ZGytqI0RrsvJhj6lVuODkf6E+XCuEwULRrK4rByRO13GFBNz6qyEy5
IKpH0LU5XmVTMpyjDW9d1o9G4GMPadqVarjoRozrprUjYLVJOjD8Eq7by7Es
NQb8/1KdOTfQAjfd2t8klgFgvlywjUwsh0fi6juVFcDv4detKy5+8NpqO21/
fxS4QHPKCY6C73DhDMmT4YSlptRWhwMIZ0un6ivgdSB3yFApBdPl2JPG727D
vUDs1+NIR4Cp5oQ6ewEMk5wjAXYFCPLMWTwWEATnR4IlXX4XWMXP7Tp22XD0
9J6Ub79CiI2t2P3ZVdhkhhJttXs4RfsfWH528TXlrAzuzRce1vwhGOumt7Xq
ixAa+vHjL636oaN40Jlfl4Iwkun6KPItVNR+CXRPMkU4vzrqiaKU7A9x+a6a
TYi8Z7jlY+tCNrhwVTCeRUzYmx/5xZ+SpQhWdt3AHuIYT4V2frNkMluj97z1
KvhtqnNF8blkkOnuMW39HPHpqRbKbS6kK9XYoa8s5l/AI6xQ
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwVinlM03cAR1uUa3IWtVwehWERqauIk0Hr98MqFCj092uRwRBGx+kcl8yp
mHHJFDkUYo2wFUYKiJtkSEA6hM1rGzJGZgKCEscpkUMQkHFUDqcveXn/PHlS
JCeGwWDovFXwruRf/aqBC+f/AG3FesRTsEj/a5r7t2wE9Ga7HYo+czK01Xn5
AE8DmjVMVdoYk+EXxiqqJhm0qd9KzT0tGRmLbTu3WAF6g/y1UUgUGbWR5dTZ
cEHrzdiWBRmS8dzkLSWhxaB12NzktBgy6baSHhwzBkp78rMN6gIyzX/i6ZHZ
D2qq/NWr4yIyK6A4tlb5oAZzNTeYTWTO6LAp897bv9OCk9lcRuaNXftiV9ZA
3We/P+IWRhZFa3mKXn9QdfEd6rPmRKuJ9lI7nwVV+ry73y6UrBy9rnW8wwOV
E+jhsLBG3sTd/dRHGQ0q6fTNj3WNwQytlheMNIMK2u54Oa8P63jP7L7qzgDl
xmAV/qgDXRfRr3HLrqDYDzsbv94F/fg5rjLxKqT/CWZiKSEMn10rYr5IgbRj
0lt5yhJGpXVjY/VqSNWp1m7Xn8K03NDyZYQA0mPHLb3p2zBPdZmcpR9AKoh0
i2NbwIKqFjz57RtImS1ZrTY0NgUrHxeLFxBwd7y2Vq8K7Csf9AU+/x0Bqd41
32b5wtrc/byBZBgBTtZT4nMmsH1oMpqf0w3/TpXKL4KDbT0NTnKXDPgfG8tJ
i08Ap3heKs3ogr++4YyxLRv2x6paLZdPQlL0cn1JSjQc0hzU7WvhkJjEOlY1
OYF7p9GpgM+HX7r9pE/vBJzIlluLHjR8+xsbAhazwGP+WbQx9wJ8d2fr7Pll
Dnz9iNLIpO/g82VbXJEZB3s0U93UZiOIL19aPL2qxF7lwI6uZWd4V7cEONcL
sa9Ce7FSEQWv8kE9X+YY9o9nF+pWzONgWsRPefFLcE+QNRgUPoVIIBt3P5EC
oWt3evHwEjx7M/l8jw8B+ytLkTF+gCw8lvhGwLPHduhgmBZCov15tX4IIk1Q
2+eHIvHRGTPxXtESvP4yYxW4N2Lfg9D6gV2T8LFQ5R/NXYDLTuNTOw/Ywk/1
mJnYPAJeOuPRVbdDCDhCaEHGBLjEyqpaIwENxjvAaa507vqhHrL5M53cI72w
tlhBWs1NBPYabuw0BViJb25IDjchaPqLituS9TBYCB6UhbgiRLiqFtcOg2Gn
6G+VlyG0vdb1k3QNmeuZ2e/JFyO8dF2lcKaUjG69mN16XwBFmOq9Gvta0pvw
z1AW6xoiN203+B4GpF3c0jl9qQRRy9oTsxNqcivaere8I/V/w+Okrw==
     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjHlQlAUAR5cFF1iO4Ybl1OVGDoEU5ej7Lci9uN8nJrLJvSBnmLgpWrkI
hElELtJQghJEhBzCMMBwLMM5DhkgQZooLYLLcIgQI8iVpW/mzfvvHU+P3RdP
o9Ho7/R8X+Jvp7Ip9aJAUCd1/NaHXhLTDfttTVv+AXV8odnB8y9iJv0o23vD
GhQvSXprvYd4EVVyRfrzCqjg/D8VJR8QczlmS1XMe6D8fe/+4TZMzM+EDbuO
ZILy/iatuFuZWBJR/LXHraC8TsjrNaQRrwS9lj+41IFyK1ThnPyXWH1wzXwv
kwTl7CiRyecRa4Vt9aJ2VVB27IGJuDjidbawV8CvBcUO12J6GRIbtX33Vc8t
gmJJms64qBBb6pYPWXkFoDTci8WqN4mdxo5e8/bfQO1pi7pQGk68/ZGzWaG0
DnKbZfYkogy0BYPhMo86kMveWkEriqA3Ck7NiexASjXJ5dxJKFSLLQ0DYkCO
xoosN+XAGK9NTN9+BLJb7VNhwmUou2MlX6cJ5F1ZV+7TOag8z4ymaxIgiztC
4lgBUH+4d3v80Fcgvzwx16XmAU3GVPZNFRlIQeb3i0MK0BoL+lp++t3Pf840
UsaEzoNXhhZfBIG0oXynx3+C3s5kUMWSEsg9yeydD38FK6Gm2a+mGzxJw43Q
2y9hrFUwLL4/DV5iysD5xF2YMSLHNttrwWM6p9q0HMY+i0flFUkbOFahbtRn
JQf2WnIlS/gGxxzf0HN8K2Gxel0jqS4cIfcGwagogrUFb4Hst0WIuctqU5wU
tkXRlVufbIGb93hx4NYC7H02y2emkhH8zMq8kJkPJ89dS3pqD4JN45tL5Bzg
7KOQpZgvRRC3MT0vYwKu2oNqhvrdCBQsM3My8nFQN+FicU4VAgRDLeKSG3AL
Ue152yqGf2Cro7UXG0d6EoI5llXw05iy7xJ+DE9hxznlw0IcbTNhF3RUgsjY
KmUomcHnCM1VZq8NTsyZrCrmHXDEzfyU6wbwOch3qNPlg7iy5ZwX6QBf9+wB
Q1UjeFyM5taffgH/zzR5avuvwe28e9AlpxAELne61o9Ww/XbOhUYicCtHp+0
uSSCU9/gGO+CBLzasGmOdTBslaSvvWKegRLR3gNz/f4UvloEQsPsUu3OLsJY
N3eU692Hj6Jm4g/sdkL7yX81ejp0hN2J1Gz3MgDz+fzllGAu+EZR8/3hUshF
swoyTGQ4PembcfaxB7EeUe6R5d+IqFn9UiNqlpiXTRQsSD5HzO0RvrdVGvE0
9jtGPk2AuMxDB34xERO/hyCNTgtFfO7VkSkLDaLzlLHzrHzx/3MXmtQ=
     "]]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjXsw1AkAx5ccJa/D6rTWYxWVFMor8vueU7ve+/udWbWbNScxzWlXpSO3
UdHpcrQd4Qo1rnN2Qri7IY/1CNehnZ3lDqcNebvTMHJepavPzGc+f34ocZTN
KRqNpvle7w8lRhy6z7AVU6By6I/lBzqJ0eF9PuFt86BuVhOrhUXEWIvAny3P
B5W5IM5VniUm+myjxcUiUBk9FSfrRMS01aDBE2YjqDQPQcE2d2JWJjSuvdIN
KmWXPNtel5hLdCkIDvsTVJL0ReNwAjHP8Z08k1oL6lxUrER9gFjYeLCzJMwZ
1JdZV7k9/xCLY9aeE8eyQEXTKskjM8TSmvR85+L7n6AsJ8xinFgJ4FZVT/eD
osTKE+wpYm0gmK5yVYDi+LT38oqItw8/9i5lG4HyXg+j2aeDFv2vRF8WCcrp
eolV82NoWpKiPMdSUKzOroShDGhpsyLBuAvK5PssaecRaNt8at/S4AdKs31Z
y0IDmy+YmCauJYKcd1mVGguxVSe79mq9HORQBW1A6gj94UAnTXd9kO0biZKv
0mB05ek3QrUbyIdzEHTowNjHLblq2hGk1NOm5rQMprujdprFT4I8e9f6hs8N
mHFcl+MPm4MMbe968cMdfHLfuqkymwFyT6To3sW3YLjbfusZVw9SY6vXLSEb
liajJszP1OD2CoOVPy3Burhf6LLUAu79seK0az+DJfy8nFFfDu5p84FN4j+w
I2h4eTyOAa7DOd1LtfmwE4v59RFeCFUUfp2gasOu7mSnvzKWEOr+rk5umAuH
WD1mTEUrQm5lziBiCvs4vRmK1HQED+blKJm34dRofmLFfhXBBpzojYAYuKTI
TpWX2SHIsSAxpT8DB+ML/SbM4xHoymZmzVyFW95cV7iBJQJYA8yVlHF4LFst
8vVawVn8jvdREh9e+f46kjIe2A/4j15daoBPiq3zllEjHHWeFoxsqIDB7Of1
Zj/Cr+Cy+x2Lefje89CdevQavn1bQvK7lPDLzU82edYIDL/hX09vwlF5dbPq
SR8Oi6oo+wsK+NsaZ2Zb8OFpY/6S7lKJwN//Hlqgh+Pg64Bi3sokQn5R1rw8
xIDzpo6YN0M54C57eLCmeNijKlX06ceBaqF9ADsSxmQjks0Iq1NpOyatw3Kb
oXD7oBK8yYbfbs66ge73rmSkJxDHQ6nLv+7fC71nF82u+ZyEYKXNidBSQ7NI
5W01sxfCmec1mfubif/GuURrpBm+oNO7JMdvE7MV2wv06hoQNaohG9ztQKjD
SYfcVyxEq4OOVa8zCQXVoWMqMkCsoZ7d04hUoinI0vX8oZr/AYGorGE=
     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1:eJwB0QMu/FJvYiFlAAAAAgAAADwAAAACP+E/x+wIVCpAU9AXLIadnz/jEDFT
kM/vQFPMeMzF/GM/5RFycEyHCEBTyHj/jasjP+dIrkj/l+1AU8QNhb+zqD/p
u5Ix4TDIQFO/Kwxd9qE/7HBkWDs1HUBTucUPhpAKP+9uE9Wn0fVAU7PNumMQ
ez/xXiU6DmYZQFOtNcO4Y2o/8zHAKCSeEkBTpexGvJZQP/U2iMZJ+A5AU53e
l84ocD/3casmKYwxQFOU+BSd/K8/+ejemldew0BTiyHvUV3CP/yidFuK5A5A
U4BC9BSgqD//pWe4KNRVQFN0P0iIsq5AAXy3+8pOQ0BTZvgkZiHWQANTig+P
H6BAU1hLgp7ICEAFW+BlmbcMQFNIE8o0Bq9AB5rwKmcuJkBTNidt4kABQAoW
esB/+hlAUyJYgaq+QkAM1Nx/emDKQFMMdEUrRHNAD90dAAJc20BS9EKhldO/
QBGbgI9UHyhAUtmFmft81UATdY9xzcR0QFK7+Kx6Ck1AFYF5wSkA9UBSm1Ai
tZgLQBfEfdS7/OdAUnc4T9xfk0AaRGcwujEuQFJPVLpDtVFAHQedXywvtUBS
Iz8ueO0ZQCAKmixT3+5AUfKGuWcXa0Ahun9TaY6rQFG8robysLJAI5fQt5UL
YkBRgSyiJcySQCWnVUyvYj9AUT9ok7lMXUAn7lSlCw4dQFD2udtxgXhAKnKk
eFxMwUBQpmZAZV2kQC06t5bT7IpAUE2f894P80AwJtc3XRDPQE/XBwQRMJ1A
Mdm0p28ZkkBO/isWZJOfQDO6TkpRxG1ATg6Af3Y7O0A1zXN8sBsiQE0FoTCX
X3lAOBh1HBiXmEBL4OaGXmU3QDqhMyW1YvBASp1ifeOzk0A9bivDuCsGQEk3
2DMghh1AQENF+AVE1UBHrLOVNEMCQEH5IOtxKTZARfgAO08NzUBD3QiUKlVI
QEQVX0LEC4hARfPUxnuGHkBB//wcTVpiQEhC37uLe4xAP2UAV6GOukBK0BPI
Dw0tQDrN+XmwNg5ATaH6hDRbCEA2WekxbdZJQFBf5sXN/NtAMiYn5VH7R0BS
GMSAJTsGQCycbalquPtAVAAAAAAAAEAl0gPoZuqzQFYaeaAwgQxAIAxMdnS4
b0BYbZUF7teyQBav/5yrhJRAWv9G768hQEAOuQmxnzF6QF3WJHe6r9pAA9uK
6sy0c0BgfLn40sQiP/hrAEQBdn5AYjifxusKOD/sdGCiL7P6QGQjNPlwK+o/
30wSUJ7b4EBmQWKAvdinP9AsJNCTbedAaJiVfrOW7j+/QCA5A3HQZgqlCg==

     "]]}, 
   {Hue[0.3224758424985268, 0.6, 0.6], LineBox[CompressedData["
1:eJwVinsw1AkAx1d5zHKMdd2dt9moRdGDSyz3++5sWiwtu79Nur0kXNLipprk
WcZjbWMzzKn00LpKJVohnBPdsXOqO+paz9vphNo9XawWRxyn78xnPn98vvyU
Q/R4CoWyZhX/jyZGBV2J3UNiCM2tr/FM0ohxlnfCY/UkhFRElYrciTeHpBci
eKcgNKIUF+QPENqHvh7FJat/yp4DdvfGibeRXHKFrQK56PDQuf8TYtIn8Wq7
NgXkbMzB7AUzQlefLs1hnAU5ZXqeysoj3p8wkSlC00FqqU76vyuJmTi1e5Vm
BuQI18w1uomYk07z710oBjnQlsM1nSfmtcrBIpfV3sMp06gziEWJOHdJpQDZ
qbLYfVxOLIsvV7JLeSBbOM7CiQZQev+y6av7HeTd3ABawDDWfJ+bUaBngLx6
uKomdxaGhb/UFdIugZQ98+tulML4fsVRPT8LZGaZ8QDHDtR11zzMK6kgj0jH
H8UZwKx5VCxZaAVJZlOViQxY/ODOOWY8ADKAKc2ab4Plu9QEAxYJ0rngqWLr
Eqwe7LwYHGMH0sRBf9n7OtbVaBMm5D9BoGnxYVXr8flQyTfMEkMIlEYuI9NF
sIGy3qStCYKKu6rhDTLYaWuvK1UsCE6EGGl0t+A4+MWXju/rIAg8Tj+Y8RZ0
M3avjcM/ENAULv8VjmF9PyNIzigDfzAtJebPdrg8D+u0EFmDX06Ig9xEYBg8
qUzfFwu+INp+5pUz3JJ8p75uXwHfeEOaa3kJNtv0dIzSZIio++3G0YZsbLGI
tWRtEiCCn6a30+mxzW1X9R+v1AifYLa60VXY/i9v+o3ZJoSnGo+9Tk6G96ze
c26kEbypBElShQ4+7iGNGfZ92NO3yJb3HYNv+VLSMN0KYRUzk13cIvhzd++z
/NEJoZydN3+e7AERaHFaX9uEkKfCJv65HLA46ZH55c4IZmT3SCReYFvXf3Bl
PgEn8gyxdrkagbZDDuIPVxC498EOXSgLHIGV1dhXZ8B2WnxptdUUwb+aN+/y
CgRqb3vKXrxAaNZnhsXLFPinD9G4vt+Bl2m7OVXeAp8OSVdegwIR8a+3u6vv
wCvobOwt2yUI/MK7Geea4fmtd55BXBGEoHwcGFtcNr6LikZkJt3PS2oPujkt
QL12DlEzyXvDlB6wtl05f9L/JUQK5oHqT4Ww5IdtFJWGILqhoGPH/kEY2bDL
0063IiYv/2K0Lo5YmK4LYsk0iBW5dUa1qolJZlUNX+GP+PiEYBPPO8SI/Eir
Kq4Xh2+euv24aRvx3FPjcOWGEonrHfsrnomIR5dojsGqk/8D1w+rzQ==
     "]]}, 
   {Hue[0.5585438199983166, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxQlMUwcAh3EOoRyC3DhAroWrBKHKQC7fn7u2UKDte9CUa2xKhCnXJmYe
QBQKWEECEbQLXuMSlFDZMBMm28xEDAhj0MTJuDZGaUEKohzFbX7JLx83J8Pp
qIaGhtb/gj+cmMvsl1ekdoJi2ZhZ5/GJv/P9z2vJl0BF0eZTH6mIfx7c/JGy
XgAVWu5QlF5OLDKemDlULoIKrvYrvGtPKNd2nd5HzYDyNzkh/+4U8fp97lyY
pB+Uz05XYcZuQnVP4b7/mA0oenReZ76YWKuQz8QfeAXK+dVZ7xwZsV6/4eXB
GAdl0/aizsOWeDcpmDL33wPK9HrW06UiYittunK5rwcUrd6a0RtJ7LhsnbjN
koBUl3kFVZyBhu2nBecdmSBX2Nx63z5oDhkkXn2XC3L2KePas13Q7uBshzcY
ghyTua/Om0GnbzuhRLsO5C/81dVb+tCjJefHLC2D7LIK/1pUCoMqjne3uQLk
N0phY7kmjASsvdWbySDL7tRMWxnCxL+X1j2RD/Kk1tDIPS2YKtPjNflBILmD
6wNV/jAfXrl1+I4RSN/vYwOVubD8KzSddk4LpHnhz/rseuxltG5ynCzAX/7B
bTfbCDZ9RtW8sxfB/9VBIFOUYZ/4jdVoIR/8a0SC2HMbjnxmafnLCfAzWyyY
Bn1wNlzK+1OoAN9HdqV2S4CPVS9CJvqLwXsTkTiq+wyuBoPDoo5h8Lq4flll
LnBPJt5GckTgZZLNPl/JQVc6BHTkTINnWWM11dUCr/5NWuaEANxHB/Xy9ZPg
k0eLkH1iDG4ib1UwqsIBT6k9UypHwsLa6pF2AXwtFMHJ6idIOLkR3FBrCD9G
g7lEvY34BfdoaQkXh0ROyih7EeJ59HbSpRtBthceS+5eQlyKdiKdMY2QdUHl
F3s4iFUZD92k6wKXNxqtGw4iJnUs4OLVGYSx7/foLOWCdZtFe/n8M0QcitSb
4qSA2aMR9vB1GaKS2po7b6gQ1WDoaSfeBFMal8Z6O4sIYvuGTKcTbHaQVL34
HqGtIwzW9BFw6FahJstjOOz2sHU+eBTx7XaLKQW+CHBxTZTUmIObPdco6i2E
b5ZyRh3YBb5w0sRjNhM+1judMXrGoIo1PgR3ccTRggEDJE0O/O5X4wVnowmd
8LhzEJ6Jbu6QtuKj0n+vYN0NqWneQ006x2HKtCyQXxpH+sCXFwRaCuhSaqYr
WxMZ4gT/JbtmYvt0ekxJUxw+L3rweCC7mFjRPCUMHA/BsRZJQyMjk5i5Phgr
EN7Hcf2qkfHaXuI3RltW0x/fIru9dX+l/nPipzozR9MVnf8AC7OlAQ==
     "]]}, 
   {Hue[0.7946117974981064, 0.6, 0.6], LineBox[CompressedData["
1:eJwB0QMu/FJvYiFlAAAAAgAAADwAAAACP+R7vWhJ4/JAV4cbhN/bLT/mozqT
O/bsQFeCz3MrG7Y/6QS35VrgWUBXfg+veDs6P+umTvavhGlAV3jQDtOlWT/u
jr2bO2nuQFdzAx6vlOA/8OK7lGMniUBXbJoCb8sMP/KpW8bbpKlAV2WETVWj
kz/0n8w08Rk+QFddr9hq9g4/9ssUL6t7tkBXVQiT//KAP/kwwmt31pBAV0t4
VETQBj/71vs9UVZ6QFdA5ph7nBA//sSIV0fAh0BXNThMMJ9XQAEAdRZad2lA
VyhPgdh+x0ACyjWVWD4SQFcaCyYiVC9ABMQaewA870BXCkarOUgvQAbzM/J5
9Y5AVvjZqxyNiUAJXRp4poleQFbll4Adx/BADAf9MlqGzUBW0E7SfKwBQA76
scSX+P1AVrjJGfrB70ARHmLrsKl4QFaeyhIjYUlAEutJOAFnIkBWgg8f4etz
QBToqKoz5QBAVmJOptqkPUAXG5pXJFlJQFY/N0zQ7DxAGYnAlWCxI0BWGG8p
N6SNQBw5VWyfPFNAVe2S3tWxf0AfMTqJ3RpnQFW+NJ0wZ1BAITyFcII8U0BV
idsHL5mOQCMMlxSjmepAVU///Cprz0AlDXczDVlrQFUQD0BAMdRAJ0RH2gD9
hEBUyWUAjOLuQCm2tUsQRKtAVHtML2wKrkAsawSD/SDCQFQk/LSWyb9AL2gj
Tu2bJUBTxZlseF8yQDFa3QGN1HJAU1wt8Zey8EAzLh+RvoP2QFLnrCpqNN1A
NTKGhtPuXkBSZumVS7enQDdtPPhBGUJAUdicS64zK0A54/kkESA5QFE7V7TZ
4LBAPJ0LEV00BEBQjYjfyAwYQD+fbLzHZX1AT5rk9X5lP0BBeWn8NVmMQE3y
ULy2n0JAQ0/jFoZBvUBMHRVBLg+TQEVX1xeWYPBAShaARm3gY0BHlnov8kVG
QEfZYR9IzbFAShGMq7KvREBFX/thm9tVQEzPaa61ordAQqP4NAfsv0BP1xd9
kd+mQD/UmECBQDFAUZgsvn8WDEA6isTqsm54QFNx4grknEVANY1PYFFaZEBV
fWlYLDYXQDD84RyXXdVAV8AAAAAAAEAp6WSj+ja1QFo/cG45mT5AIw6azKqb
BEBdAiD3C6AjQBrw/4oLrXBAYAeSHk/7vkASPd3BdoVhQGG3JacW2GpAB5S0
9tMWSUBjlBzXekjoP/z/EFDBvLdAZaM9vDccIz/w5RlgTFLdQGfpzug1NCY/
4pUq395SjUBqbaT44XFGP9M0a7evEoNAbTUxhnVDOj/CjhMh2guTocelVw==

     "]]}, 
   {Hue[0.030679774997896203`, 0.6, 0.6], LineBox[CompressedData["
1:eJwdxQsw2wcAx/FgFFOlZiXXmZRaUIZFunr0/6NmDROaSPIfReYxr2q7euQu
XuuVW7S1TO2qN6fUoeqM4lKUKqZFZyKV0WE01XiktWp7lqFjj+/d576cU7G0
BAqFovsvn/9OqKWdi8bJDJADe7X1nxgQi0rf+ky9ZyDvXt7WZucQGp7cJKZ+
GOTtMuIry+fECvW3aSJ3CaTMbPHDqlJi1dI75kBPLsimNXlmRhDx8v7h9v06
HiDrmdwkhgnxumYkQTJ/CGRVH31TWU6syZokJduVIK+cY9TlBBDaLTcPl3tl
IKWJZGqXmtgocNLOZJmDLOT79rUWE3+zLV+0vfAFKWZa38ueAsX9gm1WuRfI
NE3qfpkHdNSSTuZoEUght8V66CH0BoXj1gUykMdCqQ1zEdCfVm90q5Qgccsl
v+EzGNJPlJ5ZlIB0jY4LFBvDuPVRPsVeDpJq1d1nGImdZxs9Kes3Qeq1sCLG
dGDGNukIfRMKgeaPasu0cezWN5I35uRDIC/hZ1mWwELjYasjNoKghcvaPNqM
d3WFbY4OryCQLlLEx41hxXnN9vMsgSDlz8krF1Wgqh65p/t5QOBv7xy7ZYr3
ZBUszRsaBJYGceMiEWxTevMyou+AP++4pKyuxT77/sjsCgX4jaYbe+gxsN+J
9qTJZfBP0RN7fw+Eg+P79COveOA7T9Gbj8+CnjugFrO9wFOJHjQTt+Bs7lQ5
7SUHT+rfcb0yAy7Ly6MhihrwGEmcENUk3L6p+/lQ8zrC5dtjeTITeAS09gSk
TyD8ix2rv5auguFWrM/g6YG7EB97vicWzDCaImhOC2701MrWTAA+rlfNLHhK
wBk2C72h1oc3xiJnaM/AsSvoiS5vxGGbS3E2d/Jw7MR3Fhvb/kDNXW1J1ATC
qqO+bQrzgX/8dASX+hShhaPE0vUaBITvyTK4/DZCyh6Lz3L7EShKdghJL0Bw
FiVon4LAUWVQJ0PzA1jUdotM0xQEnx7+i5pYh8D8TTvhzU2wuWUNJyNO40il
LXNg3RNh/SZRRkk+QG/Xc1PaMDiFPpeqOtTwXo3LHQ6eRrjoscgvZzeYzS2z
dWJr8K+uVbkWDcFdNVD0pK0Cn1P+D86BBU++ro1B5DUrQ59rbNjvivnefOE8
oiUbn6YUX8XeyO1zEwkdEM5d5P2SMQSLj+p26eWtILZ24oHyx2UYPkyrzVdJ
EV++JNqR6URsFfbydJQ2+PL+YEftyCDxcqg7IWosF8kHdA+OMJ8S89ILZ+JY
qUhVdNmusBWE8qDrWx2sGJzsuT0rzLlB/CR5x676A9o/lh+1GA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"18.485 millisecs\"", TraditionalForm],
  PlotRange->{{0., 164.65969678262206`}, {0., 99.06426803047734}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 5}},
 CellChangeTimes->{3.4675861892467003`*^9, 3.472400390041996*^9, 
  3.473165578869419*^9},
 CellLabel->"Out[136]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "The function ",
 StyleBox["americanPutCompiled", "Literal"],
 " returns a packed array of two lists: the first is a list of nodes in the \
spatial (stock price) direction, and the second is a list of American option \
prices at these nodes. The two lists can now be interpolated with Mathematica\
\[CloseCurlyQuote]s ",
 StyleBox["Interpolation", "Literal"],
 " function to obtain intermediate values."
}], "Text",
 CellChangeTimes->{{3.473434810942052*^9, 3.473434827532102*^9}, {
  3.476116753962142*^9, 3.476116764818181*^9}}],

Cell[TextData[{
 "The function ",
 StyleBox["americanPutCompiled", "Literal"],
 " is fully compiled, as can be seen by inspecting ",
 StyleBox["americanPutCompiled[[4]]", "Literal"],
 " and noting that all list elements are numeric. "
}], "Text",
 CellChangeTimes->{{3.473434925473755*^9, 3.473434939759198*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"americanPutCompiled", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "]"}], ",", 
   RowBox[{"_", "?", "NumericQ"}]}], "]"}]], "Input",
 CellLabel->"In[137]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.4675861893796997`*^9, 3.472400390119996*^9, 
  3.473165578918193*^9},
 CellLabel->"Out[137]="]
}, Open  ]],

Cell[TextData[{
 "The algorithm implements a method to price American options based on the \
linear complementarity formulation of the free boundary value problem. The \
numbers ",
 StyleBox["a", "Literal"],
 ", ",
 StyleBox["nn", "Literal"],
 ", ",
 StyleBox["T0", "Literal"],
 ", and ",
 StyleBox["mm", "Literal"],
 " (and, correspondingly, ",
 StyleBox["s", "Literal"],
 " and ",
 StyleBox["h", "Literal"],
 ") are parameters that define the grid to be used. ",
 StyleBox["a", "Literal"],
 " and ",
 StyleBox["nn", "Literal"],
 " determine the grid along the space (stock price) axis, and ",
 StyleBox["T0", "Literal"],
 " and ",
 StyleBox["mm", "Literal"],
 " determine the grid along the time axis. For explicit methods, it is \
crucial to keep the spatial and temporal spacing in certain limits, otherwise \
local blow-up will occur. For a 100% explicit method, it is necessary that ",
 StyleBox["alpha=s/h^2<=1/2", "Literal"],
 ". That means that if the spatial step size ",
 StyleBox["h", "Literal"],
 " is reduced by a factor of 10, the time step size ",
 StyleBox["s", "Literal"],
 " has to be reduced by a factor of 100. This is not due to reasons of \
precision, but due to reasons of stability. If, for example, ",
 StyleBox["mm", "Literal"],
 " is lowered to 15, ",
 StyleBox["alpha", "Literal"],
 " is no longer ",
 StyleBox["<=1/2", "Literal"],
 ", and the instability becomes quite visible. For numbers like 5 or 10 for \
",
 StyleBox["mm", "Literal"],
 ", the method wreaks\[LineSeparator]",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{
  3.4675826385362*^9, {3.473434966397335*^9, 3.473435020694707*^9}, {
   3.473435717460936*^9, 3.473435741628821*^9}, {3.474215851870537*^9, 
   3.474215853349243*^9}, {3.474312588480435*^9, 3.474312616662986*^9}}]
}, Open  ]],

Cell[TextData[{
 "havoc. Traditional American option pricing methods use binomial trees and \
exhibit this problem with what is called ",
 StyleBox["oscillations", "Emphasis"],
 ". (All tree methods are necessarily 100% explicit.) It\[CloseCurlyQuote]s \
the same stability problem that is inherent to all explicit methods."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{
  3.4675826385362*^9, {3.473434966397335*^9, 3.473435020694707*^9}, {
   3.473435717460936*^9, 3.473435741628821*^9}, {3.474215851870537*^9, 
   3.474215853349243*^9}, {3.474312588480435*^9, 3.4743126234722548`*^9}}],

Cell[TextData[{
 "What makes this rectangular grid method so powerful is the fact that \
although it is faster than most tree-based implementations, it computes the \
option prices for the whole interval, not just for ",
 StyleBox["one", "Emphasis"],
 " particular price of the underlying, which is a limitation all tree-based \
methods possess."
}], "Text",
 CellChangeTimes->{{3.4734357559150257`*^9, 3.473435756007846*^9}}],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellMargins->{{0, 36}, {0, 12}}],

Cell[TextData[{
 ButtonBox["Recipe 18.5",
  BaseStyle->"Hyperlink",
  ButtonData->{"Advanced.nb", "Compiling"}],
 " explains the mechanics of compiled functions",
 StyleBox[" and the performance impli",
  FontTracking->"SemiCondensed"],
 "cations of functions that don\[CloseCurlyQuote]t fully compile."
}], "Text",
 CellChangeTimes->{{3.455558958957877*^9, 3.45555896426182*^9}, {
  3.473435821840472*^9, 3.473435821887046*^9}, {3.4740455562852*^9, 
  3.4740455577878017`*^9}}],

Cell["\<\
See Ansgar J\[UDoubleDot]ngel, \[OpenCurlyDoubleQuote]Modellierung und \
Numerik von Finanzderivaten,\[CloseCurlyDoubleQuote] Vorlesungsmanuskript \
2002, Johannes-Gutenberg Universit\[ADoubleDot]t Mainz.\
\>", "Text",
 CellChangeTimes->{{3.4734358373964787`*^9, 3.473435849044807*^9}}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Modeling the Value-at-Risk of a Portfolio Using \
Monte Carlo and Other Methods"
}], "Heading1",
 CellMargins->{{0, 72}, {2, 14}},
 CellChangeTimes->{
  3.473435872800674*^9, {3.4766215709854507`*^9, 3.476621571250955*^9}},
 CellTags->
  "Modeling the Value-at-Risk of Portfolio Using Monte Carlo and other \
Methods"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 StyleBox["You want to understand the worst expected loss of a portfolio of \
secu",
  FontTracking->"Plain"],
 StyleBox["rities. This is re",
  FontTracking->"SemiCondensed"],
 StyleBox["ferred to as ",
  FontTracking->"Plain"],
 StyleBox["Value-at-Risk", "Techical Italic",
  FontTracking->"Plain"],
 StyleBox[" or ",
  FontTracking->"Plain"],
 StyleBox["VaR", "Techical Italic",
  FontTracking->"Plain"],
 StyleBox[". Specifically, you want to use Monte Carlo methods because these \
allow you to trade accuracy for speed by varying the number of samples. ",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.4734358911287613`*^9, 3.473435897651655*^9}}],

Cell[TextData[{
 "Since the financial disaster that began in 2007, the notion of \
Value-at-Risk has become quite controversial. Some, like Nassim Taleb, have \
",
 StyleBox["called it an intellectual fraud, while others have called it an \
invaluable tool, if",
  FontTracking->"Plain"],
 StyleBox[" used properly. I include this recipe as an illustration of the \
math behind ",
  FontTracking->"SemiCondensed"],
 StyleBox["one particular implementation", "Emphasis",
  FontTracking->"SemiCondensed"],
 StyleBox[" of VaR and without judgment as to its ",
  FontTracking->"SemiCondensed"],
 StyleBox["effectiveness. Please refer to the link in the ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["\[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] \
section",
  BaseStyle->"Hyperlink",
  ButtonData->"14.11 See Also"],
  FontTracking->"Plain"],
 StyleBox[" on page 587 for a thorough discussion of the efficacy of VaR in \
practice.",
  FontTracking->"Plain"]
}], "NoteWarning",
 CellChangeTimes->{{3.4675826571432*^9, 3.4675826936191998`*^9}, {
  3.473435907637237*^9, 3.473435958170351*^9}, {3.473436010270665*^9, 
  3.4734360102738132`*^9}, {3.476116799022437*^9, 3.4761167995207376`*^9}, {
  3.476187662532694*^9, 3.476187682476944*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellMargins->{{0, 36}, {0, 15}}],

Cell[TextData[{
 "In its simplest form, VaR is a measure of the worst expected loss under ",
 StyleBox["normal market conditions", "Emphasis"],
 " over some time interval, usually days or weeks. The simplest (and highly \
artificial) illustration of VaR concerns a portfolio consisting of a single \
security. Let\[CloseCurlyQuote]s assume it is worth $10 million, the average \
return is 0.085, and the standard deviation is 0.26. The distribution of the \
portfolio\[CloseCurlyQuote]s value is"
}], "Text",
 CellChangeTimes->{{3.4675826986772003`*^9, 3.4675827154902*^9}, {
   3.473436031300433*^9, 3.473436044533002*^9}, 3.4740456761241293`*^9, 
   3.4742158715825987`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"portfolio", "=", 
      RowBox[{"10", "^", "7"}]}], ",", 
     RowBox[{"return", " ", "=", " ", "0.085"}], ",", 
     RowBox[{"stddev", " ", "=", " ", "0.26"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{
         RowBox[{"portfolio", " ", "*", " ", 
          RowBox[{"(", 
           RowBox[{"1.0", " ", "+", " ", "return"}], ")"}]}], ",", " ", 
         RowBox[{"portfolio", " ", "*", "stddev"}]}], " ", "]"}], ",", "x"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "portfolio"}]}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[138]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
LGSTPhd1hP4PdTidMg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 20000000}, {0., 1.5343917003555684`*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellMargins->{{53, 0}, {4, 4}},
 CellChangeTimes->{3.4675861895657*^9, 3.4724003902447968`*^9, 
  3.4731655789748707`*^9},
 Magnification->1.3,
 CellLabel->"Out[138]="]
}, Open  ]],

Cell["\<\
From this we can compute the probability of a loss of 25% using the CDF.\
\>", "Text",
 CellChangeTimes->{3.4675827191562*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"portfolio", "=", "10000000"}], ",", 
     RowBox[{"return", " ", "=", " ", "0.085"}], ",", 
     RowBox[{"stddev", " ", "=", " ", "0.26"}], ",", 
     RowBox[{"loss", " ", "=", " ", "0.25"}]}], "}"}], ",", 
   RowBox[{"CDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{
       RowBox[{"portfolio", " ", "*", " ", 
        RowBox[{"(", 
         RowBox[{"1.0", " ", "+", " ", "return"}], ")"}]}], ",", " ", 
       RowBox[{"portfolio", " ", "*", "stddev"}]}], " ", "]"}], ",", " ", 
     RowBox[{"portfolio", "  ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "loss"}], ")"}]}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[139]:="],

Cell[BoxData["0.09879267452558438`"], "Output",
 CellChangeTimes->{3.4675861896097*^9, 3.4724003903227963`*^9, 
  3.473165579005547*^9},
 CellLabel->"Out[139]="]
}, Open  ]],

Cell["\<\
VaR is computed in terms of worst expected loss in dollars at a certain \
probability level, say 1%.  \
\>", "Text",
 CellChangeTimes->{{3.47343606636401*^9, 3.473436067141457*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"valueAtRisk", "[", 
   RowBox[{
   "startingValue_", ",", "meanReturn_", ",", " ", "var_", ",", " ", 
    "level_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"expected", " ", "=", 
      RowBox[{"startingValue", "*", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", " ", "meanReturn"}], ")"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"startingValue", " ", "-", "  ", 
     RowBox[{"Quantile", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"expected", ",", 
         RowBox[{"startingValue", "*", "var"}]}], "]"}], ",", "level"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[140]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"portfolio", "=", "10000000"}], ",", 
      RowBox[{"meadReturn", " ", "=", " ", "0.085"}], ",", 
      RowBox[{"stddev", " ", "=", " ", "0.26"}], ",", 
      RowBox[{"loss", " ", "=", " ", "0.25"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"valueAtRisk", "[", 
     RowBox[{
     "portfolio", ",", " ", "meadReturn", ",", "stddev", ",", "0.01"}], 
     "]"}]}], "]"}], " "}]], "Input",
 CellLabel->"In[141]:="],

Cell[BoxData["5.198504472506185`*^6"], "Output",
 CellChangeTimes->{3.4675861896767*^9, 3.472400390400797*^9, 
  3.47316557913555*^9},
 CellLabel->"Out[141]="]
}, Open  ]],

Cell["Thus the VaR at 1% is about 5.2 million.", "Text",
 CellChangeTimes->{{3.473436082085939*^9, 3.4734360828933277`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "ProductionPageBreak"],

Cell["\<\
The solution merely shows the statistical ideas behind VaR. In real-life \
scenarios, portfolios are more complexly structured, and you need to measure \
and account for correlations in the movements of these assets\
\[CloseCurlyQuote] values. The rest of this discussion deals with these \
issues.\
\>", "Text",
 CellChangeTimes->{
  3.4675827237742*^9, {3.4734360935998497`*^9, 3.473436148900385*^9}}],

Cell[TextData[{
 "The first issue to address is that prices don\[CloseCurlyQuote]t typically \
follow a ",
 StyleBox["NormalDistribution", "Literal"],
 " but rather a ",
 StyleBox["LogNormal", "Literal"],
 " one. Second, portfolio managers and traders ar",
 StyleBox["e typically inter",
  FontTracking->"SemiCondensed"],
 "ested in VaR over much shorter time periods than one year. So a more useful \
function is"
}], "Text",
 CellChangeTimes->{
  3.4675827333082*^9, {3.47343617645875*^9, 3.4734361951933393`*^9}, {
   3.474045839349266*^9, 3.474045857475203*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "valueAtRisk", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valueAtRisk", "[", 
   RowBox[{
   "startingValue_", ",", "mean_", ",", " ", "var_", ",", " ", "level_", ",", 
    " ", "days_", ",", 
    RowBox[{"tradingDays_:", "365"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"T", " ", "=", " ", 
      RowBox[{"days", "/", "tradingDays"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"startingValue", " ", "-", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"Quantile", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Log", "@", "startingValue"}], "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"mean", " ", "-", " ", 
              RowBox[{
               RowBox[{"var", "^", "2"}], "/", "2"}]}], ")"}], "*", "T"}]}], 
          ",", 
          RowBox[{"var", "*", "T"}]}], "]"}], ",", "level"}], "]"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellLabel->"In[142]:="],

Cell["Here we compute the VaR assuming 250 trading days.", "Text",
 CellChangeTimes->{{3.473436208033266*^9, 3.4734362087606897`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"portfolio", "=", "10000000"}], ",", 
      RowBox[{"return", " ", "=", " ", "0.085"}], ",", 
      RowBox[{"stddev", " ", "=", " ", "0.26"}], ",", 
      RowBox[{"loss", " ", "=", " ", "0.25"}], ",", 
      RowBox[{"days", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"valueAtRisk", "[", 
     RowBox[{
     "portfolio", ",", " ", "return", ",", " ", "stddev", ",", "0.01", ",", 
      "days", ",", "250"}], "]"}]}], "]"}], " "}]], "Input",
 CellLabel->"In[144]:="],

Cell[BoxData["22121.513676967472`"], "Output",
 CellChangeTimes->{3.4675861897467003`*^9, 3.4724003905255966`*^9, 
  3.473165579218747*^9},
 CellLabel->"Out[144]="]
}, Open  ]]
}, Open  ]],

Cell["See Also", "Heading2",
 CellTags->"14.11 See Also"],

Cell[TextData[{
 "An extensive discussion of VaR in light of the financial crisis of 2007\
\[Dash]2009 (and counting) can be found in this excellent ",
 StyleBox["New York Times", "CitationTitle"],
 " article by Joe Nocera:\[LineSeparator]",
 StyleBox[ButtonBox["http://bit.ly/2SgV68",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/2SgV68"], None},
  ButtonNote->"http://bit.ly/2SgV68"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.4675854308604*^9, {3.4734406172658978`*^9, 3.4734406763266697`*^9}, {
   3.4734438525630617`*^9, 3.4734438539361773`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Visualizing Trees for Interest-Rate \
\[LineSeparator]Sensitive Instruments"
}], "Heading1",
 CellChangeTimes->{
  3.4675827413052*^9, {3.473440696113306*^9, 3.473440700483873*^9}, 
   3.474215885689906*^9},
 CellTags->"Visualizing Trees"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You are using a tree-based approach to pricing (such as the Hull-White trees) \
and you want to visualize these trees using Mathematica\[CloseCurlyQuote]s \
graphics abilities. Such visualizations are often useful for pedagogical or \
diagnostic purposes.\
\>", "Text",
 CellChangeTimes->{
  3.4675827455902*^9, {3.4734407102126017`*^9, 3.473440730745332*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2", "TopOfPage"],

Cell["\<\
In this recipe, I am only concerned with using Mathematica for visualizing \
Hull-White trees. See the \[OpenCurlyDoubleQuote]See Also\
\[CloseCurlyDoubleQuote] section on page 591 for the theory and Mathematica \
implementation of the same for pricing purposes.\
\>", "Text",
 CellChangeTimes->{
  3.4675827492402*^9, {3.473440740051813*^9, 3.4734407458850107`*^9}, {
   3.476116872034395*^9, 3.476116886725397*^9}}],

Cell["\<\
The usual way to implement tree valuation methods is to state results in two \
or more new states, thereby modeling the diffusion of the stochastic process. \
The idea of Hull-White to model mean reverting processes is to add boundary \
conditions to this tree structure. The boundary conditions are valid for a \
given maximum state. \
\>", "Text",
 CellChangeTimes->{{3.473440756525375*^9, 3.4734407847732553`*^9}}],

Cell[TextData[{
 "The graphical building blocks of the tree can then be defined as follows. \
The variable ",
 StyleBox["nmax", "Literal"],
 " is global. There are three primitive elements: a nonboundary element, an \
upper-boundary element, and a lower-boundary element. The function ",
 StyleBox["path", "Literal"],
 " returns a triple that defines the terminal points of the path.  "
}], "Text",
 CellChangeTimes->{{3.473440795262786*^9, 3.4734408311419363`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"path", "[", "j_", "]"}], " ", ":=", 
  RowBox[{"j", "+", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"path", "[", 
   RowBox[{"j_", " ", "/;", " ", 
    RowBox[{"j", " ", "==", "nmax"}]}], "]"}], " ", ":=", 
  RowBox[{"j", "-", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"path", "[", 
   RowBox[{"j_", " ", "/;", " ", 
    RowBox[{"j", " ", "\[Equal]", 
     RowBox[{"-", "nmax"}]}]}], "]"}], " ", ":=", 
  RowBox[{"j", "+", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "2"}], "}"}]}]}]}], "Input",
 CellLabel->"In[145]:="],

Cell[TextData[{
 "The function ",
 StyleBox["grpath", "Literal"],
 " then constructs the graphical representation in terms of ",
 StyleBox["Line", "Literal"],
 " elements emanating from a starting point."
}], "Text",
 CellChangeTimes->{{3.4675827629412003`*^9, 3.4675827686612*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"grpath", "[", 
   RowBox[{"pt", ":", 
    RowBox[{"{", 
     RowBox[{"i_", ",", "j_"}], "}"}]}], "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{"pt", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", "#"}], "}"}]}], "}"}], "]"}], "&"}], 
   " ", "/@", " ", 
   RowBox[{"path", "[", "j", "]"}]}]}]], "Input",
 CellLabel->"In[148]:="],

Cell["\<\
Here then are the three primitive components used to build the tree.\
\>", "Text",
 CellChangeTimes->{
  3.4675827727972*^9, {3.473440850571015*^9, 3.4734408511980677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"nmax", "=", "2"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"grpath", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Unbounded\>\""}]}], "]"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"grpath", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "nmax"}], "}"}], "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Upper Boundary\>\""}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"grpath", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "nmax"}]}], "}"}], "]"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Lower Boundary\>\""}]}], 
          "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"AspectRatio", " ", "\[Rule]", "0.3"}]}], "]"}], "/.", 
    "\[InvisibleSpace]", 
    RowBox[{"Line", "\[Rule]", "Arrow"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4761169223814297`*^9, 3.476116922653179*^9}},
 CellLabel->"In[149]:="],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{ArrowBox[{{0, 1}, {1, 2}}], ArrowBox[{{0, 1}, {1, 1}}], 
       ArrowBox[{{0, 1}, {1, 0}}]},
      PlotLabel->FormBox["\"Unbounded\"", TraditionalForm]], {193.5, -378.}, 
     ImageScaled[{0.5, 0.5}], {360., 720.}], InsetBox[
     GraphicsBox[{ArrowBox[{{0, 2}, {1, 2}}], ArrowBox[{{0, 2}, {1, 1}}], 
       ArrowBox[{{0, 2}, {1, 0}}]},
      PlotLabel->FormBox["\"Upper Boundary\"", TraditionalForm]], {580.5, -378.},
      ImageScaled[{0.5, 0.5}], {360., 720.}], InsetBox[
     GraphicsBox[{ArrowBox[{{0, -2}, {1, -2}}], ArrowBox[{{0, -2}, {1, -1}}], 
       ArrowBox[{{0, -2}, {1, 0}}]},
      PlotLabel->FormBox["\"Lower Boundary\"", TraditionalForm]], {967.5, -378.},
      ImageScaled[{0.5, 0.5}], {360., 720.}]}, {}},
  AspectRatio->0.3,
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.4675861899257*^9, 3.472400390712797*^9, 
  3.473165579418069*^9},
 Magnification->1.2900000000000003`,
 CellLabel->"Out[149]="]
}, Open  ]],

Cell[TextData[{
 "Given these primitives, it\[CloseCurlyQuote]s a straightforward process to ",
 StyleBox["generate a tree with a particu",
  FontTracking->"SemiCondensed"],
 "lar boundary and depth."
}], "Text",
 CellChangeTimes->{{3.473440857822671*^9, 3.4734408644575443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"nmax", "=", "4"}], ",", 
     RowBox[{"depth", "=", "10"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "n", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "[", "m_", "]"}], ":=", 
       RowBox[{"Min", "[", 
        RowBox[{"nmax", ",", "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"grpath", "[", 
           RowBox[{"{", 
            RowBox[{"m", ",", "j"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "0", ",", 
            RowBox[{"depth", "-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"-", 
             RowBox[{"n", "[", "m", "]"}]}], ",", 
            RowBox[{"n", "[", "m", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Axes", "->", "True"}]}], "]"}]}]}], "]"}]}], "]"}]], "Input",\

 CellLabel->"In[150]:="],

Cell[BoxData[
 GraphicsBox[{{LineBox[{{0, 0}, {1, 1}}], LineBox[{{0, 0}, {1, 0}}], 
    LineBox[{{0, 0}, {1, -1}}]}, {{LineBox[{{1, -1}, {2, 0}}], 
     LineBox[{{1, -1}, {2, -1}}], LineBox[{{1, -1}, {2, -2}}]}, {
     LineBox[{{1, 0}, {2, 1}}], LineBox[{{1, 0}, {2, 0}}], 
     LineBox[{{1, 0}, {2, -1}}]}, {LineBox[{{1, 1}, {2, 2}}], 
     LineBox[{{1, 1}, {2, 1}}], LineBox[{{1, 1}, {2, 0}}]}}, {{
     LineBox[{{2, -2}, {3, -1}}], LineBox[{{2, -2}, {3, -2}}], 
     LineBox[{{2, -2}, {3, -3}}]}, {LineBox[{{2, -1}, {3, 0}}], 
     LineBox[{{2, -1}, {3, -1}}], LineBox[{{2, -1}, {3, -2}}]}, {
     LineBox[{{2, 0}, {3, 1}}], LineBox[{{2, 0}, {3, 0}}], 
     LineBox[{{2, 0}, {3, -1}}]}, {LineBox[{{2, 1}, {3, 2}}], 
     LineBox[{{2, 1}, {3, 1}}], LineBox[{{2, 1}, {3, 0}}]}, {
     LineBox[{{2, 2}, {3, 3}}], LineBox[{{2, 2}, {3, 2}}], 
     LineBox[{{2, 2}, {3, 1}}]}}, {{LineBox[{{3, -3}, {4, -2}}], 
     LineBox[{{3, -3}, {4, -3}}], LineBox[{{3, -3}, {4, -4}}]}, {
     LineBox[{{3, -2}, {4, -1}}], LineBox[{{3, -2}, {4, -2}}], 
     LineBox[{{3, -2}, {4, -3}}]}, {LineBox[{{3, -1}, {4, 0}}], 
     LineBox[{{3, -1}, {4, -1}}], LineBox[{{3, -1}, {4, -2}}]}, {
     LineBox[{{3, 0}, {4, 1}}], LineBox[{{3, 0}, {4, 0}}], 
     LineBox[{{3, 0}, {4, -1}}]}, {LineBox[{{3, 1}, {4, 2}}], 
     LineBox[{{3, 1}, {4, 1}}], LineBox[{{3, 1}, {4, 0}}]}, {
     LineBox[{{3, 2}, {4, 3}}], LineBox[{{3, 2}, {4, 2}}], 
     LineBox[{{3, 2}, {4, 1}}]}, {LineBox[{{3, 3}, {4, 4}}], 
     LineBox[{{3, 3}, {4, 3}}], LineBox[{{3, 3}, {4, 2}}]}}, {{
     LineBox[{{4, -4}, {5, -4}}], LineBox[{{4, -4}, {5, -3}}], 
     LineBox[{{4, -4}, {5, -2}}]}, {LineBox[{{4, -3}, {5, -2}}], 
     LineBox[{{4, -3}, {5, -3}}], LineBox[{{4, -3}, {5, -4}}]}, {
     LineBox[{{4, -2}, {5, -1}}], LineBox[{{4, -2}, {5, -2}}], 
     LineBox[{{4, -2}, {5, -3}}]}, {LineBox[{{4, -1}, {5, 0}}], 
     LineBox[{{4, -1}, {5, -1}}], LineBox[{{4, -1}, {5, -2}}]}, {
     LineBox[{{4, 0}, {5, 1}}], LineBox[{{4, 0}, {5, 0}}], 
     LineBox[{{4, 0}, {5, -1}}]}, {LineBox[{{4, 1}, {5, 2}}], 
     LineBox[{{4, 1}, {5, 1}}], LineBox[{{4, 1}, {5, 0}}]}, {
     LineBox[{{4, 2}, {5, 3}}], LineBox[{{4, 2}, {5, 2}}], 
     LineBox[{{4, 2}, {5, 1}}]}, {LineBox[{{4, 3}, {5, 4}}], 
     LineBox[{{4, 3}, {5, 3}}], LineBox[{{4, 3}, {5, 2}}]}, {
     LineBox[{{4, 4}, {5, 4}}], LineBox[{{4, 4}, {5, 3}}], 
     LineBox[{{4, 4}, {5, 2}}]}}, {{LineBox[{{5, -4}, {6, -4}}], 
     LineBox[{{5, -4}, {6, -3}}], LineBox[{{5, -4}, {6, -2}}]}, {
     LineBox[{{5, -3}, {6, -2}}], LineBox[{{5, -3}, {6, -3}}], 
     LineBox[{{5, -3}, {6, -4}}]}, {LineBox[{{5, -2}, {6, -1}}], 
     LineBox[{{5, -2}, {6, -2}}], LineBox[{{5, -2}, {6, -3}}]}, {
     LineBox[{{5, -1}, {6, 0}}], LineBox[{{5, -1}, {6, -1}}], 
     LineBox[{{5, -1}, {6, -2}}]}, {LineBox[{{5, 0}, {6, 1}}], 
     LineBox[{{5, 0}, {6, 0}}], LineBox[{{5, 0}, {6, -1}}]}, {
     LineBox[{{5, 1}, {6, 2}}], LineBox[{{5, 1}, {6, 1}}], 
     LineBox[{{5, 1}, {6, 0}}]}, {LineBox[{{5, 2}, {6, 3}}], 
     LineBox[{{5, 2}, {6, 2}}], LineBox[{{5, 2}, {6, 1}}]}, {
     LineBox[{{5, 3}, {6, 4}}], LineBox[{{5, 3}, {6, 3}}], 
     LineBox[{{5, 3}, {6, 2}}]}, {LineBox[{{5, 4}, {6, 4}}], 
     LineBox[{{5, 4}, {6, 3}}], LineBox[{{5, 4}, {6, 2}}]}}, {{
     LineBox[{{6, -4}, {7, -4}}], LineBox[{{6, -4}, {7, -3}}], 
     LineBox[{{6, -4}, {7, -2}}]}, {LineBox[{{6, -3}, {7, -2}}], 
     LineBox[{{6, -3}, {7, -3}}], LineBox[{{6, -3}, {7, -4}}]}, {
     LineBox[{{6, -2}, {7, -1}}], LineBox[{{6, -2}, {7, -2}}], 
     LineBox[{{6, -2}, {7, -3}}]}, {LineBox[{{6, -1}, {7, 0}}], 
     LineBox[{{6, -1}, {7, -1}}], LineBox[{{6, -1}, {7, -2}}]}, {
     LineBox[{{6, 0}, {7, 1}}], LineBox[{{6, 0}, {7, 0}}], 
     LineBox[{{6, 0}, {7, -1}}]}, {LineBox[{{6, 1}, {7, 2}}], 
     LineBox[{{6, 1}, {7, 1}}], LineBox[{{6, 1}, {7, 0}}]}, {
     LineBox[{{6, 2}, {7, 3}}], LineBox[{{6, 2}, {7, 2}}], 
     LineBox[{{6, 2}, {7, 1}}]}, {LineBox[{{6, 3}, {7, 4}}], 
     LineBox[{{6, 3}, {7, 3}}], LineBox[{{6, 3}, {7, 2}}]}, {
     LineBox[{{6, 4}, {7, 4}}], LineBox[{{6, 4}, {7, 3}}], 
     LineBox[{{6, 4}, {7, 2}}]}}, {{LineBox[{{7, -4}, {8, -4}}], 
     LineBox[{{7, -4}, {8, -3}}], LineBox[{{7, -4}, {8, -2}}]}, {
     LineBox[{{7, -3}, {8, -2}}], LineBox[{{7, -3}, {8, -3}}], 
     LineBox[{{7, -3}, {8, -4}}]}, {LineBox[{{7, -2}, {8, -1}}], 
     LineBox[{{7, -2}, {8, -2}}], LineBox[{{7, -2}, {8, -3}}]}, {
     LineBox[{{7, -1}, {8, 0}}], LineBox[{{7, -1}, {8, -1}}], 
     LineBox[{{7, -1}, {8, -2}}]}, {LineBox[{{7, 0}, {8, 1}}], 
     LineBox[{{7, 0}, {8, 0}}], LineBox[{{7, 0}, {8, -1}}]}, {
     LineBox[{{7, 1}, {8, 2}}], LineBox[{{7, 1}, {8, 1}}], 
     LineBox[{{7, 1}, {8, 0}}]}, {LineBox[{{7, 2}, {8, 3}}], 
     LineBox[{{7, 2}, {8, 2}}], LineBox[{{7, 2}, {8, 1}}]}, {
     LineBox[{{7, 3}, {8, 4}}], LineBox[{{7, 3}, {8, 3}}], 
     LineBox[{{7, 3}, {8, 2}}]}, {LineBox[{{7, 4}, {8, 4}}], 
     LineBox[{{7, 4}, {8, 3}}], LineBox[{{7, 4}, {8, 2}}]}}, {{
     LineBox[{{8, -4}, {9, -4}}], LineBox[{{8, -4}, {9, -3}}], 
     LineBox[{{8, -4}, {9, -2}}]}, {LineBox[{{8, -3}, {9, -2}}], 
     LineBox[{{8, -3}, {9, -3}}], LineBox[{{8, -3}, {9, -4}}]}, {
     LineBox[{{8, -2}, {9, -1}}], LineBox[{{8, -2}, {9, -2}}], 
     LineBox[{{8, -2}, {9, -3}}]}, {LineBox[{{8, -1}, {9, 0}}], 
     LineBox[{{8, -1}, {9, -1}}], LineBox[{{8, -1}, {9, -2}}]}, {
     LineBox[{{8, 0}, {9, 1}}], LineBox[{{8, 0}, {9, 0}}], 
     LineBox[{{8, 0}, {9, -1}}]}, {LineBox[{{8, 1}, {9, 2}}], 
     LineBox[{{8, 1}, {9, 1}}], LineBox[{{8, 1}, {9, 0}}]}, {
     LineBox[{{8, 2}, {9, 3}}], LineBox[{{8, 2}, {9, 2}}], 
     LineBox[{{8, 2}, {9, 1}}]}, {LineBox[{{8, 3}, {9, 4}}], 
     LineBox[{{8, 3}, {9, 3}}], LineBox[{{8, 3}, {9, 2}}]}, {
     LineBox[{{8, 4}, {9, 4}}], LineBox[{{8, 4}, {9, 3}}], 
     LineBox[{{8, 4}, {9, 2}}]}}, {{LineBox[{{9, -4}, {10, -4}}], 
     LineBox[{{9, -4}, {10, -3}}], LineBox[{{9, -4}, {10, -2}}]}, {
     LineBox[{{9, -3}, {10, -2}}], LineBox[{{9, -3}, {10, -3}}], 
     LineBox[{{9, -3}, {10, -4}}]}, {LineBox[{{9, -2}, {10, -1}}], 
     LineBox[{{9, -2}, {10, -2}}], LineBox[{{9, -2}, {10, -3}}]}, {
     LineBox[{{9, -1}, {10, 0}}], LineBox[{{9, -1}, {10, -1}}], 
     LineBox[{{9, -1}, {10, -2}}]}, {LineBox[{{9, 0}, {10, 1}}], 
     LineBox[{{9, 0}, {10, 0}}], LineBox[{{9, 0}, {10, -1}}]}, {
     LineBox[{{9, 1}, {10, 2}}], LineBox[{{9, 1}, {10, 1}}], 
     LineBox[{{9, 1}, {10, 0}}]}, {LineBox[{{9, 2}, {10, 3}}], 
     LineBox[{{9, 2}, {10, 2}}], LineBox[{{9, 2}, {10, 1}}]}, {
     LineBox[{{9, 3}, {10, 4}}], LineBox[{{9, 3}, {10, 3}}], 
     LineBox[{{9, 3}, {10, 2}}]}, {LineBox[{{9, 4}, {10, 4}}], 
     LineBox[{{9, 4}, {10, 3}}], LineBox[{{9, 4}, {10, 2}}]}}},
  Axes->True]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.4675861903407*^9, 3.4724003908843975`*^9, 
  3.47316557955239*^9},
 Magnification->1,
 CellLabel->"Out[150]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "The solution is really just a skeleton to illustrate the general technique. \
For purposes of visualization, we need trees with labels that suggest the \
underlying semantics of Hull-White. A particularly nice way to proceed is to \
augment the tree with node\[LineSeparator]labels that are purely coordinates. \
This is just a matter of adding text elements to the solution version. The \
resulting ",
 StyleBox["gr", "Literal"],
 " becomes a template, and you can leverage Mathematica\[CloseCurlyQuote]s \
pattern-directed replacement to assign meaningful labels to the nodes."
}], "Text",
 CellChangeTimes->{{3.4675827963712*^9, 3.4675828044722*^9}, {
   3.473440876649029*^9, 3.4734408937706823`*^9}, {3.473443862094468*^9, 
   3.473443870696451*^9}, 3.474045976623996*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gr", " ", "=", " ", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nmax", "=", "2"}], ",", 
       RowBox[{"depth", "=", "3"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "n", " ", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"n", "[", "m_", "]"}], ":=", 
         RowBox[{"Min", "[", 
          RowBox[{"nmax", ",", "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"m", "<", "depth"}], ",", 
               RowBox[{"grpath", "[", 
                RowBox[{"{", 
                 RowBox[{"m", ",", "j"}], "}"}], "]"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"m", ",", "j"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "j"}], "}"}], ",", 
               RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "0", ",", "depth"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"-", 
              RowBox[{"n", "[", "m", "]"}]}], ",", 
             RowBox[{"n", "[", "m", "]"}]}], "}"}]}], "]"}], "]"}]}]}], "\n", 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[151]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"gr", ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]], "Input",
 CellLabel->"In[152]:="],

Cell[BoxData[
 GraphicsBox[{LineBox[{{0, 0}, {1, 1}}], LineBox[{{0, 0}, {1, 0}}], 
   LineBox[{{0, 0}, {1, -1}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], {0, 0},
    Background->GrayLevel[1]], LineBox[{{1, -1}, {2, 0}}], 
   LineBox[{{1, -1}, {2, -1}}], LineBox[{{1, -1}, {2, -2}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}], {1, -1},
    Background->GrayLevel[1]], LineBox[{{1, 0}, {2, 1}}], 
   LineBox[{{1, 0}, {2, 0}}], LineBox[{{1, 0}, {2, -1}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], {1, 0},
    Background->GrayLevel[1]], LineBox[{{1, 1}, {2, 2}}], 
   LineBox[{{1, 1}, {2, 1}}], LineBox[{{1, 1}, {2, 0}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], {1, 1},
    Background->GrayLevel[1]], LineBox[{{2, -2}, {3, -2}}], 
   LineBox[{{2, -2}, {3, -1}}], LineBox[{{2, -2}, {3, 0}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "2"}]}], "}"}], {2, -2},
    Background->GrayLevel[1]], LineBox[{{2, -1}, {3, 0}}], 
   LineBox[{{2, -1}, {3, -1}}], LineBox[{{2, -1}, {3, -2}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{"-", "1"}]}], "}"}], {2, -1},
    Background->GrayLevel[1]], LineBox[{{2, 0}, {3, 1}}], 
   LineBox[{{2, 0}, {3, 0}}], LineBox[{{2, 0}, {3, -1}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], {2, 0},
    Background->GrayLevel[1]], LineBox[{{2, 1}, {3, 2}}], 
   LineBox[{{2, 1}, {3, 1}}], LineBox[{{2, 1}, {3, 0}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], {2, 1},
    Background->GrayLevel[1]], LineBox[{{2, 2}, {3, 2}}], 
   LineBox[{{2, 2}, {3, 1}}], LineBox[{{2, 2}, {3, 0}}], InsetBox[
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}], {2, 2},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"-", "2"}]}], "}"}], {3, -2},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"{", 
     RowBox[{"3", ",", 
      RowBox[{"-", "1"}]}], "}"}], {3, -1},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], {3, 0},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], {3, 1},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], {3, 2},
    Background->GrayLevel[1]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948]]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.4675861906017*^9, 3.472400391024798*^9, 
  3.473165579613*^9},
 CellLabel->"Out[152]="]
}, Open  ]]
}, Open  ]],

Cell["\<\
The process you want to visualize is a single-factor interest rate model \
described by the following formula:\
\>", "Text",
 CellChangeTimes->{{3.4734409055328608`*^9, 3.4734409162324743`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["dr",
    FontSlant->"Italic"], " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Theta]", "(", "t", ")"}], " ", "-", " ", 
       RowBox[{"a", " ", 
        SubscriptBox["r", "t"]}]}], " ", ")"}], 
     StyleBox["dt",
      FontSlant->"Italic"]}], 
    StyleBox[" ",
     FontSlant->"Plain"], 
    StyleBox["+",
     FontSlant->"Plain"], 
    StyleBox[" ",
     FontSlant->"Plain"], 
    RowBox[{
     StyleBox["\[Sigma]",
      FontSlant->"Plain"], 
     StyleBox[" ",
      FontSlant->"Plain"], 
     StyleBox[
      RowBox[{"dz", "."}],
      FontSlant->"Italic"]}]}]}], TraditionalForm]], "Code"],

Cell[TextData[{
 "Here ",
 StyleBox["r", "Literal"],
 " is the short-term rate, and ",
 StyleBox["a", "Literal"],
 " and ",
 StyleBox["\[Sigma]", "Literal"],
 " are constants. "
}], "Text",
 CellChangeTimes->{{3.473441867714829*^9, 3.473441871090056*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", " ", "=", " ", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]", " ", "=", " ", "0.01"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]t", " ", "=", " ", "1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]r", " ", "=", " ", 
    RowBox[{"\[Sigma]", "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"3", "*", "\[CapitalDelta]t"}], "]"}]}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.474046001381782*^9, 3.474046002101869*^9}},
 CellLabel->"In[153]:="],

Cell[TextData[{
 "Using the template ",
 StyleBox["gr", "Literal"],
 ", replace the nodes with the rate deltas using the node coordinates in the \
computation of the labels. Here you use depth ",
 StyleBox["Infinity", "Literal"],
 " with ",
 StyleBox["Replace", "Literal"],
 " so you need not worry about the actual depth of the graphics elements."
}], "Text",
 CellChangeTimes->{{3.473441882172934*^9, 3.4734418900103397`*^9}, 
   3.476116966371015*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Replace", "[", 
    RowBox[{"gr", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_Integer", ",", "y_Integer"}], "}"}], ":>", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"y", " ", "\[CapitalDelta]r"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"m_", ",", "j_"}], "}"}], ",", "y___"}], "]"}], ":>", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"j", " ", "100"}], " ", ",", "y"}], "]"}]}]}], "}"}], ",", 
     "Infinity"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "GoldenRatio"}]}]}], "]"}]], "Input",
 CellLabel->"In[157]:="],

Cell[BoxData[
 GraphicsBox[{LineBox[{{0, 0}, {1, 0.017320508075688773`}}], 
   LineBox[{{0, 0}, {1, 0}}], LineBox[{{0, 0}, {1, -0.017320508075688773`}}], 
   InsetBox["0", {0, 0},
    Background->GrayLevel[1]], LineBox[{{1, -0.017320508075688773`}, {2, 0}}],
    LineBox[{{1, -0.017320508075688773`}, {2, -0.017320508075688773`}}], 
   LineBox[{{1, -0.017320508075688773`}, {2, -0.034641016151377546`}}], 
   InsetBox[
    RowBox[{"-", "1.7320508075688772`"}], {1, -0.017320508075688773`},
    Background->GrayLevel[1]], LineBox[{{1, 0}, {2, 0.017320508075688773`}}], 
   LineBox[{{1, 0}, {2, 0}}], LineBox[{{1, 0}, {2, -0.017320508075688773`}}], 
   InsetBox["0", {1, 0},
    Background->GrayLevel[1]], 
   LineBox[{{1, 0.017320508075688773`}, {2, 0.034641016151377546`}}], 
   LineBox[{{1, 0.017320508075688773`}, {2, 0.017320508075688773`}}], 
   LineBox[{{1, 0.017320508075688773`}, {2, 0}}], 
   InsetBox["1.7320508075688772`", {1, 0.017320508075688773`},
    Background->GrayLevel[1]], 
   LineBox[{{2, -0.034641016151377546`}, {3, -0.034641016151377546`}}], 
   LineBox[{{2, -0.034641016151377546`}, {3, -0.017320508075688773`}}], 
   LineBox[{{2, -0.034641016151377546`}, {3, 0}}], InsetBox[
    RowBox[{"-", "3.4641016151377544`"}], {2, -0.034641016151377546`},
    Background->GrayLevel[1]], LineBox[{{2, -0.017320508075688773`}, {3, 0}}],
    LineBox[{{2, -0.017320508075688773`}, {3, -0.017320508075688773`}}], 
   LineBox[{{2, -0.017320508075688773`}, {3, -0.034641016151377546`}}], 
   InsetBox[
    RowBox[{"-", "1.7320508075688772`"}], {2, -0.017320508075688773`},
    Background->GrayLevel[1]], LineBox[{{2, 0}, {3, 0.017320508075688773`}}], 
   LineBox[{{2, 0}, {3, 0}}], LineBox[{{2, 0}, {3, -0.017320508075688773`}}], 
   InsetBox["0", {2, 0},
    Background->GrayLevel[1]], 
   LineBox[{{2, 0.017320508075688773`}, {3, 0.034641016151377546`}}], 
   LineBox[{{2, 0.017320508075688773`}, {3, 0.017320508075688773`}}], 
   LineBox[{{2, 0.017320508075688773`}, {3, 0}}], 
   InsetBox["1.7320508075688772`", {2, 0.017320508075688773`},
    Background->GrayLevel[1]], 
   LineBox[{{2, 0.034641016151377546`}, {3, 0.034641016151377546`}}], 
   LineBox[{{2, 0.034641016151377546`}, {3, 0.017320508075688773`}}], 
   LineBox[{{2, 0.034641016151377546`}, {3, 0}}], 
   InsetBox["3.4641016151377544`", {2, 0.034641016151377546`},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"-", "3.4641016151377544`"}], {3, -0.034641016151377546`},
    Background->GrayLevel[1]], InsetBox[
    RowBox[{"-", "1.7320508075688772`"}], {3, -0.017320508075688773`},
    Background->GrayLevel[1]], InsetBox["0", {3, 0},
    Background->GrayLevel[1]], 
   InsetBox["1.7320508075688772`", {3, 0.017320508075688773`},
    Background->GrayLevel[1]], 
   InsetBox["3.4641016151377544`", {3, 0.034641016151377546`},
    Background->GrayLevel[1]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948]]], "Output",
 CellMargins->{{53, 0}, {4, 6}},
 CellChangeTimes->{3.4675861907237*^9, 3.472400391133998*^9, 
  3.473165579689843*^9},
 CellLabel->"Out[157]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2", "TopOfPage"],

Cell[TextData[{
 "This recipe contains content originally developed by Thomas Weber of Weber \
& Partner (",
 StyleBox[ButtonBox["http://bit.ly/3Dz1wg",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/3Dz1wg"], None},
  ButtonNote->"http://bit.ly/3Dz1wg"], "URL"],
 ") and is used with permission. A complete notebook showing both the theory \
and visualization is available at this cookbook\[CloseCurlyQuote]s website:",
 StyleBox[" ", "URL"],
 StyleBox[ButtonBox["http://bit.ly/xIgx7",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/xIgx7"], None},
  ButtonNote->"http://bit.ly/xIgx7"], "URL"],
 ". ",
 " "
}], "Text",
 CellChangeTimes->{{3.4675828127771997`*^9, 3.4675828164692*^9}, {
   3.4675854611205997`*^9, 3.4675854927174*^9}, {3.473441916117886*^9, 
   3.473441920736309*^9}, {3.4734420967132998`*^9, 3.47344213666665*^9}, 
   3.4855263405631037`*^9}]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{"RulerBar", "EditBar"},
CellGrouping->Manual,
WindowSize->{818, 696},
WindowMargins->{{219, Automatic}, {Automatic, 55}},
PrintingCopies->1,
PrintingStartingPageNumber->549,
PrintingPageRange->{1, Automatic},
PageFooters->{{
   Cell[
    TextData[{
      CounterBox["Page"], 
      "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]Chapter ", 
      CounterBox["ChapterLabel"], ":\[ThickSpace]\[ThickSpace]", 
      "Financial Engineering"}], "Footer"], None, None}, {None, None, 
   Cell[
    TextData[{
      CounterBox[
      "Page", CounterFunction :> (
        Part[{"", 
          "14.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.1\[ThickSpace]\[ThickSpace]Leveraging Mathematica\
\[CloseCurlyQuote]s Bundled Financial Data\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.1\[ThickSpace]\[ThickSpace]Leveraging Mathematica\
\[CloseCurlyQuote]s Bundled Financial Data\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.1\[ThickSpace]\[ThickSpace]Leveraging Mathematica\
\[CloseCurlyQuote]s Bundled Financial Data\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.1\[ThickSpace]\[ThickSpace]Leveraging Mathematica\
\[CloseCurlyQuote]s Bundled Financial Data\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.1\[ThickSpace]\[ThickSpace]Leveraging Mathematica\
\[CloseCurlyQuote]s Bundled Financial Data\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.2\[ThickSpace]\[ThickSpace]Importing Financial Data from \
Websites\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.2\[ThickSpace]\[ThickSpace]Importing Financial Data from \
Websites\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.3\[ThickSpace]\[ThickSpace]Present Value of Future Cash Flows\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.3\[ThickSpace]\[ThickSpace]Present Value of Future Cash Flows\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.4\[ThickSpace]\[ThickSpace]Interest Rate Sensitivity of Bonds \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.4\[ThickSpace]\[ThickSpace]Interest Rate Sensitivity of Bonds \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.5\[ThickSpace]\[ThickSpace]Constructing and Manipulating Yield \
Curves\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.5\[ThickSpace]\[ThickSpace]Constructing and Manipulating Yield \
Curves\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.6\[ThickSpace]\[ThickSpace]Black-Scholes for European Option \
Pricing\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "14.8\[ThickSpace]\[ThickSpace]Speeding Up NDSolve When Solving \
Black-Scholes and Other PDEs\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.8\[ThickSpace]\[ThickSpace]Speeding Up NDSolve When Solving \
Black-Scholes and Other PDEs\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.8\[ThickSpace]\[ThickSpace]Speeding Up NDSolve When Solving \
Black-Scholes and Other PDEs\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.8\[ThickSpace]\[ThickSpace]Speeding Up NDSolve When Solving \
Black-Scholes and Other PDEs\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.8\[ThickSpace]\[ThickSpace]Speeding Up NDSolve When Solving \
Black-Scholes and Other PDEs\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.9\[ThickSpace]\[ThickSpace]Developing an Explicit Finite \
Difference Method for the Black-Scholes Formula \[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.9\[ThickSpace]\[ThickSpace]Developing an Explicit Finite \
Difference Method for the Black-Scholes Formula \[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.9\[ThickSpace]\[ThickSpace]Developing an Explicit Finite \
Difference Method for the Black-Scholes Formula \[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.9\[ThickSpace]\[ThickSpace]Developing an Explicit Finite \
Difference Method for the Black-Scholes Formula \[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.9\[ThickSpace]\[ThickSpace]Developing an Explicit Finite \
Difference Method for the Black-Scholes Formula \[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.10\[ThickSpace]\[ThickSpace]Compiling an Implementation of \
Explicit Trinomial for Fast Pricing of American Options\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.10\[ThickSpace]\[ThickSpace]Compiling an Implementation of \
Explicit Trinomial for Fast Pricing of American Options\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.11\[ThickSpace]\[ThickSpace]Modeling the Value-at-Risk of \
Portfolio Using Monte Carlo and Other Methods\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.11\[ThickSpace]\[ThickSpace]Modeling the Value-at-Risk of \
Portfolio Using Monte Carlo and Other Methods\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.11\[ThickSpace]\[ThickSpace]Modeling the Value-at-Risk of \
Portfolio Using Monte Carlo and Other Methods\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.11\[ThickSpace]\[ThickSpace]Modeling the Value-at-Risk of \
Portfolio Using Monte Carlo and Other Methods\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "14.12\[ThickSpace]\[ThickSpace]Visualizing Trees for Interest-Rate \
Sensitive Instruments\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "14.12\[ThickSpace]\[ThickSpace]Visualizing Trees for Interest-Rate \
Sensitive Instruments\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "14.12\[ThickSpace]\[ThickSpace]Visualizing Trees for Interest-Rate \
Sensitive Instruments\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "14.12\[ThickSpace]\[ThickSpace]Visualizing Trees for Interest-Rate \
Sensitive Instruments\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "14.12\[ThickSpace]\[ThickSpace]Visualizing Trees for Interest-Rate \
Sensitive Instruments\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]"}, # - CurrentValue[
          InputNotebook[], PrintingStartingPageNumber] + 1]& )], 
      CounterBox["Page"]}], "Footer"]}},
ShowSelection->True,
CellLabelAutoDelete->False,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "ora.nb"]]}, Visible -> False, 
  FrontEndVersion -> "7.0 for Mac OS X x86 (32-bit) (February 18, 2009)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "chFinance"->{
  Cell[545, 20, 147, 6, 63, "ChapterLabel",
   CounterAssignments->{{"ChapterLabel", 14}},
   CellTags->"chFinance"]},
 "Sidebar 1"->{
  Cell[8393, 210, 259, 5, 35, "SidebarTitle",
   CellTags->"Sidebar 1"]},
 "FinancialData"->{
  Cell[16235, 401, 292, 11, 70, "Heading1",
   CellTags->"FinancialData"]},
 "Importing Financial Data From Web Sites"->{
  Cell[100083, 2138, 283, 9, 46, "Heading1",
   CellTags->"Importing Financial Data From Web Sites"]},
 "Present Value of Future Cash Flows"->{
  Cell[112057, 2474, 416, 12, 63, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Present Value of Future Cash Flows"]},
 "Interest Rate Sensitivity of Bonds"->{
  Cell[128284, 2937, 374, 12, 63, "Heading1",
   CellTags->"Interest Rate Sensitivity of Bonds"]},
 "Constructing and Manipulating Yield Curves"->{
  Cell[145752, 3392, 309, 10, 55, "Heading1",
   CellTags->"Constructing and Manipulating Yield Curves"]},
 "Black Scholes for European Option Pricing"->{
  Cell[171129, 4025, 406, 11, 63, "Heading1",
   CellTags->"Black Scholes for European Option Pricing"]},
 "14.6 See Also"->{
  Cell[751037, 13845, 124, 2, 38, "Heading2",
   CellTags->"14.6 See Also"]},
 "Computing the Implied Volatility"->{
  Cell[752489, 13881, 364, 11, 55, "Heading1",
   CellTags->"Computing the Implied Volatility"]},
 "Speeding Up NDSolve When Solving Black-Scholes"->{
  Cell[757022, 14007, 393, 12, 52, "Heading1",
   CellTags->"Speeding Up NDSolve When Solving Black-Scholes"]},
 "14.8 See Also"->{
  Cell[1021463, 18649, 56, 1, 75, "Heading2",
   CellTags->"14.8 See Also"]},
 "Developing an Explicit Finite Difference Method"->{
  Cell[1023188, 18706, 333, 10, 63, "Heading1",
   CellTags->"Developing an Explicit Finite Difference Method"]},
 "14.9 Discussion"->{
  Cell[1037887, 19134, 60, 1, 75, "Heading2",
   CellTags->"14.9 Discussion"]},
 "Explicit FDM"->{
  Cell[1069369, 20346, 129, 2, 34, "Figure Title",
   CellTags->"Explicit FDM"]},
 "14.9 See Also"->{
  Cell[1074778, 20530, 56, 1, 75, "Heading2",
   CellTags->"14.9 See Also"]},
 "Compiling Trinomial Fast Pricer"->{
  Cell[1076518, 20579, 277, 10, 55, "Heading1",
   CellTags->"Compiling Trinomial Fast Pricer"]},
 "Modeling the Value-at-Risk of Portfolio Using Monte Carlo and other \
Methods"->{
  Cell[1107651, 21287, 426, 14, 67, "Heading1",
   CellTags->
    "Modeling the Value-at-Risk of Portfolio Using Monte Carlo and other \
Methods"]},
 "14.11 See Also"->{
  Cell[1129124, 21786, 57, 1, 38, "Heading2",
   CellTags->"14.11 See Also"]},
 "Visualizing Trees"->{
  Cell[1129787, 21807, 347, 12, 70, "Heading1",
   CellTags->"Visualizing Trees"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"chFinance", 1166360, 22656},
 {"Sidebar 1", 1166495, 22660},
 {"FinancialData", 1166589, 22663},
 {"Importing Financial Data From Web Sites", 1166711, 22666},
 {"Present Value of Future Cash Flows", 1166855, 22669},
 {"Interest Rate Sensitivity of Bonds", 1167063, 22673},
 {"Constructing and Manipulating Yield Curves", 1167211, 22676},
 {"Black Scholes for European Option Pricing", 1167366, 22679},
 {"14.6 See Also", 1167492, 22682},
 {"Computing the Implied Volatility", 1167609, 22685},
 {"Speeding Up NDSolve When Solving Black-Scholes", 1167760, 22688},
 {"14.8 See Also", 1167892, 22691},
 {"Developing an Explicit Finite Difference Method", 1168024, 22694},
 {"14.9 Discussion", 1168160, 22697},
 {"Explicit FDM", 1168259, 22700},
 {"14.9 See Also", 1168361, 22703},
 {"Compiling Trinomial Fast Pricer", 1168477, 22706},
 {"Modeling the Value-at-Risk of Portfolio Using Monte Carlo and other \
Methods", 1168659, 22710},
 {"14.11 See Also", 1168829, 22715},
 {"Visualizing Trees", 1168932, 22718}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 147, 6, 63, "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 14}},
 CellTags->"chFinance"],
Cell[695, 28, 111, 1, 63, "ChapterTitle"],
Cell[809, 31, 389, 8, 64, "Epigraph"],
Cell[1201, 41, 426, 7, 77, "EpigraphAuthor"],
Cell[CellGroupData[{
Cell[1652, 52, 203, 9, 63, "Heading1"],
Cell[1858, 63, 1024, 16, 175, "Text"],
Cell[2885, 81, 613, 11, 82, "Text"],
Cell[3501, 94, 1948, 41, 200, "Text"],
Cell[5452, 137, 1128, 23, 121, "Text"],
Cell[6583, 162, 1152, 28, 86, "Text"],
Cell[7738, 192, 630, 14, 62, "Text"],
Cell[CellGroupData[{
Cell[8393, 210, 259, 5, 35, "SidebarTitle",
 CellTags->"Sidebar 1"],
Cell[8655, 217, 30, 0, 5, "SidebarTitleSpacer"],
Cell[8688, 219, 509, 9, 57, "SidebarBody"],
Cell[9200, 230, 25, 0, 3, "SidebarSpacer"],
Cell[9228, 232, 1637, 30, 188, "SidebarBody"],
Cell[10868, 264, 25, 0, 3, "SidebarSpacer"],
Cell[10896, 266, 1254, 23, 145, "SidebarBody"],
Cell[12153, 291, 25, 0, 3, "SidebarSpacer"],
Cell[12181, 293, 670, 13, 72, "SidebarBody"],
Cell[12854, 308, 25, 0, 3, "SidebarSpacer"],
Cell[12882, 310, 1200, 26, 101, "SidebarBody"]
}, Open  ]],
Cell[14097, 339, 22, 0, 37, "SidebarEnd"],
Cell[CellGroupData[{
Cell[14144, 343, 51, 0, 25, "Heading2"],
Cell[14198, 345, 267, 6, 40, "Text"],
Cell[14468, 353, 497, 13, 40, "Text"],
Cell[14968, 368, 385, 6, 40, "Text"],
Cell[15356, 376, 830, 19, 56, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16235, 401, 292, 11, 70, "Heading1",
 CellTags->"FinancialData"],
Cell[CellGroupData[{
Cell[16552, 416, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[16595, 418, 73, 0, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16705, 423, 28, 0, 38, "Heading2"],
Cell[16736, 425, 726, 14, 105, "Text"],
Cell[CellGroupData[{
Cell[17487, 443, 102, 2, 20, "Input"],
Cell[17592, 447, 386, 8, 35, "Output"]
}, Open  ]],
Cell[17993, 458, 103, 3, 23, "Text"],
Cell[CellGroupData[{
Cell[18121, 465, 106, 2, 20, "Input"],
Cell[18230, 469, 2272, 37, 226, "Output"]
}, Open  ]],
Cell[20517, 509, 259, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[20801, 518, 134, 3, 20, "Input"],
Cell[20938, 523, 150, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21125, 531, 388, 11, 32, "Input"],
Cell[21516, 544, 52260, 877, 253, 29961, 509, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73825, 1427, 43, 0, 25, "Heading2"],
Cell[73871, 1429, 433, 9, 56, "Text"],
Cell[CellGroupData[{
Cell[74329, 1442, 139, 3, 20, "Input"],
Cell[74471, 1447, 2266, 37, 226, "Output"]
}, Open  ]],
Cell[76752, 1487, 1026, 26, 105, "Text"],
Cell[CellGroupData[{
Cell[77803, 1517, 1035, 29, 97, "Input"],
Cell[78841, 1548, 619, 16, 50, "Output"]
}, Open  ]],
Cell[79475, 1567, 439, 8, 56, "Text"],
Cell[CellGroupData[{
Cell[79939, 1579, 136, 3, 20, "Input"],
Cell[80078, 1584, 142, 3, 20, "Output"]
}, Open  ]],
Cell[80235, 1590, 228, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[80488, 1600, 304, 9, 20, "Input"],
Cell[80795, 1611, 565, 11, 82, "Output"],
Cell[81363, 1624, 479, 10, 56, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81879, 1639, 230, 6, 20, "Input"],
Cell[82112, 1647, 410, 8, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82559, 1660, 450, 12, 32, "Input"],
Cell[83012, 1674, 163, 3, 20, "Output"]
}, Open  ]],
Cell[83190, 1680, 178, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[83393, 1688, 140, 3, 20, "Input"],
Cell[83536, 1693, 141, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83714, 1701, 104, 2, 20, "Input"],
Cell[83821, 1705, 147, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84005, 1713, 157, 4, 20, "Input"],
Cell[84165, 1719, 149, 3, 20, "Output"]
}, Open  ]],
Cell[84329, 1725, 591, 13, 88, "Text"],
Cell[84923, 1740, 575, 17, 50, "Input"],
Cell[85501, 1759, 790, 21, 88, "Text"],
Cell[CellGroupData[{
Cell[86316, 1784, 1313, 37, 100, "Input"],
Cell[87632, 1823, 162, 3, 20, "Output"]
}, Open  ]],
Cell[87809, 1829, 455, 10, 72, "Text"],
Cell[88267, 1841, 271, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[88563, 1851, 224, 6, 20, "Input"],
Cell[88790, 1859, 158, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88985, 1867, 106, 2, 20, "Input"],
Cell[89094, 1871, 1850, 28, 143, "Output"]
}, Open  ]],
Cell[90959, 1902, 346, 8, 56, "Text"],
Cell[CellGroupData[{
Cell[91330, 1914, 269, 7, 20, "Input"],
Cell[91602, 1923, 343, 8, 32, "Output"]
}, Open  ]],
Cell[91960, 1934, 290, 6, 56, "Text"],
Cell[92253, 1942, 946, 26, 67, "Input"],
Cell[93202, 1970, 4300, 68, 33, "Output"],
Cell[97505, 2040, 435, 13, 56, "Text"],
Cell[CellGroupData[{
Cell[97965, 2057, 239, 7, 20, "Input"],
Cell[98207, 2066, 1815, 65, 62, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100083, 2138, 283, 9, 46, "Heading1",
 CellTags->"Importing Financial Data From Web Sites"],
Cell[CellGroupData[{
Cell[100391, 2151, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[100434, 2153, 161, 4, 27, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100632, 2162, 28, 0, 75, "Heading2"],
Cell[100663, 2164, 317, 7, 46, "Text"],
Cell[100983, 2173, 371, 10, 97, "Input"],
Cell[101357, 2185, 331, 8, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101725, 2198, 30, 0, 75, "Heading2"],
Cell[101758, 2200, 559, 12, 48, "Text"],
Cell[102320, 2214, 593, 14, 44, "Text"],
Cell[102916, 2230, 628, 10, 82, "Text"],
Cell[103547, 2242, 1862, 54, 157, "Input"],
Cell[105412, 2298, 220, 5, 20, "Text"],
Cell[105635, 2305, 939, 26, 159, "Input"],
Cell[106577, 2333, 4007, 92, 400, "Output"]
}, Open  ]],
Cell[110599, 2428, 440, 9, 37, "Text"],
Cell[CellGroupData[{
Cell[111064, 2441, 51, 0, 75, "Heading2"],
Cell[111118, 2443, 501, 12, 25, "Text"],
Cell[111622, 2457, 386, 11, 25, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112057, 2474, 416, 12, 63, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Present Value of Future Cash Flows"],
Cell[CellGroupData[{
Cell[112498, 2490, 196, 3, 75, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[112697, 2495, 305, 6, 40, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[113039, 2506, 283, 4, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[113325, 2512, 379, 7, 40, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[113707, 2521, 756, 22, 57, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[114466, 2545, 306, 5, 40, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[114775, 2552, 481, 13, 20, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[115259, 2567, 436, 7, 20, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[115732, 2579, 189, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[115924, 2584, 1413, 37, 105, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[117340, 2623, 493, 14, 20, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[117836, 2639, 432, 8, 35, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[118271, 2649, 412, 12, 20, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[118686, 2663, 305, 10, 33, "Input"],
Cell[118994, 2675, 183, 3, 23, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[119180, 2680, 300, 7, 36, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[119483, 2689, 478, 14, 23, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[119964, 2705, 442, 13, 49, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[120409, 2720, 581, 14, 80, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[120993, 2736, 279, 6, 49, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[121275, 2744, 429, 7, 54, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[121707, 2753, 179, 3, 25, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[121889, 2758, 467, 13, 104, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[122359, 2773, 285, 6, 49, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[122647, 2781, 461, 7, 54, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[123111, 2790, 635, 19, 67, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[123749, 2811, 482, 12, 73, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[124234, 2825, 488, 13, 73, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[124725, 2840, 472, 8, 54, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[125200, 2850, 357, 6, 44, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[125560, 2858, 900, 26, 120, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[126463, 2886, 457, 12, 49, "Input",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}],
Cell[126923, 2900, 453, 7, 54, "Output",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10002.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[127413, 2912, 173, 2, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10003.}],
Cell[127589, 2916, 646, 15, 44, "Text",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10003.}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128284, 2937, 374, 12, 63, "Heading1",
 CellTags->"Interest Rate Sensitivity of Bonds"],
Cell[CellGroupData[{
Cell[128683, 2953, 104, 1, 75, "Heading2WithHeadAbove"],
Cell[128790, 2956, 200, 4, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129027, 2965, 93, 1, 75, "Heading2"],
Cell[129123, 2968, 609, 13, 82, "Text"],
Cell[CellGroupData[{
Cell[129757, 2985, 352, 9, 49, "Input"],
Cell[130112, 2996, 364, 6, 54, "Output"]
}, Open  ]],
Cell[130491, 3005, 953, 21, 82, "Text"],
Cell[CellGroupData[{
Cell[131469, 3030, 861, 20, 96, "Input"],
Cell[132333, 3052, 423, 8, 54, "Output"]
}, Open  ]],
Cell[132771, 3063, 250, 5, 44, "Text"],
Cell[133024, 3070, 652, 15, 65, "Text"],
Cell[133679, 3087, 1662, 46, 120, "Input"],
Cell[CellGroupData[{
Cell[135366, 3137, 354, 9, 49, "Input"],
Cell[135723, 3148, 365, 6, 54, "Output"]
}, Open  ]],
Cell[136103, 3157, 1681, 49, 143, "Input"],
Cell[CellGroupData[{
Cell[137809, 3210, 356, 9, 49, "Input"],
Cell[138168, 3221, 316, 5, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138533, 3232, 92, 1, 75, "Heading2"],
Cell[CellGroupData[{
Cell[138650, 3237, 575, 15, 49, "Input"],
Cell[139228, 3254, 2381, 45, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141646, 3304, 592, 16, 51, "Input"],
Cell[142241, 3322, 3450, 63, 241, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[145752, 3392, 309, 10, 55, "Heading1",
 CellTags->"Constructing and Manipulating Yield Curves"],
Cell[CellGroupData[{
Cell[146086, 3406, 128, 2, 26, "Heading2WithHeadAbove"],
Cell[146217, 3410, 288, 6, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146542, 3421, 93, 1, 38, "Heading2"],
Cell[146638, 3424, 404, 8, 72, "Text"],
Cell[147045, 3434, 1078, 33, 47, "Input"],
Cell[148126, 3469, 224, 7, 20, "Input"],
Cell[CellGroupData[{
Cell[148375, 3480, 720, 22, 66, "Input"],
Cell[149098, 3504, 6393, 110, 177, "Output"]
}, Open  ]],
Cell[155506, 3617, 282, 5, 56, "Text"],
Cell[155791, 3624, 1002, 30, 91, "Input"],
Cell[CellGroupData[{
Cell[156818, 3658, 400, 9, 32, "Input"],
Cell[157221, 3669, 457, 11, 20, "Output"]
}, Open  ]],
Cell[157693, 3683, 253, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[157971, 3692, 2048, 57, 259, "Input"],
Cell[160022, 3751, 4009, 76, 349, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164080, 3833, 109, 1, 75, "Heading2"],
Cell[164192, 3836, 610, 12, 82, "Text"],
Cell[164805, 3850, 384, 7, 44, "Text"],
Cell[165192, 3859, 1130, 30, 98, "Input"],
Cell[CellGroupData[{
Cell[166347, 3893, 782, 21, 144, "Input"],
Cell[167132, 3916, 1109, 32, 96, "Output"]
}, Open  ]],
Cell[168256, 3951, 499, 8, 82, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168792, 3964, 130, 2, 35, "Heading2"],
Cell[168925, 3968, 749, 16, 44, "Text"],
Cell[169677, 3986, 719, 19, 44, "Text"],
Cell[170399, 4007, 703, 14, 44, "Text"]
}, Open  ]]
}, Open  ]],
Cell[171129, 4025, 406, 11, 63, "Heading1",
 CellTags->"Black Scholes for European Option Pricing"],
Cell[CellGroupData[{
Cell[171560, 4040, 103, 1, 46, "Heading2WithHeadAbove"],
Cell[171666, 4043, 260, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171963, 4053, 117, 1, 75, "Heading2"],
Cell[172083, 4056, 1138, 25, 125, "Text"],
Cell[173224, 4083, 763, 14, 49, "Input"],
Cell[173990, 4099, 831, 16, 27, "Text"],
Cell[174824, 4117, 2106, 54, 166, "Input"],
Cell[176933, 4173, 988, 15, 44, "Text"],
Cell[177924, 4190, 1447, 32, 142, "Input"],
Cell[179374, 4224, 872, 14, 25, "Text"],
Cell[180249, 4240, 1240, 26, 96, "Input"],
Cell[181492, 4268, 358, 6, 63, "Text"],
Cell[CellGroupData[{
Cell[181875, 4278, 315, 7, 49, "Input"],
Cell[182193, 4287, 513, 8, 54, "Output"]
}, Open  ]],
Cell[182721, 4298, 436, 7, 63, "Text"],
Cell[CellGroupData[{
Cell[183182, 4309, 1384, 33, 98, "Input"],
Cell[184569, 4344, 4699, 86, 143, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[189317, 4436, 128, 2, 35, "Heading2"],
Cell[189448, 4440, 809, 16, 88, "Text"],
Cell[190260, 4458, 425, 9, 51, "Input"],
Cell[190688, 4469, 327, 6, 56, "Text"],
Cell[191018, 4477, 1618, 40, 117, "Input"],
Cell[192639, 4519, 339, 7, 56, "Text"],
Cell[192981, 4528, 1579, 42, 133, "Input"],
Cell[194563, 4572, 396, 8, 40, "Text"],
Cell[194962, 4582, 1714, 45, 133, "Input"],
Cell[196679, 4629, 350, 6, 56, "Text"],
Cell[197032, 4637, 1495, 40, 133, "Input"],
Cell[198530, 4679, 390, 7, 56, "Text"],
Cell[198923, 4688, 1549, 41, 133, "Input"],
Cell[200475, 4731, 415, 8, 56, "Text"],
Cell[CellGroupData[{
Cell[200915, 4743, 273, 6, 20, "Input"],
Cell[201191, 4751, 471, 8, 20, "Output"]
}, Open  ]],
Cell[201677, 4762, 289, 5, 56, "Text"],
Cell[CellGroupData[{
Cell[201991, 4771, 470, 11, 32, "Input"],
Cell[202464, 4784, 421, 7, 20, "Output"]
}, Open  ]],
Cell[202900, 4794, 157, 3, 40, "Text"],
Cell[203060, 4799, 242, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[203327, 4809, 659, 15, 35, "Input"],
Cell[203989, 4826, 99640, 1626, 188, "Output"]
}, Open  ]],
Cell[303644, 6455, 345, 6, 56, "Text"],
Cell[CellGroupData[{
Cell[304014, 6465, 564, 14, 35, "Input"],
Cell[304581, 6481, 95570, 1561, 186, "Output"]
}, Open  ]],
Cell[400166, 8045, 294, 5, 56, "Text"],
Cell[CellGroupData[{
Cell[400485, 8054, 646, 15, 35, "Input"],
Cell[401134, 8071, 119998, 1957, 191, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521169, 10033, 519, 13, 35, "Input"],
Cell[521691, 10048, 95302, 1553, 191, "Output"]
}, Open  ]],
Cell[617008, 11604, 476, 8, 72, "Text"],
Cell[CellGroupData[{
Cell[617509, 11616, 566, 14, 35, "Input"],
Cell[618078, 11632, 125978, 2054, 195, "Output"]
}, Open  ]],
Cell[744071, 13689, 587, 13, 88, "Text"],
Cell[744661, 13704, 2688, 62, 100, "Input"],
Cell[CellGroupData[{
Cell[747374, 13770, 95, 2, 20, "Input"],
Cell[747472, 13774, 3516, 65, 346, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[751037, 13845, 124, 2, 38, "Heading2",
 CellTags->"14.6 See Also"],
Cell[751164, 13849, 677, 11, 72, "Text"]
}, Open  ]],
Cell[751856, 13863, 630, 16, 56, "Text"],
Cell[752489, 13881, 364, 11, 55, "Heading1",
 CellTags->"Computing the Implied Volatility"],
Cell[CellGroupData[{
Cell[752878, 13896, 105, 1, 25, "Heading2WithHeadAbove"],
Cell[752986, 13899, 227, 5, 40, "Text"]
}, Open  ]],
Cell[753228, 13907, 93, 1, 38, "Heading2"],
Cell[753324, 13910, 168, 5, 23, "Text"],
Cell[753495, 13917, 816, 19, 67, "Input"],
Cell[754314, 13938, 675, 17, 67, "Input"],
Cell[CellGroupData[{
Cell[755014, 13959, 298, 6, 20, "Input"],
Cell[755315, 13967, 325, 6, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[755677, 13978, 127, 2, 36, "Heading2"],
Cell[755807, 13982, 863, 13, 88, "Text"],
Cell[756673, 13997, 334, 7, 40, "Text"]
}, Open  ]],
Cell[757022, 14007, 393, 12, 52, "Heading1",
 CellTags->"Speeding Up NDSolve When Solving Black-Scholes"],
Cell[CellGroupData[{
Cell[757440, 14023, 40, 0, 25, "Heading2WithHeadAbove"],
Cell[757483, 14025, 486, 11, 72, "Text"],
Cell[757972, 14038, 766, 26, 35, "Code"]
}, Open  ]],
Cell[758753, 14067, 62, 1, 36, "Heading2"],
Cell[758818, 14070, 546, 14, 40, "Text"],
Cell[759367, 14086, 974, 20, 88, "Text"],
Cell[760344, 14108, 3433, 97, 203, "Input"],
Cell[763780, 14207, 217, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[764022, 14216, 418, 12, 33, "Input"],
Cell[764443, 14230, 641, 20, 20, "Output"]
}, Open  ]],
Cell[765099, 14253, 508, 9, 72, "Text"],
Cell[765610, 14264, 1107, 34, 66, "Input"],
Cell[766720, 14300, 3008, 79, 161, "Input"],
Cell[CellGroupData[{
Cell[769753, 14383, 888, 30, 33, "Input"],
Cell[770644, 14415, 641, 20, 20, "Output"]
}, Open  ]],
Cell[771300, 14438, 156, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[771481, 14444, 88, 2, 20, "Input"],
Cell[771572, 14448, 159, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[771768, 14456, 30, 0, 38, "Heading2"],
Cell[771801, 14458, 202, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[772028, 14467, 1793, 48, 100, "Input"],
Cell[773824, 14517, 224973, 3665, 477, "Output"],
Cell[998800, 18184, 174, 4, 23, "Text"],
Cell[998977, 18190, 941, 29, 47, "Input"],
Cell[999921, 18221, 165, 3, 20, "Output"]
}, Open  ]],
Cell[1000101, 18227, 254, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[1000380, 18238, 261, 8, 20, "Input"],
Cell[1000644, 18248, 9957, 171, 151, "Output"]
}, Open  ]],
Cell[1010616, 18422, 1011, 19, 105, "Text"],
Cell[CellGroupData[{
Cell[1011652, 18445, 1133, 29, 100, "Input"],
Cell[1012788, 18476, 7156, 134, 317, "Output"]
}, Open  ]],
Cell[1019959, 18613, 1467, 31, 150, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1021463, 18649, 56, 1, 75, "Heading2",
 CellTags->"14.8 See Also"],
Cell[1021522, 18652, 941, 25, 65, "Text"],
Cell[1022466, 18679, 438, 13, 27, "Text"],
Cell[1022907, 18694, 244, 7, 27, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023188, 18706, 333, 10, 63, "Heading1",
 CellTags->"Developing an Explicit Finite Difference Method"],
Cell[CellGroupData[{
Cell[1023546, 18720, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[1023589, 18722, 216, 4, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1023842, 18731, 28, 0, 75, "Heading2"],
Cell[1023873, 18733, 538, 13, 44, "Text"],
Cell[1024414, 18748, 176, 4, 25, "Text"],
Cell[1024593, 18754, 1101, 31, 120, "Input"],
Cell[1025697, 18787, 1169, 35, 75, "Text"],
Cell[1026869, 18824, 448, 9, 65, "Text"],
Cell[1027320, 18835, 103, 3, 49, "Input"],
Cell[1027426, 18840, 747, 16, 86, "Text"],
Cell[1028176, 18858, 266, 5, 44, "Text"],
Cell[1028445, 18865, 806, 25, 96, "Input"],
Cell[1029254, 18892, 560, 10, 63, "Text"],
Cell[1029817, 18904, 408, 13, 49, "Input"],
Cell[1030228, 18919, 51, 0, 25, "Text"],
Cell[1030282, 18921, 138, 4, 70, "Input"],
Cell[1030423, 18927, 1547, 43, 129, "Text"],
Cell[1031973, 18972, 3871, 103, 304, "Input"],
Cell[CellGroupData[{
Cell[1035869, 19079, 612, 15, 97, "Input"],
Cell[1036484, 19096, 1354, 32, 181, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1037887, 19134, 60, 1, 75, "Heading2",
 CellTags->"14.9 Discussion"],
Cell[1037950, 19137, 516, 16, 28, "Text"],
Cell[1038469, 19155, 1268, 37, 96, "Input"],
Cell[1039740, 19194, 357, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[1040122, 19204, 2189, 66, 142, "Input"],
Cell[1042314, 19272, 1482, 48, 131, "Output"]
}, Open  ]],
Cell[1043811, 19323, 177, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[1044013, 19331, 1024, 33, 105, "Input"],
Cell[1045040, 19366, 1424, 49, 85, "Output"]
}, Open  ]],
Cell[1046479, 19418, 272, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[1046776, 19428, 1013, 32, 80, "Input"],
Cell[1047792, 19462, 811, 27, 77, "Output"]
}, Open  ]],
Cell[1048618, 19492, 257, 8, 28, "Text"],
Cell[CellGroupData[{
Cell[1048900, 19504, 423, 12, 77, "Input"],
Cell[1049326, 19518, 939, 29, 88, "Output"]
}, Open  ]],
Cell[1050280, 19550, 964, 31, 67, "Text"],
Cell[1051247, 19583, 18119, 761, 178, 14873, 702, "GraphicsData", \
"PostScript", "Figure"],
Cell[1069369, 20346, 129, 2, 34, "Figure Title",
 CellTags->"Explicit FDM"],
Cell[1069501, 20350, 589, 16, 67, "Text"],
Cell[CellGroupData[{
Cell[1070115, 20370, 304, 10, 77, "Input"],
Cell[1070422, 20382, 363, 11, 56, "Output"]
}, Open  ]],
Cell[1070800, 20396, 256, 7, 27, "Text"],
Cell[1071059, 20405, 404, 12, 49, "Input"],
Cell[1071466, 20419, 820, 27, 89, "Output"],
Cell[1072289, 20448, 522, 11, 65, "Text"],
Cell[1072814, 20461, 375, 9, 46, "Text"],
Cell[CellGroupData[{
Cell[1073214, 20474, 434, 13, 49, "Input"],
Cell[1073651, 20489, 1078, 35, 92, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1074778, 20530, 56, 1, 75, "Heading2",
 CellTags->"14.9 See Also"],
Cell[1074837, 20533, 406, 9, 44, "Text"],
Cell[1075246, 20544, 597, 13, 44, "Text"],
Cell[1075846, 20559, 623, 14, 44, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1076518, 20579, 277, 10, 55, "Heading1",
 CellTags->"Compiling Trinomial Fast Pricer"],
Cell[CellGroupData[{
Cell[1076820, 20593, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[1076863, 20595, 272, 5, 56, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077172, 20605, 28, 0, 38, "Heading2"],
Cell[1077203, 20607, 347, 8, 40, "Text"],
Cell[1077553, 20617, 682, 17, 72, "Text"],
Cell[1078238, 20636, 7084, 184, 271, "Input"],
Cell[1085325, 20822, 185, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[1085535, 20830, 899, 26, 65, "Input"],
Cell[1086437, 20858, 16078, 281, 177, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1102564, 21145, 30, 0, 38, "Heading2"],
Cell[1102597, 21147, 547, 11, 72, "Text"],
Cell[1103147, 21160, 312, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[1103484, 21171, 252, 7, 20, "Input"],
Cell[1103739, 21180, 161, 4, 20, "Output"]
}, Open  ]],
Cell[1103915, 21187, 1802, 48, 187, "Text"]
}, Open  ]],
Cell[1105732, 21238, 596, 10, 56, "Text"],
Cell[1106331, 21250, 426, 8, 72, "Text"],
Cell[CellGroupData[{
Cell[1106782, 21262, 62, 1, 35, "Heading2"],
Cell[1106847, 21265, 478, 11, 40, "Text"],
Cell[1107328, 21278, 296, 5, 40, "Text"]
}, Open  ]]
}, Open  ]],
Cell[1107651, 21287, 426, 14, 67, "Heading1",
 CellTags->
  "Modeling the Value-at-Risk of Portfolio Using Monte Carlo and other \
Methods"],
Cell[CellGroupData[{
Cell[1108102, 21305, 40, 0, 25, "Heading2WithHeadAbove"],
Cell[1108145, 21307, 682, 18, 72, "Text"],
Cell[1108830, 21327, 1248, 28, 113, "NoteWarning"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1110115, 21360, 62, 1, 38, "Heading2"],
Cell[1110180, 21363, 676, 11, 88, "Text"],
Cell[CellGroupData[{
Cell[1110881, 21378, 830, 24, 47, "Input"],
Cell[1111714, 21404, 11345, 194, 192, "Output"]
}, Open  ]],
Cell[1123074, 21601, 136, 3, 23, "Text"],
Cell[CellGroupData[{
Cell[1123235, 21608, 753, 20, 47, "Input"],
Cell[1123991, 21630, 161, 3, 20, "Output"]
}, Open  ]],
Cell[1124167, 21636, 191, 4, 40, "Text"],
Cell[1124361, 21642, 757, 21, 67, "Input"],
Cell[CellGroupData[{
Cell[1125143, 21667, 531, 15, 47, "Input"],
Cell[1125677, 21684, 159, 3, 20, "Output"]
}, Open  ]],
Cell[1125851, 21690, 124, 1, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1126012, 21696, 53, 0, 25, "Heading2"],
Cell[1126068, 21698, 413, 8, 72, "Text"],
Cell[1126484, 21708, 566, 14, 72, "Text"],
Cell[CellGroupData[{
Cell[1127075, 21726, 1126, 31, 116, "Input"],
Cell[1128204, 21759, 134, 1, 23, "Text"],
Cell[1128341, 21762, 589, 15, 51, "Input"],
Cell[1128933, 21779, 164, 3, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1129124, 21786, 57, 1, 38, "Heading2",
 CellTags->"14.11 See Also"],
Cell[1129184, 21789, 578, 14, 56, "Text"],
Cell[CellGroupData[{
Cell[1129787, 21807, 347, 12, 70, "Heading1",
 CellTags->"Visualizing Trees"],
Cell[CellGroupData[{
Cell[1130159, 21823, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[1130202, 21825, 370, 7, 56, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130609, 21837, 41, 0, 25, "Heading2"],
Cell[1130653, 21839, 427, 8, 56, "Text"],
Cell[1131083, 21849, 427, 7, 72, "Text"],
Cell[1131513, 21858, 466, 9, 72, "Text"],
Cell[1131982, 21869, 722, 22, 51, "Input"],
Cell[1132707, 21893, 282, 7, 40, "Text"],
Cell[1132992, 21902, 454, 16, 20, "Input"],
Cell[1133449, 21920, 183, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[1133657, 21928, 1428, 37, 145, "Input"],
Cell[1135088, 21967, 1021, 20, 115, "Output"]
}, Open  ]],
Cell[1136124, 21990, 280, 6, 25, "Text"],
Cell[CellGroupData[{
Cell[1136429, 22000, 1101, 32, 143, "Input"],
Cell[1137533, 22034, 6878, 111, 251, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144460, 22151, 30, 0, 75, "Heading2"],
Cell[1144493, 22153, 795, 13, 121, "Text"],
Cell[CellGroupData[{
Cell[1145313, 22170, 1667, 45, 192, "Input"],
Cell[CellGroupData[{
Cell[1147005, 22219, 185, 5, 51, "Input"],
Cell[1147193, 22226, 2597, 62, 243, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1149817, 22292, 204, 4, 25, "Text"],
Cell[1150024, 22298, 691, 27, 60, "Code"],
Cell[1150718, 22327, 255, 9, 27, "Text"],
Cell[1150976, 22338, 563, 17, 119, "Input"],
Cell[1151542, 22357, 454, 11, 67, "Text"],
Cell[CellGroupData[{
Cell[1152021, 22372, 853, 25, 98, "Input"],
Cell[1152877, 22399, 3056, 54, 242, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1155982, 22459, 41, 0, 75, "Heading2"],
Cell[1156026, 22461, 896, 22, 63, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
