(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    429352,      10941]
NotebookOptionsPosition[    404140,      10252]
NotebookOutlinePosition[    414882,      10491]
CellTagsIndexPosition[    413983,      10470]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "CHAPTER ",
 
 CounterBox["ChapterLabel"]
}], "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 17}},
 CellTags->"chInterface"],

Cell["Interfacing Mathematica", "ChapterTitle",
 CellChangeTimes->{
  3.43345855884375*^9, 3.433458613640625*^9, 3.4334586745625*^9, {
   3.43402789109375*^9, 3.434027893875*^9}, {3.434148708125*^9, 
   3.434148711078125*^9}}],

Cell["\<\
I want somebody to share
Share the rest of my life
Share my innermost thoughts
Know my intimate details
Someone who\[CloseCurlyQuote]ll stand by my side
And give me support
And in return
She\[CloseCurlyQuote]ll get my support
She will listen to me
When I want to speak\
\>", "Epigraph",
 CellChangeTimes->{
  3.465988864575*^9, {3.465988933866*^9, 3.465988948012*^9}, {
   3.4664528297354*^9, 3.4664528565744*^9}, 3.466899473097*^9, 
   3.466985334102*^9, 3.468061340906852*^9}],

Cell["Depeche Mode, \[OpenCurlyDoubleQuote]Somebody\[CloseCurlyDoubleQuote]", \
"EpigraphAuthor",
 CellChangeTimes->{{3.46598889504*^9, 3.4659888993710003`*^9}, {
  3.4664528816524*^9, 3.4664528913184*^9}, {3.466899503005*^9, 
  3.466899528277*^9}, {3.466985367549*^9, 3.466985384237*^9}, {
  3.468061363452673*^9, 3.4680613863073273`*^9}, {3.474038468188911*^9, 
  3.474038482350389*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introduction"
}], "Heading1",
 CellChangeTimes->{{3.433458481140625*^9, 3.433458487359375*^9}}],

Cell[TextData[{
 "As wonderful as Mathematica is, there are many practical reasons for \
needing to interact with other languages and data sources. Luckily, \
Mathematica is designed to interoperate well with third-party tools. The \
foundation of much of this interoperability is MathLink. The MathLink \
protocol is central to Mathematica because it is how the frontend \
communicates with the kernel. A link (",
 StyleBox["LinkObject", "Literal"],
 ") is a com\[DiscretionaryHyphen]munications channel that allows Mathematica \
expressions and data values to be transmitted between the kernel and programs \
written in C, Java, .NET, and even scripting languages like Python. Recipes \
",
 ButtonBox["17.5",
  BaseStyle->"Hyperlink",
  ButtonData->"UsingMathematicaWithC"],
 ", ",
 ButtonBox["17.6",
  BaseStyle->"Hyperlink",
  ButtonData->"UsingMathematicaWithJava"],
 ", ",
 ButtonBox["17.7",
  BaseStyle->"Hyperlink",
  ButtonData->"InteractWithMicrosoft's.NETFramework"],
 ", and ",
 Cell[BoxData[
  FormBox[
   ButtonBox["17.8",
    BaseStyle->"Hyperlink",
    ButtonData->"UsingMathematicaKernelFrom.NETApplication"], 
   TraditionalForm]]],
 " solve some of the most common language interoperability problems."
}], "Text",
 CellChangeTimes->{{3.43345849175*^9, 3.433458493765625*^9}, {
   3.434027696375*^9, 3.434027740296875*^9}, {3.434027827984375*^9, 
   3.434027881390625*^9}, {3.435753298078125*^9, 3.4357537725*^9}, {
   3.435753867109375*^9, 3.435753924984375*^9}, {3.435754051390625*^9, 
   3.4357541043125*^9}, {3.435754393390625*^9, 3.435754412078125*^9}, {
   3.435754931875*^9, 3.43575494396875*^9}, {3.43575553240625*^9, 
   3.435755770609375*^9}, {3.437564980921875*^9, 3.437564996359375*^9}, {
   3.474038534967799*^9, 3.474038572976037*^9}, {3.474038719233376*^9, 
   3.4740387409940157`*^9}, {3.474038771706317*^9, 3.474038864643058*^9}, {
   3.4740493898604727`*^9, 3.4740494481226397`*^9}, 3.476458638438098*^9, {
   3.4855294594145947`*^9, 3.485529462322077*^9}, 3.485529507901909*^9, {
   3.485529572024392*^9, 3.485529572944083*^9}}],

Cell[TextData[{
 "Equally important to programming language interoperability is database \
interoperability. A powerful language like Mathematica would be far less \
useful if it did not allow full access to enterprise data. In the past, the \
ability to read in data from flat files would suffice, but today most \
enterprises keep data in some form of relational",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{{3.435754443671875*^9, 3.43575449621875*^9}, {
   3.4357546136875*^9, 3.43575469709375*^9}, {3.435754734546875*^9, 
   3.4357549056875*^9}, {3.435755988*^9, 3.435756018796875*^9}, {
   3.435756064859375*^9, 3.435756208640625*^9}, {3.43575641428125*^9, 
   3.43575641428125*^9}, {3.437564998234375*^9, 3.437565039671875*^9}, {
   3.468061438949728*^9, 3.468061447518392*^9}, {3.468061668858927*^9, 
   3.4680616688754253`*^9}, {3.468061717355193*^9, 3.468061773644272*^9}, {
   3.47403920570191*^9, 3.4740392905428057`*^9}, {3.474039320768077*^9, 
   3.474039337416604*^9}, {3.474039387644087*^9, 3.474039414416685*^9}, {
   3.4740394469992037`*^9, 3.4740394604642982`*^9}, 3.47404676327885*^9, {
   3.474048453336759*^9, 3.4740484536010437`*^9}, 3.4855294632537127`*^9}],

Cell[TextData[{
 "database. Mathematica supports a variety of database linkages, such as \
generic Open Database Connectivity (ODBC), Java Database Connectivity (JDBC), \
as well as specific database products like MySQL (",
 StyleBox[ButtonBox["http://www.mysql.com/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mysql.com/"], None},
  ButtonNote->"http://www.mysql.com/"], "URL"],
 ") and HSQL (",
 StyleBox[ButtonBox["http://hsqldb.org/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://hsqldb.org/"], None},
  ButtonNote->"http://hsqldb.org/"], "URL"],
 "). Recipes ",
 ButtonBox["17.9",
  BaseStyle->"Hyperlink",
  ButtonData->"InterfacingWithDatabaseSystems"],
 " and ",
 ButtonBox["17.10",
  BaseStyle->"Hyperlink",
  ButtonData->"Updating a Database"],
 " show typical database connectivity use cases. ",
 ButtonBox["Recipe 17.11",
  BaseStyle->"Hyperlink",
  ButtonData->"IntrospectionOfDatabases"],
 " shows how to extract metadata from a database."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.435754443671875*^9, 3.43575449621875*^9}, {
   3.4357546136875*^9, 3.43575469709375*^9}, {3.435754734546875*^9, 
   3.4357549056875*^9}, {3.435755988*^9, 3.435756018796875*^9}, {
   3.435756064859375*^9, 3.435756208640625*^9}, {3.43575641428125*^9, 
   3.43575641428125*^9}, {3.437564998234375*^9, 3.437565039671875*^9}, {
   3.468061438949728*^9, 3.468061447518392*^9}, {3.468061668858927*^9, 
   3.4680616688754253`*^9}, {3.468061717355193*^9, 3.468061773644272*^9}, {
   3.47403920570191*^9, 3.4740392905428057`*^9}, {3.474039320768077*^9, 
   3.474039337416604*^9}, {3.474039387644087*^9, 3.474039414416685*^9}, {
   3.4740394469992037`*^9, 3.4740394604642982`*^9}, 3.47404676327885*^9, {
   3.474048453336759*^9, 3.474048456220891*^9}, 3.474217867729909*^9}],

Cell[TextData[{
 "More mundane, but nonetheless useful, interfacing problems involve \
launching ex\[DiscretionaryHyphen]ternal programs and using remote kernels. \
See Recipes ",
 ButtonBox["17.1",
  BaseStyle->"Hyperlink",
  ButtonData->"Calling External Command Line Programs"],
 ", ",
 ButtonBox["17.2",
  BaseStyle->"Hyperlink",
  ButtonData->"Launching Windows Programs from Mathematica"],
 ", and ",
 ButtonBox["17.3.",
  BaseStyle->"Hyperlink",
  ButtonData->"Connecting the Front End to a Remote Kernel"]
}], "Text",
 CellChangeTimes->{{3.435756223390625*^9, 3.4357562698125*^9}, {
  3.43575631875*^9, 3.435756393515625*^9}, {3.435758655234375*^9, 
  3.435758704625*^9}, {3.4680618181166973`*^9, 3.468061871015812*^9}, {
  3.46806191601593*^9, 3.468061916033369*^9}, {3.474039485569532*^9, 
  3.4740395290490026`*^9}, {3.4740494799739513`*^9, 3.474049481728228*^9}, {
  3.474217877715567*^9, 3.4742178870733433`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Calling External Command Line Programs from Mathematica"
}], "Heading1",
 CellChangeTimes->{
  3.43402967771875*^9, {3.43402998203125*^9, 3.434030010328125*^9}},
 CellTags->"Calling External Command Line Programs"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You have an executable program that you would like to launch from Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.434029937078125*^9, 3.434029945*^9}, {
   3.434030013578125*^9, 3.434030017203125*^9}, {3.4341000259375*^9, 
   3.43410005428125*^9}, 3.43756505334375*^9, 3.474039558670815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use ",
 StyleBox["Run", "Literal"],
 " to execute command line programs. ",
 StyleBox["Run", "Literal"],
 " returns the exit code of the program. Results can be read in from a file \
written by the program. Here is an example that will work on the Windows \
operating system. This is only to illustrate the technique. Mathematica is \
perfectly capable of telling you the date itself."
}], "Text",
 CellChangeTimes->{{3.43403025665625*^9, 3.434030261265625*^9}, {
  3.43410006459375*^9, 3.434100100390625*^9}, {3.434148725109375*^9, 
  3.434148795453125*^9}, {3.434149368703125*^9, 3.434149475171875*^9}, {
  3.435758841453125*^9, 3.43575884790625*^9}, {3.4740395792355423`*^9, 
  3.4740395834505167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Run", "[", "\"\<\\\"date /T > date.txt\\\"\>\"", "]"}], ";", " ", 
  RowBox[{"FilePrint", "[", "\"\<date.txt\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.434030270296875*^9, 3.43403032771875*^9}, 
   3.434148800828125*^9, {3.4341492351875*^9, 3.434149313*^9}, {
   3.434149349390625*^9, 3.434149354109375*^9}}],

Cell["Sat 11/15/2008 ", "Print",
 CellChangeTimes->{3.434149355046875*^9, 3.4342207878125*^9, 
  3.4352460960625*^9, 3.435247072296875*^9, 3.435758871140625*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "You can also read the output of external programs by using the escape \
character ",
 StyleBox["!", "Literal"],
 " and the function ",
 StyleBox["ReadList", "Literal"],
 ". This example uses the GNU program ",
 StyleBox["wget", "Literal"],
 " to retrieve a web page and extract the unique URLs. Note that this example \
assumes you have ",
 StyleBox["wget", "Literal"],
 " installed on your system and that it is in the path the Operating System \
(OS) uses to find programs. "
}], "Text",
 CellChangeTimes->{{3.435763467296875*^9, 3.43576346971875*^9}, {
  3.435763548953125*^9, 3.435763584953125*^9}, {3.435763729734375*^9, 
  3.435763796046875*^9}, {3.435763836015625*^9, 3.435763948390625*^9}, {
  3.435764572046875*^9, 3.4357645739375*^9}, {3.435764648015625*^9, 
  3.4357646669375*^9}, {3.435764790328125*^9, 3.435764879953125*^9}, {
  3.437565057390625*^9, 3.437565063921875*^9}, {3.474039609138904*^9, 
  3.474039654178659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"webpage", " ", "=", 
   RowBox[{"ReadList", "[", 
    RowBox[{"\"\<!wget -O - http://www.wolfram.com\>\"", ",", "String"}], 
    "]"}]}], ";", 
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"StringCases", "[", 
     RowBox[{"webpage", ",", 
      RowBox[{
      "RegularExpression", "[", 
       "\"\<https?://([-\\w\\.]+)+(:\\d+)?(/([\\w/_\\.]*(\\?\\S+)?)?)?\>\"", 
       "]"}]}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.4357644885*^9, {3.43576455490625*^9, 3.435764560875*^9}, {
   3.43576467790625*^9, 3.43576477225*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"http://blog.wolfram.com/\"\>", 
   ",", "\<\"http://demonstrations.wolfram.com/\"\>", 
   ",", "\<\"http://functions.wolfram.com/\"\>", 
   ",", "\<\"http://integrals.wolfram.com/index.jsp\"\>", 
   ",", "\<\"http://library.wolfram.com/\"\>", 
   ",", "\<\"http://mathworld.wolfram.com/\"\>", 
   ",", "\<\"http://partnerships.wolfram.com/\"\>", 
   ",", "\<\"http://reference.wolfram.com/alphaindex/\"\>", 
   ",", "\<\"http://reference.wolfram.com/mathematica/guide/Mathematica.html\"\
\>", ",", "\<\"http://register.wolfram.com/\"\>", 
   ",", "\<\"http://search.wolfram.com/\"\>", 
   ",", "\<\"http://store.wolfram.com/\"\>", 
   ",", "\<\"http://store.wolfram.com/catalog/\"\>", 
   ",", "\<\"http://store.wolfram.com/view/app/mathematica/upgrade.upg\"\>", 
   ",", "\<\"http://support.wolfram.com/\"\>", 
   ",", "\<\"http://tones.wolfram.com/\"\>", 
   ",", "\<\"http://www.mathematica-journal.com/issue/v10i3/\"\>", 
   ",", "\<\"http://www.stephenwolfram.com/\"\>", 
   ",", "\<\"http://www.w3.org/1999/xhtml\"\>", 
   ",", "\<\"http://www.w3.org/TR/xhtml1/DTD/xhtml1\"\>", 
   ",", "\<\"http://www.wolfram.com/services/education/seminars/\"\>", 
   ",", "\<\"http://www.wolframscience.com/\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4357644920625*^9, 3.43576456140625*^9, 3.4357647285*^9, {
   3.435764764546875*^9, 3.43576477334375*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "Additional details about running external programs can be found in the \
Mathematica tutorial ",
 StyleBox["/ExternalPrograms", "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.43576331440625*^9, 3.4357633521875*^9}, {
   3.4357633944375*^9, 3.43576344965625*^9}, 3.468062309624511*^9, 
   3.4740396716848497`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Launching Windows Programs from Mathematica"
}], "Heading1",
 CellChangeTimes->{3.43403108925*^9},
 CellTags->"Launching Windows Programs from Mathematica"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 "You want to launch a Windows-based program from the frontend and ",
 StyleBox["Run[\"Program\"]", "Literal"],
 " does not work."
}], "Text",
 CellChangeTimes->{
  3.4340310963125*^9, {3.474039882282166*^9, 3.474039887620542*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use the Windows ",
 StyleBox["Start", "Literal"],
 " ",
 "command in the ",
 StyleBox["Run", "Literal"],
 " so the program is launched indirectly."
}], "Text",
 CellChangeTimes->{{3.43403113940625*^9, 3.43403114384375*^9}, {
   3.4340986535*^9, 3.43409877353125*^9}, {3.4740398949506683`*^9, 
   3.474039895110332*^9}, 3.474046766150297*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Run", "[", "\"\<Start WinWord\>\"", "]"}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"starts", " ", "MS", " ", "Word"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.434098780515625*^9, 3.43409887028125*^9}, 
   3.4740399050092993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "I ran across this problem while preparing a presentation in Mathematica for \
which I wanted to have a button that launched XMLSpy to show some XML. \
Without the use of ",
 StyleBox["Start", "Literal"],
 ", you need to specify the full path to the executable; Mathematica \
complains because it expects the command to be short-lived. Note that ",
 StyleBox["Start", "Literal"],
 " is a Windows command and not a Mathematica one."
}], "Text",
 CellChangeTimes->{{3.43409889278125*^9, 3.43409894296875*^9}, {
  3.43409906784375*^9, 3.434099084828125*^9}, {3.434099331671875*^9, 
  3.4340994175*^9}, {3.434099962296875*^9, 3.4340999715*^9}, {
  3.435764959671875*^9, 3.435765006390625*^9}, {3.43756508459375*^9, 
  3.437565099875*^9}, {3.4740399155749807`*^9, 3.474039956687903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Show some XML\>\"", ",", " ", 
   RowBox[{
   "Run", "[", 
    "\"\<\\\"c:/Program Files/Altova/XMLSpy2006/XmlSpy.exe\\\"\>\"", "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.43409949925*^9, 3.434099533203125*^9}, {
  3.434099614265625*^9, 3.43409965684375*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Show some XML\"\>",
  Appearance->Automatic,
  ButtonFunction:>Run["\"c:/Program Files/Altova/XMLSpy2006/XmlSpy.exe\""],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.434099623453125*^9, 3.434099659578125*^9, 
  3.43422078971875*^9, 3.4352461005*^9, 3.435247072671875*^9}]
}, Open  ]],

Cell[TextData[{
 "The above problem could be solved using ",
 StyleBox["Method \[Rule] \"Queued\"", "Literal"],
 " as an option to ",
 StyleBox["Button", "Literal"],
 ", but using ",
 StyleBox["Start", "Literal"],
 " is much simpler."
}], "Text",
 CellChangeTimes->{{3.434099747359375*^9, 3.43409977571875*^9}, {
   3.43409981609375*^9, 3.434099871609375*^9}, 3.437565103359375*^9, {
   3.47403997273297*^9, 3.474039972821334*^9}, 3.474217940621955*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<Show some XML\>\"", ",", " ", 
   RowBox[{"Run", "[", "\"\<Start XMLSpy\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.434099115171875*^9, 3.434099158875*^9}, 
   3.434099325359375*^9, {3.4340994215*^9, 3.434099461015625*^9}}],

Cell[BoxData[
 ButtonBox["\<\"Show some XML\"\>",
  Appearance->Automatic,
  ButtonFunction:>Run["Start XMLSpy"],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.43409946203125*^9, 3.434220789765625*^9, 
  3.43524610059375*^9, 3.435247072703125*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Connecting the Frontend ",
 " ",
 "to a Remote Kernel"
}], "Heading1",
 CellChangeTimes->{{3.43525337859375*^9, 3.435253398703125*^9}, 
   3.437565105609375*^9, {3.474039981846883*^9, 3.474039982849225*^9}, 
   3.474217946039091*^9, 3.485529464437693*^9},
 CellTags->"Connecting the Front End to a Remote Kernel"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to use the Mathematica kernel from a different computer than the one \
you are using to run the frontend.\
\>", "Text",
 CellChangeTimes->{{3.435253403421875*^9, 3.435253504171875*^9}, 
   3.437565109171875*^9, {3.474039988079102*^9, 3.474040003854412*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use the menu Evaluation, Kernel Configuration to create a configuration for \
a remote kernel. Select Add from the dialog. You will then be presented with \
the Kernel Properties dialog shown in ",
 ButtonBox["Figure 17-1",
  BaseStyle->"Hyperlink",
  ButtonData->"fKernelProperties"],
 ". It makes sense to give the kernel a meaningful name that will remind you \
what server it is connected to, but you can name it after your spouse or your \
dog if you like. Select the radio button Remote Machine and then enter the \
machine\[CloseCurlyQuote]s name, a login name, and the kernel program (which \
is often \[OpenCurlyDoubleQuote]math,\[CloseCurlyDoubleQuote] but see the \
\[OpenCurlyDoubleQuote]Discussion\[CloseCurlyDoubleQuote] section on page \
693). I like to check the option \[OpenCurlyDoubleQuote]Append name to In/Out \
prompts\[CloseCurlyDoubleQuote] to remind me I am working with a remote \
kernel, but this is a matter of taste. If you will mostly be working with \
this specific remote kernel, you can also check the automatic launch option."
}], "Text",
 CellChangeTimes->{{3.435311605984375*^9, 3.4353117355*^9}, {
  3.43531199359375*^9, 3.43531211284375*^9}, {3.435312184390625*^9, 
  3.43531221046875*^9}, {3.4353122453125*^9, 3.43531242028125*^9}, {
  3.43531253396875*^9, 3.435312787359375*^9}, {3.437565118484375*^9, 
  3.43756513903125*^9}, {3.4740400148038282`*^9, 3.474040129186286*^9}, {
  3.474217972089184*^9, 3.474218017773274*^9}, {3.476458671294159*^9, 
  3.4764586928031588`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQt4FNXd/xetIu/7tP++tW+f9vXSWm+ttX3FXrRa1KpVK8SCgkLFa71Q
X8FLfdu3rZZqH29V30LrWy1FJFhRy01QQBBBQG6GSwgkJiGQ6yabZLPJ7maz
uWzI/8xOGCYzZ86eM3NmZ3bzPc+HfWbPnDm33f3w29nJnOsfuPO0OwOBwLGB
wIiPyb8iZXtgaAqM3TViXDEhcPUnCteWDzK+JnBDbeCnDYFbm9THEXe0BG5t
Dvy0KTC1WdmYeoTJrcBPRIBfmBICfsH4GRn6qZmgElQexzalN4LpDfI0nTO2
PnBVgwLZUJ42KflXtQQuLRmwSKpXj7+3c+TD/Sf+ZuA/nlA4/cmBs18YGP38
wOgXBy6arTDm/xQufckStQDwCYxXCmQZz98MQI/51VH9pj1aofhwKMSTBKLN
4+9PEccGRm812/WYW5qJXY+5PzrykcOkpObY055VIJr9xqyjEN+q6DMBACAn
IEJT0T9VPalGlar3NEim/qnqRg1VmISRD/QTApPjgYuPhrKBH34cGF8XuKFy
xN2thMC9bSpEtsfOSBz7QC9RbuAX/cc+PEBQt8mjlqluqJnHP3SYBMBqSQCA
nhH3HwY+QX05VIOp+lIZcV/vMXf3HDut89i7oyNuTwRuiwV+mn68OUaeDubc
Hhlkalh5JDmTWgbPLZAcwsT6wBX7AmOqjgp27K7AT6uPcmtT4M5mVbZEsyqK
bC1Q9pIuadwdBQCAXOJnYYU7Wkfc0UK+zhOUH5gmNypMCg5CzKlyQ63C+BrC
iIKqwLVVyg9V2u9WxK4XFAW+uEix6/kblb1EsDdUDqJzrKbZQX4eO4qWeW+b
UkZvdeAjmgEAFIg/DaRdetyN9ff8pTkY7rP6ucoq3fPHmuMu2xUYs1OxK/Eq
4d/nD2788GPlygELwWoYpKrkkALq5QS36vqsah8AAPyJFovqQ9PxdSQivWd2
U29tVetzv2j+7e1ND01qvK8geM81DXdc3vCzKxtuu4RQP/ViQt2N31a44bya
gq9V/ejLxTd8p7285J6nqwOjtypGPWd14KzFimDPWGgQ7GaRpHj41qH/BUzW
RdTAc7Q3EvAc9Xsl8BXaS5O2K/m+T2LR8Au/bH9tVsfCFyNznmx94b9bnp7R
8vi05pn3ND96Z+jXt4V+fWvov6c0PXxj44zxwWk/brj90ppJ5xdfdfqqsecF
W3oGBfvVNYpaP/NY4IuLlKdjdh7zo0HBrk6n9kh7tz4lk4ePpF6SurvJhiJY
g1r1/zUAAPR4LhOgRzmDWpfeqFPtqgm2eebdHW+9FF08J/LKs+HZv2l97uGW
J6c3Pz4t9Lu7iWObf3tH6Fe3hB6Z0vjA9cH7xjX87IraKReUXPu1f37735WT
rkSw5243C1Y5PXtD5fz582fNmhUJh1XBdu4q0QTb+8Ls7ni8V02aYM2nBTyP
2YAez60CNDxXCtAYlKqemsBYBSLJ0COTiVrbC19o+7+ZrX98qOUP9zU/dlfo
f25t+sWUpgcmNk6fEJw2NjjtWuWkwe2X1k+9qObG75SMO2fx976oCPaCIkWw
X9l+VLBEuZeWDP651sR6LYJNJpPb1r3X/+wzyURi4P2igWumd8diXdHoJ8uW
dgWDqVSKEsF67hMAAMjIhOAQuxbUKxwRbNMD14dn/zr8l0eJXZM7Nyk5D09p
mn5DcFpBw11XNdz2w/qbL6qfciHJj7+/pG7S6Oobztt33blLLjpFEez3SgYF
e9ZiRbD/sU5R7sUlyrUEN9SSCHb27Nkkgm0KBru6uhKJxN6TLxp4ZFHyjx8n
73iv+ZEFB354deOC10hIS8JYg2AHL/pK93/Ouk6yXRHsc2+Kalv7unsPGzK1
X/TILtL68yvi3r6OzR0pgvdvJ+AHJgD/oap1qGAb7ytofXpG6x8fJLGrppS0
Xa9uuO0yYte6G7+j5ddd/83q67+1r8AkWDWCJYIlOZelL+WaqPymRsLXdevW
tX34IaH5/XUbz7i64rY/l726d9cj77x03m+LzppxeF0REWxPTw8RrHK12JE/
71Wb+5cv/oFUQvzW3dtPtk8Ys96lt6va3Khz5pszSbszfrmyJdxFtueu6cjm
h2hbRU9Hol97Suza0tY96rsrvP90AwA0mIIN3n1V8+PTlDMDv7s79KtbNZc2
3HFFwy1j6id/76hdrzu7bvw5NRPO3VdwzpLvnzwo2K8XD4lgNcFOCJIIds6c
OSSC7Q0G+//ntz1fe+DgJb/f8Y17F06a+7cxD/919NStD23vn7F44IVXBv7x
FhHssbeECcqZWJ1gSehINuYtqjDYTy56n1Mzf/d6hGxHY93Hjy3L2gs3qP3z
Fmk5xK4QLAB+RC/YsUMEG/rN7aFH71QeH7m5acZEzaj1Uy86ateCM+rGfrWu
4Mya8V/fP+7rS79/kiLY75bTBTu+TjmJOiVEItgtW7YoP3K1RfrvX9Zw29vb
/nvLnD/u+OPD/3z9phdqXtoXv2vNwG/ndldU6AQbDkxuVRud94/d5LGyLkEs
d/zYSuWPyCa1FFcPXrVLNtQcgpaTDvkGc4icSfRLNmpbU4++0Znx8LRLW6wy
lXMF3X2jzltCbY5RLSmj9kHL5xnCgC7pn1rVMGddV3NHv9qcNlgAQJbQ4tix
TZpmFYve8oPQI1OUSwV+eUvTw1MaH7gh+F/XDQxNDRPObvjJ6fXjvlJf8NXa
n5xZeu2Zyy740qBg1SD2nNWKYIlpLyxX7rtFWpnUQiLYefPmkQg20djU/fKC
gR/8qvuaFze9WL5xdc2rs3a+PmHWjqff7/mfbX0Hq5PJpCZY1bFqu0Ro5HH2
S9tOuGST+ve5xTVKzsqtEdW9e6s61Xy1/D+X7X/l3dCo85doOb+fWz3r1VLl
P4hQ8lPX17EPV1yqu8+YPnPa3DjZLtkfGvWNBebmtlX2Kk/Xt6rVbi+NGWpY
uVE5q7z3QMzGEMjhah+0p9Qa1P9Kpj+zr6W1kzRHBiv/doWev4cB8C0TWoei
BLSKYKdc0DR9Qujhm0K/mNL00E2NM65X/tzg3qs1uwZvOjd4w1nB8V8NFpwa
LPhy3XWnlf34tGXf/YIi2IsqBoNYEsGe+NwQwaZvVkAi2KKPtrw/48HKqTf3
fevy/oufq/ndjg/nHtzw660fnnv/e2dOjIx+ZOCpWT3V1Ypgb48SAjcrN0PQ
Wu/uSZEv5seNr1Vvg6lqhEhm5I/LVAOfcPkOkq/J5/hxlcdfd0if86nrG9Tt
Ey5en/Fw/S03tcxpcztJcEiOnfHLldTmtGrJU7XakVfuNlSrNWdjCIb+UGvo
SBxW/zP61MTQqAtWk13e37MUgGHCpOhRdJpVQruJ5wd/PrbpwYlND90YenBS
0wPXN95fMDA0NU06q+n60xqvO7mx4OT6cSeXXXXy29/+nCLYi2sUwZ5epkSw
RLBfLgmMqVIEO0kRLIlgX3/9dRLBtoRCnfF4ZNuO+guf7Bzz974rZ9dOX3Tg
F6u2XfH4jhf/tnn+/PoVyxXB3tFFUG4y89OE2u6GzdUr11aQjR0lbQbxamnU
uf/Q8hUXpYsZcrRt/sMNbVU0pn7/twOk8KduajWXN7dlrlbLtzeEjKN49J/d
0bgSSFcE+8i2fiAgD5kcB37kqGY7COTzWPuTbzT87MrG/7qOqLXpgRsaZ0zQ
PrZNd49RNw4noqGJp4XGn9RU8MWGa7/4yeVfWDH6/5H8wGW1imO/VaUI9t//
rAiWPFUE26KcSr0tRiLY9evXt0fau7q6wjt3Hvp2Qe3l9w6cO7HzgTX901YM
TP59R3Mz2dXe1qZcRXB3j+pYgiaTkQWf1LUo3pi1pIW4Vwve9JB8rbx6HzBD
jrbNf7g+U+WEK7YfN6XVXLm+V+ouElKaq9Xy7Q2BZxSkeys3NSkN9fRrXZWI
crM1AACDoZolH8aasWfW3zomeO81jfdf1zh9/FG7Tru86e4fhO48ehVB8/gv
hcZ9oeHqE8sv/ezyb/6LItgfhgIX1x0VLAllFcGmT0fcFtMi2EQiQSxat3Jl
R0NDePee8DmXDsxb2h0KD/zt723r13el9yoR7DTl9omEEXf1HA3ebu+ZVthH
jEHsdNxNrR+UKb/jkMh2xR7lO/u2qn5SgKAvb87Rtq0O15SlHU6t02oXqWcg
ffqUVEs2duysH/XNhfpiar5yCvebC/mHYOgVexS14cEN1eRqBwAArjNVh6bZ
SZ0E8mGs/tGpdZO/13Dn5cF7f6y5tHHaj5ru/WHTXReH7vxuy63fPOrYa/+t
8cpPf3Lxvy7/xvGKYIlLVceev/GoYMc2KSdgb1NuKksi2K1bt6oRrJrikUjl
r37VU1lBtpORSOzgwUQ8rgr2mPsOE0bc10s4Grzdpfh27oeKNypromR7w96E
+uNXNNH/+xf3nlBQqheyWt6Qo9+mHv73TanuntTKtRXa4dQ6Gbv2Hkqqmdsr
kkq4q+tVNNZNHvdW9yj5Py7mH8IbO1JqprlRcw1a4ebo4cef2TDqPxeauw3y
hsDtKeAbVNOmhvh2SndgsuKEQ5d9sXbCt+qnXkQcm9i4UrHr3Vc03v3DxrvG
NN15Yej285unntMy5QySn3yvsPmazwQvG/XJ9457++xjFMFe3a4I9sIW5c8N
Bk8R1Ckrdk2OqBHsvHnzYtFYF0dSItgZAwT1JuHEtOo3X9W6hONvaU0LahfZ
Hjnx0Kjz3iRPR31/5XE/i6sFDOUNOfpt6uGkfpI5cnK9VQ0GzLtOKNg3eDJh
QoWaoymRNJS27j6tMOcQRt7cxD8KrfCoS9drdYK8JHB3P/AjmnXTmiUf/4M/
+HzN2DNrJ46uv/n7DbeOabhtTMOtFwdv/X7w1gsabzm/6eZzQzed2Tzxy83j
v0TC19CV/9ow5riybx+z7KwRg4IlQSwR7OitimD/Y48mWBK+HntHl9DtCo+u
iDHjKJ6/k52gCdbzngAAXIWqWfLxL7/gMweuOPnguK8duv4/qyd9u+am79RM
Gl1z4+jaG79VN+mchhvObBj/5eC4LwWvOTF4xacbLhlZc+Exe/8z8M/TA4pg
x8UVxxLBqqcIhgpWdeyx03oJx9+fUtfwGvlwmvQ6XHqOf0iB6tjcRROs5z2R
gufvYQD8jNmxwbb+XT/+2s4LT9x5yUl7rjxtz9Vn7rn6rD1XnVF89el7rzqt
5Eenlv7opNLLv1B22YmlYz5T9v1Rpd/91N7zRmw6J7DoB182CvbE5/SCDaQX
9iKCVX+3Uhx7X49Rsw/3q161sqvnM+YcxkkGAEDeQD1XcM9L8UhZ8corv7bw
G59efN6/LRr9ubfO//xb531u8fknLjn/xKWjP7v8vE+v+Na/vPvNE5afc/zy
rx377tkjlp4RWPyDL7fs33PPX6I0wdZoglUf1T8fSIeynYOaVbk/pXLsf/WZ
UfusRr/AJ3h/ggsA3zLkB6/Bn7qOu7nrnr9Srt5np2A4dc+s6HE/iR09B2sQ
bEH6nsCD981Orz+bXpH26KqL+nVjp/WqVw7oIR0+8msp8A+e/1wLNDx/M4Aj
EJfenhq8ckC9RuumrsDkpALZmNQZmNA5+KhuaEzoCIxrVx7VvSReVUNWAwbB
Xpy+m/eYnYEr9oy4sviYHykot+BOM6KgSkW5I3dB/dG71JpvDK6/9xcAQM9V
NcAvKDfOsnhFrqhSbn5FGHOESyoHn152BDWHPF5UoXBh+eAtCMgGeSQ6pQr2
ij2KYNOO1TRLRS2goJXXHQj8g/qaAj8wAvgJF19r9U9l01cRjPxO5Rfui5ww
6WC4uRwAAIBzAhdXBk57K3Di8xAsAADIBYIFAACXgGABAMAlIFgAAHAJCBYA
IMriN/82MDDgeTf8DwQLABAFguUEggUAiALBcgLBAgBEgWA5gWABAKJAsJxA
sAAAUSBYTiBY58x8ZQ0AeQb7Pc8v2KZgSVXZlvKS9WV712WBPduWu4fWChlO
xf4PybjI6NjDh2CdQ96NojeNRELyc5IoWGKh+qqiac/M/+rEJwI/eCQ/+Py4
xyY/NidYu7uheid7+BCscyBYpDxLEgVLIj1i17MLntzdNJBPkBFNe6aQP4Id
BcHaBYJFyrMkV7Akdl23vyv/IOOKtFaxh6/cPPaU+RCsEyBYpDxLEgVbXrKe
fKdeuy+xdl9XSkl9ecDaEmU4ZFyxjiB7+BCsc3JLsIFAwOsuIPk9yY1giYhW
F3e+t7ezt7cnL+h+b2/iveIEGVc81sQefu4KlojC8z6ELQQbSCf9U3vvcymV
MOpEQqIm6YJ9d1d85e54d3dXHpBMJt7drQzHP4LVy1CWGA31qE6T3opPBCvR
ihAsUsYkXbDLi2KErq54HpBIKGNZvjPmQ8FK9J7PBTtA02PgSDLnGzao9TAq
0R4NexmNIiFZJemCXbK9Y8m2aFdXTDra21ufQ92WRSIRXbKtY/G2Dr8JlqpE
g3u1R8Neq/JWTeg3DEdpT9n181uaU7DmmJZHsFTlGiqhHp6xUSQkqyRdsG9t
aX9zawdRk1zIm9m8bd6QS2dnBxkOwVeCpfrQ4EaqPM1yttI1VbA8BqbW71yw
A9bhpSF/gBmsmnPMlRjazdgoEhIjSRfs6xvb/rGpjahJIuSdTM3RP7pBPN7+
+ubI65siPhesPlkpzqBfq/IMYVodZS5vKMkPv2CpxdiCHbBWqDmHKlhGeSQk
apIu2PnrwwSiJomQdzI1R/0Iy21LTywWKVzfVrg+7CvBMhRqJVWrY6k1UAXL
qMdKyDZgCHZAF4VSTcgpT0Z5fsEigkXiTNIFO/f9llfWtcbjEYmkLUrJOSJY
mW3picXaXnm/de77rX4TLHUjo34zqpJ6iBPBUjvpXLDaNluJjHqolWSsjVEe
CYmapAv25fdaXn6vmahJIuSdTM3RP7pBNBr+W3o4PhSsQV+aCTMKll3eSrD6
o9iCNdfvRLBISDmdpAv2xXdDL74Tikbb5EI+oeZt84ZcOjrC//duiOAfweY3
ECxSniXpgp29vGn28kYS+0lHi4v0OdRtWXR0tKrDERLsCaMr3P6RyxBM5g0Q
LFKeJemC/d9ljf+7NEjUlAe0tzeT4bywLOgfweY3ECxSniXpgn1uSQOho6Ml
D2iPhJThDAo2xB4+BOscCBYpz5J0wT67pIHQ2hoMKzTmLmQIzaFadThkXJ2x
ZvbwIVjneL66BwDSYb/n+QV7oHTT58c9phopzyDjSna1s4cPwQIAROEXbHXF
tpsenXN2wZMFj238+RORvIGM6LY/zOvtSbCHD8ECAEThF2xjfTF5nP7Ca3m2
JtedT76aTLan+rrZw4dgAQCi8As20loV6wh2d3X09SaJjlKpHlc5fLjfPbRW
+lN9/f19qVRvrKOBPXwIFgAgCr9ghzkQLABAFAiWEwgWACAKBMsJBAsAEAWC
5QSCBQCIAsFyAsECAEThF2xTsKSqbEt5yfqyveuywJ5ty91Da4UMp2L/h2Rc
ZHTs4UOwAABR+AVLLFRfVTTtmfl5dh3s5MfmBGt3N1TvZA9fE+zI0eUQLACA
B6F7ERC7TnpswYd7DnpyXwU3Uml1iIxo2jOFXBHsqRAsAEAAIcGS2HXD7qrD
eZX6N+w+QMYVaa1iDx+CBQCIwi/Y8pL15Dt1f3+KkE59eUBfX29XZ4yMK9YR
ZA8fggUAiCJ6u8JeJfXkC92JzlhHpCXAecNtCBYAIIKoYLu7k93dXflBMpmI
RyNtLdxLxkCwAAARRAXb1dWZJu4fAoGAvQMTiVi0o7U1VAfBAgDcQFywqp1i
9tAv52e7EnOd9g5MJKLRjpbWUC0ECwBwA3HBEi8parIBMaG9A12qtrOzo6O9
uaWpxm3BbiraNv35Befe8tRJ42eSR7JNcjx/6QEAbiMqWE1NohANWuWryfBU
X96qDLvmjMTj7e2RUHOji4INBcuemLvo5Akz73n6tUVrt1TXVi9dv/3nz71B
ckg+2ev5GwAA4B6igtXUJArRIE8BfTFzDk8BfmKxSKStKRSsdk+wxKI3PTr3
rTWbg8Hapqb6lpbGcLi5vT38zuY9Ux9fQPZ6/gYAALiHuGDbCfF4RJS0Bun5
WjIUM+cYylML8BOLtUXaGkPBQy4JdlPRNhKpmu0ajZIJjK7aUkL26s8V6MfF
+fLxlOSpU7+Xv3UAABtRwWpqEoV8bNmZ6jY7h1oPtWYeotFwWzjY1HDQJcFO
f37BPU+/ptq1LnToraqFBRuunV8yLxRpTCTiyWTXjFlLSJmjTbhgOc46IVUA
3EBUsORrNSEabbMB+RQzctRtdg5PAX46OsLh1mBjvVuCPfeWpxat3aLGrsSu
k0onXLH50q+/edacnS8Tu/b0dK/dUUbKHG2CJkNz/KnPYRQL07SpHWUoz1Mn
NcAWDbkBGFaIC3Yw9rOH/kNKzdHy9dtWhxiKidLR0RpubWisr3JJsCeNn1ld
W62eGSCx6+WbL71wzXdPKzztrL+eTuza29sTT3SRMkeboBlMvzdsciY107CX
XV5WDgDAjKhgNTXlAe3tza0t9cG6A+5FsEvXb1fPu84vmXfOm2d/dcFXTvzz
Z1/e/hKxayrVt66ogj+C1QefhmIeChaOBYCBqGDTamrJD9ojoZZQbUNdRVqw
Ifbw7Z2D/flzb6i/aoUijXN2vnzGX894ecdLkXhbSlkuvP/B2cvY52Cpyg3r
zOatYA2dAQAYEBVsuLWxtTVICCs05i5kCM2KXStrDu5Xro6INbOHb/sqgnc2
74nHo+qvWuqZAdWu63ZWmK8iMGxbOc1QgOE3q6g4Y0M2OgMAMMAv2AOlmz4/
7rEN2z6uqy6rObS/9lAp2chdSP+rq0oOfLJr1QcfkHElu9rZw7d9HezUxxes
2lJituvtTy40XAdLPQdLPUVgViX75C27Tn0mo06rUwSwKwBW8Au2umLbTY/O
ufahv7y29N2y4i25TmnxR6V7Ni9fveqaGbNu+8O83p4Ee/gO/5Jrxqwla3eU
xRNd64oqHpy9zNu/5IISAcgO/IJtrC8mj9NfeC3P1uS688lXk8n2VF83e/hZ
uBdBwJRcetEhWACyA79gI61VsY5gd1dHX2+S6CiV6nGVw4f73UNrpV/5wt6X
SvXGOhrYw8fdtAAAovALdpgDwQIARIFgOYFgAQCiQLCcQLAAAFEgWE4gWACA
KBAsJxAsAEAUfsE2BUuqyraUl6wv27suC+zZttw9tFbIcCr2f0jGRUbHHj4E
CwAQhV+wxEL1VUXTnpmfZ9fBTn5sTrB2d0P1TvbwNcGeAMECAPgQuhcBseuk
xxZ8uOfgQL6k0uoQGdG0ZwozR7CXVAVOKYRgAQD8CAmWxK4bdlcdzqvUv2H3
ATKuSGsVe/gQLABAFH7BlpesJ9+p+/tThHTqywP6+nq7OmNkXLGOIHv4ECwA
QBTR2xX2KqknX+hOdMY6Ii0BnhtuQ7DA95hvYpnfj/5HVLDd3cnu7q78IJlM
xKORtpZGCNY42Ky8eznvgQM45ypXnCOLnBivqGC7ujrTxLMGmUaXak4kYtGO
1tZQXU4L1o23mdtvXe0ujnc9VfjG6o2VVZWL1m6d9uxCb+/i6E+0ubrn6dcW
rd1SXVu9dP32nz/3BuYqJxAXrGqnmHPS5rR8mjHfOYlENNrR0hqqhWCzUKce
YoZJv5mzcOWGmpoDdXWHgsG6UCgYDjev2Ljr5scLDfch989wPAmZyGzc9Ojc
t9ZsVtd/V9fQbG8Pv7N5z9THF+jnKiciOolTmhPjFRcs8ZKiJueQ+WE8zZjv
nM7Ojo725pammjwTLP9KBOYVDRgFGPVTa7PqsLqSjtmu6uJlKz8qZqykI2WK
qAO3PdWuvrjqXJntSiYqHo+u2lJinivGC+d86hjFcmVKs4yoYDU1OYfMJPWp
9g7R5+vfOVJaJ8Tj7e2RUHNjvgnWsIsqWEYOtQBjF7Uwo1fTn19w11OFVLum
Fy/rnPGnxVZrQUqZIok2cBsyD/c8/Zpq17rQobeqFhZsuHZ+ybxQpFFd5W3G
rCXaXPH/H2d76hjFsj+lOaFiUcFqanJOwJTUTH0Bw6M+3zmxWCTS1hQKVueZ
YA1hjCeCZXDuLU+9sXqjlV2JNNZsL7VazdwwQKsc81PzEMyPGWs2TKz+8Ixd
sgeZh0Vrt6ixK7HrpNIJV2y+9OtvnjVn58vqKm9rd5RlXPmdPT+iM0kdVA5N
aZYRF2w7IR6POCegeNL4NDA06fOtDrRNLNYWaWsMBQ/lk2DNHzHRHGoBofrZ
nDR+ZmVVpZVdiTRinQlSxl4HqJNDrYFqA9Fp4Z9he5B5qK6tVs8MkNj18s2X
Xrjmu6cVnnbWX09X19CMJ7q0uTLrKOOMmbXGORA/TGlOmFZUsJqanEPmx/zU
kEnNN5exRzQabgsHmxoOQrDSBct486ejsq1Wdu3r611XVM6IYHk+aIb4x6oG
6gbPgYamqfmGquxB5mHp+u3qRM0vmXfOm2d/dcFXTvzzZ1/e/pK6QvG6ogrD
XJkbNXfGtmCtBpVDU5plRAVLvlYTotE255BZMj/VZ+pzzPnO6egIh1uDjfVi
gvXb3bTM77qMOeZ3r76MVQFzi+YC1EwD059fMO3ZhVZ27e9PPTh7GeMcLFsC
QgWE9MIokPFA25B5+Plzb6gTFYo0ztn58hl/PePlHS9F4m3q+u/6ucr4ojic
AcagPJnSnNCsuGAHYz/npD1Jeap9fvX5ekVIaZ3Q0dEabm1orK/iEuyYg4FT
/SjYnEP9ZXzFxl1Uu67bWcG+ikCiYBnFJNrAiQfUuXpn8570RMXViVJjV2JX
9lwxZOtcsLk7pVlGVLCamrIMmVLpdba3N7e21AfrDuS0YANDk+f94eGJuYtu
frxw5UfFZrve/uRCw3Ww5tGZB2tVQEiwGdvitwG1k7bnaurjC1ZtKTHb1TBX
5uasOsPeoM4te1CeTKnzuc0CooJNq6lFCgFaYhSW1a5GeyTUEqptqKtICzbE
Hr5vBZuLaH+dNONPi9dsL411JtYVlZNvu/jrJNZczVqydkdZPNG1rqgCc5Ur
iAo23NrY2hokhBUacxcyhGbFrpU1B/crV0fEmtnDh2ClY+9eBOb/lD0fiE/m
ymoq8nXGcmIg/II9ULrp8+Me27Dt47rqsppD+2sPlZKN3IX0v7qq5MAnu1Z9
8AEZV7KrPcOrCcEC32P+lp3fj/6HX7DVFdtuenTOtQ/95bWl75YVb8l1Sos/
Kt2zefnqVdfMmHXbH+b19iQyvHUhWACAIPyCbawvJo/TX3gtz9bkuvPJV5PJ
9lRfN3v4ECwAQBR+wUZaq2Idwe6ujr7eJNFRKtXjKocP97uH1kq/8oNsXyrV
G+toYA8fggUAiMIv2GEOBAsAEAWC5QSCBQCIAsFyAsECAESBYDmBYAEAokCw
nECwAABRIFhONMH67XaFAADfAsFyEhhTFThlPgQLAOAHguUEgnXOzFfWAJBn
sN/zECwnEKxzyLtxAAkpjxIEKwsI1jkQLFKeJQhWFhCscyBYpDxLEKwsIFjn
QLBIeZYgWFn4QbC5cg9MKyBYpDxLEKwsJArWcFd5/pvMm4vZUK659azNIQSL
lGcJgpWFPwUrpfWszSEEi5RnCYKVhVzBUh/DmdZLNS+rZJVPrcrcOqNpc7uM
mjktDcEi5VmCYGWRHcFSyxgyrSqxOpBaiVmwGQswaoZgkYZngmBlIV2wVhuG
0JF6YJhDsNSw1txoxqYZ0TKnVzUgWKQ8SxCsLLIgWHYgyiiQ8UBG6xlrYHRS
FAgWKc8SBCsLnWArZAnWkOOSYNmVOBEsThEgDfMEwcpCEeyp7go2bPEzVkYN
WkmP+i2eKlhz01aCpdYMwSINzwTBykKiYIctECxSniUIVhZyI1hq8nyMbgPB
IuVZgmBlgQjWORAsUp4lCFYWEKxzIFikPEsQrCwgWOdAsEh5liBYWUCwzvF8
dQ8ApMN+z0OwnECwAABRIFhOIFgAgCgQLCcQLABAFAiWEwgWACAKBMsJBOsc
z3+PAEA67Pc8BMsJBOucmbhMCym/EgQrC02wI8+HYG0CwSLlWYJgZREYcxCC
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
7OqPE9qZAZWN+/r0jl1FgtiiOAQrHU2wJ+AvuexiW7BWX1HNT83bslqUKNiM
/rHapj6VKFhGxzLOtpBgbb867qEK9t3tXVtKj54ZINubSlMf6By7clfvyvRl
Wq+uLAlDsPJQBHvKfAh2yJyYEru8XMFybstq0XPBWj3NjmAzbjvZ6wdUwS7f
1rVpX2pLmeJY8ri5tJ8Idu3+1Io9imPJ4/Ki3ne2JyBY6UCwzpF7iiBME47z
L5483+JtVJVxOIyIlFrSeehuNaU8X/zZQ2B30rzXD6iCXbK5a32xcsnr5n2K
WgkbS/uIYFfvS72zN7Vsd9/Sj3uXb0cEKx8I1jlSfuRyG1996kHWUAW7eFNi
7S7lDwo2lvSt35sifLCvj9h11d4+Er4u29m3ZEfP8i0QrHxcFSzPL0TOq5LY
ir0KbVymJbfDPmwR+ARVsP/8ML66qGfN7j7lDwp2976/u2fNHuWHrRW7+t4u
6iF2Xbo9+faWGH7kko49wXIqCIIFwFtUwR6o7169NfrejtiaHXEVsv3O9gRh
xfbO5Vvjb38Uq6jvIiWXflgWhmDlAcE6rxCCBb6FCHbz/ibOexUu/SiI2xXK
xbZgGdem6otZlTeUof5kb7halacVRnOcDVErZDMMBevqOQdz5ezmJHZGSlW+
OiFDhNkWjf/zw9oXl1c880b5H/6x77H5+3/3asmjr+4jkG2VJ/5R9uLbB8Ox
JAQrF+cRrNW2+Wl4qOv4c3hayWhvxl6eqhhQ70Vg/gnbk9dX/5u4wz64ehkS
u3L2BQ88nWFfGMYoZuN19Jtg49FwJyEeSXS2dyU6ksl4T3dnT0+yr6+7r6+H
0N/fe/hwnwoEK5fsCNYQN0oXLDUcZTRnaIhRngffClY0FOSvzRPB8g/TXhlz
sfwQLFY08JAsCFZUpxIjWJ7essvzwL6bliH6srr4k3HRpuhR+j4w8s17M1Zo
KJlROLIqN8wkY6SMnlBfIHZV/K8jz6vmCVjRwFvyRrBClXOWd3KKgPpoVYad
Y+8osxCodfJoit0xHq05rNxqJtkzTO2JjUnj7wP/65g1sKKBt9i+DtZwYtPw
PV3LNxTgP2lgqJZHsGGdIQ1tMQozyjsUrNWGIVozHEX9YNo4yrlgMzZqVaH5
EIeVZ5Qb1WBW9fNXZdV/zvlfbIppsw9WNPAWTbAjR5fjL7nswS9Ye5GPkxzb
guUPyRj2kFU5T/TIlhi/YNmTZu8V8RCsaOAtgTFVR25XCMHahCFYQ072BRvO
FErljWA5e8I/adJfR0+wWtGAgBUNsgAE6xx+wYaH6i5s8TE0+1DoKEY3zLCj
NWo3rDrgXuWcgmV0hjqBGavieR2tmqCWyT6GFQ0K7nhSjWCJXdWFDNR1DbCi
gUtAsM5x7w8NnH82GbErGA7oVzTQ322bsGp3n37tGKxo4AYQrHOkCxZKBLLA
igbeAsE6Zxj+qSzIFfQrGqiY1+QiYEUDl4BgnQPBAt9iWNFARbPrij19KljR
wCUgWOdAsMC3WK1oQOyKFQ2yAATrHAgW+BasaOAtEKxzIFjgW7CigbdAsM6B
YIFvwYoG3gLBOgeCBb4FKxp4CwTrHAgW+BasaOAtEKxzIFiQZ0CwstAE68ay
3cME8m4EIM9gv+chWE7SgrVzP1gAwLAFguUEggUAiALBcgLBAgBEgWA5gWAB
AKJAsJxAsAAAUSBYTiBYAIAoECwnECwAQBQIlhMIFgAgCgTLCQQLABAFguUk
a4L9ePv7PHg+IQCAjECwnGRTsBlv5gPBApATQLCcDB/BFhb+2fPZzgkwUSAj
ECwnfhCstksvWPIx1+O8A1aVcFbO2Rn/dNV2l9Ty0CxgAMFyogl25PneCFY9
9WoVwUr8mDu3Fs8hrnopm4IFgAEEy0ngkqrAKYXZFKzetNpvWzyCNURWhniS
GmHqczIeSH3K6EnGw606rz2y2zIXEOqqvpjV4dSNjJ2U+LUC5CgQLCeeCFbd
NtiVR7DUDzXbZtSq2AdSy1N3sRul7mUcKzQi/sMz1sYWLGcfwLACguXEK8Ga
7coZweqfZgwXrazIONAqsGTHcoxuGLrEOTTnh4dNqqR2lefRPKsIYoc5ECwn
2RcsNXYVFayQfKSEZDyRp5NOmiuRLlhqV20I1qV3CMghIFhOPBGs4Uysq4IN
ixiDx1phk8H4a8uyYMOm/18y9t/2dIFhBQTLiVeCtbqiwHAUWyPs7+aGr7H6
DfMu815GT6i1GTrG2UlG5Vb2E+oqu7wNwTLaBcMHCJYTnwsWAOBDIFhOsilY
oXsRFA79MQXxEgD+AYLlJGuCBQDkDRAsJxAsAEAUCJYTCBYAIAoEywkECwAQ
BYLlBIIFAIgCwXKiCRYrGgAAOIFgOfHD/WBxHSwAuQUEywkES8X2Zbe4XhcM
ByBYTnwrWFl/YsD4O1ZzSeo2NYenEqvOuP13E7hdAHAbCJYTPwuWui2KS4Jl
NGdjl1wgVeA2ECwnOSdYxi1czIW1p9QbmFBv+WK4UUzGajP2h/qUMZyMOeaj
rDrPM1jYGNgAguUk5wRryHQiWKuqqNuMaq0aMpdnZLIr5M+xXQkA/ECwnPhZ
sNQQy5Cf0Z/sWJca7FG3+QWb0aWcrbCbsOq57WoB4AeC5cTPgjVsULdtC5bf
OX6OYKmVQ7DAbSBYTvwv2DBNkhkzM+a4Klihnoj2CqcIgOdAsJzkhGDDQ8VV
aPq9xuoodg61Kp4v5mG74rJqkTEWq/9TCoeei8g4EKFJA4ANBMuJbwULAPAt
ECwn2RTscL4XQeHQX6YKLX4LAyAngGA5yZpgAQB5g/qV0/Nu+B9FsKdAsAAA
IB8IFgAAXAKCBQAAl4BgAQDAJSBYAABwCQgWAABcAoIFAACXgGABAMAlIFgA
AHAJCBYAAFwCggUAAJeAYAEAwCUgWAAAcAlNsIEv7SGO/dz1QVWzI3/SkpHA
NVEAAAB0iF2/uX5QsF9Yqty3UKHwyIZzCjmQ0dApMpDSSsbxSqmEa04KMyDt
Fcw4ZBk4H+8pMsYi7dPhk1Ykftgd4593rLT3yWvKxkl/VwT7+b8pjwAAAGTz
/wHVaFDZ
    "], {{0, 458}, {459, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{322.99999999999955`, Automatic},
  ImageSizeRaw->{459, 458},
  PlotRange->{{0, 459}, {0, 458}}]], "Figure",
 Editable->True,
 CellFrame->True,
 CellChangeTimes->{
  3.435311912359375*^9, {3.4353124926875*^9, 3.43531250340625*^9}}],

Cell["Kernel Properties dialog", "Figure Title",
 CellChangeTimes->{3.474218101222052*^9},
 CellTags->"fKernelProperties"],

Cell["\<\
When you have the kernel configured, you can use Evaluation, Start Kernel to \
start it and Evaluation, Notebook Kernel to associate it with the current \
notebook.\
\>", "Text",
 CellChangeTimes->{{3.435312815234375*^9, 3.435312825734375*^9}, {
  3.435355278859375*^9, 3.435355312828125*^9}, {3.43535534515625*^9, 
  3.435355439421875*^9}, {3.474040175653569*^9, 3.474040186807835*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell["\<\
If you have network access to a more powerful computer than the one you use \
daily and that computer has Mathematica installed, then you can reap a lot of \
benefit from using a remote kernel. For example, I like to work on my laptop \
because it gives me the flexibility to work anywhere in my house. However, my \
basement has my powerful Mac Pro, so I usually run my kernel there. This not \
only gives me access to a faster machine, but frees resources on the laptop \
that would otherwise be used by the local kernel.\
\>", "Text",
 CellChangeTimes->{{3.43525390575*^9, 3.435254268265625*^9}, 
   3.43535656590625*^9, {3.4375651423125*^9, 3.43756515046875*^9}, {
   3.474042350701923*^9, 3.474042410198638*^9}}],

Cell[TextData[{
 "There is a caveat to the solution. If the machine you are connected to is a \
Mac, there is no program called \[OpenCurlyDoubleQuote]math.\
\[CloseCurlyDoubleQuote] You must instead give the full path to the program \
called ",
 StyleBox["MathKernel", "Literal"],
 " in the edit box for Kernel Program. The location will depend on where \
Mathematica was installed. For example, I installed Mathematica under ",
 StyleBox["/Applications/Wolfram,", "Emphasis"],
 " so I entered ",
 StyleBox["/Applications/Wolfram/Mathematica.app/", "Emphasis"],
 " ",
 StyleBox["Contents/MacOS/MathKernel", "Emphasis"],
 ". "
}], "Text",
 CellChangeTimes->{{3.435356581*^9, 3.43535692865625*^9}, 3.43756515575*^9, 
   3.466985451792*^9, {3.4740424200151052`*^9, 3.4740424781598186`*^9}, 
   3.474046768234511*^9, {3.4740485557527018`*^9, 3.47404860564694*^9}, {
   3.474218111606885*^9, 3.4742181171181707`*^9}, {3.485529465271298*^9, 
   3.485529466983542*^9}}],

Cell["\<\
If you have trouble connecting to the remote kernel you should take the \
following steps.\
\>", "Text",
 CellChangeTimes->{{3.435357317984375*^9, 3.43535737078125*^9}}],

Cell["\<\
Make sure you can ping the computer you entered on the command line. You can \
run ping from the Windows cmd.exe shell or Unix or Mac OS X shell. If you can\
\[CloseCurlyQuote]t ping the machine, it is either off or there is some \
network issue you need to resolve.\
\>", "ListNumber",
 CellChangeTimes->{{3.435357380546875*^9, 3.435357522984375*^9}, 
   3.43756516725*^9, {3.474042497761997*^9, 3.474042534027096*^9}}],

Cell["\<\
If you can ping the computer but the kernel fails to start, make sure \
Mathematica is properly installed on the remote computer. Do this by running \
Mathematica directly from the remote computer or ask your systems \
administrator to verify. A common problem is for Mathematica to be installed \
but to rely on a license manager (MathLM) that is not running.\
\>", "ListNumber",
 CellChangeTimes->{{3.43535754553125*^9, 3.435357740765625*^9}, {
   3.4375651705*^9, 3.43756517603125*^9}, {3.474042545258089*^9, 
   3.474042555465598*^9}, {3.47404259003102*^9, 3.474042602785098*^9}, 
   3.474218147570046*^9}],

Cell[TextData[{
 "If you get an error like \[OpenCurlyDoubleQuote]SSH could not launch kernel \
\[OpenCurlyQuote]<",
 StyleBox["kernel name", "Emphasis"],
 ">\[CloseCurlyQuote] because the remote machine refused the connection. \
Error code = 113\[CloseCurlyDoubleQuote], then there is most likely a \
permissions problem with the login name and the password you provided when \
prompted by the frontend. Make sure you can remotely log in to the machine \
using Secure Shell (SSH) or PuTTY from the command line (PuTTY is a free SSH \
program for Windows that you can download from ",
 StyleBox[ButtonBox["http://www.putty.org/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.putty.org/"], None},
  ButtonNote->"http://www.putty.org/"], "URL"],
 ")."
}], "ListNumber",
 CellChangeTimes->{{3.435357884890625*^9, 3.435358052875*^9}, {
   3.43535811190625*^9, 3.43535817040625*^9}, {3.43756519159375*^9, 
   3.437565196546875*^9}, {3.474042642922263*^9, 3.4740427536350327`*^9}, {
   3.4740427838333893`*^9, 3.474042783835733*^9}, 3.474046769856893*^9, {
   3.474218161323331*^9, 3.4742181833324203`*^9}, 3.4743870073993587`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Using Mathematica with C and C++"
}], "Heading1",
 CellChangeTimes->{{3.435257751296875*^9, 3.4352577823125*^9}, {
  3.436524205828125*^9, 3.436524209421875*^9}},
 CellTags->{"UsingMathematicaWithC", "Using Mathematica with C and C++"}],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["You want to call C functions from Mathematica.", "Text",
 CellChangeTimes->{{3.435257786703125*^9, 3.435257841234375*^9}, 
   3.4740428675496187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Here I demonstrate the process of creating a C program with functions that \
can be",
 " ",
 "invoked from Mathematica. This example uses Microsoft Visual C++ 2005. \
Refer to the \[OpenCurlyDoubleQuote]See Also\[CloseCurlyDoubleQuote] section \
on page 699 for informati",
 StyleBox["on on using other programming envi",
  FontTracking->"Extended"],
 "ronments. The simplest way to interface Mathematica to C is to utilize the \
preprocessor mprep, which takes a template file describing one or more C \
functions, and generate the glue code needed to interface those functions to \
Mathematica. Here is an example of an mprep file describing three different \
functions."
}], "Text",
 CellChangeTimes->{{3.43525792415625*^9, 3.435257990640625*^9}, {
   3.435258040828125*^9, 3.4352581546875*^9}, {3.436524007515625*^9, 
   3.436524032984375*^9}, {3.43652412884375*^9, 3.43652423590625*^9}, {
   3.4369787768125*^9, 3.436978822453125*^9}, {3.43756520565625*^9, 
   3.4375652126875*^9}, {3.474042933866184*^9, 3.474042951540456*^9}, 
   3.474051063792478*^9, {3.474218249156061*^9, 3.4742182578159*^9}, 
   3.474387016680952*^9, {3.476459547816205*^9, 3.4764595718451757`*^9}, 
   3.485529468128179*^9}],

Cell["\<\
:Begin:

:Function:\t\tfExample1
:Pattern:\t\tfExample1[x_Integer, y_Integer]
:Arguments:\t\t{x, y}
:ArgumentTypes:\t{Integer, Integer}
:ReturnType:\tInteger

:Function:\t\tfExample2
:Pattern:\t\tfExample2[x_List, y_List]
:Arguments:\t\t{x, y}
:ArgumentTypes:\t{IntegerList, RealList}
:ReturnType:\tInteger

:Function:\t\tfExample3
:Pattern:\t\tfExample3[aStr_String]
:Arguments:\t\t{aStr}
:ArgumentTypes:\t{String}
:ReturnType:\tString

:End:\
\>", "Code",
 CellChangeTimes->{{3.436524299109375*^9, 3.436524318765625*^9}, {
   3.436977828875*^9, 3.436977865875*^9}, {3.436978003125*^9, 
   3.436978090453125*^9}, {3.4369781360625*^9, 3.436978155109375*^9}, 
   3.436978765765625*^9, {3.4369788365*^9, 3.4369788404375*^9}, {
   3.436979022828125*^9, 3.4369790885625*^9}}],

Cell[TextData[{
 "The C source code corresponding to these definitions follows. Note that \
lists are passed as pointers to arrays and that an extra integer parameter is \
needed for each such list to receive the length of the array. In this \
listing, you will also find the definition of ",
 StyleBox["WinMain", "Literal"],
 " that is required for Windows executables built with Microsoft Visual \
Studio. The body of ",
 StyleBox["WinMain", "Literal"],
 " is standard boilerplate that you can copy into your own project. The \
implementation of the functions themselves is really not important in this \
code as its main purpose is to demonstrate the C interface mechanics."
}], "Text",
 CellChangeTimes->{{3.437060927984375*^9, 3.43706093734375*^9}, 
   3.4370620095*^9, {3.4370625360625*^9, 3.4370625736875*^9}, {
   3.437062626484375*^9, 3.43706291134375*^9}, {3.437063028640625*^9, 
   3.437063176703125*^9}, {3.437063262828125*^9, 3.437063325328125*^9}, {
   3.43756728178125*^9, 3.437567293453125*^9}, {3.474042964631577*^9, 
   3.474043017293597*^9}}],

Cell["\<\
//functions.h

extern \"C\"
{
int fExample1(int x, int y);
double fExample2(int * x, long xLen, double* y, long yLen);
char * fExample3(char * aStr);
}\
\>", "Code",
 CellChangeTimes->{{3.437066469984375*^9, 3.437066484*^9}}],

Cell[TextData[{
 "//functions.cpp\n\n#include \"functions.h\"\n#include <mathlink.h>\n",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Code",
 CellChangeTimes->{{3.43706302034375*^9, 3.43706302225*^9}, {
   3.43706648715625*^9, 3.43706649846875*^9}, {3.4740487404893427`*^9, 
   3.47404878609195*^9}, 3.485529471477313*^9}],

Cell[TextData[{
 "#include <stdio.h>\n#include <ctype.h>\n",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Code",
 CellChangeTimes->{{3.43706302034375*^9, 3.43706302225*^9}, {
   3.43706648715625*^9, 3.43706649846875*^9}, {3.4740487404893427`*^9, 
   3.47404878609195*^9}, 3.474218304380126*^9, 3.4855294721971397`*^9}],

Cell[TextData[{
 "\nint fExample1(int x, int y)\n{\n\treturn (x >> y) + 1;\n}\n\ndouble \
fExample2(int * x, int xLen, double* y, int yLen)\n{\n\tdouble result = 0.0;\n\
\tint i = 0;\n\tfor (; i<xLen && i<yLen; ++i)\n\t{\n\t\tresult += x[i] * y[i] \
;\n\t}\n\tfor (;i < yLen; ++i)\n\t{\n\t\tresult += y[i];\n\t}\n\treturn \
result ;\n}\n\nchar * fExample3(char * aStr)\n{\n\tfor(char *p=aStr;*p;++p)\n\
\t{\n\t\t*p = toupper(*p) ;\n\t}\n\treturn aStr ;\n}\n\n\nint PASCAL WinMain( \
HINSTANCE hinstCurrent, HINSTANCE hinstPrevious,        LPSTR lpszCmdLine, \
int nCmdShow)\n{\n\tchar  buff[512];\n\tchar FAR * buff_start = buff;\n\tchar \
FAR * argv[32];\n\tchar FAR * FAR * argv_end = argv + 32;\n",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Code",
 CellChangeTimes->{{3.43706302034375*^9, 3.43706302225*^9}, {
   3.43706648715625*^9, 3.43706649846875*^9}, {3.4740487404893427`*^9, 
   3.474048749669608*^9}, {3.4740488205210333`*^9, 3.474048820616249*^9}, {
   3.474218339714135*^9, 3.4742183417656393`*^9}, 3.48552947302217*^9}],

Cell["\<\
\thinstPrevious = hinstPrevious; /*suppress warning*/

\tif( !MLInitializeIcon( hinstCurrent, nCmdShow)) return 1;
\tMLScanString( argv, &argv_end, &lpszCmdLine, &buff_start);
\treturn MLMain( (int)(argv_end - argv), argv);
}
\
\>", "Code",
 CellChangeTimes->{{3.43706302034375*^9, 3.43706302225*^9}, {
  3.43706648715625*^9, 3.43706649846875*^9}, {3.4740487404893427`*^9, 
  3.474048749669608*^9}, {3.4740488205210333`*^9, 3.474048820616249*^9}, {
  3.474218320195484*^9, 3.4742183520357103`*^9}}],

Cell[TextData[{
 "Once you have a MathLink program compiled to an executable, you can install \
it using ",
 StyleBox["Install", "Literal"],
 ". By default, ",
 StyleBox["Install", "Literal"],
 " will look in the current directory for the executable; either change the \
current directory or give ",
 StyleBox["Install", "Literal"],
 " the full path. ",
 StyleBox["Install", "Literal"],
 " returns a ",
 StyleBox["LinkObject", "Literal"],
 ", which can be used to get information about available functions and also \
to terminate the connection using ",
 StyleBox["Uninstall", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.43707034646875*^9, 3.437070564015625*^9}, {
   3.474043048171439*^9, 3.474043088494137*^9}, 3.47421835908351*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"saveCurDir", " ", "=", 
   RowBox[{"Directory", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<oreilly\\\\Mathematica \
Cookbook\\\\code\\mathLinkExample\\\\Debug\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"link", " ", "=", 
   RowBox[{"Install", "[", "\"\<mathLinkExample\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "saveCurDir", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4370640069375*^9, 3.437064084125*^9}, {
   3.437064848671875*^9, 3.437064867546875*^9}, 3.437064968984375*^9, {
   3.4370655176875*^9, 3.43706552053125*^9}}],

Cell["You can interrogate a link for the available functions.", "Text",
 CellChangeTimes->{{3.43707069234375*^9, 3.437070726484375*^9}, 
   3.437567297859375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinkPatterns", "[", "link", "]"}]], "Input",
 CellChangeTimes->{{3.437070576234375*^9, 3.437070585484375*^9}, {
  3.437070638265625*^9, 3.437070645515625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"fExample1", "[", 
     RowBox[{"x_Integer", ",", "y_Integer"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"fExample2", "[", 
     RowBox[{"x_List", ",", "y_List"}], "]"}],
    HoldForm], ",", 
   TagBox[
    RowBox[{"fExample3", "[", "aStr_String", "]"}],
    HoldForm]}], "}"}]], "Output",
 CellChangeTimes->{3.4370706469375*^9}]
}, Open  ]],

Cell["\<\
You call installed MathLink functions just like normal Mathematica functions.\
\
\>", "Text",
 CellChangeTimes->{{3.437070738625*^9, 3.437070774890625*^9}, 3.437567302*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fExample1", "[", 
  RowBox[{"2000", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.43706500859375*^9, 3.43706502159375*^9}}],

Cell[BoxData["126"], "Output",
 CellChangeTimes->{{3.43706501215625*^9, 3.43706502203125*^9}, 
   3.437065584234375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fExample2", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.0", ",", "4.0", ",", "6.0", ",", "8.0"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.43706504153125*^9, 3.437065069234375*^9}, {
  3.437065254984375*^9, 3.437065291203125*^9}, {3.437065463453125*^9, 
  3.43706548259375*^9}, {3.4370659236875*^9, 3.437065926875*^9}}],

Cell[BoxData["36.`"], "Output",
 CellChangeTimes->{
  3.437065069796875*^9, {3.437065258609375*^9, 3.437065292078125*^9}, 
   3.43706548465625*^9, 3.43706558765625*^9, 3.43706589671875*^9, 
   3.437065929890625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fExample3", "[", "\"\<Testing\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.437065103578125*^9, 3.43706512634375*^9}}],

Cell[BoxData["\<\"TESTING\"\>"], "Output",
 CellChangeTimes->{3.437065127*^9, 3.43706560446875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Uninstall", "[", "link", "]"}]], "Input",
 CellChangeTimes->{{3.43706552621875*^9, 3.437065552625*^9}}],

Cell[BoxData["\<\"mathLinkExample\"\>"], "Output",
 CellChangeTimes->{3.437065606421875*^9, 3.437087743546875*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "TopOfPage"],

Cell["\<\
Although the solution is fairly straightforward, there are numerous details \
that are specific to the OS and compilation environment (compiler and IDE or \
make system). The Mathematica documentation for MathLink contains detailed \
instructions for many common environments, and you should follow those \
directions carefully. It is highly recommended that you use either the \
example in the solution given or some of the simple examples that are \
installed with Mathematica to become familiar with the process before trying \
to interface your own C functions. \
\>", "Text",
 CellChangeTimes->{{3.437065982375*^9, 3.4370664244375*^9}, {3.43756730625*^9,
   3.43756731965625*^9}, {3.4740431052675123`*^9, 3.474043156078603*^9}}],

Cell[TextData[{
 "Often you will need to return objects more complex than integers and \
doubles from your C functions. If this is the case, you should specify a \
return type of ",
 StyleBox["Manual", "Literal"],
 " in the template file. ",
 StyleBox["Manual", "Literal"],
 " means that you will manually code the function to call the appropriate \
low-level MathLink C API functions needed to return the correct data to \
Mathematica."
}], "Text",
 CellChangeTimes->{{3.437070327015625*^9, 3.437070329546875*^9}, {
   3.437070799625*^9, 3.437071081734375*^9}, 3.437567325890625*^9, 
   3.4740431638279457`*^9}],

Cell[TextData[{
 "//randomList.tm\n\n#include <stdlib.h>\n#include <mathlink.h>\n\n:Begin:\n\
:Function:       randomIntList\n:Pattern:        randomIntList[n_Integer]\n\
:Arguments:      {n}\n:ArgumentTypes:  {Integer}\n:ReturnType:     Manual\n\
:End:\n\nextern \"C\" void randomIntList(int n)\n{\n\tint* randData = new int \
[n] ;\n\tif (randData)\n\t{\n\t\tfor(int i=0; i<n; ++i)\n\t\t{\n\t\t\t\
randData[i] = rand() ;\n\t\t}\n\t\tMLPutInteger32List(stdlink, randData , n);\
\n\t\tdelete [] randData; \n\t}",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Code",
 CellChangeTimes->{{3.4370756190625*^9, 3.4370759735625*^9}, {
   3.43707613446875*^9, 3.437076145890625*^9}, 3.43707618146875*^9, {
   3.4370762218125*^9, 3.43707622525*^9}, {3.437076610921875*^9, 
   3.437076644921875*^9}, {3.4370884995625*^9, 3.437088509171875*^9}, {
   3.4740489169339333`*^9, 3.4740489170207157`*^9}, 3.485529474478026*^9}],

Cell["\<\
\telse
\t{
\t\tMLPutInteger32List(stdlink,0,0) ;
\t}
}\
\>", "Code",
 CellChangeTimes->{{3.4370756190625*^9, 3.4370759735625*^9}, {
   3.43707613446875*^9, 3.437076145890625*^9}, 3.43707618146875*^9, {
   3.4370762218125*^9, 3.43707622525*^9}, {3.437076610921875*^9, 
   3.437076644921875*^9}, {3.4370884995625*^9, 3.437088509171875*^9}, {
   3.4740489169339333`*^9, 3.4740489170207157`*^9}, 3.4742184108570147`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"saveCurDir", " ", "=", 
   RowBox[{"Directory", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<oreilly\\\\Mathematica \
Cookbook\\\\code\\mathLinkExample2\\\\Debug\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"link2", " ", "=", 
   RowBox[{"Install", "[", "\"\<mathLinkExample2\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "saveCurDir", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.437088358234375*^9, 3.437088366484375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinkPatterns", "[", "link2", "]"}]], "Input",
 CellChangeTimes->{3.437088390390625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   RowBox[{"randomIntList", "[", "n_Integer", "]"}],
   HoldForm], "}"}]], "Output",
 CellChangeTimes->{3.437088391140625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"randomIntList", "[", "12", "]"}]], "Input",
 CellChangeTimes->{{3.43708854509375*^9, 3.437088546359375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2287", ",", "5306", ",", "19753", ",", "3868", ",", "19313", ",", "1043", 
   ",", "29879", ",", "26846", ",", "14625", ",", "1380", ",", "24555", ",", 
   "28439"}], "}"}]], "Output",
 CellChangeTimes->{3.4370885468125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Uninstall", "[", "link2", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.437092047453125*^9, 3.437092062625*^9}}],

Cell[TextData[{
 "The example given illustrates the use of ",
 StyleBox["MLPutInteger32List", "Literal"],
 " to return an array of data as a list. The MathLink API contains many \
related functions for returning a variety of types, including integers, \
strings, lists, multidimensional arrays, and the like. This example also \
demonstrates that template files processed by mprep can mix source code with \
template directives."
}], "Text",
 CellChangeTimes->{{3.4370885529375*^9, 3.437088568*^9}, {3.43708861365625*^9,
   3.437088704765625*^9}, {3.437088814703125*^9, 3.437088885609375*^9}, {
  3.437088920234375*^9, 3.437088998546875*^9}, {3.437091969796875*^9, 
  3.4370920035*^9}, {3.474043191553399*^9, 3.474043204031332*^9}}],

Cell[TextData[{
 "Another common requirement is the need to execute initialization code once \
when you install the MathLink program. C-based initialization code can easily \
be added to the applications ",
 StyleBox["main()", "Literal"],
 " or ",
 StyleBox["WinMain()", "Literal"],
 ", but what about Mathematica code? A typical",
 " ",
 "example is code that installs documentation for the installed functions. \
For this you ",
 StyleBox["use mprep\[CloseCurlyQuote]s ",
  FontTracking->"SemiCondensed"],
 StyleBox[":Evaluate:", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" ",
  FontTracking->"SemiCondensed"],
 StyleBox["specifications.",
  FontTracking->"Plain"],
 " For an example of this see ",
 StyleBox[ButtonBox["http://bit.ly/duSEnb",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/duSEnb"], None},
  ButtonNote->"http://bit.ly/duSEnb"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.437092017453125*^9, 3.43709202146875*^9}, {
   3.437179203703125*^9, 3.43717920565625*^9}, {3.43717925790625*^9, 
   3.437179566*^9}, {3.437567328015625*^9, 3.437567331859375*^9}, {
   3.474043214488295*^9, 3.474043320856346*^9}, 3.474050324419989*^9, {
   3.476460089957872*^9, 3.4764601188894873`*^9}, 3.485529475688826*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "Information on how to set up your C-built environment can be found at ",
 StyleBox["tutorial/", "URL"],
 " ",
 StyleBox["MathLinkDeveloperGuide", "URL"],
 " (Mac OSX),",
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["tutorial/MathLinkDeveloper", "URL",
  FontTracking->"Plain"],
 StyleBox["Guide ", "URL",
  FontTracking->"SemiCondensed"],
 StyleBox["(Windows),",
  FontTracking->"SemiCondensed"],
 " and ",
 StyleBox["tutorial/MathLinkDeveloperGuide", "URL"],
 " (Unix and Linux)."
}], "Text",
 CellChangeTimes->{{3.435257870015625*^9, 3.43525791190625*^9}, {
   3.437070098546875*^9, 3.437070161578125*^9}, {3.437070192484375*^9, 
   3.437070214921875*^9}, 3.43707029309375*^9, {3.437170166921875*^9, 
   3.437170167796875*^9}, 3.4375673428125*^9, {3.474043362144228*^9, 
   3.474043383353011*^9}, 3.4740489480969276`*^9, {3.474218458091824*^9, 
   3.4742184596925583`*^9}, 3.4855294767751417`*^9}],

Cell[TextData[{
 "See ",
 StyleBox["ref/program/mprep", "URL"],
 " in the Mathematica documentation."
}], "Text",
 CellChangeTimes->{
  3.437170170703125*^9, {3.474043418369388*^9, 3.4740434274884987`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Using Mathematica with Java"
}], "Heading1", "TopOfPage",
 CellChangeTimes->{{3.434029783796875*^9, 3.434029794203125*^9}},
 CellTags->{"UsingMathematicaWithJava", "Using Mathematica with Java"}],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to use Mathematica as a Java scripting language to prototype a Java \
application or leverage the functionality of Java classes.\
\>", "Text",
 CellChangeTimes->{{3.435776429578125*^9, 3.435776492359375*^9}, 
   3.437567352859375*^9, 3.474043451799048*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use the ",
 StyleBox["JLink`", "Literal"],
 " package and call ",
 StyleBox["InstallJava", "Literal"],
 " to make the Java runtime environment available to Mathematica. You can \
then create objects and call methods or load classes to access static methods \
just as if they were Mathematica functions."
}], "Text",
 CellChangeTimes->{{3.435776496484375*^9, 3.43577650209375*^9}, {
  3.435840917578125*^9, 3.435840948328125*^9}, {3.435840993765625*^9, 
  3.435841046265625*^9}, {3.435841555984375*^9, 3.43584156109375*^9}, {
  3.43584171971875*^9, 3.435841794828125*^9}, {3.43756750309375*^9, 
  3.437567514421875*^9}, {3.474043469346018*^9, 3.474043473769477*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InstallJava", "[", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Create", " ", "an", " ", "instance", " ", "of", " ", "decimal", " ", 
    "format", " ", "and", " ", "call", " ", "a", " ", "method", " ", "using", 
    " ", "prefix", " ", "notation", " ", 
    RowBox[{
     RowBox[{"obj", "@", "method"}], "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fmt", "=", 
   RowBox[{"JavaNew", "[", 
    RowBox[{"\"\<java.text.DecimalFormat\>\"", ",", "\"\<#.0000\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fmt", "@", 
    RowBox[{"format", "[", "#", "]"}]}], "&"}], " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1.0", ",", " ", "7.333", ",", 
    RowBox[{"N", "[", "Pi", "]"}], ",", " ", 
    RowBox[{"1", "/", "3."}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.435839760140625*^9, 3.435839801046875*^9}, {
  3.435840661578125*^9, 3.435840788234375*^9}, {3.435841801453125*^9, 
  3.435841860734375*^9}, {3.4740434902191896`*^9, 3.474043502386745*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1.0000\"\>", ",", "\<\"7.3330\"\>", ",", "\<\"3.1416\"\>", 
   ",", "\<\".3333\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.435840754828125*^9, 3.43584080928125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Load", " ", "a", " ", "class", " ", "and", " ", "call", " ", "a", " ", 
    "static", " ", "method", " ", "using", " ", "the", " ", "full", " ", 
    "class", " ", "name", " ", "as", " ", "if", " ", "it", " ", "were", " ", 
    "a", " ", 
    RowBox[{"package", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LoadJavaClass", "[", "\"\<java.lang.System\>\"", "]"}], ";"}], 
   "\n", 
   RowBox[{"java`lang`System`currentTimeMillis", "[", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.43584128671875*^9, 3.43584136834375*^9}, {
   3.435841402828125*^9, 3.435841477046875*^9}, {3.435841520703125*^9, 
   3.43584154203125*^9}, {3.435841865484375*^9, 3.435841914796875*^9}, {
   3.474043513256728*^9, 3.474043518704524*^9}, 3.474218533595901*^9}],

Cell[BoxData["1226852744984"], "Output",
 CellChangeTimes->{3.435841545*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "InstallJava", "]"}]], "Input",
 CellChangeTimes->{{3.435879389453125*^9, 3.43587940190625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ClassPath", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CommandLine", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"JVMArguments", "\[Rule]", "None"}], ",", 
   RowBox[{"ForceLaunch", "\[Rule]", "False"}], ",", 
   RowBox[{"Default", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"CreateExtraLinks", "\[Rule]", "Automatic"}]}], "}"}]], "Output",
 CellChangeTimes->{3.435879403125*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["InstallJava", "Literal"],
 " takes options that control how the Java is loaded. ",
 StyleBox["CommandLine \[Rule] ", "Literal"],
 StyleBox["java\[DiscretionaryHyphen]path", "UserInput"],
 " allows you to specify the particular version of Java you want to load if \
you have several versions available. For example, ",
 StyleBox["CommandLine \[Rule]", "Literal"],
 " ",
 StyleBox["\"c:\\\\Program Files\\\\Java", "Literal"],
 " ",
 StyleBox["\\\\jre1.6.0_07\\\\bin\\\\java\"", "Literal"],
 ". ",
 StyleBox["ClassPath \[Rule] ", "Literal"],
 StyleBox["classpath", "UserInput"],
 " is used to provide a classpath that is different from the default obtained \
from the ",
 StyleBox["CLASSPATH", "Literal"],
 " environment variable. If you require special Java Virtual Machine (JVM) \
options, use ",
 StyleBox["JVMArguments \[Rule]", "Literal"],
 " ",
 StyleBox["arguments", "UserInput"],
 ". "
}], "Text",
 CellChangeTimes->{{3.435879335453125*^9, 3.435879362234375*^9}, {
   3.43587942059375*^9, 3.43587953115625*^9}, {3.435879584578125*^9, 
   3.435879874671875*^9}, {3.435880093921875*^9, 3.43588019690625*^9}, {
   3.435880356875*^9, 3.43588036371875*^9}, {3.435880396671875*^9, 
   3.435880466140625*^9}, {3.435880503*^9, 3.4358806195625*^9}, {
   3.437568141140625*^9, 3.437568165359375*^9}, {3.437568289078125*^9, 
   3.437568299328125*^9}, {3.474043561857345*^9, 3.474043636148485*^9}, 
   3.4740489751460533`*^9, {3.474049646183378*^9, 3.474049663277769*^9}, {
   3.485529480625086*^9, 3.4855294818085012`*^9}}],

Cell[TextData[{
 "When ",
 StyleBox["InstallJava", "Literal"],
 " is invoked several times during a Mathematica session, the subsequent \
invocations are ignored. However, sometimes you want to clear out the old JVM \
and start fresh. In that case, use ",
 StyleBox["ReinstallJava", "Literal"],
 " to exit and reload Java. This",
 " ",
 "is especially useful if you are making changes to a Java Archive (JAR) that \
you are developing alongside the Mathematica notebook that uses it. ",
 StyleBox["ReinstallJava", "Literal"],
 " takes the same options as ",
 StyleBox["InstallJava", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.43588062125*^9, 3.435880802859375*^9}, {
   3.435880886515625*^9, 3.435880981234375*^9}, {3.437568302671875*^9, 
   3.43756830803125*^9}, {3.474043667740141*^9, 3.4740437440845222`*^9}, 
   3.474046781912709*^9, 3.4740496902139597`*^9, 3.485529482975657*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReinstallJava", "[", 
   RowBox[{
   "CommandLine", " ", "\[Rule]", " ", 
    "\"\<c:\\\\Program Files\\\\Java\\\\jre1.6.0_07\\\\bin\\\\java\>\""}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.435880201*^9, 3.435880246578125*^9}, 
   3.435880966171875*^9}],

Cell[TextData[{
 "The following example uses a ",
 StyleBox["genetic algorithm ", "Techical Italic"],
 "(GA)",
 " Java library called JGAP (see ",
 StyleBox["http://jgap.sourceforge.net/", "URL"],
 "). GAs are in the class of evolutionary inspired algorithms typically used \
to tackle complex optimization problems. This example demonstrates an ideal \
blend of Mathematica and Java because it shows how easy it is to script a \
Java application and exploit the visualization features of Mathematica to \
investigate its behavior. "
}], "Text",
 CellChangeTimes->{{3.436005858984375*^9, 3.43600587284375*^9}, {
   3.436005912125*^9, 3.436006035140625*^9}, {3.436006333640625*^9, 
   3.436006353265625*^9}, {3.43600646834375*^9, 3.436006535109375*^9}, {
   3.4360159405625*^9, 3.436016245484375*^9}, {3.436016312640625*^9, 
   3.436016314390625*^9}, {3.437568311859375*^9, 3.437568338953125*^9}, {
   3.474043770569525*^9, 3.474043820557493*^9}, 3.474046783127942*^9, {
   3.47421856630033*^9, 3.474218567197609*^9}}],

Cell[TextData[{
 "The example also illustrates the use of ",
 StyleBox["JavaBlock", "Literal"],
 " as a means of automatically cleaning up Java objects when they are no \
longer needed. It also shows how Java arrays of objects are replaced by \
Mathematica lists and how the translation is automated by ",
 StyleBox["JLink", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.436016257484375*^9, 3.436016424375*^9}, 
   3.43756834265625*^9}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<JLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReinstallJava", "[", 
    RowBox[{
    "ClassPath", "\[Rule]", " ", 
     "\"\<C:\\\\code\\\\jgap;C:\\\\code\\\\jgap\\jgap-examples.jar;C:\\\\code\
\\\\jgap\\jgap.jar;C:\\\\code\\\\jgap\\jgapMathematica.jar\>\""}], "]"}], 
   ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "volumes", " ", "of", " ", "items", " ", "we", " ", "wish", 
    " ", "to", " ", "be", " ", "packed"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"itemVolumes", "=", 
   RowBox[{"{", 
    RowBox[{
    "1.2", ",", "2.8", ",", "3.5", ",", "4.0", ",", "25.0", ",", "6.75", ",", 
     "14.36", ",", "36.7", ",", "78.9", ",", "325.1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "names", " ", "of", " ", "the", " ", "items"}], "*)"}], 
  RowBox[{
   RowBox[{"itemNames", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<item1\>\"", ",", "\"\<item2\>\"", ",", "\"\<item3\>\"", ",", 
      "\"\<item4\>\"", ",", "\"\<widget\>\"", ",", "\"\<thingie\>\"", ",", 
      "\"\<thingie2\>\"", ",", "\"\<fooBar\>\"", ",", "\"\<WingWam\>\"", ",", 
      "\"\<ThingAMaBob\>\""}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"targetVolume", " ", "=", " ", "1000.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"popSize", " ", "=", " ", "1500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generations", " ", "=", " ", "150"}], ";"}]}], "Input",
 CellChangeTimes->{{3.43601643309375*^9, 3.4360166696875*^9}, {
   3.43601676584375*^9, 3.43601687925*^9}, {3.436016924046875*^9, 
   3.43601693653125*^9}, {3.43601697021875*^9, 3.43601708140625*^9}, {
   3.436017114046875*^9, 3.436017175640625*^9}, {3.436017235734375*^9, 
   3.436017235984375*^9}, 3.436017349171875*^9, {3.436017544515625*^9, 
   3.4360175481875*^9}, {3.4360176529375*^9, 3.4360176551875*^9}, {
   3.436017746390625*^9, 3.4360177780625*^9}, {3.436017838*^9, 
   3.436017873265625*^9}, {3.436017909703125*^9, 3.436017916921875*^9}, {
   3.43601794728125*^9, 3.436017953078125*^9}, {3.436018134828125*^9, 
   3.436018162140625*^9}, {3.436018828078125*^9, 3.436018867046875*^9}, {
   3.436018921515625*^9, 3.436018922875*^9}, {3.436019047234375*^9, 
   3.43601904925*^9}, {3.436019085578125*^9, 3.436019124*^9}, {
   3.436019172140625*^9, 3.43601919546875*^9}, {3.436019372328125*^9, 
   3.436019373046875*^9}, {3.436019441609375*^9, 3.436019442140625*^9}, {
   3.4360194909375*^9, 3.43601949196875*^9}, {3.4360198295625*^9, 
   3.43601989165625*^9}, {3.436019944921875*^9, 3.436019984875*^9}, {
   3.4360200293125*^9, 3.436020101921875*^9}, 3.43602027028125*^9, {
   3.4360203306875*^9, 3.436020331640625*^9}, {3.436020421453125*^9, 
   3.436020425484375*^9}, 3.43602049703125*^9, {3.436020598515625*^9, 
   3.436020666265625*^9}, {3.436020764046875*^9, 3.4360209025*^9}, {
   3.436020963421875*^9, 3.436020963625*^9}, {3.436021071984375*^9, 
   3.43602107303125*^9}, {3.4360252705625*^9, 3.436025489390625*^9}, {
   3.4360255623125*^9, 3.436025563140625*^9}, {3.43602567578125*^9, 
   3.436025679234375*^9}, {3.436025863234375*^9, 3.436025867734375*^9}, {
   3.436026069421875*^9, 3.43602607184375*^9}, {3.436026196828125*^9, 
   3.436026212671875*^9}, {3.436026443078125*^9, 3.43602646915625*^9}, {
   3.4360265036875*^9, 3.436026509640625*^9}, 3.436026740140625*^9, {
   3.436026836359375*^9, 3.43602683684375*^9}, {3.436026897375*^9, 
   3.43602689915625*^9}, {3.436026977671875*^9, 3.436026978109375*^9}, {
   3.436027052328125*^9, 3.43602705340625*^9}, 3.43602708609375*^9, {
   3.43602911040625*^9, 3.4360291290625*^9}, {3.436029186234375*^9, 
   3.4360291975*^9}, {3.436050797671875*^9, 3.43605082221875*^9}, {
   3.436051206390625*^9, 3.436051206859375*^9}, {3.436053917859375*^9, 
   3.4360539615625*^9}, {3.436056151046875*^9, 3.436056162625*^9}, 
   3.474043851619628*^9}],

Cell[TextData[{
 "I implement the problem using a function called ",
 StyleBox["knapsack", "Literal"],
 ", which takes an optional fitness function. The reason for this will become \
apparent later. Most of the code within ",
 StyleBox["knapsack", "Literal"],
 " is straightforward use of JLink facilities interspersed with standard \
Mathematica code. The comments in the code point out what\[CloseCurlyQuote]s \
going on, and much of the detail is specific to the JGAP library and the ",
 StyleBox["knapsack", "Literal"],
 " problem. One thing that might trip you up in your own Java-interfacing \
projects is dealing with Java arrays of objects. There is no ",
 StyleBox["JLink", "Literal"],
 " function specifically designed to construct arrays. Instead, wherever you \
need to call a Java function that expect",
 StyleBox["s an array, simply pass it a Math",
  FontTracking->"SemiCondensed"],
 "ematica list of objects created with ",
 StyleBox["JavaNew", "Literal"],
 " and ",
 StyleBox["Jlink", "Literal"],
 " will translate. Mathematica\[CloseCurlyQuote]s ",
 StyleBox["Table", "Literal"],
 " is convenient for that purpose and it is how the following code creates an \
array of ",
 StyleBox["Gene", "Literal"],
 " objects. Likewise, when calling a Java function that returns an array, \
expect Mathematica to convert it to a list."
}], "Text",
 CellChangeTimes->{{3.43613690078125*^9, 3.43613699665625*^9}, {
   3.436137169265625*^9, 3.43613729446875*^9}, {3.436137332671875*^9, 
   3.436137460328125*^9}, 3.436137564234375*^9, {3.436137724859375*^9, 
   3.436137868453125*^9}, {3.436137922796875*^9, 3.43613817825*^9}, {
   3.437568345265625*^9, 3.437568357296875*^9}, {3.4740438613358793`*^9, 
   3.474043969590987*^9}, {3.474218582151226*^9, 3.4742185958147306`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"knapsack", "[", 
   RowBox[{"fitnessFunc_", " ", ":", " ", "None"}], "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "a", " ", "JavaBlock", " ", "to", " ", "release", " ", "all", 
    " ", "Java", " ", "objects", " ", "when", " ", "block", " ", 
    RowBox[{"completes", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"JavaBlock", "[", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "conf", ",", "fitnessFunc2", ",", "sampleGenes", ",", 
       "sampleChromosome", ",", "population", ",", "individuals", ",", 
       "bestSolutionSoFar", ",", "packing", ",", "volumeFound", ",", 
       "dummy"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "JGAP", " ", "uses", " ", "a", " ", "configuration", " ", "object", " ",
        "to", " ", "organize", " ", "the", " ", "genetic", " ", 
       RowBox[{"algorithm", "'"}], "s", " ", "parameters", " ", "and", " ", 
       RowBox[{"objects", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LoadJavaClass", "[", "\"\<org.jgap.Configuration\>\"", "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Configuration`reset", "[", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"conf", " ", "=", " ", 
       RowBox[{
       "JavaNew", "[", "\"\<org.jgap.impl.DefaultConfiguration\>\"", "]"}]}], 
      ";", "\n", 
      RowBox[{"(*", 
       RowBox[{
       "We", " ", "want", " ", "to", " ", "preserve", " ", "the", " ", 
        "fittest", " ", 
        RowBox[{"individual", "."}]}], "*)"}], "\n", 
      RowBox[{"conf", "@", 
       RowBox[{"setPreservFittestIndividual", "[", "True", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "The", " ", "fitness", " ", "function", " ", "is", " ", "implemented", 
        " ", "as", " ", "a", " ", "class", " ", "in", " ", "the", " ", 
        "example", " ", 
        RowBox[{"code", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"fitnessFunc2", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fitnessFunc", " ", "===", "  ", "None"}], ",", 
         RowBox[{"JavaNew", "[", 
          RowBox[{
          "\"\<examples.knapsack.KnapsackFitnessFunction\>\"", ",", 
           "targetVolume"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"JavaNew", "[", 
          RowBox[{
          "\"\<jgapMathematica.FitnessFunction\>\"", ",", "fitnessFunc"}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"conf", "@", 
       RowBox[{"setFitnessFunction", "[", "fitnessFunc2", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "In", " ", "the", " ", "original", " ", "Java", " ", "code", " ", 
         "sampleGenes", " ", "is", " ", "a", " ", "Java", " ", "array", " ", 
         "of", " ", "class", " ", 
         RowBox[{"Gene", ".", " ", "However"}]}], ",", " ", 
        RowBox[{
        "in", " ", "Mathematica", " ", "you", " ", "create", " ", "lists", 
         " ", "of", " ", "objects"}], ",", " ", 
        RowBox[{
        "and", " ", "the", " ", "JLink", " ", "code", " ", "will", " ", 
         "take", " ", "care", " ", "of", " ", "translating", " ", "to", " ", 
         "arrays", " ", "when", " ", 
         RowBox[{"necessary", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"sampleGenes", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"JavaNew", "[", 
          RowBox[{
          "\"\<org.jgap.impl.IntegerGene\>\"", ",", "conf", ",", "0", ",", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"0.75", " ", 
             RowBox[{"targetVolume", "/", 
              RowBox[{"itemVolumes", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "itemVolumes", "]"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"sampleChromosome", " ", "=", " ", 
       RowBox[{"JavaNew", "[", 
        RowBox[{
        "\"\<org.jgap.Chromosome\>\"", ",", "conf", ",", "sampleGenes"}], 
        "]"}]}], ";", "\n", 
      RowBox[{"conf", "@", 
       RowBox[{"setSampleChromosome", "[", "sampleChromosome", "]"}]}], ";", 
      RowBox[{"conf", "@", 
       RowBox[{"setPopulationSize", "[", "popSize", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LoadJavaClass", "[", "\"\<org.jgap.Genotype\>\"", "]"}], ";", 
      RowBox[{"population", " ", "=", " ", 
       RowBox[{
       "org`jgap`Genotype`randomInitialGenotype", "[", "conf", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Let", "'"}], "s", " ", "run", " ", "the", " ", "evolution", 
        " ", "for", " ", "200", " ", "generations", " ", "and", " ", 
        "capture", " ", "the", " ", "fittest", " ", "at", " ", "each", " ", 
        RowBox[{"generation", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"dummy", ",", 
         RowBox[{"{", "saveFitnessValues", " ", "}"}]}], "}"}], " ", "=", 
       RowBox[{"Reap", "[", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"population", "@", 
            RowBox[{"evolve", "[", "]"}]}], ";", 
           RowBox[{"Sow", "[", 
            RowBox[{"population", "@", 
             RowBox[{
              RowBox[{"getFittestChromosome", "[", "]"}], "@", 
              RowBox[{"getFitnessValue", "[", "]"}]}]}], "]"}]}], ",", 
          RowBox[{"{", "generations", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bestSolutionSoFar", "=", 
       RowBox[{"population", "@", 
        RowBox[{"getFittestChromosome", "[", "]"}]}]}], ";", "\n", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Fitness of Best:\>\"", ",", 
        RowBox[{"bestSolutionSoFar", "@", 
         RowBox[{"getFitnessValue", "[", "]"}]}]}], "]"}], ";"}], "\n", 
     RowBox[{"(*", 
      RowBox[{
      "Here", " ", "we", " ", "decode", " ", "the", " ", "best", " ", 
       "solution", " ", "to", " ", "get", " ", "the", " ", "qty", " ", "of", 
       " ", "each", " ", 
       RowBox[{"item", "."}]}], "*)"}], 
     StyleBox[
      RowBox[{" ", 
       StyleBox["\[InvisibleSpace]",
        FontSize->0]}]]}]}]}]}]], "Input",
 CellChangeTimes->{{3.43601643309375*^9, 3.4360166696875*^9}, {
   3.43601676584375*^9, 3.43601687925*^9}, {3.436016924046875*^9, 
   3.43601693653125*^9}, {3.43601697021875*^9, 3.43601708140625*^9}, {
   3.436017114046875*^9, 3.436017175640625*^9}, {3.436017235734375*^9, 
   3.436017235984375*^9}, 3.436017349171875*^9, {3.436017544515625*^9, 
   3.4360175481875*^9}, {3.4360176529375*^9, 3.4360176551875*^9}, {
   3.436017746390625*^9, 3.4360177780625*^9}, {3.436017838*^9, 
   3.436017873265625*^9}, {3.436017909703125*^9, 3.436017916921875*^9}, {
   3.43601794728125*^9, 3.436017953078125*^9}, {3.436018134828125*^9, 
   3.436018162140625*^9}, {3.436018828078125*^9, 3.436018867046875*^9}, {
   3.436018921515625*^9, 3.436018922875*^9}, {3.436019047234375*^9, 
   3.43601904925*^9}, {3.436019085578125*^9, 3.436019124*^9}, {
   3.436019172140625*^9, 3.43601919546875*^9}, {3.436019372328125*^9, 
   3.436019373046875*^9}, {3.436019441609375*^9, 3.436019442140625*^9}, {
   3.4360194909375*^9, 3.43601949196875*^9}, {3.4360198295625*^9, 
   3.43601989165625*^9}, {3.436019944921875*^9, 3.436019984875*^9}, {
   3.4360200293125*^9, 3.436020101921875*^9}, 3.43602027028125*^9, {
   3.4360203306875*^9, 3.436020331640625*^9}, {3.436020421453125*^9, 
   3.436020425484375*^9}, 3.43602049703125*^9, {3.436020598515625*^9, 
   3.436020666265625*^9}, {3.436020764046875*^9, 3.4360209025*^9}, {
   3.436020963421875*^9, 3.436020963625*^9}, {3.436021071984375*^9, 
   3.43602107303125*^9}, {3.4360252705625*^9, 3.436025489390625*^9}, {
   3.4360255623125*^9, 3.436025563140625*^9}, {3.43602567578125*^9, 
   3.436025679234375*^9}, {3.436025863234375*^9, 3.436025867734375*^9}, {
   3.436026069421875*^9, 3.43602607184375*^9}, {3.436026196828125*^9, 
   3.436026212671875*^9}, {3.436026443078125*^9, 3.43602646915625*^9}, {
   3.4360265036875*^9, 3.436026509640625*^9}, 3.436026740140625*^9, {
   3.436026836359375*^9, 3.43602683684375*^9}, {3.436026897375*^9, 
   3.43602689915625*^9}, {3.436026977671875*^9, 3.436026978109375*^9}, {
   3.436027052328125*^9, 3.43602705340625*^9}, 3.43602708609375*^9, {
   3.43602911040625*^9, 3.436029177*^9}, 3.436029207609375*^9, {
   3.43605088609375*^9, 3.43605093596875*^9}, {3.436051096578125*^9, 
   3.436051139046875*^9}, {3.436051281921875*^9, 3.43605128290625*^9}, 
   3.436053972171875*^9, {3.436054434359375*^9, 3.436054470953125*^9}, {
   3.436054517640625*^9, 3.436054541453125*^9}, {3.43605465303125*^9, 
   3.436054666609375*^9}, {3.43605485678125*^9, 3.43605488259375*^9}, {
   3.436054997203125*^9, 3.43605500296875*^9}, 3.436056175546875*^9, {
   3.474044337318096*^9, 3.474044483398147*^9}, 3.4740473442320757`*^9, {
   3.474049007593523*^9, 3.4740490079546423`*^9}, {3.47421863530788*^9, 
   3.474218641165226*^9}, {3.476460179602935*^9, 3.47646018007663*^9}, 
   3.4855294845385323`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"packing", " ", "=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"bestSolutionSoFar", "@", 
            RowBox[{
             RowBox[{"getGene", "[", "i", "]"}], "@", 
             RowBox[{"getAllele", "[", "]"}]}]}], ",", 
           RowBox[{"itemNames", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"bestSolutionSoFar", "@", 
             RowBox[{"size", "[", "]"}]}], " ", "-", " ", "1"}]}], "}"}]}], 
        "]"}]}], ";"}], "\n", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Packing found: \>\"", ",", "packing"}], "]"}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"volumeFound", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"packing", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "*", " ", 
         "itemVolumes"}], "]"}]}], ";"}], "\n", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Volume used \>\"", ",", "volumeFound"}], "]"}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"\"\<Difference from desired volume: \>\"", ",", " ", 
        RowBox[{"targetVolume", "-", "volumeFound"}]}], "]"}], ";"}], 
     "\[IndentingNewLine]"}], "]"}], "\[IndentingNewLine]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.43601643309375*^9, 3.4360166696875*^9}, {
   3.43601676584375*^9, 3.43601687925*^9}, {3.436016924046875*^9, 
   3.43601693653125*^9}, {3.43601697021875*^9, 3.43601708140625*^9}, {
   3.436017114046875*^9, 3.436017175640625*^9}, {3.436017235734375*^9, 
   3.436017235984375*^9}, 3.436017349171875*^9, {3.436017544515625*^9, 
   3.4360175481875*^9}, {3.4360176529375*^9, 3.4360176551875*^9}, {
   3.436017746390625*^9, 3.4360177780625*^9}, {3.436017838*^9, 
   3.436017873265625*^9}, {3.436017909703125*^9, 3.436017916921875*^9}, {
   3.43601794728125*^9, 3.436017953078125*^9}, {3.436018134828125*^9, 
   3.436018162140625*^9}, {3.436018828078125*^9, 3.436018867046875*^9}, {
   3.436018921515625*^9, 3.436018922875*^9}, {3.436019047234375*^9, 
   3.43601904925*^9}, {3.436019085578125*^9, 3.436019124*^9}, {
   3.436019172140625*^9, 3.43601919546875*^9}, {3.436019372328125*^9, 
   3.436019373046875*^9}, {3.436019441609375*^9, 3.436019442140625*^9}, {
   3.4360194909375*^9, 3.43601949196875*^9}, {3.4360198295625*^9, 
   3.43601989165625*^9}, {3.436019944921875*^9, 3.436019984875*^9}, {
   3.4360200293125*^9, 3.436020101921875*^9}, 3.43602027028125*^9, {
   3.4360203306875*^9, 3.436020331640625*^9}, {3.436020421453125*^9, 
   3.436020425484375*^9}, 3.43602049703125*^9, {3.436020598515625*^9, 
   3.436020666265625*^9}, {3.436020764046875*^9, 3.4360209025*^9}, {
   3.436020963421875*^9, 3.436020963625*^9}, {3.436021071984375*^9, 
   3.43602107303125*^9}, {3.4360252705625*^9, 3.436025489390625*^9}, {
   3.4360255623125*^9, 3.436025563140625*^9}, {3.43602567578125*^9, 
   3.436025679234375*^9}, {3.436025863234375*^9, 3.436025867734375*^9}, {
   3.436026069421875*^9, 3.43602607184375*^9}, {3.436026196828125*^9, 
   3.436026212671875*^9}, {3.436026443078125*^9, 3.43602646915625*^9}, {
   3.4360265036875*^9, 3.436026509640625*^9}, 3.436026740140625*^9, {
   3.436026836359375*^9, 3.43602683684375*^9}, {3.436026897375*^9, 
   3.43602689915625*^9}, {3.436026977671875*^9, 3.436026978109375*^9}, {
   3.436027052328125*^9, 3.43602705340625*^9}, 3.43602708609375*^9, {
   3.43602911040625*^9, 3.436029177*^9}, 3.436029207609375*^9, {
   3.43605088609375*^9, 3.43605093596875*^9}, {3.436051096578125*^9, 
   3.436051139046875*^9}, {3.436051281921875*^9, 3.43605128290625*^9}, 
   3.436053972171875*^9, {3.436054434359375*^9, 3.436054470953125*^9}, {
   3.436054517640625*^9, 3.436054541453125*^9}, {3.43605465303125*^9, 
   3.436054666609375*^9}, {3.43605485678125*^9, 3.43605488259375*^9}, {
   3.436054997203125*^9, 3.43605500296875*^9}, 3.436056175546875*^9, {
   3.474044337318096*^9, 3.474044483398147*^9}, 3.4740473442320757`*^9, {
   3.474049007593523*^9, 3.4740490079546423`*^9}}],

Cell["\<\
Using a fairly healthy population size and a large number of generations, we \
unfortunately get a fairly poor solution! This indicates a problem with the \
design of our GA. Let\[CloseCurlyQuote]s see how we can draw on Mathematica \
to help resolve this. \
\>", "Text",
 CellChangeTimes->{{3.43613831809375*^9, 3.436138482890625*^9}, {
  3.437568371828125*^9, 3.437568375015625*^9}, {3.474044494237479*^9, 
  3.474044502604413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popSize", "=", "1500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generations", " ", "=", " ", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"knapsack", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.4360255729375*^9, 3.436025579703125*^9}, {
   3.436026342390625*^9, 3.436026343046875*^9}, {3.43602657784375*^9, 
   3.436026579*^9}, {3.4360266365*^9, 3.43602663703125*^9}, {
   3.43602684653125*^9, 3.43602687603125*^9}, {3.43602694528125*^9, 
   3.43602695828125*^9}, 3.43602699903125*^9, 3.436051059015625*^9, {
   3.43605491434375*^9, 3.436054925265625*^9}, {3.43605623825*^9, 
   3.4360562533125*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fitness of Best: \"\>", "\[InvisibleSpace]", 
   "4.580986181244`*^8"}],
  SequenceForm["Finess of Best: ", 4.580986181244*^8],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.43602558209375*^9, 3.43602571825*^9, 3.4360261193125*^9, 
   3.4360261819375*^9, 3.43602625759375*^9, 3.43602634428125*^9, 
   3.436026557265625*^9, 3.436026612859375*^9, 3.4360266726875*^9, 
   3.436026796078125*^9, {3.436026849421875*^9, 3.436026878484375*^9}, {
   3.436026914390625*^9, 3.436026961640625*^9}, 3.436027003859375*^9, 
   3.43602706890625*^9, 3.436027103515625*^9, 3.43605106546875*^9, 
   3.436051186671875*^9, {3.436051240984375*^9, 3.436051260453125*^9}, 
   3.43605130175*^9, 3.436054016921875*^9, 3.436054676828125*^9, 
   3.43605493853125*^9, 3.43605502190625*^9, 3.436056268578125*^9, {
   3.4742186517259274`*^9, 3.474218661989485*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Packing found: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"78", ",", "\<\"item1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"27", ",", "\<\"item2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"38", ",", "\<\"item3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"item4\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"26", ",", "\<\"widget\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"86", ",", "\<\"thingie\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"11", ",", "\<\"thingie2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"fooBar\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"WingWam\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"ThingAMaBob\"\>"}], "}"}]}], "}"}]}],
  SequenceForm[
  "Packing found: ", {{78, "item1"}, {27, "item2"}, {38, "item3"}, {
    0, "item4"}, {26, "widget"}, {86, "thingie"}, {11, "thingie2"}, {
    0, "fooBar"}, {0, "WingWam"}, {0, "ThingAMaBob"}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.43602558209375*^9, 3.43602571825*^9, 3.4360261193125*^9, 
   3.4360261819375*^9, 3.43602625759375*^9, 3.43602634428125*^9, 
   3.436026557265625*^9, 3.436026612859375*^9, 3.4360266726875*^9, 
   3.436026796078125*^9, {3.436026849421875*^9, 3.436026878484375*^9}, {
   3.436026914390625*^9, 3.436026961640625*^9}, 3.436027003859375*^9, 
   3.43602706890625*^9, 3.436027103515625*^9, 3.43605106546875*^9, 
   3.436051186671875*^9, {3.436051240984375*^9, 3.436051260453125*^9}, 
   3.43605130175*^9, 3.436054016921875*^9, 3.436054676828125*^9, 
   3.43605493853125*^9, 3.43605502190625*^9, 3.436056268609375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Volume used \"\>", "\[InvisibleSpace]", "1690.66`"}],
  SequenceForm["Volume used ", 1690.66],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.43602558209375*^9, 3.43602571825*^9, 3.4360261193125*^9, 
   3.4360261819375*^9, 3.43602625759375*^9, 3.43602634428125*^9, 
   3.436026557265625*^9, 3.436026612859375*^9, 3.4360266726875*^9, 
   3.436026796078125*^9, {3.436026849421875*^9, 3.436026878484375*^9}, {
   3.436026914390625*^9, 3.436026961640625*^9}, 3.436027003859375*^9, 
   3.43602706890625*^9, 3.436027103515625*^9, 3.43605106546875*^9, 
   3.436051186671875*^9, {3.436051240984375*^9, 3.436051260453125*^9}, 
   3.43605130175*^9, 3.436054016921875*^9, 3.436054676828125*^9, 
   3.43605493853125*^9, 3.43605502190625*^9, 3.436056268609375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Difference from desired volume: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "690.6600000000001`"}]}],
  SequenceForm["Difference from desired volume: ", -690.6600000000001],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.43602558209375*^9, 3.43602571825*^9, 3.4360261193125*^9, 
   3.4360261819375*^9, 3.43602625759375*^9, 3.43602634428125*^9, 
   3.436026557265625*^9, 3.436026612859375*^9, 3.4360266726875*^9, 
   3.436026796078125*^9, {3.436026849421875*^9, 3.436026878484375*^9}, {
   3.436026914390625*^9, 3.436026961640625*^9}, 3.436027003859375*^9, 
   3.43602706890625*^9, 3.436027103515625*^9, 3.43605106546875*^9, 
   3.436051186671875*^9, {3.436051240984375*^9, 3.436051260453125*^9}, 
   3.43605130175*^9, 3.436054016921875*^9, 3.436054676828125*^9, 
   3.43605493853125*^9, 3.43605502190625*^9, 3.436056268625*^9}]
}, Open  ]],

Cell["\<\
By plotting the logarithm of the fitness at each generation, we can see that \
the fitness landscape of this problem is extremely steep since we make a \
rapid transition from very low fitness to very high fitness. This suggests \
the fitness function provided with this JGAP sample might not be ideal. The \
poor quality of the solution is further indication of a poorly designed \
fitness function. The real lesson is that Mathematica is an ideal \
experimental playground for Java libraries because the full wealth of \
analytic and visual tools is at your disposal. In fact, I use Mathematica to \
help find a better fitness function, so read on.\
\>", "Text",
 CellChangeTimes->{{3.43602123571875*^9, 3.436021428515625*^9}, {
  3.43602147746875*^9, 3.436021611046875*^9}, {3.4360221801875*^9, 
  3.43602218371875*^9}, {3.436135855703125*^9, 3.436136018328125*^9}, {
  3.43613823509375*^9, 3.43613826775*^9}, {3.437568377609375*^9, 
  3.437568383625*^9}, {3.4740445147646217`*^9, 3.474044550740747*^9}, {
  3.4742186866411448`*^9, 3.474218686786646*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"Log", "[", "saveFitnessValues", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.43601788228125*^9, 3.436017899*^9}, {
   3.43601804096875*^9, 3.436018070671875*^9}, 3.436018103890625*^9, 
   3.436018182375*^9, {3.436020113078125*^9, 3.436020125625*^9}, {
   3.436020204859375*^9, 3.4360202095625*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{0, 0.}, {1., 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{17.4375, 19.582671506528946`}, {99.88213334007568,
            100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{1.1, 0.}, {2.1, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{19.10968865718184, 21.254860163710788`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{2.2, 0.}, {3.2, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{20.781877314363683`, 22.92704882089263}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{3.3000000000000003`, 0.}, {4.300000000000001, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{22.454065971545525`, 24.59923747807447}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{4.4, 0.}, {5.4, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{24.126254628727366`, 26.271426135256313`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{5.5, 0.}, {6.5, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{25.798443285909208`, 27.943614792438154`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{6.6, 0.}, {7.6, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{27.47063194309105, 29.615803449619996`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{7.699999999999999, 0.}, {8.7, 0.}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{29.14282060027289, 31.287992106801838`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{8.799999999999999, 0.}, {9.799999999999999, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{30.81500925745473, 32.96018076398367}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{9.899999999999999, 0.}, {10.899999999999999`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{32.48719791463657, 34.63236942116552}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{10.999999999999998`, 0.}, {11.999999999999998`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{34.159386571818416`, 36.304558078347355`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{12.099999999999998`, 0.}, {13.099999999999998`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{35.83157522900025, 37.976746735529204`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{13.199999999999998`, 0.}, {14.199999999999998`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{37.50376388618209, 39.64893539271104}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{14.299999999999997`, 0.}, {15.299999999999997`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{39.175952543363934`, 41.32112404989288}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{15.399999999999997`, 0.}, {16.4, 0.}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{40.848141200545776`, 42.99331270707472}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{16.5, 0.}, {17.5, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{42.52032985772762, 44.66550136425657}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{17.6, 0.}, {18.6, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{44.192518514909466`, 46.33769002143841}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{18.700000000000003`, 0.}, {19.700000000000003`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{45.86470717209131, 48.009878678620254`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{19.800000000000004`, 0.}, {20.800000000000004`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{47.53689582927315, 49.6820673358021}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{20.900000000000006`, 0.}, {21.900000000000006`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{49.209084486455, 51.354255992983944`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{22.000000000000007`, 0.}, {23.000000000000007`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{50.88127314363684, 53.026444650165786`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{23.10000000000001, 0.}, {24.10000000000001, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{52.55346180081868, 54.69863330734763}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{24.20000000000001, 0.}, {25.20000000000001, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{54.22565045800052, 56.370821964529476`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{25.30000000000001, 0.}, {26.30000000000001, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{55.89783911518237, 58.04301062171132}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{26.400000000000013`, 0.}, {27.400000000000013`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{57.57002777236421, 59.71519927889316}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{27.500000000000014`, 0.}, {28.500000000000014`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{59.242216429546055`, 61.387387936075}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{28.600000000000016`, 0.}, {29.600000000000016`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{60.9144050867279, 63.05957659325685}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{29.700000000000017`, 0.}, {30.700000000000017`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{62.586593743909745`, 64.73176525043868}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{30.80000000000002, 0.}, {31.80000000000002, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{64.2587824010916, 66.40395390762053}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{31.90000000000002, 0.}, {32.90000000000002, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{65.93097105827343, 68.07614256480238}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{33.00000000000002, 0.}, {34.00000000000002, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{67.60315971545528, 69.74833122198422}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{34.10000000000002, 0.}, {35.10000000000002, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{69.27534837263713, 71.42051987916606}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{35.200000000000024`, 0.}, {36.200000000000024`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{70.94753702981896, 73.09270853634791}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{36.300000000000026`, 0.}, {37.300000000000026`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{72.6197256870008, 74.76489719352975}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{37.40000000000003, 0.}, {38.40000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{74.29191434418266, 76.4370858507116}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{38.50000000000003, 0.}, {39.50000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{75.96410300136449, 78.10927450789345}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{39.60000000000003, 0.}, {40.60000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{77.63629165854633, 79.78146316507528}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{40.70000000000003, 0.}, {41.70000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{79.30848031572819, 81.45365182225713}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{41.80000000000003, 0.}, {42.80000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{80.98066897291002, 83.12584047943896}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{42.900000000000034`, 0.}, {43.900000000000034`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{82.65285763009187, 84.79802913662081}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{44.000000000000036`, 0.}, {45.000000000000036`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{84.32504628727371, 86.47021779380266}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{45.10000000000004, 0.}, {46.10000000000004, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{85.99723494445556, 88.1424064509845}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{46.20000000000004, 0.}, {47.20000000000004, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{87.66942360163739, 89.81459510816634}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{47.30000000000004, 0.}, {48.30000000000004, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{89.34161225881924, 91.48678376534819}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{48.40000000000004, 0.}, {49.40000000000004, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{91.01380091600109, 93.15897242253003}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{49.50000000000004, 0.}, {50.50000000000004, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{92.68598957318292, 94.83116107971188}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{50.600000000000044`, 0.}, {51.600000000000044`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{94.35817823036477, 96.50334973689372}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{51.700000000000045`, 0.}, {52.700000000000045`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{96.03036688754662, 98.17553839407556}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{52.80000000000005, 0.}, {53.80000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{97.70255554472845, 99.84772705125741}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{53.90000000000005, 0.}, {54.90000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{99.3747442019103, 101.51991570843924`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{55.00000000000005, 0.}, {56.00000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{101.04693285909215`, 103.19210436562109`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{56.10000000000005, 0.}, {57.10000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{102.71912151627399`, 104.86429302280294`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{57.20000000000005, 0.}, {58.20000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{104.39131017345584`, 106.53648167998477`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{58.300000000000054`, 0.}, {59.300000000000054`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{106.06349883063767`, 108.20867033716662`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{59.400000000000055`, 0.}, {60.400000000000055`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{107.73568748781952`, 109.88085899434847`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{60.50000000000006, 0.}, {61.50000000000006, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{109.40787614500137`, 111.5530476515303}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{61.60000000000006, 0.}, {62.60000000000006, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{111.0800648021832, 113.22523630871216`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{62.70000000000006, 0.}, {63.70000000000006, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{112.75225345936505`, 114.897424965894}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{63.80000000000006, 0.}, {64.80000000000007, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{114.4244421165469, 116.56961362307585`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{64.90000000000006, 0.}, {65.90000000000006, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{116.09663077372873`, 118.24180228025769`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{66.00000000000006, 0.}, {67.00000000000006, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{117.76881943091057`, 119.91399093743952`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{67.10000000000005, 0.}, {68.10000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{119.4410080880924, 121.58617959462136`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{68.20000000000005, 0.}, {69.20000000000005, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{121.11319674527424`, 123.25836825180318`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{69.30000000000004, 0.}, {70.30000000000004, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{122.78538540245607`, 124.93055690898501`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{70.40000000000003, 0.}, {71.40000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{124.4575740596379, 126.60274556616685`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{71.50000000000003, 0.}, {72.50000000000003, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{126.12976271681974`, 128.27493422334868`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{72.60000000000002, 0.}, {73.60000000000002, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{127.80195137400156`, 129.94712288053051`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{73.70000000000002, 0.}, {74.70000000000002, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{129.4741400311834, 131.61931153771235`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{74.80000000000001, 0.}, {75.80000000000001, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{131.14632868836523`, 133.29150019489418`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{75.9, 0.}, {76.9, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{132.81851734554706`, 134.96368885207602`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{77., 0.}, {78., 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{134.4907060027289, 136.63587750925785`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{78.1, 0.}, {79.1, 0.}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{136.16289465991073`, 138.3080661664397}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{79.19999999999999, 0.}, {80.19999999999999, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{137.83508331709257`, 139.98025482362152`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{80.29999999999998, 0.}, {81.29999999999998, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{139.5072719742744, 141.65244348080336`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{81.39999999999998, 0.}, {82.39999999999998, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{141.1794606314562, 143.3246321379852}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{82.49999999999997, 0.}, {83.49999999999997, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{142.85164928863804`, 144.99682079516703`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{83.59999999999997, 0.}, {84.59999999999997, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{144.52383794581988`, 146.66900945234883`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{84.69999999999996, 0.}, {85.69999999999996, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{146.19602660300174`, 148.34119810953067`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{85.79999999999995, 0.}, {86.79999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{147.86821526018355`, 150.0133867667125}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{86.89999999999995, 0.}, {87.89999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{149.54040391736538`, 151.68557542389433`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{87.99999999999994, 0.}, {88.99999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{151.21259257454722`, 153.35776408107617`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{89.09999999999994, 0.}, {90.09999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{152.88478123172905`, 155.029952738258}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{90.19999999999993, 0.}, {91.19999999999993, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{154.55696988891088`, 156.70214139543984`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{91.29999999999993, 0.}, {92.29999999999993, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{156.22915854609272`, 158.37433005262167`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{92.39999999999992, 0.}, {93.39999999999992, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{157.90134720327455`, 160.0465187098035}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{93.49999999999991, 0.}, {94.49999999999991, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{159.5735358604564, 161.71870736698534`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{94.59999999999991, 0.}, {95.59999999999991, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{161.24572451763822`, 163.39089602416718`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{95.6999999999999, 0.}, {96.6999999999999, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{162.91791317482006`, 165.063084681349}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{96.7999999999999, 0.}, {97.7999999999999, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{164.5901018320019, 166.73527333853085`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{97.89999999999989, 0.}, {98.89999999999989, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{166.26229048918373`, 168.40746199571268`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{98.99999999999989, 0.}, {99.99999999999989, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{167.93447914636556`, 170.0796506528945}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{100.09999999999988`, 0.}, {101.09999999999988`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{169.6066678035474, 171.75183931007632`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{101.19999999999987`, 0.}, {102.19999999999987`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{171.27885646072923`, 173.42402796725816`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{102.29999999999987`, 0.}, {103.29999999999987`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{172.95104511791106`, 175.09621662444}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{103.39999999999986`, 0.}, {104.39999999999986`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{174.62323377509287`, 176.76840528162182`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{104.49999999999986`, 0.}, {105.49999999999986`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{176.2954224322747, 178.44059393880366`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{105.59999999999985`, 0.}, {106.59999999999985`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{177.96761108945654`, 180.1127825959855}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{106.69999999999985`, 0.}, {107.69999999999985`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{179.63979974663837`, 181.78497125316733`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{107.79999999999984`, 0.}, {108.79999999999984`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{181.3119884038202, 183.45715991034916`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{108.89999999999984`, 0.}, {109.89999999999984`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{182.98417706100204`, 185.129348567531}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{109.99999999999983`, 0.}, {110.99999999999983`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{184.65636571818388`, 186.80153722471283`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{111.09999999999982`, 0.}, {112.09999999999982`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{186.3285543753657, 188.47372588189467`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{112.19999999999982`, 0.}, {113.19999999999982`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{188.00074303254755`, 190.1459145390765}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{113.29999999999981`, 0.}, {114.29999999999981`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{189.67293168972938`, 191.81810319625833`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{114.3999999999998, 0.}, {115.3999999999998, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{191.34512034691122`, 193.49029185344017`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{115.4999999999998, 0.}, {116.4999999999998, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{193.01730900409305`, 195.162480510622}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{116.5999999999998, 0.}, {117.5999999999998, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{194.68949766127488`, 196.8346691678038}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{117.69999999999979`, 0.}, {118.69999999999979`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{196.36168631845672`, 198.50685782498564`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{118.79999999999978`, 0.}, {119.79999999999978`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{198.03387497563855`, 200.17904648216748`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{119.89999999999978`, 0.}, {120.89999999999978`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{199.7060636328204, 201.8512351393493}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{120.99999999999977`, 0.}, {121.99999999999977`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{201.3782522900022, 203.52342379653115`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{122.09999999999977`, 0.}, {123.09999999999977`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{203.05044094718403`, 205.19561245371298`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{123.19999999999976`, 0.}, {124.19999999999976`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{204.72262960436586`, 206.86780111089482`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{124.29999999999976`, 0.}, {125.29999999999976`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{206.3948182615477, 208.53998976807665`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{125.39999999999975`, 0.}, {126.39999999999975`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{208.06700691872953`, 210.2121784252585}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{126.49999999999974`, 0.}, {127.49999999999974`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{209.73919557591137`, 211.88436708244032`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{127.59999999999974`, 0.}, {128.59999999999974`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{211.4113842330932, 213.55655573962215`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{128.69999999999973`, 0.}, {129.69999999999973`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{213.08357289027504`, 215.228744396804}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{129.79999999999973`, 0.}, {130.79999999999973`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{214.75576154745687`, 216.90093305398582`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{130.89999999999972`, 0.}, {131.89999999999972`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{216.4279502046387, 218.57312171116766`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{131.99999999999972`, 0.}, {132.99999999999972`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{218.10013886182054`, 220.2453103683495}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{133.0999999999997, 0.}, {134.0999999999997, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{219.77232751900237`, 221.91749902553133`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{134.1999999999997, 0.}, {135.1999999999997, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{221.4445161761842, 223.58968768271316`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{135.2999999999997, 0.}, {136.2999999999997, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{223.11670483336604`, 225.26187633989497`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{136.3999999999997, 0.}, {137.3999999999997, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{224.78889349054788`, 226.9340649970768}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{137.4999999999997, 0.}, {138.4999999999997, 0.}]}, 
           StandardForm, Graphics],
          ImageSizeCache->{{226.4610821477297, 228.60625365425864`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{138.59999999999968`, 0.}, {139.59999999999968`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{228.13327080491152`, 230.27844231144047`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{139.69999999999968`, 0.}, {140.69999999999968`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{229.80545946209335`, 231.9506309686223}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{140.79999999999967`, 0.}, {141.79999999999967`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{231.4776481192752, 233.62281962580414`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{141.89999999999966`, 0.}, {142.89999999999966`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{233.14983677645702`, 235.29500828298598`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{142.99999999999966`, 0.}, {143.99999999999966`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{234.82202543363886`, 236.9671969401678}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{144.09999999999965`, 0.}, {145.09999999999965`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{236.4942140908207, 238.63938559734964`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{145.19999999999965`, 0.}, {146.19999999999965`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{238.16640274800253`, 240.31157425453148`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{146.29999999999964`, 0.}, {147.29999999999964`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{239.83859140518436`, 241.9837629117133}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{147.39999999999964`, 0.}, {148.39999999999964`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{241.5107800623662, 243.65595156889515`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{148.49999999999963`, 0.}, {149.49999999999963`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{243.18296871954803`, 245.32814022607698`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{149.59999999999962`, 0.}, {150.59999999999962`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{244.85515737672986`, 247.00032888325882`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{150.69999999999962`, 0.}, {151.69999999999962`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{246.5273460339117, 248.67251754044065`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{151.7999999999996, 0.}, {152.7999999999996, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{248.19953469109353`, 250.3447061976225}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{152.8999999999996, 0.}, {153.8999999999996, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{249.87172334827537`, 252.0168948548043}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{153.9999999999996, 0.}, {154.9999999999996, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{251.5439120054572, 253.68908351198613`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{155.0999999999996, 0.}, {156.0999999999996, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{253.21610066263904`, 255.36127216916796`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{156.1999999999996, 0.}, {157.1999999999996, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{254.88828931982087`, 257.0334608263498}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{157.29999999999959`, 0.}, {158.29999999999959`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{256.5604779770027, 258.7056494835316}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{158.39999999999958`, 0.}, {159.39999999999958`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{258.2326666341845, 260.3778381407135}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{159.49999999999957`, 0.}, {160.49999999999957`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{259.90485529136635`, 262.05002679789527`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{160.59999999999957`, 0.}, {161.59999999999957`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{261.5770439485482, 263.72221545507716`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{161.69999999999956`, 0.}, {162.69999999999956`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{263.24923260573, 265.39440411225894`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{162.79999999999956`, 0.}, {163.79999999999956`, 0.}]}, 
           StandardForm, Graphics],
          ImageSizeCache->{{264.92142126291185`, 267.06659276944083`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{163.89999999999955`, 0.}, {164.89999999999955`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{266.5936099200937, 268.7387814266226}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{164.99999999999955`, 0.}, {165.99999999999955`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{268.2657985772755, 270.4109700838045}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{166.09999999999954`, 0.}, {167.09999999999954`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{269.93798723445735`, 272.0831587409863}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{167.19999999999953`, 0.}, {168.19999999999953`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{271.6101758916392, 273.75534739816817`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{168.29999999999953`, 0.}, {169.29999999999953`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{273.282364548821, 275.42753605534995`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{169.39999999999952`, 0.}, {170.39999999999952`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{274.95455320600286`, 277.0997247125318}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{170.49999999999952`, 0.}, {171.49999999999952`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{276.6267418631847, 278.7719133697136}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{171.5999999999995, 0.}, {172.5999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{278.2989305203665, 280.44410202689545`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{172.6999999999995, 0.}, {173.6999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{279.97111917754836`, 282.1162906840773}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{173.7999999999995, 0.}, {174.7999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{281.6433078347302, 283.7884793412591}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{174.8999999999995, 0.}, {175.8999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{283.31549649191203`, 285.46066799844095`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{175.9999999999995, 0.}, {176.9999999999995, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{284.98768514909386`, 287.1328566556228}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{177.09999999999948`, 0.}, {178.09999999999948`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{286.6598738062757, 288.8050453128046}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{178.19999999999948`, 0.}, {179.19999999999948`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{288.33206246345753`, 290.47723396998646`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{179.29999999999947`, 0.}, {180.29999999999947`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{290.00425112063937`, 292.1494226271683}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{180.39999999999947`, 0.}, {181.39999999999947`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{291.6764397778212, 293.8216112843501}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{181.49999999999946`, 0.}, {182.49999999999946`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{293.34862843500304`, 295.49379994153196`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{182.59999999999945`, 0.}, {183.59999999999945`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{295.02081709218487`, 297.1659885987138}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{183.69999999999945`, 0.}, {184.69999999999945`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{296.69300574936665`, 298.83817725589563`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{184.79999999999944`, 0.}, {185.79999999999944`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{298.3651944065485, 300.51036591307746`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{185.89999999999944`, 0.}, {186.89999999999944`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{300.0373830637303, 302.1825545702593}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{186.99999999999943`, 0.}, {187.99999999999943`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{301.70957172091215`, 303.85474322744113`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{188.09999999999943`, 0.}, {189.09999999999943`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{303.381760378094, 305.52693188462297`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{189.19999999999942`, 0.}, {190.19999999999942`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{305.0539490352758, 307.1991205418048}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{190.29999999999941`, 0.}, {191.29999999999941`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{306.72613769245766`, 308.87130919898664`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{191.3999999999994, 0.}, {192.3999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{308.3983263496395, 310.54349785616847`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{192.4999999999994, 0.}, {193.4999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{310.0705150068213, 312.2156865133503}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{193.5999999999994, 0.}, {194.5999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{311.74270366400316`, 313.88787517053214`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{194.6999999999994, 0.}, {195.6999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{313.414892321185, 315.560063827714}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{195.7999999999994, 0.}, {196.7999999999994, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{315.0870809783668, 317.2322524848958}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{196.89999999999938`, 0.}, {197.89999999999938`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{316.75926963554866`, 318.9044411420776}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{197.99999999999937`, 0.}, {198.99999999999937`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{318.4314582927305, 320.5766297992594}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{199.09999999999937`, 0.}, {200.09999999999937`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{320.10364694991233`, 322.24881845644126`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{200.19999999999936`, 0.}, {201.19999999999936`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{321.77583560709417`, 323.9210071136231}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{201.29999999999936`, 0.}, {202.29999999999936`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{323.448024264276, 325.5931957708049}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{202.39999999999935`, 0.}, {203.39999999999935`, 0.}]}, 
           StandardForm, Graphics],
          
          ImageSizeCache->{{325.12021292145783`, 327.26538442798676`}, {
           99.88213334007568, 100.50713334007568`}}],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{203.49999999999935`, 0.}, {204.49999999999935`, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{326.79240157863967`, 
           328.9375730851686}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{204.59999999999934`, 0.}, {205.59999999999934`, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{328.4645902358215, 
           330.60976174235043`}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{205.69999999999933`, 0.}, {206.69999999999933`, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{330.13677889300334`, 
           332.28195039953226`}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{206.79999999999933`, 0.}, {207.79999999999933`, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{331.8089675501852, 
           333.9541390567141}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{207.89999999999932`, 0.}, {208.89999999999932`, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{333.481156207367, 
           335.62632771389593`}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{208.99999999999932`, 0.}, {209.99999999999932`, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{335.15334486454884`, 
           337.29851637107777`}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{210.0999999999993, 0.}, {211.0999999999993, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{336.8255335217307, 
           338.9707050282596}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{211.1999999999993, 0.}, {212.1999999999993, 
             19.5711419996833}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{338.4977221789125, 
           340.64289368544144`}, {-102.86964619347111`, 100.50713334007568`}}],
         StatusArea[#, 19.5711419996833]& ,
         TagBoxNote->"19.5711419996833"],
        StyleBox["19.5711419996833`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.5711419996833, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{212.2999999999993, 0.}, {213.2999999999993, 
             19.824847603741546`}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{340.16991083609435`, 
           342.31508234262327`}, {-105.49796817392965`, 100.50713334007568`}}],
         StatusArea[#, 19.824847603741546`]& ,
         TagBoxNote->"19.824847603741546"],
        StyleBox["19.824847603741546`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.824847603741546`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{213.3999999999993, 0.}, {214.3999999999993, 
             19.94259504231542}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{341.8420994932762, 
           343.9872709998051}, {-106.71780004203202`, 100.50713334007568`}}],
         StatusArea[#, 19.94259504231542]& ,
         TagBoxNote->"19.94259504231542"],
        StyleBox["19.94259504231542`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.94259504231542, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{214.4999999999993, 0.}, {215.4999999999993, 
             19.94259504231542}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{343.514288150458, 
           345.65945965698694`}, {-106.71780004203202`, 100.50713334007568`}}],
         StatusArea[#, 19.94259504231542]& ,
         TagBoxNote->"19.94259504231542"],
        StyleBox["19.94259504231542`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.94259504231542, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{215.59999999999928`, 0.}, {216.59999999999928`, 
             19.94259504231542}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{345.18647680763985`, 
           347.3316483141688}, {-106.71780004203202`, 100.50713334007568`}}],
         StatusArea[#, 19.94259504231542]& ,
         TagBoxNote->"19.94259504231542"],
        StyleBox["19.94259504231542`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.94259504231542, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{216.69999999999928`, 0.}, {217.69999999999928`, 
             19.94259504231542}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{346.8586654648217, 
           349.0038369713506}, {-106.71780004203202`, 100.50713334007568`}}],
         StatusArea[#, 19.94259504231542]& ,
         TagBoxNote->"19.94259504231542"],
        StyleBox["19.94259504231542`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.94259504231542, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{217.79999999999927`, 0.}, {218.79999999999927`, 
             19.94259504231542}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{348.5308541220035, 
           350.67602562853244`}, {-106.71780004203202`, 100.50713334007568`}}],
         StatusArea[#, 19.94259504231542]& ,
         TagBoxNote->"19.94259504231542"],
        StyleBox["19.94259504231542`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.94259504231542, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{218.89999999999927`, 0.}, {219.89999999999927`, 
             19.94259504231542}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{350.2030427791853, 
           352.3482142857143}, {-106.71780004203202`, 100.50713334007568`}}],
         StatusArea[#, 19.94259504231542]& ,
         TagBoxNote->"19.94259504231542"],
        StyleBox["19.94259504231542`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[19.94259504231542, {
          GrayLevel[0]}], "Tooltip"]& ]}}, {}, {}}, {{}, {}, 
    {RGBColor[0.5322753744818294, 0.5498130769817654, 0.6455481803616387], 
     LineBox[{{0., 0.}, {0., 0.}}]}}, GraphicsGroupBox[
    StyleBox[
     GraphicsGroupBox[{LineBox[{{0, 0}, {219.89999999999927`, 0}}], 
       LineBox[{{{0, 0}, Offset[{0, -4}, {0, 0}]}, {{219.89999999999927`, 0}, 
          Offset[{0, -4}, {219.89999999999927`, 0}]}}]}],
     Antialiasing->False]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  PlotRangePadding->Scaled[0.02],
  Ticks->{None, Automatic}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.43601803840625*^9, 3.43601807215625*^9}, 
   3.436018105140625*^9, 3.436018241265625*^9, 3.4360192776875*^9, {
   3.436020198421875*^9, 3.436020211640625*^9}, 3.436021048640625*^9, 
   3.436021133171875*^9, 3.436026279671875*^9, 3.43602668584375*^9, 
   3.436026808796875*^9, 3.436026869046875*^9, 3.436027018703125*^9, 
   3.436027113046875*^9, 3.43605627521875*^9, {3.4740490284011497`*^9, 
   3.474049036603347*^9}}]
}, Open  ]],

Cell[TextData[{
 "If you want to experiment with Java libraries, it is ideal to be able to \
implement interfaces defined by those libraries directly in Mathematica. In \
fact, this can be done rather easily using ",
 StyleBox["ImplementJavaInterface", "Literal"],
 ". The following example uses ",
 StyleBox["ImplementJavaInterface", "Literal"],
 " to try an alternate fitness function for the knapsack problem. There is a \
caveat, however. ",
 StyleBox["ImplementJavaInterface", "Literal"],
 " will only work with true interfaces, not abstract classes. In JGAP, ",
 StyleBox["FitnessFunction", "Literal"],
 " is an abstract class, hence we can",
 "\[CloseCurlyQuote]",
 "t implement it using ",
 StyleBox["ImplementJavaInterface", "Literal"],
 ". The solution in cases like this is to create an adapter like the one in \
the following listing."
}], "Text",
 CellChangeTimes->{{3.436024555890625*^9, 3.436024786171875*^9}, {
  3.43613385246875*^9, 3.436133959609375*^9}, {3.4361342005625*^9, 
  3.436134286109375*^9}, {3.4361343651875*^9, 3.436134387359375*^9}, {
  3.474044567411333*^9, 3.474044573724887*^9}, {3.474044604888792*^9, 
  3.4740446198082457`*^9}, {3.474044660514462*^9, 3.474044677587985*^9}}],

Cell["\<\
package jgapMathematica;

import org.jgap.IChromosome;

public class FitnessFunction extends org.jgap.FitnessFunction {
\t
\tprivate IMathematicFitness m_fitness;
\t
\tpublic FitnessFunction(IMathematicFitness fitness) {
\t\tm_fitness = fitness ;
\t}
\t
\t@Override
\tprotected double evaluate(final IChromosome chromosome) {
\t\treturn m_fitness.evaluate(chromosome);
\t\t}

}\
\>", "Code",
 CellChangeTimes->{{3.436134621609375*^9, 3.43613467359375*^9}, 
   3.43613478965625*^9},
 CellTags->"language=java"],

Cell["\<\
The above fitness function allows us to use the following interface within \
Mathematica code. \
\>", "Text",
 CellChangeTimes->{{3.43613468134375*^9, 3.436134705078125*^9}, {
   3.43613479721875*^9, 3.4361348455625*^9}, {3.436134942828125*^9, 
   3.4361349588125*^9}, 3.4740446931981077`*^9}],

Cell["\<\
package jgapMathematica;

import org.jgap.IChromosome;

public interface IMathematicFitness {
\tpublic double evaluate(final IChromosome chromosome) ;
}\
\>", "Code",
 CellChangeTimes->{{3.43613502075*^9, 3.436135022359375*^9}},
 CellTags->"language=java"],

Cell["\<\
Once this is done, we can write any fitness function we like in pure \
Mathematica code. This solution is general in that any abstract class you \
find in any Java library can be adapted in a similar manner. Below, we \
exploit the adapter to write a new fitness function for the knapsack problem. \
The function penalizes solutions that use more volume than specified, while \
giving increasing reward to solutions that use close to the available volume.\
\
\>", "Text",
 CellChangeTimes->{{3.436135061171875*^9, 3.43613522428125*^9}, {
   3.436136082421875*^9, 3.436136208375*^9}, {3.437568389140625*^9, 
   3.4375684064375*^9}, 3.474044704398486*^9, {3.474049763409976*^9, 
   3.474049766919166*^9}, 3.4742187053911877`*^9, {3.4855294864077587`*^9, 
   3.485529487262827*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"knapsackEvaluate", "[", "subject_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"subjPacking", ",", "subjVol"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Figure", " ", "out", " ", "the", " ", "volume", " ", "used", " ", "by",
        " ", "the", " ", "solution", " ", "being", " ", 
       RowBox[{"evaluated", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"subjPacking", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"subject", "@", 
          RowBox[{
           RowBox[{"getGene", "[", "i", "]"}], "@", 
           RowBox[{"getAllele", "[", "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"subject", "@", 
             RowBox[{"size", "[", "]"}]}], " ", "-", " ", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"subjVol", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{"subjPacking", "  ", "*", "itemVolumes"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{
         "This", " ", "function", " ", "gives", " ", "small", " ", "fitness", 
          " ", "to", " ", "volumes", " ", "that", " ", "are", " ", "far", " ",
           "from", " ", "the", " ", "target", " ", "volume"}], ";", " ", 
         "however"}], ",", " ", 
        RowBox[{
        "it", " ", "rewards", " ", "underfitting", " ", "twice", " ", "as", 
         " ", "much", " ", "as", " ", 
         RowBox[{"overfitting", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"subjVol", ">", " ", "targetVolume"}], ",", " ", 
        RowBox[{"targetVolume", "/", "subjVol"}], ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"subjVol", "/", "targetVolume"}], ")"}], " ", "*", 
         "2.0"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Implementing", " ", "an", " ", "interface", " ", "is", " ", "nothing", 
    " ", "more", " ", "than", " ", "mapping", " ", "the", " ", "interface", 
    " ", "methods", " ", "to", " ", "the", " ", "Mathematica", " ", 
    RowBox[{"function", ".", " ", "Here"}], " ", "our", " ", "interface", " ",
     "has", " ", "only", " ", "a", " ", "single", " ", "function", " ", 
    "called", " ", "evaluate", " ", "and", " ", "it", " ", "gets", " ", 
    "mapped", " ", "to", " ", 
    RowBox[{"knapsackEvaluate", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ff", " ", "=", " ", 
   RowBox[{"ImplementJavaInterface", "[", 
    RowBox[{"\"\<jgapMathematica.IMathematicFitness\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<evaluate\>\"", "\[Rule]", "\"\<knapsackEvaluate\>\""}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.436027130578125*^9, 3.436027132015625*^9}, {
   3.436027207984375*^9, 3.436027230796875*^9}, {3.436027288578125*^9, 
   3.43602742096875*^9}, {3.4360283298125*^9, 3.4360283455625*^9}, {
   3.4360289534375*^9, 3.436028993515625*^9}, {3.43602902365625*^9, 
   3.4360290800625*^9}, {3.436029235625*^9, 3.43602935678125*^9}, 
   3.436029403953125*^9, {3.436050959859375*^9, 3.436051002046875*^9}, {
   3.4360540415*^9, 3.436054050546875*^9}, {3.4360542316875*^9, 
   3.4360542324375*^9}, {3.4360550850625*^9, 3.4360550928125*^9}, {
   3.436055355125*^9, 3.436055356515625*^9}, {3.436055593140625*^9, 
   3.436055628875*^9}, {3.43605641940625*^9, 3.436056457890625*^9}, 
   3.436056630921875*^9, {3.4361362225625*^9, 3.43613637528125*^9}, {
   3.436136417640625*^9, 3.4361364193125*^9}, {3.43613648140625*^9, 
   3.43613687140625*^9}, {3.4740447180815573`*^9, 3.474044769077551*^9}, 
   3.4742187124078617`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"popSize", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"generations", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"knapsack", "[", "ff", "]"}]}], "Input",
 CellChangeTimes->{{3.436051334125*^9, 3.436051336078125*^9}, {
  3.4360550630625*^9, 3.436055070921875*^9}, {3.43605618734375*^9, 
  3.436056195046875*^9}, {3.436056313671875*^9, 3.436056317515625*^9}, {
  3.43605648659375*^9, 3.436056486953125*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Fitness of Best: \"\>", "\[InvisibleSpace]", "1.99776`"}],
  SequenceForm["Finess of Best: ", 1.99776],
  Editable->False]], "Print",
 CellChangeTimes->{3.43605418690625*^9, 3.436054378921875*^9, 
  3.436054830484375*^9, 3.43605630259375*^9, 3.436056474484375*^9, 
  3.4360565355625*^9, 3.436056679109375*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Packing found: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "\<\"item1\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"95", ",", "\<\"item2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"67", ",", "\<\"item3\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "\<\"item4\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "\<\"widget\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"34", ",", "\<\"thingie\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"8", ",", "\<\"thingie2\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"fooBar\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"WingWam\"\>"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "\<\"ThingAMaBob\"\>"}], "}"}]}], "}"}]}],
  SequenceForm[
  "Packing found: ", {{20, "item1"}, {95, "item2"}, {67, "item3"}, {
    20, "item4"}, {2, "widget"}, {34, "thingie"}, {8, "thingie2"}, {
    0, "fooBar"}, {0, "WingWam"}, {0, "ThingAMaBob"}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.43605418690625*^9, 3.436054378921875*^9, 
  3.436054830484375*^9, 3.43605630259375*^9, 3.436056474484375*^9, 
  3.4360565355625*^9, 3.43605667915625*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Volume used \"\>", "\[InvisibleSpace]", "998.88`"}],
  SequenceForm["Volume used ", 998.88],
  Editable->False]], "Print", "ProductionPageBreak",
 CellChangeTimes->{3.43605418690625*^9, 3.436054378921875*^9, 
  3.436054830484375*^9, 3.43605630259375*^9, 3.436056474484375*^9, 
  3.4360565355625*^9, 3.436056679171875*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Difference from desired volume: \"\>", "\[InvisibleSpace]", 
   "1.1200000000000045`"}],
  SequenceForm["Difference from desired volume: ", 1.1200000000000045`],
  Editable->False]], "Print",
 CellChangeTimes->{3.43605418690625*^9, 3.436054378921875*^9, 
  3.436054830484375*^9, 3.43605630259375*^9, 3.436056474484375*^9, 
  3.4360565355625*^9, 3.436056679171875*^9}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.474049100672708*^9, 3.4740491006877317`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "saveFitnessValues", "]"}]], "Input",
 CellChangeTimes->{{3.436056588703125*^9, 3.4360565916875*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{0, 0.}, {1., 0.40013924845846355`}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{20.4375, 34.34737559407324}, {49.684298806856624`,
            86.32416497535407}}],
         StatusArea[#, 0.40013924845846355`]& ,
         TagBoxNote->"0.40013924845846355"],
        StyleBox["0.40013924845846355`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.40013924845846355`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{1.1, 0.}, {2.1, 0.4427560679719116}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{35.05086315348056, 48.960738747553805`}, {
           45.84853648857165, 86.32416497535407}}],
         StatusArea[#, 0.4427560679719116]& ,
         TagBoxNote->"0.4427560679719116"],
        StyleBox["0.4427560679719116`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4427560679719116, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{2.2, 0.}, {3.2, 0.45134297101024096`}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{49.66422630696113, 63.574101901034375`}, {
           45.07566513211586, 86.32416497535407}}],
         StatusArea[#, 0.45134297101024096`]& ,
         TagBoxNote->"0.45134297101024096"],
        StyleBox["0.45134297101024096`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.45134297101024096`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{3.3000000000000003`, 0.}, {4.300000000000001, 
             0.4569715580902245}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{64.2775894604417, 78.18746505451494}, {
           44.569059466252554`, 86.32416497535407}}],
         StatusArea[#, 0.4569715580902245]& ,
         TagBoxNote->"0.4569715580902245"],
        StyleBox["0.4569715580902245`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.4569715580902245, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{4.4, 0.}, {5.4, 0.5231548329043464}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{78.89095261392227, 92.80082820799551}, {
           38.61217871984681, 86.32416497535407}}],
         StatusArea[#, 0.5231548329043464]& ,
         TagBoxNote->"0.5231548329043464"],
        StyleBox["0.5231548329043464`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5231548329043464, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{5.5, 0.}, {6.5, 0.6043829854101948}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{93.50431576740283, 107.41419136147607`}, {
           31.301171232121938`, 86.32416497535407}}],
         StatusArea[#, 0.6043829854101948]& ,
         TagBoxNote->"0.6043829854101948"],
        StyleBox["0.6043829854101948`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.6043829854101948, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{6.6, 0.}, {7.6, 0.644325745323806}]}, StandardForm, 
           Graphics],
          
          ImageSizeCache->{{108.11767892088339`, 122.02755451495663`}, {
           27.70608987424194, 86.32416497535407}}],
         StatusArea[#, 0.644325745323806]& ,
         TagBoxNote->"0.644325745323806"],
        StyleBox["0.644325745323806`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.644325745323806, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{7.699999999999999, 0.}, {8.7, 1.81676}]}, StandardForm,
            Graphics],
          
          ImageSizeCache->{{122.73104207436396`, 
           136.6409176684372}, {-77.819831254958, 86.32416497535407}}],
         StatusArea[#, 1.81676]& ,
         TagBoxNote->"1.81676"],
        StyleBox["1.81676`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.81676, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{8.799999999999999, 0.}, {9.799999999999999, 1.95362}]},
            StandardForm, Graphics],
          
          ImageSizeCache->{{137.3444052278445, 
           151.25428082191775`}, {-90.1380294892215, 86.32416497535407}}],
         StatusArea[#, 1.95362]& ,
         TagBoxNote->"1.95362"],
        StyleBox["1.95362`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.95362, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{9.899999999999999, 0.}, {10.899999999999999`, 
             1.95362}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{151.95776838132508`, 
           165.86764397539832`}, {-90.1380294892215, 86.32416497535407}}],
         StatusArea[#, 1.95362]& ,
         TagBoxNote->"1.95362"],
        StyleBox["1.95362`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.95362, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{10.999999999999998`, 0.}, {11.999999999999998`, 
             1.95362}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{166.57113153480563`, 
           180.48100712887887`}, {-90.1380294892215, 86.32416497535407}}],
         StatusArea[#, 1.95362]& ,
         TagBoxNote->"1.95362"],
        StyleBox["1.95362`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.95362, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{12.099999999999998`, 0.}, {13.099999999999998`, 
             1.95362}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{181.1844946882862, 
           195.09437028235945`}, {-90.1380294892215, 86.32416497535407}}],
         StatusArea[#, 1.95362]& ,
         TagBoxNote->"1.95362"],
        StyleBox["1.95362`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.95362, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{13.199999999999998`, 0.}, {14.199999999999998`, 
             1.95362}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{195.79785784176676`, 
           209.70773343584}, {-90.1380294892215, 86.32416497535407}}],
         StatusArea[#, 1.95362]& ,
         TagBoxNote->"1.95362"],
        StyleBox["1.95362`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.95362, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{14.299999999999997`, 0.}, {15.299999999999997`, 
             1.9871599999999998`}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{210.4112209952473, 
           224.32109658932055`}, {-93.15682511085818, 86.32416497535407}}],
         StatusArea[#, 1.9871599999999998`]& ,
         TagBoxNote->"1.9871599999999998"],
        StyleBox["1.9871599999999998`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9871599999999998`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{15.399999999999997`, 0.}, {16.4, 
             1.9871599999999998`}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{225.02458414872788`, 
           238.93445974280115`}, {-93.15682511085818, 86.32416497535407}}],
         StatusArea[#, 1.9871599999999998`]& ,
         TagBoxNote->"1.9871599999999998"],
        StyleBox["1.9871599999999998`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9871599999999998`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{16.5, 0.}, {17.5, 1.9871599999999998`}]}, StandardForm,
            Graphics],
          
          ImageSizeCache->{{239.6379473022085, 
           253.54782289628173`}, {-93.15682511085818, 86.32416497535407}}],
         StatusArea[#, 1.9871599999999998`]& ,
         TagBoxNote->"1.9871599999999998"],
        StyleBox["1.9871599999999998`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9871599999999998`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{17.6, 0.}, {18.6, 1.9871599999999998`}]}, StandardForm,
            Graphics],
          
          ImageSizeCache->{{254.25131045568907`, 
           268.1611860497623}, {-93.15682511085818, 86.32416497535407}}],
         StatusArea[#, 1.9871599999999998`]& ,
         TagBoxNote->"1.9871599999999998"],
        StyleBox["1.9871599999999998`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9871599999999998`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            Rectangle[{18.700000000000003`, 0.}, {19.700000000000003`, 
             1.9871599999999998`}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{268.8646736091697, 
           282.7745492032429}, {-93.15682511085818, 86.32416497535407}}],
         StatusArea[#, 1.9871599999999998`]& ,
         TagBoxNote->"1.9871599999999998"],
        StyleBox["1.9871599999999998`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.9871599999999998`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{19.800000000000004`, 0.}, {20.800000000000004`, 
             1.99776}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{283.4780367626502, 
           297.38791235672346`}, {-94.11088693522755, 86.32416497535407}}],
         StatusArea[#, 1.99776]& ,
         TagBoxNote->"1.99776"],
        StyleBox["1.99776`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.99776, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[Typeset`ToBoxes[{
            If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}], 
            
            Rectangle[{20.900000000000006`, 0.}, {21.900000000000006`, 
             1.99776}]}, StandardForm, Graphics],
          
          ImageSizeCache->{{298.09139991613085`, 
           312.0012755102041}, {-94.11088693522755, 86.32416497535407}}],
         StatusArea[#, 1.99776]& ,
         TagBoxNote->"1.99776"],
        StyleBox["1.99776`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.99776, {
          GrayLevel[0]}], "Tooltip"]& ]}}, {}, {}}, {{}, {}, 
    {RGBColor[0.5322753744818294, 0.5498130769817654, 0.6455481803616387], 
     LineBox[{{0., 0.}, {0., 0.}}]}}, GraphicsGroupBox[
    StyleBox[
     GraphicsGroupBox[{LineBox[{{0, 0}, {21.900000000000006`, 0}}], 
       LineBox[{{{0, 0}, Offset[{0, -4}, {0, 0}]}, {{21.900000000000006`, 0}, 
          Offset[{0, -4}, {21.900000000000006`, 0}]}}]}],
     Antialiasing->False]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  ImageSize->{255., Automatic},
  PlotRangePadding->Scaled[0.02],
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.43605656325*^9, 3.436056592546875*^9}, 3.43605668825*^9}
  ]
}, Open  ]],

Cell["\<\
Keep in mind that implementing interface in Mathematica code is convenient \
but comes at a very high cost. In our case, it makes the GA run much slower \
and forces the use of a much smaller population size. This is especially true \
because the fitness function is called many times, and it must call back into \
Java, making it extremely costly. This is not a real issue because the goal \
here is experimentation. When a reasonable fitness function is found, it can \
be ported back to Java. You can use the same methodology when working with \
other Java libraries. Of course, if the interface you implement in \
Mathematica is called infrequently, the hassle of porting back to Java may \
seem unnecessary.\
\>", "Text",
 CellChangeTimes->{{3.436135319421875*^9, 3.436135723359375*^9}, {
  3.4361357993125*^9, 3.436135826421875*^9}, {3.437568409078125*^9, 
  3.437568428234375*^9}, {3.4740447927164373`*^9, 3.474044881519309*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "The J/Link tutorial is an excellent way to round out your knowledge of \
the",
 " ",
 "Mathematica-to-Java interface. See ",
 StyleBox["JLink/tutorial/Overview", "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.4360216485625*^9, 3.43602174925*^9}, {
   3.436021810171875*^9, 3.436021826296875*^9}, {3.43602232440625*^9, 
   3.43602232440625*^9}, {3.4740448976140413`*^9, 3.4740449015204697`*^9}, 
   3.474050433660822*^9, 3.48552948819882*^9}],

Cell[TextData[{
 "Mathematica is bundled with notebooks illustrating different aspects of",
 " ",
 StyleBox["Mathematica-Java interaction (such as using the GUI features of \
Java Swing). These can be found in the Mathematica installation directory \
(evaluate",
  FontTracking->"Extended"],
 " ",
 StyleBox["$InstallationDirectory", "Literal"],
 ") under subdirectory ",
 StyleBox["SystemFiles/Links/JLink/Examples", "Emphasis"],
 "."
}], "Text",
 CellChangeTimes->{{3.436022325984375*^9, 3.43602251265625*^9}, {
   3.4360225641875*^9, 3.43602258503125*^9}, {3.436022669265625*^9, 
   3.436022689859375*^9}, {3.436022720140625*^9, 3.43602274765625*^9}, 
   3.437568432734375*^9, 3.474046790645576*^9, {3.4740504562585087`*^9, 
   3.4740504621168337`*^9}, 3.485529488936428*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Using Mathematica to Interact with Microsoft",
 "\[CloseCurlyQuote]",
 "s .NET Framework"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{
  3.43402982078125*^9, {3.435746176578125*^9, 3.4357461889375*^9}, {
   3.435746567140625*^9, 3.43574657596875*^9}, 3.437568437390625*^9, {
   3.474044930749639*^9, 3.474044931140305*^9}},
 CellTags->{
  "InteractWithMicrosoft's.NETFramework", 
   "Using Mathematica to interact with Microsoft's .NET"}],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to use Mathematica as a .NET scripting language to prototype a .NET \
application or leverage Windows-specific functionality not directly available \
in Mathematica. \
\>", "Text",
 CellChangeTimes->{{3.43574619340625*^9, 3.435746344265625*^9}, {
  3.4357465436875*^9, 3.4357465598125*^9}, {3.437568439875*^9, 
  3.437568442265625*^9}, {3.474044942888631*^9, 3.4740449431205587`*^9}, {
  3.474049801952608*^9, 3.4740498044320498`*^9}, {3.4855294897345533`*^9, 
  3.485529490454599*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use the ",
 StyleBox["NETLink`", "Literal"],
 " package and ",
 StyleBox["InstallNET", "Literal"],
 " to initialize Mathematica\[CloseCurlyQuote]s .NET interface. You then can \
use functions like ",
 StyleBox["LoadNETAssembly", "Literal"],
 " to load custom .NET assemblies and ",
 StyleBox["NETNew", "Literal"],
 " to create instances of objects. Methods and properties of objects are \
accessed using Mathematica prefix notation ",
 StyleBox["object@property", "UserInput"],
 " and ",
 StyleBox["object@method", "UserInput"],
 " ",
 StyleBox["[args]", "UserInput"],
 ". "
}], "Text",
 CellChangeTimes->{{3.43574945028125*^9, 3.435749517328125*^9}, {
   3.43636593403125*^9, 3.436365981890625*^9}, {3.43636602003125*^9, 
   3.436366231375*^9}, {3.43756844490625*^9, 3.43756845453125*^9}, {
   3.474044963628518*^9, 3.474044964673148*^9}, 3.4740498179143467`*^9, 
   3.485529491232267*^9}],

Cell["\<\
As an example, you can use Mathematica 6\[CloseCurlyQuote]s dynamic \
functionality with a .NET timer to display a ticking clock.\
\>", "Text",
 CellChangeTimes->{{3.436366247640625*^9, 3.436366343703125*^9}, 
   3.43756846140625*^9, 3.474044979337714*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<NETLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InstallNET", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeOut", "=", " ", "\"\<Not Set\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timer", " ", "=", " ", 
    RowBox[{"NETNew", "[", 
     RowBox[{"\"\<System.Timers.Timer\>\"", ",", "1000"}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", " ", "sec", " ", "timer"}], " ", "=", " ", 
    RowBox[{"1000", " ", "msec"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"onTimedEvent", "[", 
     RowBox[{"source_", ",", "eventArgs_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", " ", 
      RowBox[{"timeOut", "=", 
       RowBox[{"eventArgs", "@", 
        RowBox[{"SignalTime", "@", 
         RowBox[{"ToString", "[", "\"\<G\>\"", "]"}]}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Use", " ", "AddEventHandler", " ", "to", " ", "bind", " ", "a", " ", 
    "Mathematica", " ", "function", " ", "to", " ", "an", " ", 
    RowBox[{"event", "."}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"AddEventHandler", "[", 
   RowBox[{
    RowBox[{"timer", "@", "Elapsed"}], ",", "onTimedEvent"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timer", "@", "Enabled"}], " ", "=", " ", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "timeOut", "]"}]}], "Input",
 CellChangeTimes->{
  3.4357466399375*^9, {3.4357466724375*^9, 3.435746673828125*^9}, 
   3.436362707953125*^9, {3.436362749328125*^9, 3.436362750125*^9}, {
   3.436362859765625*^9, 3.436362873359375*^9}, {3.436362915921875*^9, 
   3.436362971671875*^9}, {3.436363046328125*^9, 3.436363204765625*^9}, {
   3.43636332725*^9, 3.436363373859375*^9}, {3.436363433609375*^9, 
   3.43636345915625*^9}, {3.436363496234375*^9, 3.4363635008125*^9}, {
   3.43636398096875*^9, 3.436364057375*^9}, {3.436365260109375*^9, 
   3.43636528140625*^9}, {3.436365383265625*^9, 3.436365383578125*^9}, {
   3.436365559203125*^9, 3.436365594671875*^9}, 3.436365675578125*^9, {
   3.436365727640625*^9, 3.4363657445*^9}, {3.4363659185*^9, 
   3.4363659219375*^9}, {3.43636614171875*^9, 3.436366145765625*^9}, {
   3.43636635603125*^9, 3.4363663903125*^9}, {3.436367040296875*^9, 
   3.436367072234375*^9}, {3.474044988940442*^9, 3.474044989262794*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`timeOut, StandardForm],
  ImageSizeCache->{59., {1., 12.}}]], "Output",
 CellChangeTimes->{
  3.436365682140625*^9, {3.43636572903125*^9, 3.43636575078125*^9}, 
   3.436366415125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"timer", "@", "Enabled"}], " ", "=", " ", "False"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Stop", " ", "the", " ", "timer"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.43636350421875*^9, 3.436363506953125*^9}, {
  3.4363664483125*^9, 3.43636645978125*^9}, {3.474387056679096*^9, 
  3.474387058716444*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "When you use ",
 StyleBox["NETNew", "Literal"],
 ", Mathematica implicitly loads the .NET type of the class you are creating. \
For some cases, you need to load the type explicitly. For example, many .NET \
components use ",
 StyleBox["Enums", "Literal"],
 " in their interface. To reference these in \
Mathe\[DiscretionaryHyphen]matica code, you need to load them. In \
Mathematica, you use ",
 StyleBox["LoadNETType", "Literal"],
 " for this",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{{3.436370160703125*^9, 3.43637023525*^9}, {
   3.4363709323125*^9, 3.436371326234375*^9}, {3.437568464609375*^9, 
   3.437568468828125*^9}, {3.474045004425254*^9, 3.474045109280134*^9}, {
   3.474049155087689*^9, 3.474049158256001*^9}, {3.47404983093454*^9, 
   3.474049832820692*^9}, 3.474218792685005*^9, 3.485529493671488*^9}],

Cell[TextData[{
 "purpose. In the following example, you use ",
 StyleBox["LoadNETType", "Literal"],
 " to get the enumerations",
 " ",
 "associated with dialog box results. This allows you to use the ",
 StyleBox["OpenFileDialog", "Literal"],
 " component to select a file. If you run this code, you may need to press \
Alt-Tab to switch to the dialog."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.436370160703125*^9, 3.43637023525*^9}, {
   3.4363709323125*^9, 3.436371326234375*^9}, {3.437568464609375*^9, 
   3.437568468828125*^9}, {3.474045004425254*^9, 3.474045109280134*^9}, {
   3.474049155087689*^9, 3.474049158256001*^9}, 3.474049852547827*^9, 
   3.485529494736434*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<NETLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InstallNET", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "LoadNETType", "[", "\"\<System.Windows.Forms.DialogResult\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"openFileDialog1", "=", 
   RowBox[{
   "NETNew", "[", "\"\<System.Windows.Forms.OpenFileDialog\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"openFileDialog1", "@", "InitialDirectory"}], "=", 
   "\"\<c:\\\\Documents And Setting\\\\Salvtore Mangano\>\""}], ";", 
  RowBox[{
   RowBox[{"openFileDialog1", "@", "Filter"}], "=", 
   "\"\<image files (*.jpg;*.gif;*.bmp)|*.jpg;*.gif;*.bmp|All files (*.*)|*.*\
\>\""}], ";", 
  RowBox[{
   RowBox[{"openFileDialog1", "@", "FilterIndex"}], "=", "1"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"openFileDialog1", "@", "RestoreDirectory"}], "=", "True"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"openFileDialog1", "@", 
     RowBox[{"ShowDialog", "[", "]"}]}], "===", " ", "DialogResult`OK"}], ",", 
   RowBox[{"Import", "[", 
    RowBox[{"openFileDialog1", "@", "FileName"}], "]"}], ",", 
   "\"\<No Image Selected\>\""}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.436368222203125*^9, 3.43636832203125*^9}, {
   3.436368779703125*^9, 3.43636884721875*^9}, {3.436368882890625*^9, 
   3.43636888434375*^9}, {3.436368920359375*^9, 3.43636903521875*^9}, {
   3.436369214796875*^9, 3.436369299421875*^9}, {3.436369353953125*^9, 
   3.43636935640625*^9}, 3.4363694518125*^9, {3.43636948853125*^9, 
   3.436369578703125*^9}, {3.43637115475*^9, 3.436371158046875*^9}, {
   3.43637141140625*^9, 3.43637141203125*^9}, {3.4364606779375*^9, 
   3.436460679484375*^9}, 3.4740491672290497`*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
jkFI/p1XHl86bCoUu40Jb4WNt3rR/ZMW82Cm/eqHjX/5leU7D4P3jow3x8bT
tRYGt5OtfrPRjKeSbp/u9dh+U76dO06XrtOlYz02Pb4IQmeHMgVj/u6GzFB1
NJQvOuykga87zMVUcznRnY902776GAbPjnJHp777VHpSk7bzRCWBVFJPn8rO
Ea387h74oi07G2sA5ahEDQpUO4X3stSmrT0dWMpBZc4jATpercAm54A8WtRn
wkFRN5sKSOM+KubFk0ECBthslIR5tl2WTFuaZV+3GuiPJ+brtROMA2jAOK9c
Bh8cuy7m5rOp8Wpmvl6ZLzfqk4V8M1asxtr11LyYWKdD47CnHvUVy7nmeKVd
ThXTvnTWkc9aqnFt97H48cB91LOf9GydJPXuZfLnPlH66EHsk6euX3k98/2f
7fzpr67/7nce/+OPXv2H33300x8++k/fmv+7r9b+9Ufx3/9C7i+/u/27n7z2
F997/JtfOlpVtOKDW0bmxWrSDOEh7Je1W55UCPulD5tffTv+aMI+mom/9fOt
3/rlyadect/byC7XkrMVe7IRn53Ijo7Eo4mo3TtstXjDNgPjycXKen3kgEJx
NjduJxrQ5cJ4udSfz7XbsXzTZdddejuUXExVZ0P1SV+97amOu8pVUzqvsZuW
4nxseOagWUMONlm2d0/dQDHsFvB5gzoZSM9HqnWLHRbQQR5bNiRnQ+1pXzvI
WztpYymkjNt39z+dWr5bL/Ka8IhTnArIs2EV0En46VSQToeYVIjIRrByiuqV
ZeOGCvb5ZgRXaH944nvlKgSueXLmgwn0fGY6nRgup6abpel8odrOdrfHYaeN
WspeQwGJolYm20163GfnY8l8KF70JcueAmpyryCGwns18W271nFB9vo2/PlP
VD5+lH5v6/z4XuDrb6a+/+nan/7S9L/8zoP/7UeP/+EH13//g7P/68fX//gH
J3/znf5Pvpb74RdTP/nV9p9/Z/sffuvJO6c+v+KWgndLR95SYLe6Fe23fu3l
f/+jz/zhN09+6wudjx44PriyfOW91M88dt+fS185Nzw60dzbqm5OlTcX6tOt
dDpD+wPesCec9WiIwVdLy82RFXba+VIHOEBXKwPUhKuV7mKhOZ8qTseynUby
3f2r3j9pDSyqzKohg3U+H+rPRvrzofF0aDiBLd3TbjpqyAzLBr3ti89gMGlR
wwICWjWZi7H6fKQ57nmXTUe/YNyFARcVsKA+C+azEzGYUsPKTFS9+5gsIE4F
2aSPjrrQqFuYCeP1tLhXUkArXPWNF4vdvAk57dGpF+aa/x/N1cx6f2W7mmtO
p8r1QAGtsF1gIeyVs1glh3YbJKBZjqVrEFxYXzmuytopspWgT7rWRVVbCwo+
90rl514ufPoq9OlL39deTf7qG/FvvB797Y+Kf/2vjv7+d2/+/gcXP/3d8//6
+8f/zx9f/J9/fPqfv9f9oy8nfvvz0R9+ufKTb8w/vHQ+Gmnf2Po/+3Lpg0fZ
X/ig84Nfv/fj7zz6Tz98509/4/4vvJJ6NNo9CXBUo8c50XlfdX+58/i9rQXm
AhgQllPpYiI5WijOFlpA8HgLv6P1Zmk4m6nOJ0pwx81Sdw3fWmjhBLT7NUfy
474Mes1JR/lM67pkVqIWFXbbVt5MTNdT8/2Z5WJk2Haf3eVWnQ40x23xaU9y
1pceteh5BQWddMX357sPx88n3m3fPa2bGmlFyk+FnKjPDsJCbirqkwCgsIeN
uKioh4o4Cb9FELBx415RMUq1crJRTfMMzf1jz/XaDtPNMzTPCtrNwv7oyPXw
yAa/0dFA0y+Lqwm8GBOV03ijRPaazGwgOZrKVyPJrC2GXtnPsc0Y3ogSg5S4
l6BGaeaD6+R7p8GPbiK/8cnWtz9ZAzRfvOf4xmuBf/8rw7/71xc//b3r//vH
D//u+/Of/nD9v/9k+48/Xv/t74z/4lvNH32l9Fsf57/5bubLryZ+/qXEF17N
fPXd8vd+cfIn37v+jz/8xI9+5fy3v3j8xsJZtN6qum5vKrJVWd5L4kdt7VFH
tx3C4ptO5obNVHe6NsJA/dKF67Ur7+uX3pfPnPdW+rOx4mS4cwew2JWvMZBS
X813j07B+bYn27YVR00ZaNOQzsv0MItOCuS6Lj3rqC+H+muwDISHMjstkuuq
5LSrOh8ongkA7Z7WbtGXI8XjtfHRynBv4Tmb2GdNbSPDJgMiv53rNB86zFy3
TeRz4j4H6bagbiPiNSM+E+I28DzGQ6CT9mHlOAPBftrSHo9M53PrycRwsbDc
rO3ABX7B44H+agpoPK9fhB5unOuurpGmMn5+0svPRoXVLN4s4aMOu/v4r8MM
ymSvQPVz4n5GMi9qym5+zS94bRN+5yT64VX8559kv/fx5Lsf9b7xVvqL993f
fCPyp788+u9/8+R/+v7FT3947x//6Op//b3N//K7y3/4g/V//fH2v/zh8V99
Z/Znvzb4xpuRX3sj+Y23st/9bOsnX1//+XdO/92vz3//a6PPXAc/eRHdlmR5
0/Ntv/D+0Plg4l6U1ODTWVU1b2jXPePR0AghB5rLy1eBN+8F3r7vf/ee/7VL
16ON5WqqvZxo4PhgZYLjSV8JNjkdqS+mOhAEgOOW/Kgu29SksPKzAjlMi3aP
5oJxGrLzrvqypzluyKY5fJRFVmXmtCO/Gesu+irQ9Uh9OVCf9+AVzcsbK+jB
eld/oDfVM2TcB0T27OY9m/nA69r9B+Sgh3KYEIvqEGRXHzo0HLtmz204CNt4
mQBaTTLdknTSUECMnLflm4FmO9Kte6ppXQY66RvvL91v3yQeb3yrpq4aI+JO
XsR2mPBw0mFeNYcO6vSiKwXLQHNcNbXHbfNxy7qpGPJ2btUt+Ozj6mfu53/x
9frnH2d+8dXsN9+r/8obqS8/CX77vcy//eoA6Pzky12wz199e/6X3xr91beH
/8P353/7g8V//u7kP3xr+OffHP/1d87+/OubP/ml5X/zjc1f/svtn31j/L3P
RL/0xPqJufbhwPCgb3g4tNwb2C97VtDVwH7as60bukVds2xrNj1o7vqrtfXJ
mfu1C8/b115A89aV55VT5+Mj65Nj28snjldO3Q/X1ouxFto9pOWTgQZ6/dXE
dNSUHzfkp23VeXdHYV6kFkXqqCY5ayuv+trrgQ5OVmV4kdg2JFd9Nbxy0lKA
rkdawHTeUwKgh3PDk5UZqg3MINOGGFJ3MsgJeg+CPn4ogGZTymJOn0tqwDtG
+Z5W/KLp/+PpPZzkuO40wSThgfa+qrpMl/fee++99957213tDbphSHiAhCUA
EgQ9KVI0EiWRGhqJGkqU3VlpNLO7M7s3NzsRExdx/8G9pu4u4hcZFR3dXVX5
vd9nXr6XiTnJxZ/mks7wKWdkzBGtYMqqnPMYYSHr4TxbwoME6ACfD6gpZFmI
2ODAAXYzgrMd3bAgLfrpAcOSTQEHGfZwA69yErxdwD4bc8PTAXQlRu+kBe24
qBLg+uULEQ2yaCedbxof78efXojfHlpu9tRP9hyvbBseravePW/+2YuBH193
fnjJ9PPbns9ecH1+2/6rh95/eCfxj++n//BGGLz+xX3frx8lv3gh+JuH6b+8
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
fp/zdFP8zr7y1TXuGxu8L25Yv7hp/vR59S/v27+4b/ziJdM3r3i/eRL54w9q
v3y9dKMn7fiQgwipF6cefp4UfVjibLdFWy3+So3VLFABOuc2tee3dGsdYbtE
H7aE5zb1t54LbHQV3bKomuJUkpyYizCoaO5cTt+5Glzv8deXha0q9dIFc7/D
HHRZ2QxqbV00XBemsghXYLQ7ZF+/7drYl6VzmGaF0y5yinFSxD0fcy9U0zjg
OlYarH6F1i6QOllKv0Dv5Vi1GKngw2XdmLQb/beJlE4GDGMGyB0Ar4wLnXOi
mbQRNu2MTDDtMKBAR2f9BCAr1RAatEbVD29HUf8fNLzdthhAs5qnrRcZGyUm
OK4VmKt5xjpo2zJnOUMHigNaBkCznGauF3jbFdHh9GxTujNQrbfFzRytnWev
NZXLFVU5LCRNQ8yFZ3xi3HbOdrHqGIa5q2Ha5Yb0akv4XJVxpc66UmdcrdMf
rIqebivvL3Pv9ZjvX9C+vSt5Y4v/1W37L+7Zf3Zd9+vHnk9vKn/5ivPvX/X/
8b38X3/U+/PHyz+8EWm4YHU3qupDVwOYdpy0XmPv9UXrDWY9gwNhrZwlL7f5
a31xu0qv5AjguDWU7qyphx3p9lBfy/GLCT4DB+ml88OWcX1ZFQ/DMmlMNALb
3VEXinigLPEEIlvArAEXXUAVarjVbUFvnd1ZZaZzqGFPVklRfZYZs+q4Q38m
GVxoFcjDJrtXpoIYW4otNTKkToYBoAG2KuPBJJ2ISoTYTNLKYUIhgC0GcWnn
YkA3CRIoGn4chzrJpU+ZVZignRx34RKOxaQDFrdMZp3TgNC6SRyA42+zeaCA
61svcjbLPAAHOG5XeXsN4bmO9HADfpp22DvfQ7NRFgBotqrijbrk3Krh/Jph
2BD1ytxhXdotyLJ+DnkeMnIWY1pmQkevOdm7efn5smQtRri7qr7VkbzQEd1q
C1/oCJ5ua94+MAFLcK/H/ckNx0eXjG/tiD+/Zf78BeNHF6Vf3DF/dlv/3ZuB
b1/1/eXDwr/8tP9vX2797v12P4Qo2Gdyzvm8Dwms7HpLsN0XdorEpH8u4oOl
othSllzM4hIRWDgwlc+gem3G3pay1+J2G4KwF1PJCjELEA4BWTRwrwsuFEAW
66TdPre5acpm6eUyNxzBqDUnVtflyRxmbUe6e1EZz8NWtrnNPnNlIE+F8Tr5
cSkP0iuPRtyzrSJteyBuFymFCDLlmwfHegIPbFvGi0i5YR7NaMq1CEBJu5EA
l36WC3oHhFC76OTU6ZPTZ04uLYyLWSijHGdWIpya+eDhJP8s8GZFHwJQ1m5d
dNCUr+d4wzR7uyTbr6v368rNgmCYYW0UON9DI17OUQZZcidJbMWI/TRjpcgF
DqQZoZ5t6tbLiueG5itbVkD4y1VhvyRLuhkUGCQhTZfcyrWMrR0U7JXkV3ry
XgB2LkN/umm5mGG+NNBerwjeP++7VRO9vmV+MtR8eNHx8SX7R5dMX9z1fPsk
+NunwT+8Hf3qoQNA85vXfMAP/Nf3U//+Zff37xfWUvCMY6wcxxTTxEQYk4lj
ayVqIbXktY8F3AsqxdGgHxaPIZotWiqzkCssbu2INreFu3vKbpefTBCaValB
MzM/BWUTAqdz0eNbEghPy+Vz2Yw2FVP63bxiTi2XTqZSjFSOXKiSbj8K1nrE
dAW+ui0qlZkmwxSdAlmMkwE3DLz77pputS3KhpGFGCofQaQDs/ngbCOJbCQR
xTCsEl2KWudCpplKiABCej/FzTlxUR0soJz9/ikYI4ipUdrSrJA2K2NPmeUz
IRsi5QXgEoHZ66Wowywb2K12mLqeE61nJZt52UpSUPHgSi50O0IYpIHKEHLu
2WZsaTlH66XJf3MgwAB0UpyVjLSXOJxSO7+iX62Lvl8QpSyEBYcPvKDNexX0
hJ4Z1WBB+D3fFO6XaHd6yg/OB+405Q+66ltV6Rtb9vsdDfjJ6xumd/ds7x2Y
Pr5k/flt12cvWv7urvV3b0UAlf32zfDv3gz+4wfx//pe5M8/zHzzWmS3suTX
Pgsc8q3r0Z0da7HAyiRJmTg+4od7nPOJKC6fo+JwEFDtSp1UbRCBZDx/xdRf
4Xd6/HKFHY+SvC6sWnZ4/3AO79liRcrmnmGyJnQa+iLsJI0wq5LiuawJgXBk
MNT1VyUXr1krHWK+ju6ucTIFMoMBSaVHHfY5DhvSa05fuejJxQn5GLZbZoD2
2V+VnR3wV6rElHfMKoec2uMu3amEA9bLsLYbimFOmLNjvbLDuxPDRkdnTh2b
Hz1CgJ9kEU7LOGNe42IpRqnESc0UsQK+hQ8Zty6A/jKxjwZVsxX34W3ZctYl
v3wsZpjpJshAcdoxbN4z34hi2ilSPYYrh4B1J3YyzOW8sBXh1oOsQU6wXhO3
ssxqkl6KsiN2KgN5lL80YeLgEnp22cVph1gbWdaFGu/FjvytPeejFd2tuvhe
W/mgpwLHd/fdH1zwvnfO9v55y89uer685//kqv7TG4Y/vZf83Vvx796I/v7N
6P/4pPgP78R/9STw2X3f+SYt45zuVXlry8Z0kimXnhZwnvHYYK2K4PkLgZcf
1R++VCqXWFeuBhpNrj+MaHT4t+7E8mVGOk3t99WpBCPkpySiHB7nJJYAZctS
mwOc8EkmAzZyGjpzEuKw4C4n22jErG/aE1lyf02aLCyprcfKLdrGntbimNAY
TiaS2HZHlATcVWRYDaObQ/XWUNmrciKuGY3ocM7BKIXc+pMh+1jMPZUJIKrA
SmWZgGoqPnxUN28XnMHOji6MQAtnIALsGSHtjFk+l/Diu0XuSp3fzFBB/AyZ
pp3KUT4Owk9CjHlICvSR9qySCAnQkJn7TD2IX85Qiz7YRoXVzZLKocNLuo04
GbjltapoUOB3U4JOUrhckKxWxPUkI+7CujRwnXAOMwFR509qaMicXbqRt66k
FMtJ7nNN+fk8815P/nhVe6shfHvPeb8rv9OSPVpWf/S875Mrvh9dcX92y/t3
d7w/umr6yU3jH95KfPd6/NdPo4cLA97P/+nNxG+eRj+7F9wvU6wiSMaClKIz
dgvGakKBFnCaENWcIBmnD/r6jTXrjeuZ554Lr6wYDKbZTk9jdyKfPO2fOwgl
4uxqWZVOCuJhbjTMojGfEcjGszkNhTKOXRqXSahjI5BETNTpKOmMyu0jqvWT
OweO5Q01Xw5tnjNdesF/52Hy5t3I/cfpqzeDW9u6LmD7gbxaZgF+U0uOKISQ
yzCR8KFiLoTHOJYIzKWCszHPdNQ5VQiiuxlGK0bJWFE++ZSAMEuGHcfPQlz8
CZ1o0qWdi7mQxRhhucbrldmlODHhXvTqZyVUiIqA+FhIgoMMzKN6xjNKMuRT
jABZWStyygHk2bZ4tcxuJcm1OAGYw/WaaLUibKdZvaxoOS9fqxxG8n5REnPi
jeJZFXuahTxFmTvJXRz3SOl1n6LhEy/HJbdWbJerfOABHq1rgA34yc34K+va
l5ZVDwbydw+sn173f3rN+9Hzlh9fs/3khvWzm5ZfPPT98nHom5fDv3zg/d2T
6J9eT/71h/VfPS1sZ8lpO0zOOoKYhqbGICQMohGOiFinlcJxr4sYT/BKBXml
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
Mti4deusVU3uy3yw/D8sHjKP
    "], {{0, 92}, {137, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{137, 92},
  PlotRange->{{0, 137}, {0, 92}}]], "Output",
 CellChangeTimes->{3.436370096046875*^9, 3.436371352296875*^9, 
  3.436371426703125*^9}]
}, Open  ]],

Cell[TextData[{
 "You also use ",
 StyleBox["LoadNETType", "Literal"],
 " to load a class that has a static method you want to call. Static methods \
are then accessible as normal Mathematica functions."
}], "Text",
 CellChangeTimes->{{3.436372504234375*^9, 3.43637256190625*^9}, {
  3.436372658203125*^9, 3.43637266571875*^9}, {3.436372699296875*^9, 
  3.436372767140625*^9}, {3.43646122871875*^9, 3.43646123028125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<NETLink`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InstallNET", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LoadNETType", "[", "\"\<System.Diagnostics.Stopwatch\>\"", "]"}], 
  ";"}], "\n", 
 RowBox[{"System`Diagnostics`Stopwatch`GetTimestamp", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.43646022975*^9, 3.436460333984375*^9}, 
   3.43646040421875*^9, {3.43646048403125*^9, 3.436460544703125*^9}, 
   3.436460595625*^9, 3.43646063490625*^9, {3.436460706*^9, 
   3.436460706625*^9}}],

Cell[BoxData["5674487004"], "Output",
 CellChangeTimes->{3.436460707578125*^9}]
}, Open  ]],

Cell[TextData[{
 "The default value for the ",
 StyleBox["LoadNETType", "Literal"],
 " option ",
 StyleBox["StaticsVisible", "Literal"],
 " is ",
 StyleBox["False", "Literal"],
 ", but you can set it to ",
 StyleBox["True", "Literal"],
 " to avoid having to specify the full namespace path to invoke the function. \
You should use this feature with caution since it can lead to name \
conflicts."
}], "Text",
 CellChangeTimes->{{3.436521609640625*^9, 3.4365216160625*^9}, {
   3.436521811078125*^9, 3.436521935234375*^9}, 3.4375684709375*^9, {
   3.4740451959672194`*^9, 3.474045263956159*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "An extensive tutorial on ",
 StyleBox["NETLink", "Literal"],
 " can be found in the Mathematica documentation at ",
 StyleBox["NETLink/tutorial/Overview", "URL"],
 "."
}], "Text",
 CellChangeTimes->{3.436971949375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Using the Mathematica Kernel",
 " ",
 "from a .NET Application"
}], "Heading1", "TopOfPage",
 CellChangeTimes->{{3.435749266546875*^9, 3.435749331625*^9}, 
   3.474049179552515*^9, 3.4855294957836123`*^9},
 CellTags->"UsingMathematicaKernelFrom.NETApplication"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to leverage the advanced Mathematica algorithms from within a .NET \
application.\
\>", "Text",
 CellChangeTimes->{{3.435749389375*^9, 3.435749434890625*^9}, {
  3.474045310505809*^9, 3.474045310700199*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use the classes in the ",
 StyleBox["Wolfram.NETLink.dll", "Literal"],
 " from your .NET application. This recipe will use C#, but the Mathematica \
kernel is accessible from any .NET language.",
 " ",
 "The simplest way to interact wi",
 StyleBox["th Mathematica is through passing strings of Mathe",
  FontTracking->"Extended"],
 "matica code using an instance of ",
 StyleBox["IKernelLink", "Literal"],
 ". You acquire an instance via ",
 StyleBox["MathLinkFactory.CreateKernelLink", "Literal"],
 ". ",
 StyleBox["IKernelLink", "Literal"],
 " has several methods for evaluating Mathematica code, but the function ",
 StyleBox["EvaluateToOutputForm", "Literal"],
 " is one of the most convenient."
}], "Text",
 CellChangeTimes->{{3.436380320484375*^9, 3.436380322671875*^9}, {
   3.436380547546875*^9, 3.43638060359375*^9}, {3.436449670875*^9, 
   3.43644976209375*^9}, {3.4364670915*^9, 3.436467119421875*^9}, {
   3.43646718634375*^9, 3.43646727734375*^9}, {3.436467382671875*^9, 
   3.436467419546875*^9}, 3.436467909625*^9, {3.43756847728125*^9, 
   3.437568495734375*^9}, {3.4740453264138613`*^9, 3.4740453612282343`*^9}, 
   3.474050519132978*^9, 3.4742190722285748`*^9, 3.485529496592895*^9}],

Cell["\<\
using System;
using Wolfram.NETLink;

namespace TestNetLink1
{
     public class TestNetLink
     {
\t    public static void Main (String[] args)
\t    {
     \t    //Launch the Mathematica Kernel
     \t    IKernelLink ml = MathLinkFactory.CreateKernelLink ();
     \t    //Discard the initial response kernel will send when launched.
     \t    ml.WaitAndDiscardAnswer ();
     \t    //Solve a differential equation and evaluate at the value 2
             string expr = \"s = NDSolve[{y''[x]+Sin[y[x]] y[x] == 0,
\t    \t\ty[0] == 1,\" +
                 \"y'[0] == 0},y,{x, 0,30}]; y[2] /. s\";
     \t    string result = ml.EvaluateToOutputForm(expr, 0);
    \t\t    Console.WriteLine (\"Result = \" + result);
    \t    }
  \t}
}\
\>", "Code",
 CellChangeTimes->{{3.436450380046875*^9, 3.43645057828125*^9}, {
   3.436451082171875*^9, 3.4364510916875*^9}, {3.436452538734375*^9, 
   3.436452598078125*^9}, {3.436452628484375*^9, 3.43645262934375*^9}, {
   3.436452686828125*^9, 3.43645277353125*^9}, {3.43645295890625*^9, 
   3.436452965296875*^9}, {3.43646554075*^9, 3.436465543515625*^9}, 
   3.436465658625*^9, {3.476460382651218*^9, 3.476460389424252*^9}, {
   3.476800728278306*^9, 3.476800731239781*^9}, {3.476800844644853*^9, 
   3.476800846291677*^9}, 3.476800896069119*^9, {3.476800942579446*^9, 
   3.4768009743851223`*^9}},
 CellTags->"language=C#"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "TopOfPage"],

Cell["\<\
Receiving numerical data back in string form is fine when you just want to \
display the result of a computation, but if you want to feed the results \
Mathematica returns into further computations, it is less than ideal. There \
are other ways to read the data returned by evaluation expressions, but these \
involve being cognizant of the types you expect back. \
\>", "Text",
 CellChangeTimes->{{3.436478526765625*^9, 3.43647863315625*^9}, {
  3.43647874584375*^9, 3.43647885015625*^9}, {3.43648217884375*^9, 
  3.436482286328125*^9}, {3.474045398155363*^9, 3.474045435445828*^9}}],

Cell["\<\
using System;
using Wolfram.NETLink;

namespace TestNetLink2
{
     public class TestNetLink2
     {
         public static void Main(String[] args)
         {
             //Launch the Mathematica Kernel
             IKernelLink ml = MathLinkFactory.CreateKernelLink();
             //Discard the initial response kernel will send when launched.
             ml.WaitAndDiscardAnswer();
             //Solve a differential equation and evaluate at the value 2.
             string expr = \"s = NDSolve[{y''[x]+Sin[y[x]] y[x] == 0, y[0] ==
\t\t\t\t1,\" +
                 \"y'[0] == 0},y,{x, 0,30}]; y[2] /. s\";
             //Evaluate expression. Notice this does not return anything.
             ml.Evaluate(expr);
             //Wait for results to be ready.
             ml.WaitForAnswer();
             //Read the result being sure to use the method that retrieves an
  \t\t\t\tappropriate
             //type. In this case, we expect a list of doubles but MathLink
\t\t\t\tconverts
             //these into arrays. Here you get the first element of the array
  \t\t\t\tand can then
             //perform additional computations such as adding 10.
             double result = ml.GetDoubleArray()[0] + 10.0;
             Console.WriteLine(\"Result = \" + result);
         }
     }
}\
\>", "Code",
 CellChangeTimes->{{3.43648232359375*^9, 3.436482619453125*^9}, {
  3.474219356195943*^9, 3.474219493020589*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["IKernelLink", "Literal"],
 " interface has a variety of methods for retrieving typed results. These \
include ",
 StyleBox["GetBoolean", "Literal"],
 ", ",
 StyleBox["GetDouble", "Literal"],
 ", ",
 StyleBox["GetInteger", "Literal"],
 ", ",
 StyleBox["GetString", "Literal"],
 ", ",
 StyleBox["GetDecimal", "Literal"],
 ", ",
 StyleBox["GetDouble\[DiscretionaryHyphen]Array", "Literal"],
 ", and quite a few others. Refer to the ",
 StyleBox["NETLink", "Literal"],
 " documentation for the full set of methods."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.43648267934375*^9, 3.43648273865625*^9}, {
  3.436482904921875*^9, 3.4364829444375*^9}, {3.43648299021875*^9, 
  3.436483034859375*^9}, {3.4740454595536947`*^9, 3.4740454663346643`*^9}, {
  3.474049908535131*^9, 3.4740499286502867`*^9}}],

Cell[TextData[{
 "In addition to ",
 StyleBox["IKernelLink", "Literal"],
 ", there is a very high-level interface to Mathematica implemented as a \
class called ",
 StyleBox["MathKernel", "Literal"],
 " that is ideal for creating a custom frontend to Mathematica. ",
 StyleBox["MathKernel", "Literal"],
 " derives from ",
 StyleBox["System.ComponentModel.Component", "Literal"],
 " and follows the conventions of .NET components. A nice example of using ",
 StyleBox["MathKernel", "Literal"],
 " can be found in the Mathematica installation directory (",
 StyleBox["$InstallationDirectory", "Literal"],
 ") under ",
 StyleBox["SystemFiles/Links/NETLink/Examples/Part2/MathKernelApp", 
  "Emphasis"],
 "."
}], "Text",
 CellChangeTimes->{{3.436484753140625*^9, 3.436484870875*^9}, {
  3.43648505190625*^9, 3.436485092140625*^9}, {3.436485348453125*^9, 
  3.436485369609375*^9}, {3.43648544615625*^9, 3.436485515*^9}, {
  3.436485603484375*^9, 3.43648565659375*^9}, {3.43648571259375*^9, 
  3.43648577365625*^9}, {3.437568499078125*^9, 3.437568505796875*^9}, {
  3.4740454778617764`*^9, 3.474045534022478*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "You can find more information on interacting with the kernel from .NET \
languages at ",
 StyleBox["NETLink/tutorial/CallingMathematicaFromNET",
  FontSlant->"Italic"],
 ". There are examples there using both C# and Visual Basic."
}], "Text",
 CellChangeTimes->{{3.436971704765625*^9, 3.4369718015*^9}, {
   3.436971832140625*^9, 3.43697184546875*^9}, {3.43697189471875*^9, 
   3.436972034171875*^9}, 3.474045551676155*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Querying a Database "
}], "Heading1",
 CellChangeTimes->{
  3.43402984590625*^9, {3.434307097015625*^9, 3.434307104734375*^9}, {
   3.43430717778125*^9, 3.434307179953125*^9}},
 CellTags->"InterfacingWithDatabaseSystems"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to compute with data retrieved from an external database.\
\>", "Text",
 CellChangeTimes->{{3.434189319140625*^9, 3.4341893786875*^9}, 
   3.43430720965625*^9, 3.43756859665625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "The examples in Recipes ",
 ButtonBox["17.9",
  BaseStyle->"Hyperlink",
  ButtonData->"InterfacingWithDatabaseSystems"],
 " and ",
 ButtonBox["17.10",
  BaseStyle->"Hyperlink",
  ButtonData->"IntrospectionOfDatabases"],
 " assume the existence of certain databases. If you don\[CloseCurlyQuote]t \
have access to a database system where you can set up these databases, the \
examples will obviously not work. If you have a database system or know how \
to install one, you can get files to initialize the database for these \
examples from the book\[CloseCurlyQuote]s website. Naturally, these examples \
are only for illustrating techniques that you can employ on real databases \
you wish to interface to Mathematica."
}], "NoteWarning",
 CellChangeTimes->{
  3.4342260253125*^9, {3.434226061046875*^9, 3.4342261140625*^9}, {
   3.474045735889263*^9, 3.474045739690261*^9}, {3.474045772229659*^9, 
   3.474045846331036*^9}, 3.474387119758322*^9}],

Cell["\<\
Mathematica supports several flavors of database connectivity, including \
ODBC, JDBC, MySQL, and HSQLDB (Hyper Structured Query Language Database).\
\>", "NoteWarningEnd",
 CellChangeTimes->{
  3.4342260253125*^9, {3.434226061046875*^9, 3.434226095765625*^9}, 
   3.43756860096875*^9, {3.474045857708729*^9, 3.474045899370311*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{3.4342260253125*^9, 3.434226061046875*^9}],

Cell[TextData[{
 "Here I open a connection to a ",
 StyleBox["SupplierParts", "Literal"],
 " database previously set up on my system and then query all rows of the ",
 StyleBox["part", "Literal"],
 " table. ",
 StyleBox["SQLSelect", "Literal"],
 " is the best way to retrieve all data from a single table. See the \
discussion for variations and alternatives."
}], "Text",
 CellChangeTimes->{{3.43422638696875*^9, 3.434226483921875*^9}, {
   3.43430767440625*^9, 3.4343077493125*^9}, 3.437568607390625*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conn", "=", 
   RowBox[{"OpenSQLConnection", "[", "\"\<SupplierParts\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"SQLSelect", "[", 
  RowBox[{"conn", ",", " ", "\"\<part\>\""}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.4342260253125*^9, {3.434226061046875*^9, 3.4342260825625*^9}, {
   3.434226182453125*^9, 3.434226227625*^9}, {3.434226298109375*^9, 
   3.4342263284375*^9}, 3.43423143746875*^9, 3.4764605417548723`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"p1\"\>", ",", "\<\"Nut\"\>", ",", "\<\"Red\"\>", ",", "12.`",
      ",", "\<\"London\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p2\"\>", ",", "\<\"Bolt\"\>", ",", "\<\"Green\"\>", ",", 
     "17.`", ",", "\<\"Paris\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p3\"\>", ",", "\<\"Screw\"\>", ",", "\<\"Blue\"\>", ",", 
     "17.`", ",", "\<\"Rome\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p4\"\>", ",", "\<\"Screw\"\>", ",", "\<\"Red\"\>", ",", 
     "14.`", ",", "\<\"London\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p5\"\>", ",", "\<\"Cam\"\>", ",", "\<\"Blue\"\>", ",", 
     "12.`", ",", "\<\"Paris\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"p6\"\>", ",", "\<\"Cog\"\>", ",", "\<\"Red\"\>", ",", "19.`",
      ",", "\<\"London\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4342263194375*^9, 3.4342263363125*^9}, 
   3.434231495265625*^9, 3.4342715688125*^9, 3.4352461350625*^9, 
   3.4352470835*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 StyleBox["SQLSelect", "Literal"],
 " provides a stylized means to perform simple database queries without \
knowing SQL. Below are three increasingly complex queries you can do with ",
 StyleBox["SQLSelect", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.43422650203125*^9, 3.434226514046875*^9}, {
  3.434226612828125*^9, 3.434226653984375*^9}, {3.434232250953125*^9, 
  3.434232284453125*^9}, {3.474045908713951*^9, 3.474045908962543*^9}, {
  3.4740492235464573`*^9, 3.474049228177083*^9}, {3.485529497495714*^9, 
  3.485529502007503*^9}, {3.485529559158338*^9, 3.485529559804883*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Restrict", " ", "to", " ", "specific", " ", 
    RowBox[{"columns", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SQLSelect", "[", 
   RowBox[{"conn", ",", "\"\<supplier\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<name\>\"", ",", "\"\<city\>\""}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.43423135446875*^9, 3.434231361296875*^9}, {
   3.434231400125*^9, 3.434231405046875*^9}, {3.4342314534375*^9, 
   3.434231485609375*^9}, {3.43423230090625*^9, 3.434232317484375*^9}, 
   3.4740459164557*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Smith\"\>", ",", "\<\"London\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Jones\"\>", ",", "\<\"Paris\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Blake\"\>", ",", "\<\"Paris\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Clark\"\>", ",", "\<\"London\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Adams\"\>", ",", "\<\"Athens\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.434231499796875*^9, 3.43524613534375*^9, 
  3.435247083734375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Specify", " ", "selection", " ", 
    RowBox[{"criteria", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SQLSelect", "[", 
   RowBox[{"conn", ",", "\"\<supplier\>\"", ",", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<name\>\"", ",", "\"\<city\>\""}], "}"}], ",", 
    RowBox[{
     RowBox[{"SQLColumn", "[", "\"\<id\>\"", "]"}], "\[Equal]", 
     "\"\<s1\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4342315545625*^9, 3.4342315848125*^9}, {
   3.43423162771875*^9, 3.434231630921875*^9}, {3.4342316870625*^9, 
   3.434231691734375*^9}, {3.434232322671875*^9, 3.434232340359375*^9}, 
   3.474045923560584*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"Smith\"\>", ",", "\<\"London\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.434231589109375*^9, 3.43423163284375*^9, 
  3.43423169315625*^9, 3.435246135390625*^9, 3.435247083796875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Join", " ", "data", " ", "from", " ", "multiple", " ", 
     RowBox[{"tables", ".", " ", "Here"}], " ", "I", " ", "show", " ", 
     "collocated", " ", "suppliers", " ", "and", " ", "parts"}], ",", " ", 
    RowBox[{"and", " ", "specify", " ", "a", " ", 
     RowBox[{"sort", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SQLSelect", "[", 
    RowBox[{"conn", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<supplier\>\"", ",", "\"\<part\>\""}], "}"}], ",", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<supplier\>\"", ",", "\"\<id\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<part\>\"", ",", "\"\<id\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<supplier\>\"", ",", "\"\<city\>\""}], "}"}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"SQLColumn", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<supplier\>\"", ",", "\"\<city\>\""}], "}"}], "]"}], 
      "\[Equal]", 
      RowBox[{"SQLColumn", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<part\>\"", ",", "\"\<city\>\""}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<SortingColumns\>\"", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"SQLColumn", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<supplier\>\"", ",", "\"\<id\>\""}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "                                       ", 
        RowBox[{"SQLColumn", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<part\>\"", ",", "\"\<id\>\""}], "}"}], "]"}]}], 
       "}"}]}]}], "]"}], "//", "TableForm"}]}]], "Input",
 CellChangeTimes->{{3.43423183478125*^9, 3.434231845765625*^9}, {
   3.434231894609375*^9, 3.434232025875*^9}, 3.434232078734375*^9, {
   3.434232115671875*^9, 3.434232208140625*^9}, {3.434232354875*^9, 
   3.43423247259375*^9}, {3.4740459345434723`*^9, 3.474045940103644*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"s1\"\>", "\<\"p1\"\>", "\<\"London\"\>"},
    {"\<\"s1\"\>", "\<\"p4\"\>", "\<\"London\"\>"},
    {"\<\"s1\"\>", "\<\"p6\"\>", "\<\"London\"\>"},
    {"\<\"s2\"\>", "\<\"p2\"\>", "\<\"Paris\"\>"},
    {"\<\"s2\"\>", "\<\"p5\"\>", "\<\"Paris\"\>"},
    {"\<\"s3\"\>", "\<\"p2\"\>", "\<\"Paris\"\>"},
    {"\<\"s3\"\>", "\<\"p5\"\>", "\<\"Paris\"\>"},
    {"\<\"s4\"\>", "\<\"p1\"\>", "\<\"London\"\>"},
    {"\<\"s4\"\>", "\<\"p4\"\>", "\<\"London\"\>"},
    {"\<\"s4\"\>", "\<\"p6\"\>", "\<\"London\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.434232018140625*^9, 3.43423202628125*^9}, 
   3.434232173609375*^9, 3.43423220921875*^9, 3.435246135484375*^9, 
   3.435247083875*^9}]
}, Open  ]],

Cell[TextData[{
 "Of course, the conventions used by ",
 StyleBox["SQLSelect", "Literal"],
 " create a very thin veneer over SQL, so if you plan to do quite a bit of \
database work, you will benefit from learning and using SQL directly via ",
 StyleBox["SQLExecute", "Literal"],
 "."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.434231448359375*^9, 3.43423145021875*^9}, {
   3.434232498734375*^9, 3.434232612015625*^9}, {3.43427146346875*^9, 
   3.434271478546875*^9}, {3.43430701478125*^9, 3.4343070158125*^9}, 
   3.4375686289375*^9, {3.474045956740204*^9, 3.474045990079534*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SQLExecute", "[", 
   RowBox[{
   "conn", ",", " ", "\[IndentingNewLine]", 
    "\"\<SELECT supplier.id sid, part.id pid, supplier.city city\n  FROM \
supplier, part\n  WHERE supplier.city = part.city\n  ORDER BY sid,pid\>\"", 
    ",", 
    RowBox[{"\"\<ShowColumnHeadings\>\"", "\[Rule]", "True"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.434232618265625*^9, 3.434232797515625*^9}, {
  3.434232857765625*^9, 3.434232963265625*^9}, {3.434271519125*^9, 
  3.434271545*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"sid\"\>", "\<\"pid\"\>", "\<\"city\"\>"},
    {"\<\"s1\"\>", "\<\"p1\"\>", "\<\"London\"\>"},
    {"\<\"s1\"\>", "\<\"p4\"\>", "\<\"London\"\>"},
    {"\<\"s1\"\>", "\<\"p6\"\>", "\<\"London\"\>"},
    {"\<\"s2\"\>", "\<\"p2\"\>", "\<\"Paris\"\>"},
    {"\<\"s2\"\>", "\<\"p5\"\>", "\<\"Paris\"\>"},
    {"\<\"s3\"\>", "\<\"p2\"\>", "\<\"Paris\"\>"},
    {"\<\"s3\"\>", "\<\"p5\"\>", "\<\"Paris\"\>"},
    {"\<\"s4\"\>", "\<\"p1\"\>", "\<\"London\"\>"},
    {"\<\"s4\"\>", "\<\"p4\"\>", "\<\"London\"\>"},
    {"\<\"s4\"\>", "\<\"p6\"\>", "\<\"London\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.4342327838125*^9, 3.43423279815625*^9}, {
   3.4342328671875*^9, 3.434232963734375*^9}, {3.434271547390625*^9, 
   3.43427157575*^9}, 3.435246135546875*^9, 3.4352470839375*^9}]
}, Open  ]],

Cell[TextData[{
 "Nevertheless, using straight SQL can sometimes be a pain when you need to \
build the query from data stored in variables. ",
 StyleBox["SQLArgument", "Literal"],
 ", along with argument placeholders (e.g., ",
 StyleBox["`1`", "Literal"],
 ", ",
 StyleBox["`2`", "Literal"],
 "), is the recommended solution. You can use ",
 StyleBox["SQLArgument", "Literal"],
 " directly with values, but if you are parameterizing a query on column or \
table names, you must also use",
 " ",
 StyleBox["SQLColumn", "Literal"],
 " and ",
 StyleBox["SQLTable", "Literal"],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.43427170259375*^9, 3.434271821078125*^9}, {
   3.434271892640625*^9, 3.4342720310625*^9}, {3.434272568609375*^9, 
   3.434272639484375*^9}, {3.434272759578125*^9, 3.4342728075625*^9}, {
   3.434307034984375*^9, 3.434307071296875*^9}, {3.43756864059375*^9, 
   3.437568642828125*^9}, {3.4740460059377823`*^9, 3.4740460555962667`*^9}, 
   3.474046870923791*^9, 3.474219682387374*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"table", "=", "\"\<supplier\>\""}], ";", 
  RowBox[{"id", "=", "\"\<s2\>\""}], ";", 
  RowBox[{"col", "=", "\"\<city\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SQLExecute", "[", 
  RowBox[{
  "conn", ",", " ", "\[IndentingNewLine]", 
   "\"\<SELECT `1` FROM `2` WHERE id = `3`\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"SQLArgument", "[", 
      RowBox[{"SQLColumn", "[", "col", "]"}], "]"}], ",", 
     RowBox[{"SQLArgument", "[", 
      RowBox[{"SQLTable", "[", "table", "]"}], "]"}], ",", 
     RowBox[{"SQLArgument", "[", "id", "]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4342720708125*^9, 3.43427219271875*^9}, {
  3.4342722375625*^9, 3.434272277625*^9}, {3.434272485375*^9, 
  3.434272554265625*^9}, {3.43427264921875*^9, 3.43427265721875*^9}, {
  3.434272701265625*^9, 3.43427274359375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "\<\"Paris\"\>", "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4342722*^9, 3.4342722419375*^9, 3.43427231753125*^9, 3.434272507125*^9, {
   3.434272540640625*^9, 3.434272555484375*^9}, 3.434272747671875*^9, 
   3.4352461355625*^9, 3.43524708396875*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CloseSQLConnection", "[", "conn", "]"}], ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "Detailed discussion of query commands can be found in ",
 StyleBox["DatabaseLink/tutorial/", "URL"],
 " ",
 StyleBox["SelectingData", "URL"],
 " in the Mathematica documentation."
}], "Text",
 CellChangeTimes->{{3.4369708595*^9, 3.436970878296875*^9}, {
   3.43697094171875*^9, 3.436970947234375*^9}, 3.474049977987226*^9, 
   3.485529502935562*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Updating a Database"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{{3.4343071630625*^9, 3.43430719340625*^9}},
 CellTags->"Updating a Database"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["You want to store results of computations to a database.", "Text",
 CellChangeTimes->{{3.43430721909375*^9, 3.434307246953125*^9}, 
   3.4375686558125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Use ",
 StyleBox["SQLInsert", "Literal"],
 " to add new records and ",
 StyleBox["SQLUpdate", "Literal"],
 " to modify existing records."
}], "Text",
 CellChangeTimes->{{3.434307848796875*^9, 3.434307878296875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conn", "=", 
   RowBox[{"OpenSQLConnection", "[", "\"\<MySQLTest\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.434308642140625*^9, 3.434308694421875*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SQLInsert", "[", 
   RowBox[{"conn", ",", "\"\<data1\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<x1\>\"", ",", "\"\<x2\>\"", ",", "\"\<x3\>\""}], "}"}], ",",
     " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Prime", "[", "i", "]"}], ",", 
        RowBox[{"RandomReal", "[", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "100"}], "}"}]}], "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.434308739359375*^9, 3.434308744953125*^9}, {
   3.434308832765625*^9, 3.434308956578125*^9}, {3.4343090260625*^9, 
   3.4343090464375*^9}, 3.4343091300625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLUpdate", "[", 
  RowBox[{"conn", ",", "\"\<data1\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<x1\>\"", ",", " ", "\"\<x2\>\"", ",", "\"\<x3\>\""}], "}"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"0.0", ",", "1.0", ",", "2.0"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"SQLColumn", "[", "\"\<data1.key\>\"", "]"}], "==", "4"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4343092013125*^9, 3.434309210140625*^9}, {
  3.434309276625*^9, 3.43430935046875*^9}, {3.434309397703125*^9, 
  3.434309480484375*^9}, {3.43430953221875*^9, 3.43430960546875*^9}, {
  3.434309651828125*^9, 3.434309685125*^9}, {3.434309734921875*^9, 
  3.43430976615625*^9}, {3.434309826078125*^9, 3.43430986146875*^9}, {
  3.4343099041875*^9, 3.43430995884375*^9}, {3.434310146921875*^9, 
  3.434310152140625*^9}, {3.434310298578125*^9, 3.434310323546875*^9}, {
  3.4343103735625*^9, 3.43431037503125*^9}, {3.43431041215625*^9, 
  3.434310421625*^9}, {3.43432056540625*^9, 3.434320567921875*^9}, {
  3.434320867515625*^9, 3.43432088459375*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.434309921328125*^9, 3.434309960234375*^9}, {
   3.434310310515625*^9, 3.434310324109375*^9}, 3.434310375984375*^9, {
   3.434310415484375*^9, 3.43431042271875*^9}, 3.434320569015625*^9, 
   3.4343208865*^9, 3.43524614346875*^9, 3.4352470925625*^9}]
}, Open  ]],

Cell[TextData[{
 "Use ",
 StyleBox["SQLDelete", "Literal"],
 " to remove records."
}], "Text",
 CellChangeTimes->{{3.434320928515625*^9, 3.43432094271875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLDelete", "[", 
  RowBox[{"conn", ",", "\"\<data1\>\"", ",", 
   RowBox[{
    RowBox[{"SQLColumn", "[", "\"\<data1.key\>\"", "]"}], "\[Equal]", 
    "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.434321167640625*^9, 3.434321223609375*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.43432122784375*^9, 3.435246143515625*^9, 
  3.43524709259375*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "If you need to update multiple tables in an all-or-nothing manner and your \
database management system supports transactions, you should use ",
 StyleBox["SQLBeginTransaction", "Literal"],
 " and ",
 StyleBox["SQLCommitTransaction", "Literal"],
 " to bracket the updates. If an error occurs you can use",
 " ",
 StyleBox["SQLRollbackTransaction", "Literal"],
 ", which rolls back to the beginning of the transaction or to a named save \
point (which is set using ",
 StyleBox["SQLSetSavepoint", "Literal"],
 ")."
}], "Text",
 CellChangeTimes->{{3.434359126484375*^9, 3.434359229890625*^9}, {
   3.434359281265625*^9, 3.43435939034375*^9}, {3.434403995375*^9, 
   3.43440400903125*^9}, {3.434404055375*^9, 3.434404124046875*^9}, 
   3.43756866925*^9, {3.474046120866177*^9, 3.4740462104609623`*^9}, {
   3.474050009269912*^9, 3.4740500394203157`*^9}, {3.4855295037046633`*^9, 
   3.4855295044324427`*^9}}],

Cell["\<\
Inserting, updating, and deleting are the most common operations for changing \
a database, but Mathematica also gives you the ability to create and drop \
tables. \
\>", "Text",
 CellChangeTimes->{{3.434359126484375*^9, 3.434359229890625*^9}, {
   3.434359281265625*^9, 3.43435939034375*^9}, 3.434403995375*^9, {
   3.4740462352680807`*^9, 3.474046247325863*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLExecute", "[", 
  RowBox[{
  "conn", ",", 
   "\"\<UPDATE data1 SET x1=0,x2=1,x3=2 WHERE data1.key=104\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.43431043971875*^9, 3.43431045015625*^9}, {
  3.43432022428125*^9, 3.4343203016875*^9}, {3.434320338546875*^9, 
  3.434320340359375*^9}, {3.434320494875*^9, 3.4343205545*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.4343203270625*^9, 3.434320349671875*^9}, {
   3.43432051578125*^9, 3.434320555453125*^9}, 3.434320630015625*^9, 
   3.43524614359375*^9, 3.43524709265625*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 StyleBox["Detailed discussion of transactions",
  FontTracking->"SemiCondensed"],
 " can be found in ",
 StyleBox["DatabaseLink/tutorial/Transactions", "URL"],
 " in the Mathematica documentation."
}], "Text",
 CellChangeTimes->{{3.434404301359375*^9, 3.4344043244375*^9}, {
  3.4344043651875*^9, 3.434404377296875*^9}, {3.4369710430625*^9, 
  3.436971047828125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introspection of Databases"
}], "Heading1", "TopOfPage",
 CellChangeTimes->{{3.43422116840625*^9, 3.434221192609375*^9}},
 CellTags->"IntrospectionOfDatabases"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to query a database to find out what entities (tables, columns, \
etc.) are available.\
\>", "Text",
 CellChangeTimes->{{3.434221196828125*^9, 3.43422120115625*^9}, {
   3.434221860828125*^9, 3.434221889734375*^9}, {3.434222022875*^9, 
   3.434222028078125*^9}, {3.434222084546875*^9, 3.43422209346875*^9}, {
   3.434222132234375*^9, 3.434222143421875*^9}, 3.437568671953125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell["\<\
Mathematica contains a variety of methods that return information about the \
data sources available, their tables, and the schema of those tables.\
\>", "Text",
 CellChangeTimes->{{3.434222792*^9, 3.43422281140625*^9}, {
   3.436964910984375*^9, 3.436964928453125*^9}, {3.436966127421875*^9, 
   3.436966186890625*^9}, 3.474046277762309*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.43422277578125*^9, 3.434222777078125*^9}, 
   3.436966256328125*^9}],

Cell[TextData[{
 "The command ",
 StyleBox["DataSourceNames[]", "Literal"],
 " lists all data sources known to the Mathematica instance."
}], "Text",
 CellChangeTimes->{{3.4369662815625*^9, 3.436966305390625*^9}, 
   3.437568682671875*^9, {3.474046290574986*^9, 3.4740463147827168`*^9}}],

Cell[BoxData[
 RowBox[{"DataSourceNames", "[", "]"}]], "Input",
 CellChangeTimes->{{3.43422277578125*^9, 3.434222777078125*^9}, 
   3.436966256328125*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"demo\"\>", ",", "\<\"graphs\"\>", ",", "\<\"publisher\"\>", 
   ",", "\<\"MySQLMeta\"\>", ",", "\<\"MySQLTest\"\>", 
   ",", "\<\"SupplierParts\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.434221958828125*^9, 3.43422480215625*^9, 
  3.434225963140625*^9, 3.43524614365625*^9, 3.43524709271875*^9, 
  3.4369663978125*^9}],

Cell["\<\
Given a connection to one of these sources, list all the tables.\
\>", "Text",
 CellChangeTimes->{{3.436966353265625*^9, 3.43696638575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"conn", "=", 
   RowBox[{"OpenSQLConnection", "[", "\"\<SupplierParts\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"SQLTables", "[", "conn", "]"}]}], "Input",
 CellChangeTimes->{{3.43696634159375*^9, 3.4369663431875*^9}, 
   3.4369663910625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"inventory\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}], ",", 
   
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"part\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}], ",", 
   
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"supplier\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.434221358859375*^9, 3.435246143921875*^9, 
  3.435247092953125*^9, 3.436966424203125*^9}]
}, Open  ]],

Cell["\<\
Given a connection, list all columns with their associated tables.\
\>", "Text",
 CellChangeTimes->{{3.436966960859375*^9, 3.436966999328125*^9}, 
   3.4740463452611027`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SQLColumnNames", "[", "conn", "]"}], " ", "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.43696689596875*^9, 3.436966901359375*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"inventory\"\>", "\<\"sid\"\>"},
    {"\<\"inventory\"\>", "\<\"pid\"\>"},
    {"\<\"inventory\"\>", "\<\"qty\"\>"},
    {"\<\"part\"\>", "\<\"id\"\>"},
    {"\<\"part\"\>", "\<\"name\"\>"},
    {"\<\"part\"\>", "\<\"color\"\>"},
    {"\<\"part\"\>", "\<\"weight\"\>"},
    {"\<\"part\"\>", "\<\"city\"\>"},
    {"\<\"supplier\"\>", "\<\"id\"\>"},
    {"\<\"supplier\"\>", "\<\"name\"\>"},
    {"\<\"supplier\"\>", "\<\"status\"\>"},
    {"\<\"supplier\"\>", "\<\"city\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.43696690221875*^9}]
}, Open  ]],

Cell["\<\
You can also find out all the data types supported by your particular \
database.\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.436967109875*^9, 3.436967158125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLDataTypeNames", "[", "conn", "]"}]], "Input",
 CellChangeTimes->{{3.43696709375*^9, 3.436967102765625*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"BIT\"\>", ",", "\<\"BOOL\"\>", ",", "\<\"TINYINT\"\>", 
   ",", "\<\"TINYINT UNSIGNED\"\>", ",", "\<\"BIGINT\"\>", 
   ",", "\<\"BIGINT UNSIGNED\"\>", ",", "\<\"LONG VARBINARY\"\>", 
   ",", "\<\"MEDIUMBLOB\"\>", ",", "\<\"LONGBLOB\"\>", ",", "\<\"BLOB\"\>", 
   ",", "\<\"TINYBLOB\"\>", ",", "\<\"VARBINARY\"\>", ",", "\<\"BINARY\"\>", 
   ",", "\<\"LONG VARCHAR\"\>", ",", "\<\"MEDIUMTEXT\"\>", 
   ",", "\<\"LONGTEXT\"\>", ",", "\<\"TEXT\"\>", ",", "\<\"TINYTEXT\"\>", 
   ",", "\<\"CHAR\"\>", ",", "\<\"NUMERIC\"\>", ",", "\<\"DECIMAL\"\>", 
   ",", "\<\"INTEGER\"\>", ",", "\<\"INTEGER UNSIGNED\"\>", 
   ",", "\<\"INT\"\>", ",", "\<\"INT UNSIGNED\"\>", ",", "\<\"MEDIUMINT\"\>", 
   ",", "\<\"MEDIUMINT UNSIGNED\"\>", ",", "\<\"SMALLINT\"\>", 
   ",", "\<\"SMALLINT UNSIGNED\"\>", ",", "\<\"FLOAT\"\>", 
   ",", "\<\"DOUBLE\"\>", ",", "\<\"DOUBLE PRECISION\"\>", 
   ",", "\<\"REAL\"\>", ",", "\<\"VARCHAR\"\>", ",", "\<\"ENUM\"\>", 
   ",", "\<\"SET\"\>", ",", "\<\"DATE\"\>", ",", "\<\"TIME\"\>", 
   ",", "\<\"DATETIME\"\>", ",", "\<\"TIMESTAMP\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.43696709003125*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CloseSQLConnection", "[", "conn", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.436967958*^9, 3.436967981828125*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell["\<\
The introspection commands demonstrated in the solution can take different \
arguments and options that restrict results or return additional information.\
\
\>", "Text",
 CellChangeTimes->{{3.436967786640625*^9, 3.436967867078125*^9}, {
  3.437568695578125*^9, 3.43756871734375*^9}}],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<DatabaseLink`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conn", " ", "=", " ", 
   RowBox[{"OpenSQLConnection", "[", "\"\<MySQLTest\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.43696852803125*^9, 3.4369685660625*^9}}],

Cell[TextData[{
 "For example, the ",
 StyleBox["SQLTables", "Literal"],
 " command can retrieve specific tables by name or using wildcards ",
 StyleBox["%", "Literal"],
 " (zero or more characters) and ",
 StyleBox["_", "Literal"],
 " (any single character). By default, only",
 " ",
 "tables are returned, but you can use the option ",
 StyleBox["TableType", "Literal"],
 " to list other tablelike entities, such as views. "
}], "Text",
 CellChangeTimes->{{3.4369687351875*^9, 3.436968761859375*^9}, {
   3.436968807234375*^9, 3.436968864109375*^9}, {3.436968945125*^9, 
   3.436968992390625*^9}, {3.43696906096875*^9, 3.436969153828125*^9}, {
   3.474046382597118*^9, 3.474046400207047*^9}, 3.4740500770392437`*^9, 
   3.4855295051920958`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLTables", "[", "conn", "]"}]], "Input",
 CellChangeTimes->{{3.4369679355*^9, 3.43696794221875*^9}, {
  3.436968571390625*^9, 3.43696860709375*^9}, {3.43696866115625*^9, 
  3.43696872328125*^9}, {3.4369689985*^9, 3.436969008921875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"data1\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}], ",", 
   
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"data2\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.436969012390625*^9}],

Cell[BoxData[
 RowBox[{"SQLTables", "[", 
  RowBox[{"conn", ",", "\"\<data1%\>\"", ",", 
   RowBox[{"\"\<TableType\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TABLE\>\"", ",", "\"\<VIEW\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4369679355*^9, 3.43696794221875*^9}, {
  3.436968571390625*^9, 3.43696860709375*^9}, {3.43696866115625*^9, 
  3.43696872328125*^9}, {3.4369689985*^9, 3.436969008921875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"data1\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}], ",", 
   
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"data1view100\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"VIEW\"\>"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.43696859321875*^9, 3.436968607578125*^9}, 
   3.436968663140625*^9, {3.436968695546875*^9, 3.436968724984375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLTables", "[", 
  RowBox[{"conn", ",", "\"\<data_\>\"", ",", 
   RowBox[{"\"\<TableType\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<TABLE\>\"", ",", "\"\<VIEW\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.436969049125*^9, 3.4369690508125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"data1\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}], ",", 
   
   RowBox[{"SQLTable", "[", 
    RowBox[{"\<\"data2\"\>", ",", 
     RowBox[{"\<\"TableType\"\>", "\[Rule]", "\<\"TABLE\"\>"}]}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.436969051625*^9}]
}, Open  ]],

Cell[TextData[{
 "If you are unsure what kinds of table types your database supports, you can \
list them with ",
 StyleBox["SQLTableTypeNames", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.436969162234375*^9, 3.436969199796875*^9}, 
   3.4740464155916967`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLTableTypeNames", "[", "conn", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"TABLE\"\>", ",", "\<\"VIEW\"\>", 
   ",", "\<\"LOCAL TEMPORARY\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.436967779765625*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["SQLColumnNames", "Literal"],
 " provides similar functionality. Here you can restrict columns to a",
 " ",
 "particular table or columns in a table that match a pattern."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.436969305234375*^9, 3.436969381421875*^9}, 
   3.474050095384136*^9, 3.4855295060323477`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLColumnNames", "[", "conn", "]"}]], "Input",
 CellChangeTimes->{{3.4369693973125*^9, 3.436969411578125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"key\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data2\"\>", ",", "\<\"akey\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data2\"\>", ",", "\<\"avalue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1view100\"\>", ",", "\<\"key\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1view100\"\>", ",", "\<\"x1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1view100\"\>", ",", "\<\"x2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1view100\"\>", ",", "\<\"x3\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.436969411984375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLColumnNames", "[", 
  RowBox[{"conn", ",", "\"\<data_\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.436969428015625*^9, 3.4369694376875*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"key\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x3\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data2\"\>", ",", "\<\"akey\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data2\"\>", ",", "\<\"avalue\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4369694399375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SQLColumnNames", "[", 
  RowBox[{"conn", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<data_\>\"", ",", "\"\<x_\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4369694498125*^9, 3.436969472234375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x1\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x2\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data1\"\>", ",", "\<\"x3\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.436969473078125*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "Detailed discussion of descriptive commands can be found in ",
 StyleBox["DatabaseLink/tutorial/ TableStructure", "URL"],
 " and ",
 StyleBox["DatabaseLink/tutorial/ColumnStructure", "URL"],
 " in the Mathematica documentation."
}], "Text",
 CellChangeTimes->{{3.43697075609375*^9, 3.436970771703125*^9}, 
   3.436971096640625*^9, {3.43697116915625*^9, 3.4369711964375*^9}, {
   3.4369712285625*^9, 3.43697123609375*^9}, {3.474050106548525*^9, 
   3.474050107135749*^9}, {3.4742197859801207`*^9, 3.4742198076357403`*^9}}]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->"EditBar",
CellGrouping->Manual,
WindowSize->{898, 727},
WindowMargins->{{22, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingStartingPageNumber->689,
PrintingPageRange->{1, Automatic},
PageHeaders->{{None, None, None}, {None, None, None}},
PageFooters->{{
   Cell[
    TextData[{
      CounterBox["Page"], 
      "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]Chapter ", 
      CounterBox["ChapterLabel"], ":\[ThickSpace]\[ThickSpace]", 
      "Interfacing Mathematica"}], "Footer"], None, None}, {None, None, 
   Cell[
    TextData[{
      CounterBox[
      "Page", CounterFunction :> (
        Part[{"", 
          "17.1\[ThickSpace]\[ThickSpace]Calling External Command Line \
Programs from \
Mathematica\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.2\[ThickSpace]\[ThickSpace]Launching Windows Programs from \
Mathematica\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.3\[ThickSpace]\[ThickSpace]Connecting the Frontend \
\[LineSeparator]to a Remote Kernel\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.3\[ThickSpace]\[ThickSpace]Connecting the Frontend \
\[LineSeparator]to a Remote Kernel\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.4\[ThickSpace]\[ThickSpace]Using Mathematica with C and C++\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.4\[ThickSpace]\[ThickSpace]Using Mathematica with C and C++\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.4\[ThickSpace]\[ThickSpace]Using Mathematica with C and C++\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.4\[ThickSpace]\[ThickSpace]Using Mathematica with C and C++\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.4\[ThickSpace]\[ThickSpace]Using Mathematica with C and C++\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.4\[ThickSpace]\[ThickSpace]Using Mathematica with C and C++\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.5\[ThickSpace]\[ThickSpace]Using Mathematica with Java\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.6\[ThickSpace]\[ThickSpace]Using Mathematica to Interact with \
Microsoft\[CloseCurlyQuote]s .NET Framework\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.6\[ThickSpace]\[ThickSpace]Using Mathematica to Interact with \
Microsoft\[CloseCurlyQuote]s .NET Framework\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.7\[ThickSpace]\[ThickSpace]Using the Mathematica Kernel\
\[LineSeparator]from a .NET \
Application\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.7\[ThickSpace]\[ThickSpace]Using the Mathematica Kernel\
\[LineSeparator]from a .NET \
Application\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.8\[ThickSpace]\[ThickSpace]Querying a Database \[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.8\[ThickSpace]\[ThickSpace]Querying a Database \[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.8\[ThickSpace]\[ThickSpace]Querying a Database \[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.9\[ThickSpace]\[ThickSpace]Updating a Database\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "17.10\[ThickSpace]\[ThickSpace]Introspection of Databases\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.10\[ThickSpace]\[ThickSpace]Introspection of Databases\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "17.10\[ThickSpace]\[ThickSpace]Introspection of Databases\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"}, # - CurrentValue[
          InputNotebook[], PrintingStartingPageNumber] + 1]& )], 
      CounterBox["Page"]}], "Footer"]}},
PageHeaderLines->{False, False},
PageFooterLines->{True, True},
PrintingOptions->{"CellBackgroundHalftoneAngle"->Automatic,
"CellBackgroundHalftoneDensity"->Automatic,
"FacingPages"->True,
"FirstPageFace"->"Right",
"FirstPageFooter"->True,
"FirstPageHeader"->False,
"GraphicsPrintingFormat"->"Automatic",
"IncludePostScriptResourceDirectives"->True,
"IncludeSpecialFonts"->True,
"Magnification"->1.,
"OpacityRenderingMethod"->Automatic,
"PageFooterMargins"->{24, 24},
"PageHeaderMargins"->{36, 36},
"PageSize"->{504, 661.5},
"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->Automatic,
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->True,
"PrintSelectionHighlighting"->False,
"PrintingMargins"->{{72, 72}, {72, 54}},
"RasterizationResolution"->"Automatic",
"RestPagesFooter"->True,
"RestPagesHeader"->True,
"UnixShellPrintingCommand"->Automatic,
"UsePostScriptOutputFile"->False,
"UseUnixShellPrintingCommand"->False,
"VertexColorRenderingMethod"->Automatic},
ShowSelection->True,
CellLabelAutoDelete->False,
SpellingDictionaries->{"CorrectWords"->{
 "Regex", "Haskell", "Sobel", "Eigen", "Mathew", "Pentland", "Sirovich", 
  "Mangano", "wget", "login", "www", "org", "preprocessor", "mprep", 
  "classpath", "jgap", "sourceforge", "SQLSelect", "SQLExecute", 
  "SQLArgument", "SQLColumn", "SQLTable", "SQLInsert", "SQLUpdate", 
  "SQLDelete", "SQLBeginTransaction", "SQLCommitTransaction", "SQLTables", 
  "SQLTableTypeNames", "SQLColumnNames"}},
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"ora.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "chInterface"->{
  Cell[545, 20, 149, 6, 63, "ChapterLabel",
   CounterAssignments->{{"ChapterLabel", 17}},
   CellTags->"chInterface"]},
 "Calling External Command Line Programs"->{
  Cell[8106, 206, 327, 11, 63, "Heading1",
   CellTags->"Calling External Command Line Programs"]},
 "Launching Windows Programs from Mathematica"->{
  Cell[13650, 361, 269, 10, 63, "Heading1",
   CellTags->"Launching Windows Programs from Mathematica"]},
 "Connecting the Front End to a Remote Kernel"->{
  Cell[17623, 490, 421, 13, 63, "Heading1",
   CellTags->"Connecting the Front End to a Remote Kernel"]},
 "fKernelProperties"->{
  Cell[43201, 937, 122, 2, 34, "Figure Title",
   CellTags->"fKernelProperties"]},
 "UsingMathematicaWithC"->{
  Cell[47918, 1043, 349, 11, 63, "Heading1",
   CellTags->{"UsingMathematicaWithC", "Using Mathematica with C and C++"}]},
 "Using Mathematica with C and C++"->{
  Cell[47918, 1043, 349, 11, 63, "Heading1",
   CellTags->{"UsingMathematicaWithC", "Using Mathematica with C and C++"}]},
 "UsingMathematicaWithJava"->{
  Cell[65556, 1540, 308, 10, 63, "Heading1",
   CellTags->{"UsingMathematicaWithJava", "Using Mathematica with Java"}]},
 "Using Mathematica with Java"->{
  Cell[65556, 1540, 308, 10, 63, "Heading1",
   CellTags->{"UsingMathematicaWithJava", "Using Mathematica with Java"}]},
 "language=java"->{
  Cell[273889, 7153, 519, 22, 337, "Code",
   CellTags->"language=java"],
  Cell[274717, 7185, 266, 10, 158, "Code",
   CellTags->"language=java"]},
 "InteractWithMicrosoft's.NETFramework"->{
  Cell[303982, 7946, 560, 16, 63, "Heading1",
   CellTags->{
    "InteractWithMicrosoft's.NETFramework", 
     "Using Mathematica to interact with Microsoft's .NET"}]},
 "Using Mathematica to interact with Microsoft's .NET"->{
  Cell[303982, 7946, 560, 16, 63, "Heading1",
   CellTags->{
    "InteractWithMicrosoft's.NETFramework", 
     "Using Mathematica to interact with Microsoft's .NET"}]},
 "UsingMathematicaKernelFrom.NETApplication"->{
  Cell[360403, 9003, 369, 12, 63, "Heading1",
   CellTags->"UsingMathematicaKernelFrom.NETApplication"]},
 "language=C#"->{
  Cell[362356, 9060, 1376, 33, 402, "Code",
   CellTags->"language=C#"]},
 "InterfacingWithDatabaseSystems"->{
  Cell[368354, 9220, 334, 12, 63, "Heading1",
   CellTags->"InterfacingWithDatabaseSystems"]},
 "Updating a Database"->{
  Cell[383779, 9639, 269, 10, 63, "Heading1",
   CellTags->"Updating a Database"]},
 "IntrospectionOfDatabases"->{
  Cell[390014, 9828, 273, 10, 63, "Heading1",
   CellTags->"IntrospectionOfDatabases"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"chInterface", 411439, 10409},
 {"Calling External Command Line Programs", 411605, 10413},
 {"Launching Windows Programs from Mathematica", 411755, 10416},
 {"Connecting the Front End to a Remote Kernel", 411911, 10419},
 {"fKernelProperties", 412041, 10422},
 {"UsingMathematicaWithC", 412152, 10425},
 {"Using Mathematica with C and C++", 412314, 10428},
 {"UsingMathematicaWithJava", 412468, 10431},
 {"Using Mathematica with Java", 412623, 10434},
 {"language=java", 412764, 10437},
 {"InteractWithMicrosoft's.NETFramework", 412956, 10442},
 {"Using Mathematica to interact with Microsoft's .NET", 413183, 10447},
 {"UsingMathematicaKernelFrom.NETApplication", 413400, 10452},
 {"language=C#", 413524, 10455},
 {"InterfacingWithDatabaseSystems", 413635, 10458},
 {"Updating a Database", 413756, 10461},
 {"IntrospectionOfDatabases", 413871, 10464}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 149, 6, 63, "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 17}},
 CellTags->"chInterface"],
Cell[697, 28, 226, 4, 63, "ChapterTitle"],
Cell[926, 34, 488, 15, 162, "Epigraph"],
Cell[1417, 51, 389, 6, 60, "EpigraphAuthor"],
Cell[CellGroupData[{
Cell[1831, 61, 208, 9, 63, "Heading1"],
Cell[2042, 72, 2065, 43, 121, "Text"],
Cell[4110, 117, 1220, 20, 63, "Text"],
Cell[5333, 139, 1807, 39, 82, "Text"],
Cell[7143, 180, 926, 21, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8106, 206, 327, 11, 63, "Heading1",
 CellTags->"Calling External Command Line Programs"],
Cell[CellGroupData[{
Cell[8458, 221, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[8501, 223, 302, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8840, 233, 28, 0, 75, "Heading2"],
Cell[8871, 235, 724, 14, 65, "Text"],
Cell[CellGroupData[{
Cell[9620, 253, 347, 6, 49, "Input"],
Cell[9970, 261, 161, 2, 32, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10180, 269, 30, 0, 75, "Heading2"],
Cell[10213, 271, 954, 20, 69, "Text"],
Cell[CellGroupData[{
Cell[11192, 295, 596, 16, 122, "Input"],
Cell[11791, 313, 1400, 26, 316, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13240, 345, 28, 0, 75, "Heading2"],
Cell[13271, 347, 330, 8, 25, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13650, 361, 269, 10, 63, "Heading1",
 CellTags->"Launching Windows Programs from Mathematica"],
Cell[CellGroupData[{
Cell[13944, 375, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[13987, 377, 247, 6, 27, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14271, 388, 28, 0, 75, "Heading2"],
Cell[14302, 390, 359, 10, 27, "Text"],
Cell[14664, 402, 279, 7, 49, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14980, 414, 30, 0, 75, "Heading2"],
Cell[15013, 416, 799, 14, 86, "Text"],
Cell[CellGroupData[{
Cell[15837, 434, 320, 8, 74, "Input"],
Cell[16160, 444, 337, 7, 69, "Output"]
}, Open  ]],
Cell[16512, 454, 453, 11, 27, "Text"],
Cell[CellGroupData[{
Cell[16990, 469, 287, 5, 49, "Input"],
Cell[17280, 476, 282, 7, 69, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17623, 490, 421, 13, 63, "Heading1",
 CellTags->"Connecting the Front End to a Remote Kernel"],
Cell[CellGroupData[{
Cell[18069, 507, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[18112, 509, 276, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18425, 519, 28, 0, 75, "Heading2"],
Cell[18456, 521, 1533, 24, 138, "Text"],
Cell[19992, 547, 23206, 388, 448, "Figure"],
Cell[43201, 937, 122, 2, 34, "Figure Title",
 CellTags->"fKernelProperties"],
Cell[43326, 941, 397, 7, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43760, 953, 30, 0, 75, "Heading2"],
Cell[43793, 955, 727, 11, 100, "Text"],
Cell[44523, 968, 963, 19, 84, "Text"],
Cell[45489, 989, 179, 4, 25, "Text"],
Cell[45671, 995, 430, 7, 35, "ListNumber"],
Cell[46104, 1004, 620, 10, 51, "ListNumber"],
Cell[46727, 1016, 1142, 21, 67, "ListNumber"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47918, 1043, 349, 11, 63, "Heading1",
 CellTags->{"UsingMathematicaWithC", "Using Mathematica with C and C++"}],
Cell[CellGroupData[{
Cell[48292, 1058, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[48335, 1060, 156, 2, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48528, 1067, 28, 0, 75, "Heading2"],
Cell[48559, 1069, 1221, 22, 100, "Text"],
Cell[49783, 1093, 781, 27, 385, "Code"],
Cell[50567, 1122, 1061, 18, 102, "Text"],
Cell[51631, 1142, 235, 10, 174, "Code"],
Cell[51869, 1154, 334, 8, 125, "Code"],
Cell[52206, 1164, 330, 8, 93, "Code"],
Cell[52539, 1174, 1047, 17, 662, "Code"],
Cell[53589, 1193, 508, 12, 158, "Code"],
Cell[54100, 1207, 741, 19, 90, "Text"],
Cell[54844, 1228, 675, 18, 120, "Input"],
Cell[55522, 1248, 162, 2, 25, "Text"],
Cell[CellGroupData[{
Cell[55709, 1254, 183, 3, 49, "Input"],
Cell[55895, 1259, 403, 14, 56, "Output"]
}, Open  ]],
Cell[56313, 1276, 182, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[56520, 1284, 152, 3, 49, "Input"],
Cell[56675, 1289, 120, 2, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56832, 1296, 427, 10, 49, "Input"],
Cell[57262, 1308, 215, 4, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57514, 1317, 141, 2, 51, "Input"],
Cell[57658, 1321, 99, 1, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57794, 1327, 127, 2, 49, "Input"],
Cell[57924, 1331, 114, 1, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58087, 1338, 43, 0, 75, "Heading2"],
Cell[58133, 1340, 743, 11, 100, "Text"],
Cell[58879, 1353, 612, 13, 65, "Text"],
Cell[59494, 1368, 922, 16, 450, "Code"],
Cell[60419, 1386, 426, 11, 125, "Code"],
Cell[60848, 1399, 564, 16, 143, "Input"],
Cell[CellGroupData[{
Cell[61437, 1419, 111, 2, 49, "Input"],
Cell[61551, 1423, 165, 5, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61753, 1433, 132, 2, 49, "Input"],
Cell[61888, 1437, 267, 6, 54, "Output"]
}, Open  ]],
Cell[62170, 1446, 147, 3, 49, "Input"],
Cell[62320, 1451, 732, 12, 84, "Text"],
Cell[63055, 1465, 1252, 31, 86, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64344, 1501, 28, 0, 75, "Heading2"],
Cell[64375, 1503, 923, 23, 44, "Text"],
Cell[65301, 1528, 206, 6, 25, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65556, 1540, 308, 10, 63, "Heading1",
 CellTags->{"UsingMathematicaWithJava", "Using Mathematica with Java"}],
Cell[CellGroupData[{
Cell[65889, 1554, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[65932, 1556, 275, 5, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66244, 1566, 28, 0, 75, "Heading2"],
Cell[66275, 1568, 683, 13, 46, "Text"],
Cell[CellGroupData[{
Cell[66983, 1585, 1150, 27, 168, "Input"],
Cell[68136, 1614, 213, 4, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68386, 1623, 825, 17, 123, "Input"],
Cell[69214, 1642, 76, 1, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69339, 1649, 30, 0, 75, "Heading2"],
Cell[CellGroupData[{
Cell[69394, 1653, 135, 2, 49, "Input"],
Cell[69532, 1657, 431, 9, 79, "Output"]
}, Open  ]],
Cell[69978, 1669, 1544, 33, 110, "Text"],
Cell[71525, 1704, 892, 19, 88, "Text"],
Cell[72420, 1725, 297, 8, 51, "Input"],
Cell[72720, 1735, 1017, 18, 82, "Text"],
Cell[73740, 1755, 441, 10, 67, "Text"],
Cell[74184, 1767, 3933, 73, 332, "Input"],
Cell[78120, 1842, 1779, 34, 171, "Text"],
Cell[79902, 1878, 9277, 187, 925, "Input"],
Cell[89182, 2067, 4326, 84, 239, "Input"],
Cell[93511, 2153, 444, 8, 44, "Text"],
Cell[CellGroupData[{
Cell[93980, 2165, 654, 12, 97, "Input"],
Cell[94637, 2179, 942, 18, 39, "Print"],
Cell[95582, 2199, 1773, 39, 55, "Print"],
Cell[97358, 2240, 807, 14, 35, "Print"],
Cell[98168, 2256, 884, 15, 35, "Print"]
}, Open  ]],
Cell[99067, 2274, 1068, 16, 119, "Text"],
Cell[CellGroupData[{
Cell[100160, 2294, 351, 6, 51, "Input"],
Cell[100514, 2302, 172147, 4823, 256, "Output"]
}, Open  ]],
Cell[272676, 7128, 1210, 23, 127, "Text"],
Cell[273889, 7153, 519, 22, 337, "Code",
 CellTags->"language=java"],
Cell[274411, 7177, 303, 6, 25, "Text"],
Cell[274717, 7185, 266, 10, 158, "Code",
 CellTags->"language=java"],
Cell[274986, 7197, 789, 13, 82, "Text"],
Cell[275778, 7212, 3902, 83, 360, "Input"],
Cell[CellGroupData[{
Cell[279705, 7299, 470, 9, 97, "Input"],
Cell[280178, 7310, 358, 7, 35, "Print"],
Cell[280539, 7319, 1312, 32, 55, "Print"],
Cell[281854, 7353, 370, 7, 35, "Print"],
Cell[282227, 7362, 416, 8, 35, "Print"]
}, Open  ]],
Cell[282658, 7373, 84, 1, 25, "Text"],
Cell[CellGroupData[{
Cell[282767, 7378, 141, 2, 49, "Input"],
Cell[282911, 7382, 18753, 504, 229, "Output"]
}, Open  ]],
Cell[301679, 7889, 946, 14, 119, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302662, 7908, 28, 0, 75, "Heading2"],
Cell[302693, 7910, 459, 11, 44, "Text"],
Cell[303155, 7923, 778, 17, 65, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[303982, 7946, 560, 16, 63, "Heading1",
 CellTags->{
  "InteractWithMicrosoft's.NETFramework", 
   "Using Mathematica to interact with Microsoft's .NET"}],
Cell[CellGroupData[{
Cell[304567, 7966, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[304610, 7968, 505, 9, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305152, 7982, 28, 0, 75, "Heading2"],
Cell[305183, 7984, 908, 23, 69, "Text"],
Cell[306094, 8009, 266, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[306385, 8018, 2488, 58, 259, "Input"],
Cell[308876, 8078, 230, 5, 54, "Output"]
}, Open  ]],
Cell[309121, 8086, 368, 9, 49, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309526, 8100, 30, 0, 75, "Heading2"],
Cell[309559, 8102, 876, 20, 69, "Text"],
Cell[310438, 8124, 693, 14, 67, "Text"],
Cell[CellGroupData[{
Cell[311156, 8142, 1871, 43, 312, "Input"],
Cell[313030, 8187, 45305, 749, 151, "Output"]
}, Open  ]],
Cell[358350, 8939, 421, 8, 46, "Text"],
Cell[CellGroupData[{
Cell[358796, 8951, 563, 11, 121, "Input"],
Cell[359362, 8964, 79, 1, 54, "Output"]
}, Open  ]],
Cell[359456, 8968, 594, 15, 65, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360087, 8988, 28, 0, 75, "Heading2"],
Cell[360118, 8990, 236, 7, 27, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360403, 9003, 369, 12, 63, "Heading1",
 CellTags->"UsingMathematicaKernelFrom.NETApplication"],
Cell[CellGroupData[{
Cell[360797, 9019, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[360840, 9021, 226, 5, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361103, 9031, 28, 0, 75, "Heading2"],
Cell[361134, 9033, 1219, 25, 106, "Text"],
Cell[362356, 9060, 1376, 33, 402, "Code",
 CellTags->"language=C#"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363769, 9098, 43, 0, 75, "Heading2"],
Cell[363815, 9100, 594, 9, 63, "Text"],
Cell[364412, 9111, 1429, 36, 580, "Code"],
Cell[365844, 9149, 842, 23, 72, "Text"],
Cell[366689, 9174, 1107, 24, 105, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367833, 9203, 28, 0, 75, "Heading2"],
Cell[367864, 9205, 441, 9, 44, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[368354, 9220, 334, 12, 63, "Heading1",
 CellTags->"InterfacingWithDatabaseSystems"],
Cell[CellGroupData[{
Cell[368713, 9236, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[368756, 9238, 200, 4, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368993, 9247, 966, 20, 76, "NoteWarning"],
Cell[369962, 9269, 342, 6, 35, "NoteWarningEnd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370341, 9280, 90, 1, 75, "Heading2"],
Cell[370434, 9283, 506, 11, 48, "Text"],
Cell[CellGroupData[{
Cell[370965, 9298, 581, 14, 119, "Input"],
Cell[371549, 9314, 1047, 23, 79, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[372645, 9343, 30, 0, 75, "Heading2"],
Cell[372678, 9345, 609, 11, 48, "Text"],
Cell[CellGroupData[{
Cell[373312, 9360, 574, 13, 73, "Input"],
Cell[373889, 9375, 562, 15, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374488, 9395, 669, 15, 73, "Input"],
Cell[375160, 9412, 253, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375450, 9422, 1956, 46, 189, "Input"],
Cell[377409, 9470, 1159, 27, 242, "Output"]
}, Open  ]],
Cell[378583, 9500, 596, 11, 48, "Text"],
Cell[CellGroupData[{
Cell[379204, 9515, 533, 12, 143, "Input"],
Cell[379740, 9529, 1253, 28, 264, "Output"]
}, Open  ]],
Cell[381008, 9560, 1009, 23, 88, "Text"],
Cell[CellGroupData[{
Cell[382042, 9587, 866, 19, 120, "Input"],
Cell[382911, 9608, 299, 6, 54, "Output"]
}, Open  ]],
Cell[383225, 9617, 92, 2, 49, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[383354, 9624, 28, 0, 75, "Heading2"],
Cell[383385, 9626, 367, 9, 25, "Text"]
}, Open  ]]
}, Open  ]],
Cell[383779, 9639, 269, 10, 63, "Heading1",
 CellTags->"Updating a Database"],
Cell[CellGroupData[{
Cell[384073, 9653, 40, 0, 46, "Heading2WithHeadAbove"],
Cell[384116, 9655, 161, 2, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384314, 9662, 28, 0, 75, "Heading2"],
Cell[384345, 9664, 233, 7, 27, "Text"],
Cell[384581, 9673, 302, 8, 73, "Input"],
Cell[384886, 9683, 695, 18, 73, "Input"],
Cell[CellGroupData[{
Cell[385606, 9705, 1048, 20, 73, "Input"],
Cell[386657, 9727, 299, 4, 54, "Output"]
}, Open  ]],
Cell[386971, 9734, 159, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[387155, 9743, 267, 6, 49, "Input"],
Cell[387425, 9751, 115, 2, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[387589, 9759, 30, 0, 75, "Heading2"],
Cell[387622, 9761, 923, 19, 88, "Text"],
Cell[388548, 9782, 374, 7, 44, "Text"],
Cell[CellGroupData[{
Cell[388947, 9793, 354, 8, 49, "Input"],
Cell[389304, 9803, 209, 3, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[389562, 9812, 28, 0, 75, "Heading2"],
Cell[389593, 9814, 384, 9, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390014, 9828, 273, 10, 63, "Heading1",
 CellTags->"IntrospectionOfDatabases"],
Cell[CellGroupData[{
Cell[390312, 9842, 40, 0, 75, "Heading2WithHeadAbove"],
Cell[390355, 9844, 398, 7, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390790, 9856, 28, 0, 75, "Heading2"],
Cell[390821, 9858, 352, 6, 44, "Text"],
Cell[391176, 9866, 169, 3, 49, "Input"],
Cell[391348, 9871, 287, 6, 27, "Text"],
Cell[391638, 9879, 154, 3, 49, "Input"],
Cell[391795, 9884, 366, 7, 56, "Output"],
Cell[392164, 9893, 150, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[392339, 9900, 293, 7, 73, "Input"],
Cell[392635, 9909, 610, 16, 35, "Output"]
}, Open  ]],
Cell[393260, 9928, 184, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[393469, 9936, 175, 4, 49, "Input"],
Cell[393647, 9942, 1012, 27, 286, "Output"]
}, Open  ]],
Cell[394674, 9972, 188, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[394887, 9980, 134, 2, 49, "Input"],
Cell[395024, 9984, 1164, 18, 170, "Output"]
}, Open  ]],
Cell[396203, 10005, 152, 3, 49, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396392, 10013, 30, 0, 75, "Heading2"],
Cell[396425, 10015, 294, 6, 44, "Text"],
Cell[396722, 10023, 291, 7, 73, "Input"],
Cell[397016, 10032, 746, 17, 67, "Text"],
Cell[CellGroupData[{
Cell[397787, 10053, 261, 4, 49, "Input"],
Cell[398051, 10059, 388, 11, 54, "Output"],
Cell[398442, 10072, 430, 9, 49, "Input"],
Cell[398875, 10083, 489, 12, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399401, 10100, 294, 7, 49, "Input"],
Cell[399698, 10109, 385, 11, 54, "Output"]
}, Open  ]],
Cell[400098, 10123, 267, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[400390, 10134, 73, 1, 49, "Input"],
Cell[400466, 10137, 174, 4, 54, "Output"]
}, Open  ]],
Cell[400655, 10144, 348, 7, 46, "Text"],
Cell[CellGroupData[{
Cell[401028, 10155, 134, 2, 49, "Input"],
Cell[401165, 10159, 934, 24, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402136, 10188, 169, 3, 49, "Input"],
Cell[402308, 10193, 583, 16, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402928, 10214, 227, 5, 49, "Input"],
Cell[403158, 10221, 335, 9, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[403542, 10236, 28, 0, 75, "Heading2"],
Cell[403573, 10238, 539, 10, 44, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
