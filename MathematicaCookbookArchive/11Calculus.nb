(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    534945,      12601]
NotebookOptionsPosition[    499381,      11581]
NotebookOutlinePosition[    508975,      11802]
CellTagsIndexPosition[    508351,      11784]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "CHAPTER ",
 
 CounterBox["ChapterLabel"]
}], "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 11}},
 CellTags->"chCalculus"],

Cell[" Calculus: Continuous and Discrete", "ChapterTitle",
 CellChangeTimes->{{3.4277482003125*^9, 3.427748215796875*^9}, 
   3.42774869021875*^9, {3.4433006648125*^9, 3.4433006681875*^9}, {
   3.443300699875*^9, 3.443300853234375*^9}, 3.445953242859375*^9, {
   3.446154659948634*^9, 3.446154669886134*^9}, 3.4760142757233152`*^9}],

Cell["\<\
Time may change me
But I can\[CloseCurlyQuote]t trace time
I said that time may change me
But I can\[CloseCurlyQuote]t trace time\
\>", "Epigraph",
 CellChangeTimes->{
  3.465988864575*^9, {3.465988933866*^9, 3.465988948012*^9}, {
   3.4664528297354*^9, 3.4664528565744*^9}, 3.471023336234462*^9}],

Cell["David Bowie, \[OpenCurlyDoubleQuote]Changes\[CloseCurlyDoubleQuote]", \
"EpigraphAuthor",
 CellChangeTimes->{{3.46598889504*^9, 3.4659888993710003`*^9}, {
   3.4664528816524*^9, 3.4664528913184*^9}, 3.4710228568457327`*^9, {
   3.471022897821439*^9, 3.4710229023296556`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introduction"
}], "Heading1",
 CellChangeTimes->{{3.42774633403125*^9, 3.427746338328125*^9}},
 CellTags->"IntroductionCh11"],

Cell["\<\
This chapter primarily focuses on the types of problems students and teachers \
will cover in college-level mathematics courses and how Mathematica can be \
used as\[LineSeparator]a calculator (tool for getting an answer) and a \
teacher (tool for gaining insight into\[LineSeparator]a mathematical \
problem). However, this focus was largely pragmatic and \
does\[LineSeparator]not imply that Mathematica is limited to introductory \
calculus. Quite the contrary. Mathematica has been leading the charge among \
computer algebra systems since its inception, and with each new release the \
depth and breadth of its abilities in symbolic calculus improve. My goal in \
most of these recipes is to provide a starting point for the inexperienced \
user. Experts will probably find little that is new or highly original. This \
was a conscious choice based on space limitations. I am quite certain one \
could write a small cookbook by turning each recipe here into an entire \
chapter! Such is the depth of Mathematica\[CloseCurlyQuote]s abilities. \
\>", "Text",
 CellChangeTimes->{{3.4433008635*^9, 3.44330105815625*^9}, 
   3.4455462812419086`*^9, {3.4457216515625*^9, 3.445721848375*^9}, {
   3.44572187978125*^9, 3.44572199375*^9}, {3.44572203171875*^9, 
   3.44572206859375*^9}, {3.445723846703125*^9, 3.445723962625*^9}, {
   3.445724129328125*^9, 3.445724285296875*^9}, {3.446066518625*^9, 
   3.446066826625*^9}, {3.44606686046875*^9, 3.4460671676875*^9}, {
   3.446122124453125*^9, 3.446122144765625*^9}, {3.44612268346875*^9, 
   3.446122712734375*^9}, {3.471023422967319*^9, 3.47102342311726*^9}, {
   3.4710234616173983`*^9, 3.47102347497055*^9}, {3.471023604816152*^9, 
   3.471023653134469*^9}, {3.471100773875918*^9, 3.471100794082282*^9}}],

Cell[TextData[{
 "Most of the recipes in this chapter address what is commonly known as \
infinitesimal or continuous calculus. These problems deal with limits (",
 ButtonBox["Recipe 11.1",
  BaseStyle->"Hyperlink",
  ButtonData->"Computing Limits"],
 "), series (",
 ButtonBox["Recipe 11.3",
  BaseStyle->"Hyperlink",
  ButtonData->"Power Series Representations"],
 "), derivatives (",
 ButtonBox["Recipe 11.4",
  BaseStyle->"Hyperlink",
  ButtonData->"Differentiating Functions"],
 "), integrals (",
 ButtonBox["Recipe 11.5",
  BaseStyle->"Hyperlink",
  ButtonData->"Integration"],
 "), and differential\[LineSeparator]equations (",
 ButtonBox["Recipe 11.6",
  BaseStyle->"Hyperlink",
  ButtonData->"Solving Differntial Equations"],
 "). A common application of calculus is finding minimums and maximums. \
Mathematica packages these techniques into ",
 StyleBox["Minimize", "Literal"],
 ", ",
 StyleBox["Maximize", "Literal"],
 ", and related functions (",
 ButtonBox["Recipe 11.7",
  BaseStyle->"Hyperlink",
  ButtonData->"Minima and Maxima Problems"],
 "). When you use your calculus skills to solve real engineering and physics \
problems, you are bound to run smack into applications that involve vector \
calculus. Mathematica has a package of functions \
specifically\[LineSeparator]dedicated to vector calculus, and we touch on \
some of this functionality in\[LineSeparator]",
 ButtonBox["Recipe 11.8",
  BaseStyle->"Hyperlink",
  ButtonData->"Vector Calculus Problems"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4433008635*^9, 3.44330105815625*^9}, 
   3.4455462812419086`*^9, {3.4457216515625*^9, 3.445721848375*^9}, {
   3.44572187978125*^9, 3.44572199375*^9}, {3.44572203171875*^9, 
   3.44572206859375*^9}, {3.445723846703125*^9, 3.445723962625*^9}, {
   3.445724129328125*^9, 3.445724523828125*^9}, {3.44606723465625*^9, 
   3.446067684921875*^9}, {3.446122168078125*^9, 3.44612220434375*^9}, {
   3.446123644453125*^9, 3.44612373821875*^9}, {3.446123773828125*^9, 
   3.446123894828125*^9}, {3.4664533597374*^9, 3.4664535233924*^9}, {
   3.471023680733852*^9, 3.471023704836591*^9}, {3.471023980839403*^9, 
   3.4710241188728523`*^9}, {3.471024177879298*^9, 3.471024197618671*^9}, {
   3.47102422767673*^9, 3.4710242476352587`*^9}, {3.471024310756126*^9, 
   3.471024340103653*^9}, {3.4710243711332293`*^9, 3.4710244065024347`*^9}, 
   3.4710245101163063`*^9, {3.471100807752132*^9, 3.4711008295155487`*^9}, {
   3.471100861025082*^9, 3.471100876411076*^9}, {3.4711009252331038`*^9, 
   3.4711009276756077`*^9}}],

Cell[TextData[{
 StyleBox["Although the ",
  FontTracking->"Plain"],
 StyleBox["calculus of continuous functions still plays a dominant role, \
discrete calculus is extremely important and has been garnering increasing \
attention lately due to research in such varied domains as string theory, \
probability theory, theory of algorithms, ",
  FontTracking->"SemiCondensed"],
 StyleBox["and combinatorics, to name a few. Mathematica 7 has enhanced its \
discrete calculus abilities. Recipes ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["11.9",
  BaseStyle->"Hyperlink",
  ButtonData->"Sums and Products"],
  FontTracking->"Plain"],
 StyleBox[" through ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["11.11",
  BaseStyle->"Hyperlink",
  ButtonData->"Generating Functions"],
  FontTracking->"Plain"],
 StyleBox[" help you start using these capabilities. ",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.4433008635*^9, 3.44330105815625*^9}, 
   3.4455462812419086`*^9, {3.4457216515625*^9, 3.445721848375*^9}, {
   3.44572187978125*^9, 3.44572199375*^9}, {3.44572203171875*^9, 
   3.44572206859375*^9}, {3.445723846703125*^9, 3.445723962625*^9}, {
   3.445724129328125*^9, 3.445724523828125*^9}, {3.44606723465625*^9, 
   3.446067684921875*^9}, {3.446122168078125*^9, 3.44612220434375*^9}, {
   3.446123644453125*^9, 3.44612373821875*^9}, {3.446123773828125*^9, 
   3.446123990078125*^9}, {3.44612402515625*^9, 3.446124067640625*^9}, {
   3.446124156640625*^9, 3.446124423703125*^9}, {3.446124458546875*^9, 
   3.446124523375*^9}, {3.44612456465625*^9, 3.44612457059375*^9}, {
   3.446149981604884*^9, 3.446150007792384*^9}, {3.4461543294642596`*^9, 
   3.4461544129642596`*^9}, {3.4461567510892596`*^9, 3.446156753979884*^9}, {
   3.471024606222168*^9, 3.4710246256816874`*^9}, {3.471976712978477*^9, 
   3.471976714175455*^9}, {3.471976900751666*^9, 3.4719769270252934`*^9}}],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.4461536568080096`*^9, 3.446153661917384*^9}}],

Cell[TextData[{
 "A guide to all functions related to infinitesimal calculus can be found in \
the Mathematica documentation at ",
 StyleBox[ButtonBox["guide/Calculus",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{"guide"}, "Calculus", CharacterEncoding -> "UTF-8"], 
    None}], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.4461537514642596`*^9, {3.4461538075580096`*^9, 3.446153818854884*^9}, {
   3.446156759886134*^9, 3.446156765698634*^9}, {3.471024834468227*^9, 
   3.4710248345107393`*^9}}],

Cell[TextData[{
 "A guide to all functions related to discrete calculus can be found in the \
Mathematica documentation at ",
 StyleBox[ButtonBox["guide/DiscreteCalculus",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{"guide"}, "DiscreteCalculus", CharacterEncoding -> 
     "UTF-8"], None}], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.4461536677767596`*^9, 3.446153725729884*^9}, 
   3.4461567692142596`*^9, {3.471024850844466*^9, 3.471024850847271*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Computing Limits"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.42774642475*^9, 3.427746459265625*^9}, 
   3.4277465093125*^9, {3.42774824971875*^9, 3.427748261015625*^9}, {
   3.427748706578125*^9, 3.42774873515625*^9}, {3.444597610234375*^9, 
   3.444597613109375*^9}, {3.445797429984375*^9, 3.445797444234375*^9}},
 CellTags->"Computing Limits"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
You want to determine the value of a function as a variable approaches a \
specific value, even if evaluating the function at that limit may give an \
indeterminate result.\
\>", "Text",
 CellChangeTimes->{{3.429567203921875*^9, 3.429567341109375*^9}, 
   3.4455462890544086`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "The functions ",
 StyleBox["Sin[x]/x", "Literal"],
 ", ",
 StyleBox["Sin[x^2]/x", "Literal"],
 ", and ",
 StyleBox["Sin[x]/x^2", "Literal"],
 " each evaluate to the indeterminate value",
 " ",
 StyleBox["0/0", "Literal"],
 " at ",
 StyleBox["x = 0", "Literal"],
 "; however, their limits as ",
 StyleBox["x", "Literal"],
 " approaches zero are quite definite and different."
}], "Text",
 CellChangeTimes->{{3.4710249020602913`*^9, 3.471024902306869*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"x", "\[Rule]", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.429567044*^9, 3.4295670868125*^9}},
 CellLabel->"In[1]:="],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.429567080234375*^9, 3.429567087625*^9}, 
   3.4664498835897107`*^9},
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", "^", "2"}], "]"}], "/", "x"}], ",", 
   RowBox[{"x", "\[Rule]", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.429567044*^9, 3.4295670868125*^9}, {3.42956713740625*^9,
   3.429567137765625*^9}},
 CellLabel->"In[2]:="],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.429567080234375*^9, 3.429567087625*^9}, 
   3.42956713834375*^9, 3.4664498836833105`*^9},
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", " ", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.429567044*^9, 3.4295670868125*^9}, {3.42956713740625*^9,
   3.429567162125*^9}},
 CellLabel->"In[3]:="],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{{3.429567080234375*^9, 3.429567087625*^9}, {
   3.42956713834375*^9, 3.429567163484375*^9}, 3.466449883714511*^9},
 CellLabel->"Out[3]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
Plotting functions around the limiting value is often a good way to provide \
visual in\[DiscretionaryHyphen]sight into the limiting value.\
\>", "Text",
 CellChangeTimes->{{3.429567756296875*^9, 3.42956781465625*^9}, {
  3.4711009598412848`*^9, 3.471100961851945*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"x", "^", "2"}], "]"}], "/", "x"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], "/", 
        RowBox[{"x", "^", "2"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.429567640328125*^9, 3.429567719*^9}, 
   3.471096180261961*^9},
 CellLabel->"In[4]:="],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0.84},
      PlotRange->{{-1, 1}, {0.8414709971004956, 0.999999996050945}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {193.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
B8yqh/uhP64BmV2lTbT3w9/9Bn/3218Op8Kg
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      PlotRange->{{-1, 1}, {-0.841470975047338, 0.841470975047338}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {580.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
u+R4rsFbxk/zkEhl1PR3oKQYu/8P6mSGvA==
         "]], LineBox[CompressedData["
1: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
AGw6DVQ=
         "]], 
        LineBox[{{-0.00030098797493450727`, -11.205671475757919`}, \
{-0.0002994258039497316, 11.14147493852144}}]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      PlotRange->{{-1, 1}, {-11.205671475757919`, 11.14147493852144}},
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {967.5, -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImageSize->{303., Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.429567720421875*^9, 3.466449883886111*^9},
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[TextData[{
 "Here you can see that the last function has different limits depending on \
whether one approaches the limit from the left or the right. You can specify \
which limit you want using the option ",
 StyleBox["Direction", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.429567820921875*^9, 3.429567916609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"From", " ", "the", " ", "left"}], "*)"}], 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "/", 
     RowBox[{"x", "^", "2"}]}], ",", " ", 
    RowBox[{"x", " ", "->", " ", "0"}], ",", 
    RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.429567943671875*^9, 3.429567990796875*^9}, {
  3.47102495800662*^9, 3.47102496406612*^9}, {3.4760143360703373`*^9, 
  3.47601433650139*^9}},
 CellLabel->"In[5]:="],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{3.42956795153125*^9, 3.4664498839173107`*^9},
 CellLabel->"Out[5]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"From", " ", "the", " ", "right"}], "*)"}], 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "/", 
     RowBox[{"x", "^", "2"}]}], ",", " ", 
    RowBox[{"x", " ", "->", " ", "0"}], ",", " ", 
    RowBox[{"Direction", " ", "\[Rule]", " ", 
     RowBox[{"-", "1"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4295679656875*^9, 3.429567995984375*^9}, {
  3.4710249709686213`*^9, 3.471024972343861*^9}, {3.476014331656192*^9, 
  3.476014340356051*^9}},
 CellLabel->"In[6]:="],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.429567967828125*^9, 3.466449883932911*^9},
 CellLabel->"Out[6]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Working with Piecewise Functions"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.42774642475*^9, 3.427746459265625*^9}, 
   3.4277465093125*^9, {3.42774824971875*^9, 3.427748261015625*^9}, {
   3.427748706578125*^9, 3.427748715984375*^9}, {3.42774879525*^9, 
   3.4277488286875*^9}, {3.444597622453125*^9, 3.444597638875*^9}},
 CellTags->"Piecewise Functions"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
You want to express a function in terms of two or more functions over \
different intervals.\
\>", "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.42960368921875*^9, 3.4296036909375*^9}, {
   3.429605318671875*^9, 3.429605335921875*^9}, {3.429605376265625*^9, 
   3.429605474375*^9}, 3.4710237344479837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "Mathematica supports a function ",
 StyleBox["Piecewise", "Literal"],
 " for composing a complex function out of simpler functions using predicates \
to determine which of the simpler functions\[LineSeparator]apply. "
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.42960552275*^9, 3.429605656*^9}, {3.44317530009375*^9, 
  3.443175314109375*^9}, {3.4455462915700336`*^9, 3.4455462945387836`*^9}, {
  3.471100981430294*^9, 3.471100982380063*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "/", 
         RowBox[{"x", "^", "2"}]}], "]"}], ",", 
       RowBox[{"x", "<", " ", 
        RowBox[{"-", "0.3"}]}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "x"}], ",", " ", 
       RowBox[{"x", " ", ">", "0.3"}]}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3.33", ",", "True"}], "}"}]}], "}"}], "]"}]}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44317532321875*^9, 3.443175373515625*^9}, {
   3.44317542725*^9, 3.443175439984375*^9}, {3.44317547609375*^9, 
   3.443175592625*^9}, {3.443301169140625*^9, 3.443301252171875*^9}, {
   3.44330129475*^9, 3.443301393015625*^9}, {3.44330142353125*^9, 
   3.443301426125*^9}, {3.443301526265625*^9, 3.4433016671875*^9}, 
   3.44330172396875*^9, {3.4433017579375*^9, 3.4433017585625*^9}, {
   3.44330178890625*^9, 3.443301796265625*^9}, {3.44330185578125*^9, 
   3.44330190228125*^9}, {3.4433020634375*^9, 3.44330207065625*^9}, {
   3.4433023864375*^9, 3.44330240159375*^9}, {3.44330382184375*^9, 
   3.443303822421875*^9}},
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{"\[Piecewise]", GridBox[{
    {
     SqrtBox[
      FractionBox["1", 
       SuperscriptBox["x", "2"]]], 
     RowBox[{"x", "<", 
      RowBox[{"-", "0.3`"}]}]},
    {
     FractionBox["1", "x"], 
     RowBox[{"x", ">", "0.3`"}]},
    {"3.33`", 
     TagBox["True",
      "PiecewiseDefault",
      AutoDelete->False,
      DeletionWarning->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.84]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]}]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{
  3.44330166771875*^9, 3.44330172478125*^9, 3.443301758984375*^9, 
   3.4433017969375*^9, {3.44330186190625*^9, 3.443301871125*^9}, 
   3.443301902984375*^9, 3.44330208190625*^9, {3.443302387375*^9, 
   3.4433024025625*^9}, 3.443303825*^9, 3.466449883964111*^9},
 CellLabel->"Out[7]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.44330197671875*^9, 3.443302034203125*^9}, {
   3.44330208803125*^9, 3.44330228665625*^9}, {3.44330241121875*^9, 
   3.443302458375*^9}, 3.471096175614777*^9},
 CellLabel->"In[8]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJwLyk9STGVgYGACYnEQvf+y8K0ki5zVDlyLr3PZFizZf+n6GoOti4oR/Glx
tgwb7BB84UOh005fgfMvTlTL03meCedf6H43P1JuCpx/njd3IdfqOjj/1I++
1N0dWnD+scfrtXJSrsP5+zoVe78zl8L566ae7NOqKofx7dcaLHGw6F8F5x9v
SrjWmNkH55/2mrevvdMQzj8vdGdZ7wq4e+0vVNee9YgJhvMv5va6ez6xQfCf
TWXxWmEA51+Kn3PQO0cFwZ+jMP/0OTkE/8aSOh8DCQT/27PcnkRROB8tfAEe
nql6
      "]], LineBox[CompressedData["
1:eJwVU3s01PkDHY/x9cpKabdRCj8k+6tNZYXd+1lRNlTyzoRKL20pWygptYTI
SkXRA5WIFkOlQg/WWr8teYzxJo8xTJinkUHr98c999w/7rnn3HvujuA9Bvto
NJriHOL/z2jakaj8388vifq5A2WrU4+jKSRsr0W7NlF3G27SFbxC01W7hG9e
LyTqpu9frFkai6bm1vaBRAZRa9hq9MPMOJq96afP/GcFUVvZssH/DyWw/fye
57vbEUra9vLl+Jw+Z/bxirUDoRqcT6S9iQX7rlQtbLkjoR6vUsvN2w/2xwQf
u0/bCLV//WyW1wRaAp9NtkcziUqXsZbx/QxwDs+3UisNJfQuhZcmDUvASej0
H08/ReiVSdmze86CU/Awlh11htAzg7nrbAbAGfuBk+X8G6HvW7kg/qEBWo8H
hVkNJBNlkTcrC4vRFlb19ODCfKLMSPlejpPoiA5dV3Oilyhm2PrMutqi434u
g17bSRRjkt+92hmFjuq2Lw5LWonisa+jZjRuoJP+w99V1R+IokOZcLnWOnRe
pPu9WfiaKIg3FAfrVqEr9lrcy9K7RMEzr/myKgtdD2uOyFXTicJGjram+Qy6
/pp0s2amEoU1386ui0hAtypz6XPlJKKguZ0r2xeD7ngj1lP3s4RWfVjHvnsB
ei6xOoskfoRmE1V4o12KnkcDbwSOOwlt5Rd5WiwLPf9b9HD1LQ9CY2SWlP1k
jl56hRXH0ARfJPGP2rv80LvJQMmjTh9fQhl7fjHRQm8N74YbQwuz0Rne9lw9
fKwNe+vyfAzTdemuR6fK8JETceIvNWNMs/xZoNfiI/ecKfFmYjrdpczlpR/6
lC8mWkzUYTooe2npkx3oI9c9v1n7ANPzDE7lr3JEXxlruO8xE3IfU97uHEv0
547ND8usw5T6lMvlGDn6nwmrBAIFfJYZ13O3WqC/RhoaBCt87g8+uvrTBfQP
THcwu3Lwudx3dGjZEwwYaDywY5zH5+CU4tulARi4abZB85oVJjsQPdLrjsH4
wICs2BzI/py+v6fAFoM3CwqPFAdAVqotP3o9F4N5ktkNHQzIsoldmlQdg3Ux
GY2rkiA7O1b43OoquBo5HEV2KGQboq+EfjYF9/KwS6DRJkyU7FXqNG7GUMpR
a5NKLqRl51b7dmljKPtpnIiXCWle3PUylVwMsWY5r3R2Qpqek/BYqI+hpt9P
eu17D2nkssi6vKvgLSwqitN8CulGmuz4mffgpYpNhndehKTRP9Ev8A6GM8IX
5E8YQzx7yWmEuQbDj/INXf/8BmJRibnrAQ0MP+/+TnZNHWLuiGpQuQ2GW+23
blwjgLj+vLfMjYYRXe249iPlEGe5FfT/dQEjSbmzqoPuEG8OyQr5oAT++Tbe
vuYLEN2m7U+eHAT/iqZM495JiFIqllr7AfxMQi8OOQhRXIx+3/1L4FfmGM5o
b4XohGWZ6FQM+PKQXdecF0PkrP/zOtVefDqp3vi2qgjCmfG9TvdPYfSgTcUy
VjeEh4ztE1zNMBpmuDLE6h2EAV5+iViD0YuqadWV5RB6pfheqRFj9B475FBd
BoSbDP/WKh/FaE+waUmfN4RGBbT9vpEY88xOcZzfAEGv+yPHGjeMO6gdOHas
GgL/R9ZiUx4Eyfy43jQPjPG0f12iqgDBTYV5JZuTMNam+M7G7QMEWYtSYmS1
GKtTqjO6vguC4p9umXtbY6xgjRdhXoGgIa0wdLE+xo5bnbA0TYdQZ2OLRjoP
ozMDQzef2UN49ZaR5Z3TGDVYzdmxTBmiVOeKxAd3wE+oHm3aozLXIyfbecUJ
8KMy+tpbHkP0YE+sRv7P4J+M6HGJ/B2i0vDtl4ok4Pt7vq168wmixnv9ceVO
4K8No0vM50GsJVeLbpzESJe3Q9DYM4hj8zwiaa4Y+d4Lvk0fITlFHz3iq4xh
RftwF837kJxfu9zTSQ+8SaewJ3cjIYkPcIONBXhjOw9qXpRBcvPF8/l6AeC1
/y5lZTpD8iI4urSjArwS71cBqZWQyNv0ppmh4O330dbghEF6tmBLwq5hDDVw
bg8yvsdE9I6HeQHvwa2YV2rh6o+JBKn1OaML4D7ZeX5jB4WJq2nv3LnrwX1c
8NuNuT0nsjvFtMO3wL0ToCP9thMTbw786BV6GNwo5bozdRaYmI1g0xNVwbUn
RvudRZCFP1Dc/cwOgx+YX1FBXpj8RbaLMW/u1xNmSRujjmHKmeIZpJugP9zp
8XcPQzHtlj8THTqFvgUGhzQjgjFrlaulN8VHr1DH6fbKvYRmpNcceyATPS92
690ufEYUjBcn/vNTMro6RbZfmUUTRd0qu/xgLXRuS4z9znclUWI8rSizr0T7
P60hLTmLibKWp6X/kRm0xTq33rZkEuUZ85uNlAJaA+uTmetbiQpty9sQR0tw
HC74174wICoiXV5B5xRatjsa2m9iEZUJl+TaX+zR4rxqcntzGlGZirHql19G
i+PX2yKmUwmlKInXYyxHCz5F9uhbEGpBk1m812a0rM6tasgAodYnB+1ruIaW
rw7+aGylRahT6p/0a1aBXT/js2LBnD/S7pq1RzjY/+hUjdfWE+r8aVuPgTdg
15qlRvRWECp+OPGykjvYr32DO57+TKj02m/lJALsovru4ux7hCqPOcJ5UQv2
FbnKOnsWoV5X6Iq36ICdZHK1LCWfUNWSSq02JtiX3CLN6LsI9S5Qy0E2DvaF
4oCR1Ln8brs/StcvAvvXSK/GQgGh+k571lcHgB1cUpT6/h2huMWzfLc8sA/z
/RNrKgk1brDNMMQW7EC/Cus/2ggl9pb9qHAR7ID0oEsLVQklS77rk/wBbCbn
sLVNOKHktZtPLmeA7aNbeWOJLaG+fBlPLtwLtofHXqE5+Rc79z+f
      
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.5},
  PlotRange->{{-3, 3}, {0.33333334693877603`, 3.33}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.443301990296875*^9, 3.443302035140625*^9}, {
   3.443302092296875*^9, 3.443302115078125*^9}, {3.443302165859375*^9, 
   3.443302287171875*^9}, {3.443302413953125*^9, 3.44330245890625*^9}, 
   3.443303827109375*^9, 3.4664498840577106`*^9},
 CellLabel->"Out[8]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 StyleBox["Clip", "Literal"],
 ", ",
 StyleBox["Sign", "Literal"],
 ", and ",
 StyleBox["UnitStep", "Literal"],
 " are special cases of built-in piecewise functions. ",
 StyleBox["Clip", "Literal"],
 " constrains its input to a minimum and maximum value (default \[Dash]1 and \
+1). ",
 StyleBox["Sign", "Literal"],
 " gives \[Dash]1 or 1 depending on whether the input is negative or \
positive, and ",
 StyleBox["UnitStep", "Literal"],
 " is 0 for negative values and 1 for values greater than or equal to zero."
}], "Text",
 CellChangeTimes->{{3.443800283640625*^9, 3.443800296671875*^9}, {
   3.44380033359375*^9, 3.443800534296875*^9}, {3.443800571328125*^9, 
   3.4438006309375*^9}, 3.4455463024137836`*^9, 3.4710237381519613`*^9, {
   3.471025032461584*^9, 3.471025111428101*^9}, {3.476014352839406*^9, 
   3.476014365164468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Clip", "[", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", "x", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<Clip\>\""}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"Sign", "[", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", "x", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<Sign\>\""}]}], "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"UnitStep", "[", 
        RowBox[{"2", 
         RowBox[{"Sin", "[", "x", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
       RowBox[{"PlotLabel", "->", "\"\<UnitStep\>\""}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"500", ",", "150"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[9]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[{{}, {InsetBox[
       GraphicsBox[{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
AHyxM3U=
           "]]}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->True,
        AxesOrigin->{0, 0},
        PlotLabel->FormBox["\"Clip\"", TraditionalForm],
        PlotRange->
         NCache[{{-Pi, Pi}, {-1., 1.}}, {{-3.141592653589793, 
          3.141592653589793}, {-1., 1.}}],
        PlotRangeClipping->True,
        PlotRangePadding->{
          Scaled[0.02], 
          Scaled[0.02]}], {193.5, -116.80842387373012`}, 
       ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
       GraphicsBox[{{}, {}, 
         {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxF021IkwEQB/BnbnPai+CU2RvVjAKblJWpTN0ziZnal6UzLSh10VpJ05ko
IjEke8NpWBKocymlpQ03NUkculWaaVRThoRaodbUfbAtJ+p02Qvtv4Pj+HH3
4Ti45Bwx+wJBEF5/Mu5vNfqyV4/5JSYZbMS/MPo80tnGBy56vFeibhaUwoyA
+0ynWQ57B3yb3XZ2CKZv5epael0wzfdkpb19GqZuLDd7N0TAlOWyAyPBMTBh
VV7zK97htmH9syT9kMoEu/RHZzqkH+HVHmHUcEgTvDKYl2uqCYOXnrHGYsPY
8GKbN13QbYUXlIVZ+uztsF1ua2QO/YLnly6JNpFXYWvnovH9kS7Y0hOke+Ov
hadyeNRqrmd+4vJsQsYNLmy+rbi7Jv0BDyyT3Nq+67DBGajqDpbBOmpLX4x+
FK7P2j/jW9EMp2X6dIQ/x31Isu0wT5NvJt0+rxLOCQrrYHlDbP8ZnRAuyk9h
MR8Pw6XlvPGX8VZYmSkKLYrOhh9QSYnjXiRcNyp6obnZBTf1kpqKyC9wa6XI
FR+aARvZWUOiuTX4rVqWmp4wCZujt2hJrQOeMNllOxvH4KmHqQl6WTFsKVel
HaxPh62mr16DtyTw/Dslh1P6GrafDnz13f8cvFAwyRvgLsCLueKVzTlaeKlK
XGJR0OCVqqDEPdUl8OqdvhAF7QTsap7/dCWxFV5v/NBvqIlym09YWPwRMfp8
iiOOI9qNffletvhOxnQ7TKOU7aMHJsF0oiUiPKnAY2d/8s+ngzBjw65Tznwp
7MNIcYYLaj2ueqJuOJ4H//9/t38DdDlgKw==
           "]]}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->True,
        AxesOrigin->{0, 0},
        PlotLabel->FormBox["\"Sign\"", TraditionalForm],
        PlotRange->
         NCache[{{-Pi, Pi}, {-1., 1.}}, {{-3.141592653589793, 
          3.141592653589793}, {-1., 1.}}],
        PlotRangeClipping->True,
        PlotRangePadding->{
          Scaled[0.02], 
          Scaled[0.02]}], {580.5, -116.80842387373012`}, 
       ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
       GraphicsBox[{{{}, {}, 
          {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwLyk9STGVgYGACYisQfYBT8bczn6cXAxQc4JTj+FCz1RrBlxKb+1pRB8EX
Mvxx/Ccfgs+Usa5xxUU4n+PRNcmvHBEI/uINH24fT0fwVdPmrXRtgfPZhScL
/bpSCOezCT95IRV7Cs5nlbTasGrfXzifhTNw4sdNj+F8Zu7eK2wLzeB8xh/d
epeUbOB8hlc9tXzVMjD+/v930yIM51yA8//uNn2+OeM8nP97b4DFRc1lcP7P
k0UFF2YZwPnfV4vdsjVQhPO/bmRjdd31Cs7/3FOeuDtbGs7/WPhhqdCpf3D+
u++ZITz2xXD+q61fD5w13gHnP9srvuGY4Ho4/1G+HfNMK4T6O1kvPOJbreD8
Kx31/X8y3sP5x3/YW80+0ozg70idbHnuBYJf0f36+k0/OP/Yjxtzhd9JwflH
fxb+7xHfAOcf/rXkSE3WXTh//y+RObuU8hD8qkTfb+aWcP6+X2v/G/mwwPl7
f7snriqdDefv/lOlNuvECTh/+7/7G6rzleD8Dcyrjtjsvgbnr+f5dC+pEhF/
64QmmHhX9cD5a2RPPZCtzYbzV5g4mB9s1oLzFyRqPefsWwnnzzs7ofKpghGc
P+fGadXtykJw/oz3DrXRGvD0vH+ijLbOYpMAOL/P7/SGV3nxcH5XqiNHX4kc
nN80SXv7tfq5cH5toJPcVy5E/JbW6ZyzFTOH87PD9H5zOSPcn5B5Yku2+SQY
HwBuS/nG
            "]], LineBox[CompressedData["
1:eJwLyk9STGVgYGACYhUQbZ+QeWJLtvkk+w8MYGCfPCfgpWv5XDi/cKHt0agN
AXB+ZUmwmNCSi3B+S6/d7YNur+D8noQQnUrrbDh/GrN92pdJ5nD+3Gsh29e0
7YDzl+2zX9Nnfg/OXzcx5K+bTjycf0Ax8VTIyz9w/ol5eaERHg/h/CvWEuvt
13+B8+9c+Jgnt/QWnP9ofqjH7rxqOP9Z75xw/QURcP6rC/eZTranwfnvTvdo
a7cchvM/RooceioYB+d/Lntod9zqM5z/tSDpJ2/+ejj/+5Skxmf1LHD+zyni
nsozG+H8351HNOtZvOH8vyvf3cj1XAfn/1967uj+WRYwvgPDMzGHS0lweQfG
L47aIQpw9zowfXDbyv54E5zPwtitxiriBeezMqwyM/EqQ/B/HQ36tOIknM/O
JR/2qyQDzudgD/5l4jobwZ+yfN5C9yI4n1PxtzOfJ9x8AN69seY=
            
            "]]}, {}}, {{}, {}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->True,
        AxesOrigin->{0, 0},
        PlotLabel->FormBox["\"UnitStep\"", TraditionalForm],
        PlotRange->
         NCache[{{-Pi, Pi}, {0., 1.}}, {{-3.141592653589793, 
          3.141592653589793}, {0., 1.}}],
        PlotRangeClipping->True,
        PlotRangePadding->{
          Scaled[0.02], 
          Scaled[0.02]}], {967.5, -116.80842387373012`}, 
       ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
    Background->None,
    ContentSelectable->True,
    ImageMargins->0.,
    ImageSize->{318.6666666666667, 96.66666666666667},
    PlotRangePadding->{6, 5}], {0., 14.10380563689418}, 
   ImageScaled[{0., 0.}], {318.6666666666667, 96.66666666666667},
   ContentSelectable->True],
  AspectRatio->0.2238805970149264,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{312.6666666666667, 70.00000000000033},
  PlotRange->{{5.999999999999984, 318.6666666666667}, {14.666666666666556`, 
   84.66666666666688}},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.466449884182511*^9},
 CellLabel->"Out[9]="]
}, Open  ]],

Cell["\<\
You can differentiate and integrate piecewise functions, and you\
\[CloseCurlyQuote]ll get a piecewise function.\
\>", "Text",
 CellChangeTimes->{{3.443822970328125*^9, 3.443823044921875*^9}, 
   3.4455463082106586`*^9, 3.471025130979971*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Clip", "[", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.44382299390625*^9, 3.443823000546875*^9}},
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{"\[Piecewise]", GridBox[{
    {"0", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], "<", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "||", 
      RowBox[{
       RowBox[{"Sin", "[", "x", "]"}], ">", 
       FractionBox["1", "2"]}]}]},
    {
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     TagBox["True",
      "PiecewiseDefault",
      AutoDelete->False,
      DeletionWarning->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.84]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]}]], "Output",
 CellChangeTimes->{3.443823001390625*^9, 3.466449884291711*^9},
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Clip", "[", 
    RowBox[{"2", 
     RowBox[{"Sin", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.443822266109375*^9, 3.443822321890625*^9}, {
  3.443822894*^9, 3.443822899359375*^9}},
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"\[Piecewise]", GridBox[{
    {
     RowBox[{"-", "x"}], 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], "<", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}]},
    {"x", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ">", 
      FractionBox["1", "2"]}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"Cos", "[", "x", "]"}]}], 
     TagBox["True",
      "PiecewiseDefault",
      AutoDelete->False,
      DeletionWarning->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.84]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]}]], "Output",
 CellChangeTimes->{{3.44382230521875*^9, 3.44382232290625*^9}, 
   3.443822899953125*^9, 3.466449884432111*^9},
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["PiecewiseExpand", "Literal"],
 " can take a nested piecewise function and return a single function. You can \
use this to show that ",
 StyleBox["Min", "Literal"],
 ", ",
 StyleBox["Max", "Literal"],
 ", and ",
 StyleBox["Abs", "Literal"],
 " are also special cases of piecewise functions."
}], "Text",
 CellChangeTimes->{{3.443823338765625*^9, 3.443823451265625*^9}, 
   3.4455463111794086`*^9, {3.471025145843533*^9, 3.471025145980936*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PiecewiseExpand", "[", 
  RowBox[{"Max", "[", 
   RowBox[{"w", ",", "x", ",", "y", ",", "z"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.44382326603125*^9, 3.443823271609375*^9}, {
  3.44382331453125*^9, 3.443823315328125*^9}},
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"\[Piecewise]", GridBox[{
    {"w", 
     RowBox[{
      RowBox[{
       RowBox[{"w", "-", "x"}], "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"w", "-", "y"}], "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"w", "-", "z"}], "\[GreaterEqual]", "0"}]}]},
    {"x", 
     RowBox[{
      RowBox[{
       RowBox[{"w", "-", "x"}], "<", "0"}], "&&", 
      RowBox[{
       RowBox[{"x", "-", "y"}], "\[GreaterEqual]", "0"}], "&&", 
      RowBox[{
       RowBox[{"x", "-", "z"}], "\[GreaterEqual]", "0"}]}]},
    {"y", 
     RowBox[{
      RowBox[{
       RowBox[{"w", "-", "y"}], "<", "0"}], "&&", 
      RowBox[{
       RowBox[{"x", "-", "y"}], "<", "0"}], "&&", 
      RowBox[{
       RowBox[{"y", "-", "z"}], "\[GreaterEqual]", "0"}]}]},
    {"z", 
     TagBox["True",
      "PiecewiseDefault",
      AutoDelete->False,
      DeletionWarning->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.84]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]}]], "Output",
 CellChangeTimes->{3.4438232743125*^9, 3.443823316109375*^9, 
  3.4664498844633107`*^9},
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PiecewiseExpand", "[", 
  RowBox[{"Clip", "[", 
   RowBox[{"Min", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.443823483265625*^9, 3.443823527296875*^9}},
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"\[Piecewise]", GridBox[{
    {
     RowBox[{"-", "1"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "<", 
         RowBox[{"-", "1"}]}], "&&", 
        RowBox[{
         RowBox[{"x", "-", "y"}], "\[LessEqual]", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "-", "y"}], ">", "0"}], "&&", 
        RowBox[{"y", "<", 
         RowBox[{"-", "1"}]}]}], ")"}]}]},
    {"1", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", ">", "1"}], "&&", 
        RowBox[{
         RowBox[{"x", "-", "y"}], "\[LessEqual]", "0"}]}], ")"}], "||", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "-", "y"}], ">", "0"}], "&&", 
        RowBox[{"y", ">", "1"}]}], ")"}]}]},
    {"x", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "\[LessEqual]", "x", "\[LessEqual]", "1"}], "&&", 
      RowBox[{
       RowBox[{"x", "-", "y"}], "\[LessEqual]", "0"}]}]},
    {"y", 
     TagBox["True",
      "PiecewiseDefault",
      AutoDelete->False,
      DeletionWarning->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.84]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]}]], "Output",
 CellChangeTimes->{{3.44382350375*^9, 3.44382352821875*^9}, 
   3.466449884525711*^9},
 CellLabel->"Out[13]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Using Power Series Representations "
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.42774642475*^9, 3.427746459265625*^9}, 
   3.4277465093125*^9, {3.42774663184375*^9, 3.427746642265625*^9}, {
   3.427746673328125*^9, 3.42774674059375*^9}, {3.427748358484375*^9, 
   3.42774836975*^9}, {3.427748893546875*^9, 3.427748897203125*^9}, {
   3.4445976691875*^9, 3.44459767846875*^9}},
 CellTags->"Power Series Representations"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["You want to find the series expansion of a function.", "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.443804146828125*^9, 3.44380416053125*^9}, 
   3.471025167939797*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "The Mathematica function ",
 StyleBox["Series", "Literal"],
 " will generate the series expansion of a function about a point to a \
specified order. It produces a ",
 StyleBox["SeriesObject", "Literal"],
 ", which Mathematica will display as a traditional series expansion."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44381214465625*^9, 3.44381226375*^9}, 
   3.4455463195387836`*^9, {3.4710251953879013`*^9, 3.471025195612656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.443804565125*^9, 3.443804617703125*^9}},
 CellLabel->"In[14]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"x", "-", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "-", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "11"],
    SeriesData[$CellContext`x, 0, {}, 1, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 6], 0, 
    Rational[1, 120], 0, 
    Rational[-1, 5040], 0, 
    Rational[1, 362880]}, 1, 11, 1],
  Editable->False]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44380459578125*^9, 3.44380461828125*^9}, 
   3.443812289078125*^9, 3.466449884588111*^9},
 CellLabel->"Out[14]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "InputForm"}]], "Input",
 CellChangeTimes->{{3.443812359203125*^9, 3.443812364328125*^9}},
 CellLabel->"In[15]:="],

Cell[TextData[StyleBox["SeriesData[x, 0, {1, 0, -1/6, 0, 1/120, 0, -1/5040, \
0, 1/362880}, 1, 11, 1]",
 FontFamily->"WriTheSansMonoCond BoldItalic"]], "Output",
 CellChangeTimes->{3.443812365171875*^9, 3.466449884619311*^9},
 CellLabel->"Out[15]//InputForm="]
}, Open  ]],

Cell[TextData[{
 "You use ",
 StyleBox["Normal", "Literal"],
 " to create a regular Mathematica expression. Here I also \
use\[LineSeparator]",
 StyleBox["Evaluate", "Literal"],
 " because I am defining a function and want ",
 StyleBox["Normal", "Literal"],
 " to evaluate immediately even though the function is defined using ",
 StyleBox["SetDelayed", "Literal"],
 " (",
 StyleBox[":=", "Literal"],
 "). Equivalently, you can use ",
 StyleBox["Set", "Literal"],
 " (",
 StyleBox["=", "Literal"],
 ")",
 " to define the function without ",
 StyleBox["Evaluate", "Literal"],
 "."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44381229215625*^9, 3.44381229634375*^9}, {
   3.443812372515625*^9, 3.4438125240625*^9}, {3.445268468703125*^9, 
   3.44526852571875*^9}, {3.4455463219919086`*^9, 3.4455463281012836`*^9}, 
   3.471023739699284*^9, {3.471025248079473*^9, 3.471025249090884*^9}, 
   3.4710985251995068`*^9, 3.471101017046752*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"Normal", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{
  3.4438043991875*^9, {3.443804432125*^9, 3.443804449015625*^9}, {
   3.4438045104375*^9, 3.443804515625*^9}},
 CellLabel->"In[16]:="],

Cell["\<\
You visualize the accuracy of the series approximation by plotting over \
successively larger intervals. As expected, this series approximation begins \
to diverge as you move away from the origin.\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.443812668390625*^9, 3.44381267475*^9}, {
   3.4452679906875*^9, 3.4452680946875*^9}, {3.4455463321325336`*^9, 
   3.4455463482731586`*^9}, 3.471025488435349*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsColumn", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], ",", 
         RowBox[{"f", "[", "x", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"-", "n"}], " ", "Pi"}], ",", 
         RowBox[{"n", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.471093952075692*^9},
 CellLabel->"In[17]:="],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
39rzv+9b/wd3ifAW
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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

         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      PlotRange->
       NCache[{{-Pi, Pi}, {-1.000003408605857, 
         1.0000034149460366`}}, {{-3.141592653589793, 
        3.141592653589793}, {-1.000003408605857, 1.0000034149460366`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {189., -119.58957682310464`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
ENRX4X2tQ68gHl+89efodYKa6DO/UpgO8WSFO2+5E0FNuSOs8KQI4unrL0p/
hhPUNDsFQ7MKiGdm0045qBDU9+Zqtzf9hnjuQvXp5P0ENVf7RMxEF8TzWaMX
wr0JaoGKQ1kZA2J2B2WnmQ1BLZb3GA5mQ7xAP/hqTRRBLRF9KXRuDcSLf8+l
tOcT1LJVGft3ikC8lOZ/gbeFoFZMl1kvb4R4+XT2mt/k79UDLd61O0hm/BkN
0CeoP5uY6XGHIV6xnXkU8Jyg1ldyN1w7TnK+mNkRFkFtLJScUzUneWSvxPoK
gtr6dpcs3wWSVwwiPyQS1I4IHe3WGyTPXCh57kVQu32tHVPdSa67E2reRVD7
XW+FuQaS7PdE7VMGQR229/+kHUXyxlBO9y0ElWER3yOSQsYTF3f0WjJBHdMp
WNP3gYx/Ltn7wgaCOvW08kfrbZI31fd/tiKoc/WtL2oPkPkqBSpd20NQl0Tp
J8v+p8e6hhtuxgSN8/SieCHpn/nvqYsPzxO0Va8F2jM8SH0vCR3xKSBofAOy
Ca8JUv+/vD93hBE0QaXdF19ykfXZGnE1woGgUZ2Pbgn4RtbP/BOP1Q+CJpZv
NupB+nfc5k5WsC5Bk5q3z3bRgxgTP1L/8BK0Td6BB6zrIKbHmJhu1yNoW6pj
F0xJfwwL+xiWyxA0ZYH3UOckxAMXbPacLido+yIbju1shbgreq2IqRZBO9jR
x785hvSre39a+DJBO7Jx6pekDeln9ZsWcbUETTtTwpKrF+LfJ7JZQ7YETXdc
SWo2GeK6t1e+LF0kaEb7D3cyyHnxvWnA4TZ5vQWytW8ahfhr9d6+sH6CdmbV
TaXvWRCXPhXqvk7Ga6vnxYJkvT5tRaKcXATtcuNb13dTZH+yc7WJ9wTt3jDT
120Z4rhRxyQ8QdDct6/o3UAQRz579B+cImieLhRBO7IfQvlDj1TJEbSApX0R
xrwQ+8b+yUkwJ2ixFLe3chSInQTct6v9IWgJFs+uijWS8yjY0GOvBUF7E5uw
gz8C4nPYXO6zPUHLlP9aMC0F8UlNxW/ZLgStRJXvW/VmiPcfLp2ariNoZY+k
A74MQrwjUUEnKoKgfavYbpibBrFC36oftwQJWp2RSVMs6WexRZMe6zyC1nUh
csDpAGRN+0rsrz9BiHA+VVglogdZGcuzty6IEiKr/JK0GzZBVlKr4vvVjoQI
n89632eLkBUdyqhHfIQIxV2cd817yPJ9f+Lb4+eEyEZn3rULwpBl6xof88mV
ENE4QRfuaYIs/ou927tUCRFtY3vT+CzI4jjd+GJhhrxp6PeGnvGFzOm9C4ft
yfVNtdppTQchs/MZpbXhESFyfv9PseoYyMxuT3zGJUeIeEplyWSfg0yDqYht
0lRC5Im4ko3jIcgkRNQ9NpL7BdDexm+lQuZesTahTB9CJGRdgmxSOWRKfFuf
4kPepF4vB8tFKEBGb5Xh8OtUQgT13lJ8OAoZN502s6f3EKIc6fv36bnC0fvp
noP9WwhRntCk1KMYjl6JeDKUHUuI8roJSR1xgKOnHGzRqWOEqLD+MMeuM3D0
YMnv1jhVQlSWGf1TjID0md3Xd4FoQhTsWrrYyw/pjrp3a054EKLuRRVh91/D
Ee0Pax12+RGinq93r3aRhCN77r1ovK1PiD7xf3XfMRSOyG7htRfSIkSfnXK1
tX0Ch+fUZBqaxwjRuAXFbdpX4XDa8Y4C3ThC9Iv603LKPji8eumE9BFRQpT9
7cTEuxo4mHvmygcrBUJ0heszV9UcHIy+5G5y7yQhxk1sog4pwEFPM+XuTcqE
GP+nyb3yXnDQZOinaKYJISaTE+aSpAYHWH2rG6ttCDH12D9TsTlwQEEjbZ2l
EiHmdcts5nkU7PO+vC5GxYwQXytrwb7tALsWyv9LydQlJNacZO/TjoUNN0Hq
h/ILhAR/aaTl+3TYsP3g2ndGewgJ4a373EQ/wvoRaXfp80aEhMSyU9lAM6w/
l9yRn1xPSCi96zP2FYZ1r14edWxnEhKGSz+vVvrC78YW9eJGFYREeGp84rFb
sCxufbHM+TFCIpp6uCLbE5YJSzws4GohJF49bB0WD4bIe8nFgOMoIfH2BG3H
0HtY2iKu6yH7g5AoWvT74jcMP7lERnejFUKi3fRGS/VZmPu2dy+/1SpCouuL
wMKu6zAnqCP62rpWQqJfIWN91EOYNfAkJSDyDCHBWBiwc4iG6Q9z1Lb/CyIk
lt+emuRthIlpkS72NQGEJLfwrNiNPhg/stU+5cEOQnKNW/ih1gkY47F8oO7s
CiEpbFL3OE0IhqQbmB8hwglJkc/XkinrYeCj19+HrUYJSUkF3qr7ytAz3f9V
YrYqIflfcAq95zC8mV5Qp3hMifj/93dL///93f8D+hguuw==
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlwk0Vd8Xx58xs/fMqV9JyFSRkiTnmsqUoRSVUEmUKRVK5pJQKRKRKaQo
isycK3Mo85zxueZ3zZ75f/9rWcv6rH3ud+/93eec++45l+v7bpJIJEbir/n/
/1GhLw+skna+Qzn1VUoDDMJQoYjizZCYPSh7/ZpCZpEuKvSqVHtAWBtlD9P8
HPnfOCoUWham9NYBZTeczeOfFkOFAstF+17nomx/vawDEmpRoXvVKodC9NAd
3ScXeqmDqND5JrcWr/soy9ai22QdCRXip46LXv2NMr4qvK1/uQkV4l0DagnG
KKNl4Q21lQJUiIs3ymqwDWWU5Yy7/CYbFWJW1f544x/KUJUq+GHWExVcfJUk
7zCLMpASFddLxlHBdtXL6u7CcJvjx/eB42RUMOpVw/WXtnD1JddH0QY2VPBN
6v4nfyfg6kmWSQerWVTwZdGjTxRnSB8PUbTU8UMFg0alpyI9IF1HoXW62hUV
9FB9ev99CFxhHladG0tEBc1H1YPSsuHih+PHwZAuKrhTNftL2SaclR93OqLf
hQoKrHMd7mmAeG3g+hxJDBUkF9/KXY6DuIqBW+EikY9NbQ88pAZpuyi7zHOy
UYGVU2GtHx7BqRmDNaXEWVSgHbHf8FqGYxXyHsnliahAM6nS/101HNN0Stw/
QkIFGsrFWHPeQuxXBr+cmx8qUKnRSZ46CkerBfd73rJBBXK0dCQv34MjXT7O
PV2uqMDr0/uMVGbhoKxr7GHnQVTgBevjVjMUDtxNYH90FEUFgqu7LFxfwf5w
mS9nnhHsd+bV9fRDsK/l/WxGJoIKuOhuegg7wW7H1MzrtkT8rEF3wtIkbFmQ
OXNqjaiH3fT13I8RWEI1L5B3J5jlcsAaaxwsusTDULNJMMON+4yXL8L8Vobd
uhN+KP/qg4v8DLXwR4d/Da8pCeWfiBE9avINJitftHI/QXDdYLI7zRMktyfa
SOQRXDUR4aupCD4ZkDqP3ya4fP7Js7eTICOvrK9Si+AiZrvoU1fBD5UK+wU7
gr9IyxaGaYKiorYoNS8iX4jLjw1ZLlDlWrldGoqg/EGeKczeVaDagcOvxYng
AP+3XM0+oMZaJO3oPxTlfxTh8Z/nHKjTfh/dUEbo3c4/qV7TARqWgsyE2Qk9
/a0K/5tJoJle0qL0gYhzvmhjTVIGXUfuTXwtmkX5d2jU3f2rCrreOuubMRJ6
jEtlfZvqoGvFyFrDYhDlW7v6OefSadCdXzXelmKD8k0c9LWhmINeudKG/4yb
UL7qRtlCf0/wb2h/t2xINsr3y19MIusx6FdSCK9YFkP5yo4JvvrnB/qfqG6H
rSIo388PJLsTwWBgv1GecT/BKY4dfHPRYFC2wUeIRugHcPk7XisEQzrLQ78O
E/m9UffOV2Vg6Ja6xe9vRPzhfUfN0l9gKJg3NpvNBOVz7TPfufM3GKo9t8eX
SkL5rDPlq5p7wLCWg6C5KKF/xUZcYbsfDF8j49I64SifuYBw3MFhMOxzJuti
ChE3eszo9nwSDOfbWoV/J+KnDLr2aqyBEYk76a09syifynZjiMsWGFGPnTbQ
VUH5jub8WopnBCMW1ssfOIn18ru+1q9xgJGQVPgkwQ/lE50K9PyxC4xMqoRv
27iiFHrooRZxNUB9uz5HeT+LUhbPH+XkTwTUz+d5Uc1ElDK764Q2CxOgluh/
EjKXRiljGVo/x34D6tB/RjvGRFBKR71FzFcLMCplVTi8l4xSWiKutsSXgFHl
moHv4oTenys3OMP3gtHT7cHf7qIopWrKydsNA6M3By19Agj+yRlwTeU+GE0o
z7bZ04RSslufvZfpAqNfLWP0D9uglMzYsNZdJ8FoUQJ1oF8MpaTIvdPeYgSj
bfuehbZ4opSEhThv3A6MDtr8+fMpG6XEFiflDdaB0Wn9SyIhxPoIg0zpinCA
Me0h651FUMor/u/XchcBxsMu7QSI+kJ6896nmQNMJPGyQEoXSgm4U871fA/A
5Nu6ax8Q9dwNbZ81ygSY6fWujEgVlOJ0vlcGIQPsUrEx5+QgSnHYNXhd8R7A
rlW43H5F6NlkTLYJqALMlXrH/RuRz/LeLDdLPMA8tiTseXRRisXJJZ0VBoD5
1GkMpRBsXL+d310LsNAHVlQ3e5RiEMk8Wy8PsNfmx88+D0cpZyw5ZEpeASxq
WoqUTEIpWhK817/OAyzuaJRQKvG8+rRAbMJFgCUpzO8TJealmruzLbwIYKlD
KXLSRD/Kj/dyB/wHsC9nBIsig1HKIS4ZX1sqwH4o9kylEP3JtB0quKgLsJ/5
26ytxHwl45TmzmQArGAxMI64/yj7bE/InuABWPHY3zQmor7/5NVvyLoBrOyN
3ocqeZQisqgVt6sDYOiiue/JOJQiUKLbzn0CYBU8VrWXBFAK+YkR91YcwCoH
Kx/ZPUEpXIbnT8+SAFZ9Z0Z0nth/bAIWvkO2AKvJVsstZ0MpTH1XC1pqAFb7
TairgBklb6dcn6uUBVjdzf74hmCUvO5oL/vzJcGdy2lTXCh55ajTjTTCj9/M
5TuHFVDy/IZbXPQFIj6d8EVPFyXTKj3anxcQ/GrhrV0lSp4M8+bx2k3o4/+l
8HehZOyD8O8UB4J3rcKIaJQ8/PVHUGMeUQ+P9M1vhF5/2VnNFWaAVVWtCGIk
lNzzZ2xbzJToR+vHmpwlSu4YCCjWI+b761n62ENDlNwy+5+H2zThxxtJK1cq
Sv5LKlCKI/wou3E/dFEAJddTzuFVQYSf68N6ZUS+mn0zGbRWgBVeKdqzTdRT
cSTYXkQMYHmBZ5A5e5QMtfZLaDgBLMetLcJ5HCUXny8dvE3MN1s283OoH0rO
t7WIi9wBsMyMndVSJSg55/6CRakZwNIXb/b570bJGVHSzbw4wBKHy1XqiXyf
0ipenFAj9k/w9T5dQv9jvpXe9RCAvaOzHUMJf2O7Isp/SgDspbLvA8VslPxu
4pB3/12APWcZOucah5IjVutUd5QBLDDRrt1UGyWHiW79uGwBMM/jqwHWnig5
WC7GOTAVYG7HIo1VCD+eqB2VzSTmc2fbme0/EZT8+KpD8vYLgFnRl2+wDaJk
x4S2iJRfANMMWdy/QeSzz3Yx/sMLMNX5fXkGaijZtpyDc8USYEoH8o1+h6Nk
y2HwRG8FYOLbMqt6hN5ZiS/3ceK8kOxCzmb3oWS9YzqKIg/B6IquOZcqipJ1
dAZmNKrB6Mzax66PbSj51C3Bm5E2YLSnubIyjej/4Ge/iyfegtEfprqHGYl6
ZIp28V0fBqOfyk7e+kTsL8nfP/+EKYDRuM28hDtEP/9NTZ3u/w1Gg5a03TIW
UTLPoYvHA7fAqEVj5k3LcZT3n52FYlwToC5etpVSqUR52/5FuaSQAHV0WkLC
qRblbTBr+5qhAKidZ1mKrMxQ3mItU5nCcEAt9L5GbvVEeWPE9Pd1mACqV2KT
1OogymvWo8bH2wRGVo7avlRDUF5D00cmwiQwMtqb9ShUDOXVqi14uUcBjLRd
rHvYR/CR/GMc8uFgJLsurDFMHuUlRx5i1DMBI7c+K76ImEZ5Goz2zgc0geHG
VwfZw5hRnooqK4UQEhgujMRCHcxQnmK1OOfXCmA41a33frk2yvNFTmQyIRwM
Py4IeWCci/IEs1GGS0zAsIzbg6/cfSiP1i+mlqUmMOTV+zr9WAPKXXxsLMf+
LxhkNSl1quNBuXPUTVYGWsBA/3ZHtlg2yp1xukjtYgcY+H7gANdtG5Q71jys
SrsPDJi1qF0qQ1Bur4eKnWKToD8m1eAvgzTKfbLEa62bGfzbGQXN1P1QrhIt
sqaeKuhesrjJKWmPcpaaqDTLpIFWRek+IcZplL3OzbXpvQL4Ef6racStAN2R
IdRzSmEfrPmF8b7cTEFZvrOy6BRNwp6a/WtVTgIoS/q93/mvM2AvC0t+kREb
ypIwFC5j7wh7NX+zPNuxjrK8LN3FLTgDe0tX9/VeV0BZHO8rtLnOwr4fE1xH
tvegLAeGLW9ILcP+qMa6/Kf3Ueb4shy/CEY4JH7eff+9EpQ5St5z3qECDgHJ
00GZuijzi/fqtsgTOHRlpJ6Rsxplfvyg7gyNBQ69lbKdxtxQ5svyA7x6bHCY
tYz/ScEjlFkwluPDNg8cxnbeXbi9F2UK87hWfGcXpEZGTVu26qNMT7hP19a+
h9RvWj9cvDtRJq+Pch1SopBa0z0yEJWGMt3+szQ7RPDaL/59XGYok55UiJS5
CBy19rn7LOgcysTS/uO1lgDEJF4y6FXeRhl9jzLd2sUFx+J0ZEQ7e1FG97rx
+55hcOzHeJDl0xGU0dm60b+DE47V3e05yiuOMl4NfRf3mgOOLR/bFmxIQBlP
jsi17GCD40b+7p9llFEG+hsztQUWOL7Ge3aun4Iy3J1N5fu9BSfVrGq1XFZQ
htvCP6WiTeGk0ZkrItc0UYbr6lWqN1PgpI3Qz9k7v1GGc2Gj10n6cDLQwTtf
AkEZlGQkvx+LgpO1/+5+kIxBSYvX0owTD8Ipo9m9aZXiKGk6OO+Gkx+csj51
rOw4G0qiZlV7qLbAKRfXHfXxKSipbROLb/eEU6+CEi1y5lDSz/dSNI5KOPXn
wfRqsg5Kcm/5FPbAEk6fMY6Jj3JHSc6r+YmaWXD6wtxxrtVclHRLrCaXzAin
bT3iq0+toyRz57HeL+lw2v9I5JWnv1GSCqe07MAinC60Dm/28IHb889M37wV
gjMSz2mBGbpwa8XBjAvcgzOj1QODpzLgFnbjKdTShjNzXXze6eJwq/1qvtsZ
Yv1mjUOosC3cyjkn2mVUAGmCiJF51x+45aI6lHJ1A9I0Yx6vDQ3CzTEuF7XH
TyAtql/ju1IZ3OxgTcT9LkBaYn3ayQ11uFlFakl+IgVpX6LsYrIt4WbykjJb
aC2klVb84ZN5Ajet/m20xXJD2rD3jtf3XeBGR1aIY2EUxCVtJBlfZcGNqs8l
e0tvQfzgnivvhL7BjdyPMy3lKhA/Wnj2+K8GuPEm2lSltgfiWk/Vp5sn4IaR
vwhz1x6IW993k3PfDzdOeenl9+IQtxOO4hI6CzfkH3jdHkAh7vhOKTeLBW5w
OPQ3jV2H+EO5srK2LLhefS41bvkTxMM/n9WRn4DrPw07jdc8IR512KPzbjdc
TznDzrilD/HY16NCb6ThesBJRweWaYinTrkIVLTD9bvH4nezl0L8y7Dv8tfj
cN3m8N+/3C8hnvWzuF5eD66rSygdE1SAeMFs/Plnn+D6wT224zsZIF5qoXo3
9Atc3y0SFbu7BeLlsdMXvUvh2hrXGoPEfYjX5ftwKTbCtZ9LaKNSAcS71HuQ
oQtwLY1P94Uwoddr3CS5nAbXog41Ga6lQ7xfw0qqthuuud8aaCiPhvhItfLf
amu4ZvfkVlgqGeLYJa9ZxgW4djERNwwOhvh4o9Fu8VS4pty91WDsAfGZi68G
nlXANanloLAjNIjjd9bG40zhmjA/j6GQHcTnrk0MHWOGazsOR3Gu9kN8QeVy
k8kjuLpi+F/9v4sQX8QN+uS64eqYfWoo+gfiy0HF+loDcLXz6UGDlNMQX9n6
5HuhBq7WJP3kfFYG8VVznm0bcbiaX6ZWf0cZ4muvZp0+esHVTz2VoUbfIL7+
WT8seQWuvlsxNDgiBfGNj7vVJerhajB/G6dgPMQ3vW0Dj7yDq54KV36vCkF8
S0X88c48uGpvOBLSR/i/1XrB/o4pXLVwuKOPskJ822gjbcMTruo+XeD46ENw
hvBPjAmuqiQ/+h20RPBY2pEnrnBVGjKG3HaEsyTG89PF1XBVpDdE/yyVYAYe
LVN2uMpG5+NQtCTWDzIfk5GD9FWBmN8CbQTHW23fq4D0CcV9z+mGBJ86uFem
C9K7z37W660k6ilxnlF6B+l1txXZoRrBuyWGCpwhvTCooC45l+jH0jjyPzqk
f/6IPA+SJ/p9jBezNkJ6DKzVc0gh/PBhlTc9AenP+0zYz+4m/LKO+CfYAekP
6Z11CpGEn/tihtJYIP22oPVzAS7C78qdTiEGkH5ZcUx35QkxjzP8rX4fIF31
9nJt2T2Iz9N8BWJ3QLrsM5/gpElivnwLikepkC6awqr7lDgfuPD4l1oeuLL2
T7DW8BzEJyusX37bgiuTqx+CD/8m9o/DqFKTMlzpFZLU5deE+OjsYoafHVwp
Nj5a03ME4oOJRf0fXeBKxp2SZ6VfIP6vzr1xvBmuxAZrn0kSh3hPS/WKpRJc
8So/X2NPgXjbs8N5tyFcufOv95kBsT+bjxh5Pk6CK1fWbpw5TIJ4Yxl3Y/Iq
XFFTcqtemoV4tYfXgDcCV+SN14K67SH+K1UR7fsJV3Y7BpwuGYR4WU6UT0I7
XN5IfV0d2ATxPLfHB68JwOVS4exqShbEUx7KO9sehssZg/oUK6K/BO0iGRkX
uPw+fcTyyzLEY6YyXgichcueqoIL2sS8Xta3HBbeB5eVLL3E3Gsh7t6OqTYA
uCwuKXCn4g7EXb3P3Bcwg8vkma/5ZB6I3yZpXhf0hUs0n8Gzn80gbhmz/ykq
CZc+J+k86iXqQ4RdTtcrwaVoh/5q6UCIq8Q9vMS3Ay49O+JJeUDsd4XNq4V4
JlyyrfiSzuMI8X3nulr8/sGlvRhvO0KHOOlszL3r03AxSrbncBoF0vJD2if2
nYeLTxbuPZrPhbSvLQztbQ1w8V4JVzWwgLSPS+nxGd5w0fQssOyKh7RXLZGv
kyzhIpdLSginLKTdpB5+8/4yXAjIdaa6akIa513tvp4FuHDXm+1wySic2X7a
bKgbABdsdJK82IPhzIJHspFhNlw41dFGSf4DZ3oW9BmTTsB5+uoJ9fbLcCbd
EClrz4fzLupMMarE+0ftdSu7AB+ct7rYtysyEs4cqrjJbCUK58+65H6g5cIZ
sbabZnrP4Lxc0s3k5GU4wxyJn9E7D+fGmWsyOT3h9O/X1OL6NjhnUx9a1ucD
p02ef+OX9IGz5y7xU32C4ZT2ZPW9z/xwVuPutF1XOpxSkl2ZZNwLZxVCKieO
1MGpfYZ/pMpfw1mekgczYxxwcvNYQZfCXeKeB1m0BFE4mRNfWjxiD2nPGlUE
NCThpOhAuros8V69Pa5r/VQVjrfmtrSYEO9hA6tUb3odHIe/Jsw6XOG0XDtj
nKMFHM8oWOqdloBT0+Ul3ecfwPHAq+oTvS/glHOs4vl92XBcMTg/r54HTroZ
iZ4uOwDHnj+u3GzkgeMPc6YPrhC/h6Qd5nfU1kBqsO+rDXscjhyQOC6YdgRS
7YzIit/a4Ahnbu/ZojBI1d4dbrdYBIdnD6PBwQ/hyHZheLPfEzhcQK3/0/0Z
jrgvvE6LFoXDesZXPGsU4fDNWxEmNdpwyE7zquTN/XBQ0zgqVTIaDuxnV9ZT
J8FOOlCNrQyEnQ71pqq92xBl+lKpVtwB4dxSo0dnGyh7bbZ5Wt4alPmgXHNH
40FXvPMFC90h0MUs+ctX0QZ0/Wu89nhUHXSpd96//OQr6P5P3inJ/z3oenjX
pnCZD3THTj6dLDoHumhXmfRNS0FPjF2et9wv0N3JLV8dZgb6Iq2Fk3mSQe/H
BH1yhykY1DkwvTR5BAxIM0CmznZAPSmSBbIWwfD4ZDbDqz+AetWV76RcAxhh
jlitN94DqL41D5Q/fQQjYgcs/efOAGql+8mDCefAiDnnTLWnHRg921qz6+V3
MFJR2/DTagZgNi/7V5ycATV6+UTSDQ0wHsTCkyU7BjBFg5Oxf+zAeLrl3S9p
xPem3sbOKeMOMP47py1NPApg1yMMi6TTwQTv9fcfRE8DLOK+eoZpEpiIRqVC
2VMAtrCpefxhBpjM8FK3G7cBY9n88STv+2C6ac55T2oPmOCPypFO6AXT8+nn
MlnzwIT0o5vRq/1gRsD6+IlbEWDilKbsxq6/YMa8kWQmYwgm7LzfuLNbgZn+
9DfPM8vARH7SRU7By4A2bZ23mJMEJs2eS+ZDPTAbiG2P2uSCKU9t+YzBATAb
+ctNniIOpp77Lv693AhmUz9Q3crDwdT7D3KjlG9gtsasjiTuBKZKvGK5X+8F
cxy/3ohSpcDUVvXddikbMPc6XsLkVjSY9n4iRBFoAvMJF3SLnb3AzI0DLCzh
wWA+i8d2CWiCGZeQBs3kLDBfVuN/mMwBZrxapJLWfoD5/hOFyd+jwUwk502P
8t1g4b89ss8X88BMhVS1RVEZWHg/xmXxaB7Qdq2cfn/qF1j4kij9xqAI0KRe
zkywaoOFokvaDbv9AU2R3ePL9BZY6K73BmVkQNP5xHHI9iVYFMmiHWA4BGhO
gULTNhFgMcrz79Kz24CWnxfCxO0PFtMUpw9bHAE01KMrzrUNLP6cYnOQXgW0
ul0PdtWrg8X2q0jf72BA62F3Dz+tDJYENL5XcqcB2ppvwfJUC1jav9a42e8M
cMZzER+67oIlpZzJ41nHAM6x43HCuwtg6byUeIZJJcB3ClvyzY+BpTccEW8i
hgB+7M+zr/WWYCmpIqvBNh3gat85L7jwg6XvjxtYj7kCXOvBTfbpBrDUhDM/
7NgCuMlHv9hfj8Eyb+uDa6K7Ae4Qmd6Zex0s7w17/X6SCnCXp/IvZ2vA8mGd
r23FGQB/YH7BRF8CLBvlY7pXVQHul+j7gWsfWH4RZ3440QLgb6uS/Pj2gOX4
z9f6dywCPPag3JtFZ7CclecY5hIO8ETX5pMvgsFyc5P/hHodwL+EmcdlsILl
4X9h79LsAJ5lKz/8lxssL0y+O83DCPBcEdbulQNgRYg5M/kfka+UP6dgsx6s
HKDkm2p3ALz8ymN3RS2worKnfDvTDeBVvsde7dUFK5dVOi29iHobL9tpXn4E
VuKdGIX+31+vtW5W0nGwkvWIq9K/AOD9QaLy31zACvpM2G3CDOBDwcW8Wmpg
ZThJ/m/BC4CP7bsa7dYCVha+HfcRkwX4RL4Fjr0FdOZiTfln1QCflhHmibMA
dKl28+cXCT9nE5rqEgIB/fjw9eNl7wE+n1Jzbe8uQNfFHTEpZYAvPnXPM1QH
9EsbHpEvWgC+rNH3bacEoN9hD9BcIua90r1ysS0b0B8Lhc1d5QD46tnK8YM3
AP3F/ncJlWkAX/ugVXFUEtDjFZKN5DUBvl7r5mY1AehZpzI3IgYAvvHX+HOo
MKCj+vlf1h8DfPN7j872P0BvNv916YYIwLdcKUau2oA+bNu443cuwLfZF+Y3
9wL6wt3OvCMmBPv6v1D+C1aZfYZtY6YJbipM3DMGVgVDZ/gZggnejO2SeQJW
paJXyh0kwCyJSYCFuOdWj6cxujShRHzSSqVYEazq5nDvUbEk+Iv687ujYPUS
KtyQQCdYp8448z+wertR3GtHJFFPyfYOWWuw6tVzUMZFkWDewQsSJWA1bOx4
Z8cfon51ZzYDabD6YVEzSP020Z/uZ5Gqe2A1i+Hs0TRWov9Db9KVjoNVlMd8
hDuZ8GtWniEjAaw277r++oE6wOkv3GNKZsDqsLQT6Osh/GW9z3NnEKwuHPOg
absDfOmK1AElElhj1gyIy+QH+ELoy3aGKLAmaPzCgD8b4HPvso+opoE1Kct3
q16GAMd9wwJyEsCarvvXi/pPAD457NtLewLWLgUWMP8QA/j41biTzyFYux3+
K2dnCcBHc33U+LvAWtiXLt7xJYAPLCW8BSJg7UP+cJnJG4D3DYyGs9iBtW+V
M44FhwDenbrlst0H1poGGOueEeehpSp/ip3QH6zLv8NL+PnXKlUQEQBrs7mO
XO9MAV7ftbPAlQOsk5+3G39SA3il46fv3K5g3eTop/YaPuL87C5XfTkN1m32
WnoYsxHnq8hMbP8yWHfloIh0bAI8Q+WlmtkJsP5q4NEVbBzgSZ0c+ufcwfrf
EMNh1lKAv4j7NEu6DNYHHjAEvvwB8GDCymA/sI5b50kKEfdLQKVobHIa2OA9
ttdeiujHw7n/kWMm2DAamKOdtge4tTHF/vAhsPHnWNRakADAZcBbWvVbsNEv
ZhDHQ+zvffMZkWYGYIPGSTr1dhvgokHLHmU/wSb3oINf6iTAOc/rNSf/Aptn
Q9VYq1BAm/Iq8w/8AzYbBof4WRwBLY2fUdafH2z21b/NfXEd0OL+yba/MAGb
03n6FwXNAS3iOQ9vLgfY4grNiZHUBDS/IJmc8b1gy1A5aK+OCKBdEvq10BcA
turD5OSeVAAa83t9D7UdYKtXKvHttiqYWS2Z0lk2AFuT5UKkhz/ADK2Cj5Vq
DrbZl0ntzslgpuvRrsar3mBb17rD1yIAzHyJNPaoMwbbVUr+rcT5nNELZK9b
bUdI1k6OpxwGwbTbh+XH2rsQ0i3VtPlPu8G07ZmxWZ1VhOSyY+gT1QJMX+jA
qiJGEZJPsjmfVROYVknRDv38CSF96NQYO4+CqY0tHr4HRxFSn4bw61MJYMqv
KDYnwBphuCTwa5RiBSbvV3D1nlJFGK6FLra9ZwaT1zKME+qvIgy3maQqxb+A
SSN38Y0aaYTh0VzIR6UVMHkgp/WFRjvCEPfn3LWL4WCiq7me7iOEMAw+G/oX
WwEmjmVyWIZIIIy31kkdUtJgrMdP2SW1CmFyH1KvUV0A1I4zpmek7yFMPjU6
2eerAbXM2Dnd7QrCFPTVMMYxGlDTtKK0LeQRpqiHl+/EqwPqg9mbXQcmEKY8
ijuZIQRQBazyuRLUEaYlja8WteJg5OxH3P+yF8J8L3nX5AVTMPQj8KNbiwnC
4np9ldslC/RFTaSVvjJEdkRe98d8mUGd+LbGo1PuCHuksN7+GH+YrqLF8Quz
QTifV8r4MhvA5l9k2/svOhDON9ptqqU2sHlrScxu2BHhfF/ls+zuDltO5v/L
O3kE4cyobnMaT4Ytue3fj0nfRzgb63wtG+iwNfUWafNfF8JF+dOu+jYFtvv6
5xheQBCumG6/ZakN2C0QVZJxwwbhSr4s932QD3Yb2t9JtONCuL70dDjFHIDd
TzhMnaKJ54v75EY5z8Hu+ZKVZJoKwvWvv6MVT4c9jc07qTEkhHsfVf57wQXY
98hYJiDbEeH+TOty0vsGBz7bTbDdN0S4v/dbiL+ZhQOdolfOaEQj3IWNnZ19
R+Ago0FS8LdMhLsus1PTOQ8OHn6AD8RqI9wTtzuEIyAcDH4UK7IdgvBIY63l
/5rg0DFhqwdrkQiPQsd5jwN8cEhfouszLEN4VKpa5V3N4JA1fydrjAnCo5vS
8o6xGw4Fv33xwyEA4bG/3ux4YBgO9YiLdI+/R3g+9f8VursAhz0UunQm0hCe
rD9G9cXKcDjkVMwPHi6EJ7/0jz+zJxz+IB0YPRiM8NTENU5FbcDhX+8Wb1Gd
EZ6xyw1oCTPxPdF5oljsKMIr1fH7DqsQHHmXpjH11RbhPVStL2ZsAUfSvSw9
ZRQQXuWfde3R7+FIodzOBcPdCO/pyDpEbg8c6dkZJZxErLc7VytocgBSReWV
zpwl1qf+qYLvVSD1zeI1g6sbCO83e7WsQ1RITQ7xbJTyRHjzGXLiK15D6vdZ
Yy/TbIS39miS9/QkpDbJMlluJCK8k++91UAcHOUwXGh6m47wLigtyrXpwlER
iwcm7CkI73rjnV32S3BUShExVKxFyKx+8t56B+Cohp6bxNFchCycI2rp5gdH
H3C6ZE+4IuRd2+1tah1w1N/TISr8PkIWM3xtuEMejr7I3v82TQwhS2NsJ2O7
4WiqzwvOZGK9qsiyaNURONryUtjUJAUhq9/8/uZVMBz9d2ap8o8EQtb84cRx
aQCOjtUtjXhLI2QDg5FVWhgc3ZBkubpqj5AtfZq7hUchJn5wkXYxDCHb1L8w
GVaDmNxe9+Z6EkK+KaJbm/kGYkodNx9lE/mcvsMCDXWIaUccyEgl+rm75aXA
GQkxw2i94NwGhOxuoPypfQpiZtfutyYQ+j7Ur+9uR0PshrrfvtMKCDlQ0YH3
KA1it00zbFAi3zMfiaBtbYjdPeD+dIHQCxeOdY+Yg5jPTp/YSmJ9pO1FmpUu
xJ4cY4qa242Qo7/z2UnHQyyEUhBqMI6Qk/SfXyjVh9hb7lOzeDRCTn2n3fgs
EWLv5c7vnRNAyJ+pJB3TZYglsO8r70UQ8jeF4tLdhhD7mGYglcuMkH94exzF
PkIsndFVIXYWIef9PpKZvQaxzP8Uz02bIORiIZqElwnEspYPvTYn9Cqybwrw
bkAsb+jKqWRCr2ZTLLTnHMQK52sfRyYi5Aa9PqaUdIiVoDMey0R9TVHvvJy3
IAYNbq2UEPG2kXMLJy5ArPx1u1El4Ve3As8dpkyIVUS0XPp/vn+P64b/MEKs
ymTddy/x/FDd08vRFhCrrp3OvEMwJoS0XP8GsZp1DXMOFYQ8aTT92CEVYrUj
WFVJOkKmPYuWco2DWF3w9wV+Yt7zqFaTRwTBE5o2E4Tfy3T8kU8IxH6zHP/v
PBkhryvGSjz1J+J9h8rziP21ffv0nzBPgp1q7o4HIxSm5HnPCGdCvzC+94wf
QtnRGy/+/iaRH55TalJAKFwCeg1JlkR9Pj4nlMUQCtlwyT2d8KNyGR6mhyMU
gadJYll6RH8HsofveyIUkTLD33kI0T+ZlkCPRii7l+n3S49DrOwH/8k2R4Sy
73DKnspDhH8chVy3ShCKpL1xbb0k4a/ow8nDdIQik7ju1rIbYj8H8UNtbAjl
YPen3d38EPtx9XvuYTJCOcJ3rnqQA2Lfwi+1XiLqVdbfch1jgNgXT98bWShC
UQ38IjpDh1iaYGFhF4JQ1EsuVC7iEEu6lZBWS9SrucTgvI5BLM6pxr2a6N/A
zqKCvRVir98qnU8m4sYJzE7k3xAL/ZlkkaaCUM53ZgsLoxB7Gpx6aIvww1Jv
xx1JYj6e2iWWMiSEYuOfIyhPzOeu/NJVMyJuW2QFlYj5OFTzBrjZIBQnuTx+
DWIel9nlH7MR+e7aXivVJeZh+sMkdIJ4/sEH7lvGxDz0OKKPOhP5fXhsi6/a
QUy5+k9QmAhCCThDvml7FWIHZbp7Mon1Qb4lvHfMILZfVVP0gglCeTnHf+Oh
BsR4rllqsmcjlAgZyO2nAjEmDymxtXSE8u767fxnh+AoXeVx544ChJLQ+ovz
7W44Oli8JqRC+Jud55qTTYejXwuPJPITfuXiu6/m43A0cY+d3F7Cz8IDtTvK
MDj6Rs6BvMsCoZTH7L3S0EbcZ6rzsjjRb4vXH6bxLDh6XDyAx4yopyP34Vc8
jbgPC1LPXB5EKD0zkubLxP0pOP/9/G/CjxGrx5nMIZC6YBI4e5LIt6ghZyZm
B6mfU6andAmmK2o8wu9B6rvYfpYpQn9jn3lSmR+kPgUy4X8LED5mhkDcMhZS
rZ/vccLCET7+8r6Q6CZIJe95mik8i/AJf5//fusfHFl3NPNgE0H4diWzdSlP
whHsBpfipgnCtz/gmGQ78b4p1nPbVHFF+JQ0X5RTTsARm5lUyjaC8B0/8nFs
8DQc0XM/7W8djfCdFC/iyTKDI4opqoVOfgifFiNmedYZjpBoOvs/KyB85yrU
V54nw+HYgyO8onSEz01r9hAjFxwqndM4GG+D8LkfZTVr3gmHEqM+HRwUQ/ge
Sez2SpSCQwHdpf0pXQhfALNunboGHDqtvLVfltB/XZlk+8gdDtaCL/+poQjf
d51z7+cH4ICbfJfQXCLC9/OYfXn5NByQzREQfUD0UyjpMx6+BvuHbYV9OYh6
ylkylA8LwH5jzV3dvIMIX1M1U/MdXfhvz98resrE87Onf+4Y+QF7IpWKjzES
/S6GVtd33Yc9x1PWv+cS+ehNXa8aj8PuHtZDohqDCD/D5Q3hvBLYveuNlb6F
CcLP56J14HkV7Hz9SYKlUgzhP/qu+czhLtima3tTTscP4VfpG+GUeA9be0Qr
GnxnEf5T+xb/7rwKW29/6tOqINbrZIqYMw7DlmAQrcxA6F9Ere2I90nTT+VT
kfEkhN9zfCbIawvWffb9kXcTQfi9D27ru6KwNk12Y+dZIu5/j8JzMxDWJBoa
ibcQ/HzzaJQxG6wKG3Z/fIPgWIpXmjgFlp9eCn5zgeBSVfaqWgmY7d66J6WL
hAgwhEqxCOiD/Gm5mq4hP0SA5VmyTvN+UPRgVFjOloizP9kT9GIDlDJPjJvY
E0zxFmbb8RWU73xo/YSX4H0ubBzrZFB9CxMvFCZY49wkeagdNFVWG26TCT0d
YzvT+G+g2RvIKmoQrGcw/OZKEGg5Ll2dZ0WwqXYvf7sKaM26yN+XiiAC15Qb
hGrfg47vJu7ndhDsL/ptd5YN6Nt87sZxEkUEngrLXnU8Af41bp8c3kXEn/On
xcvwgf5EVgcxOqH3mithb3IFGJSwL6NWDCICiVvh4lFSYKij/q34Y6I+dNhN
+vEUGL0+Vpt6YBARJH1RPqrvDmbEQtx+EPULMr9J/qSFg5mk+6JdWTaIIJsX
r+gpe0Dbr+lR0tWECJINxkkKV4jvtTd71i4qIIJ7Z2IahBAwm/jq7dNGEUQQ
KGzeGOYE838CGYwTxRBB7/zKiIeJYCU4WOWy9Cwi6J+oyHpvJ1jpCigXVutC
BJ8Gf3jo+AbQZZifj00T+V9ccre2fgro9Yk/8TtEPG5dWk7nNlgTNk5V9SHq
LVEPraAcBRt18qFXxP0QwbWqc/PpdQiD0Z4Yb3YLRHCbsZixho4wBHpJSBvT
ESEmZD/fmBTCUHhsNL3ZHhHiLFpQkgxAGCVrj8nvJyNCu7Mj7iWrIUxMLvqn
DrAhQuqxrYux2QhzszaHliHBAW5myy+jEbZikU3kYjQiFJRVyvq1GmHbNOd3
5PdDhEJmJIUalhB2hFXxiR2CCEXcWjrOeQ5hry7amX6fiKdcfesRzIVwdIf0
3L3liQhlrOTKxegjnJd+It5bT/4Hl0BRUQ==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      PlotRange->
       NCache[{{(-2) Pi, 2 Pi}, {-3.411241035975257, 
         3.418802741856611}}, {{-6.283185307179586, 
        6.283185307179586}, {-3.411241035975257, 3.418802741856611}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {189., -358.76873046931394`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}, 
       {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{0, 0},
      PlotRange->
       NCache[{{(-3) Pi, 3 Pi}, {-3.8240888226980614`, 
         3.8230851839135838`}}, {{-9.42477796076938, 
        9.42477796076938}, {-3.8240888226980614`, 3.8230851839135838`}}],
      PlotRangeClipping->True,
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02]}], {189., -597.9478841155233}, 
     ImageScaled[{0.5, 0.5}], {360., 222.4922359499622}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.4664498847753105`*^9},
 CellLabel->"Out[17]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "You can compute the inverse of a series using ",
 StyleBox["InverseSeries", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.445267966375*^9, 3.445267983796875*^9}, {
  3.445268119421875*^9, 3.44526813678125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fInv", "[", "x_", "]"}], " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"InverseSeries", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.445268143859375*^9, 3.4452681648125*^9}, {
  3.44526819553125*^9, 3.44526821134375*^9}},
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"x", "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["x", "5"]}], "40"], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["x", "7"]}], "112"], "+", 
  FractionBox[
   RowBox[{"35", " ", 
    SuperscriptBox["x", "9"]}], "1152"]}]], "Output",
 CellChangeTimes->{3.445268167671875*^9, 3.445268212*^9, 
  3.4664498848533106`*^9},
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ArcSin", "[", "x", "]"}], " ", ",", 
      RowBox[{"fInv", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.44526821653125*^9, 3.445268295484375*^9}, {
   3.44526834478125*^9, 3.4452684280625*^9}, 3.471093958814661*^9},
 CellLabel->"In[19]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwtlHsw1AkcwNWGbJdHk4w7W0hmwwmFu9R8l55IZU+tO+RxPZzHKpVnQ4Va
REJ3KjVNq4e6bPQw6/VlS6uOaj2WxWE3i6Xdn+xvWU1y3Ux/fObzx+f/DzMu
wuqQjo7Owq/4/W8k5ufHV4AjakzsZmpyFEh8muWsno1DDXUuMvDlQSQ0alvn
x49Qs6g9duxKChITIxF+dBcktZlO0aw9SHS39maauCM5pBfq4Pq18668/vie
gSQv41VMohSJ0PUP2s4zkdy7f4ss2RFVDUdiM98morpkNs/D7Ckqw5vGl3R2
4hTdknpmtxl+sHBfHtdIw0mV5aJj/sk4/q+R7ovop0hwp0des2pRcVYy6Xwh
DJVHaoN+srTHMUBOaqEWJ04c8OW3FOKItMR8wJCLioRHc45lapRnd8Q7+5Ti
aOn0rogATxz2XpsUHnMW5TNLi5pz9VGmjE+8T0nFYVAt16VxUHpPbPP2dDjK
nnD15lr+waGo0hJ5/WWUbhKJm7nXccD67+/ogzU4GHZWfIrdgH03ArwYxqux
Pz/By4AiwZ73siiOXRVKCs59udYYgmI3N8vK5kEU8/QT8jtnseMZulx2kGMn
1e6hwsMGRQsc3crTTFDkZm42z7mLrerbDoSbA7ZtYJVHZ1JRmMR/p9yagcKr
E+lpDy1QYPZrQUWAKQpsx6T8HBbW2LQYNU9XYY1Tks8lylasyFTkyftuY0V2
7tAt23ws/r3viYV/CBYf3KDnms+AopOCrlQqH4oSjEo922XACzyzcoHMFXgh
5wpLpZeAL9g4Wzu5GvhtkQWFXcEgCNzdJuF6gyAym/4hbAaETzWUZX7bQChx
V1DuFkBrtdPp7tCL0Drt86xYkwKiZXuX0nYLQbRj0GqrcRV0XG1PM7VSQseH
9jcRXgEgXnEx3P7ESRDn+RrQSXvoaTnMNO7vBkn8kwbfbYXQt0t/dFNyGPSv
D8r9MusNA7rPc9ztn8MgPO99XVcFQzvLxuoMbEFq6n88/o0JSDm626LraCDL
C4ubPs8EmSy+fOEnHRh28d8zf5wPw2uaD9T7z4D8VfY6i/4/QZ655ofQDX0w
ejkg+JTHQxjptzYxZh0FBVsrEak8YYy2KHC42BwmGMfSDznNgSJJffdmUAUo
WTOxKda+MF7fsjN9MwsIdnpj9v48mPi80Tr2QCVMvrsXs64/BZT7+JQtVC1M
WehnyKTHQVVCc/MQMUHNvt7A+1gPqut1TUs8qKA+8SZNkmMAKm6wb29ZE6hT
F4wG1vwCqopr4clJTqA+f5Q/1WsEqmbzC9WrDEF9k33L9aULqKZM37vEvAJ1
u/KPNvkEELsMC9YuZgC5US83fGcGEP4V32uPaYFkFHCZK3yAYPndFvbxgNxB
ezBiIwAi4kLtYd5KIAMYJembZEAkU0fK9n0Gkn3fuvjKfiDu6G9exa0GsszQ
/PGNH4F4cEdILGUDeb8lpJ7eA0TldmZDoi2QlVn8qKxDQNRlRYb4FAOJBk3P
bjgD0UEpuvoxHshe92BeYRIQPdyVUUF2QEqpZQc7rYEY8Cr/+YUUyFGp2ZeX
Q0AozjT0lOwFUvNXHh20QBBW3vcWLgbyc2LRULUGCLKxMzEaQUP57d1bYSQQ
n8JCt3clgIbquf3iKg58+xd8+9d/gYucRg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->Small,
  PlotRange->{{-1, 1}, {-1.5705106125081747`, 1.5705106125081747`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.445268241*^9, 3.44526825071875*^9}, {
   3.445268285328125*^9, 3.445268296390625*^9}, {3.44526835096875*^9, 
   3.4452684285*^9}, 3.4664498849001107`*^9},
 CellLabel->"Out[19]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Differentiating Functions "
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.42774642475*^9, 3.427746459265625*^9}, 
   3.4277465093125*^9, {3.42774824971875*^9, 3.427748261015625*^9}, {
   3.427748706578125*^9, 3.427748715984375*^9}, 3.42774879525*^9, {
   3.427748968765625*^9, 3.427748973796875*^9}, {3.44442446546875*^9, 
   3.4444245011875*^9}},
 CellTags->"Differentiating Functions"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
You want to compute derivatives or partial derivatives of functions in \
symbolic form. You may do this as a means of creating new functions or as a \
means of teaching the concepts that underlie differentiation.\
\>", "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44442444025*^9, 3.444424446296875*^9}, {
  3.444424505984375*^9, 3.444424634140625*^9}, {3.4455463512575336`*^9, 
  3.4455463589919086`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "Mathematica allows you to enter derivatives in input form as ",
 StyleBox["D[f[x], x]", "Literal"],
 " or in standard form as ",
 StyleBox[Cell[BoxData[
  FormBox[
   SubscriptBox["\[PartialD]", "x"], TraditionalForm]], "Literal"], "Literal"],
 StyleBox["f[x]", "Literal"],
 "."
}], "Text",
 DefaultNewCellStyle->"Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44442516765625*^9, 3.444425182234375*^9}},
 CellLabel->"In[20]:="],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.444425188015625*^9, 3.4664498849157104`*^9},
 CellLabel->"Out[20]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    SubscriptBox["\[PartialD]", "x"], 
    RowBox[{"Sin", "[", "x", "]"}]}], "Literal"], TraditionalForm]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4444252016875*^9, 3.444425207390625*^9}},
 CellLabel->"In[21]:="],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.444425221640625*^9, 3.4664498849313107`*^9},
 CellLabel->"Out[21]="]
}, Open  ]],

Cell[TextData[{
 "Higher-order derivatives are specified as ",
 StyleBox["D[f[x],{x,n}]", "Literal"],
 " where ",
 StyleBox["n",
  FontFamily->"I Times Italic"],
 " is 2 for the second derivative, 3 for the third, and so on. In standard \
form, the second derivative can be entered as ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    SubscriptBox["\[PartialD]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]], 
    RowBox[{"f", "[", "x", "]"}]}], "Literal"]],
  CellChangeTimes->{{3.444425428265625*^9, 3.44442543734375*^9}}],
 "."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44442523946875*^9, 3.44442535121875*^9}, {
   3.44442544503125*^9, 3.4444255021875*^9}, {3.4710255990889482`*^9, 
   3.4710256112966013`*^9}, 3.471025674489223*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.444425548125*^9, 3.444425551671875*^9}},
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.4444255530625*^9, 3.466449884946911*^9},
 CellLabel->"Out[22]="]
}, Open  ]],

Cell["\<\
Partial derivatives are easily accommodated as well using several equivalent \
notations.\
\>", "Text",
 CellChangeTimes->{{3.444426975453125*^9, 3.444426999703125*^9}, {
   3.44442719171875*^9, 3.444427202578125*^9}, 3.4455463687575336`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.444427001453125*^9, 3.4444270463125*^9}},
 CellLabel->"In[23]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", "x", "]"}], " ", 
  RowBox[{"Sin", "[", "y", "]"}]}]], "Output",
 CellChangeTimes->{3.444427047390625*^9, 3.466449884962511*^9},
 CellLabel->"Out[23]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}], ",", "x", ",", "x", ",", "y"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.444427125703125*^9, 3.44442717159375*^9}},
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Cos", "[", "y", "]"}]}], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.444427129796875*^9, 3.44442717196875*^9}, 
   3.4664498849937105`*^9},
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.444427211625*^9, 3.444427221171875*^9}},
 CellLabel->"In[25]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Cos", "[", "y", "]"}]}], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.444427221625*^9, 3.4664498850093107`*^9},
 CellLabel->"Out[25]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "Mathematica also recognizes prime notation, but this notation is more \
commonly used in Mathematica when entering a differential equation. See ",
 ButtonBox["the sidebar \[OpenCurlyDoubleQuote]Mathematica\[CloseCurlyQuote]s \
Representation of Differentiation\[CloseCurlyDoubleQuote] on page 433",
  BaseStyle->"Hyperlink",
  ButtonData->"sidebar11.4"],
 " for some important subtleties."
}], "Text",
 CellChangeTimes->{{3.466449816119711*^9, 3.466449819036911*^9}, {
   3.471025697112056*^9, 3.4710257361183157`*^9}, {3.4710257678631687`*^9, 
   3.471025775438649*^9}, {3.471025953215929*^9, 3.471025953220717*^9}, {
   3.471092549256281*^9, 3.471092591042992*^9}, {3.471092662549597*^9, 
   3.4710926949525833`*^9}, 3.471977244600749*^9, {3.4760144691369867`*^9, 
   3.476014472233474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "'"}], "[", "x", "]"}], ",", " ", 
   RowBox[{
    RowBox[{"Sin", "''"}], "[", "x", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.444425655734375*^9, 3.4444257073125*^9}},
 CellLabel->"In[26]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], ",", 
   RowBox[{"-", 
    RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.444425709765625*^9, 3.466449885024911*^9},
 CellLabel->"Out[26]="]
}, Open  ]],

Cell[TextData[{
 "You can use ",
 StyleBox["D", "Literal"],
 " along with ",
 StyleBox["Solve", "Literal"],
 " to differentiate implicit functions. Simply use ",
 StyleBox["D", "Literal"],
 " as usual and use ",
 StyleBox["Solve", "Literal"],
 " to find the solution in terms of ",
 StyleBox["y'[x]", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.445723430765625*^9, 3.445723473265625*^9}, {
   3.445723593484375*^9, 3.445723632890625*^9}, 3.446122298421875*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"implicitFunction", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "4"}], " ", "+", " ", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], "^", "2"}]}]}], " ", "\[Equal]", " ", 
    "8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"implicitFunction", ",", "x"}], "]"}], ",", 
   RowBox[{
    RowBox[{"y", "'"}], "[", "x", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4457234838125*^9, 3.4457235630625*^9}},
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "3"], 
      RowBox[{"y", "[", "x", "]"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.445723566078125*^9, 3.4664498852901106`*^9},
 CellLabel->"Out[36]="]
}, Open  ]],

Cell[TextData[{
 "There are cases where you may want to use the ",
 StyleBox["D", "Literal"],
 " to synthesize a function on the fly. In this case, use ",
 StyleBox["Set", "Literal"],
 " (",
 StyleBox["=", "Literal"],
 ")",
 " to perform the differentiation operation immediately or use ",
 StyleBox["Evaluate", "Literal"],
 " with ",
 StyleBox["SetDelayed", "Literal"],
 " (",
 StyleBox[":=", "Literal"],
 "). "
}], "Text",
 CellChangeTimes->{{3.44442876859375*^9, 3.444428850890625*^9}, {
  3.444428896265625*^9, 3.44442897103125*^9}, {3.444429042828125*^9, 
  3.444429076609375*^9}, {3.444429225609375*^9, 3.444429254578125*^9}, {
  3.444429289359375*^9, 3.44442931378125*^9}, {3.444429843859375*^9, 
  3.444429929671875*^9}, {3.444429987921875*^9, 3.444429988140625*^9}, {
  3.4455464241950336`*^9, 3.4455464261012836`*^9}, {3.47102374617908*^9, 
  3.471023747113535*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f1", "[", "x_", "]"}], " ", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "x", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", " ", "^", " ", "2"}], "]"}]}], "]"}], ",", " ", "x"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.444428976625*^9, 3.44442902959375*^9}, {
  3.44442931746875*^9, 3.444429322703125*^9}, {3.4444299508125*^9, 
  3.4444299623125*^9}},
 CellLabel->"In[37]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "x", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"x", " ", "^", " ", "2"}], "]"}]}], "]"}], ",", " ", "x"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.444428976625*^9, 3.44442902959375*^9}, {
  3.44442931746875*^9, 3.444429322703125*^9}, {3.4444299508125*^9, 
  3.4444299623125*^9}},
 CellLabel->"In[38]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f1", "[", "2.", "]"}], ",", " ", 
   RowBox[{"f2", "[", "2.", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.44442925984375*^9, 3.444429263625*^9}, 
   3.444429329984375*^9, {3.44443000665625*^9, 3.444430017609375*^9}},
 CellLabel->"In[39]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.656138471756975`"}], ",", 
   RowBox[{"-", "9.656138471756975`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.44442926403125*^9, {3.44442932678125*^9, 3.44442933034375*^9}, 
   3.4444299746875*^9, 3.444430017953125*^9, 3.466449885305711*^9},
 CellLabel->"Out[39]="]
}, Open  ]],

Cell["\<\
If you forget to do so, you will get an error when you call the function with \
a literal value.\
\>", "Text",
 CellChangeTimes->{{3.444430023546875*^9, 3.444430091375*^9}, 
   3.471026656882153*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", "x_", "]"}], " ", ":=", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "x", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"x", " ", "^", " ", "2"}], "]"}]}], "]"}], ",", " ", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.44443009625*^9, 3.444430105984375*^9}},
 CellLabel->"In[40]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f3", "[", "2.", "]"}]], "Input",
 CellChangeTimes->{{3.444430108515625*^9, 3.444430117453125*^9}},
 CellLabel->"In[41]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"General", "::", "\<\"ivar\"\>"}], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(2.`\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is not a valid \
variable.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\
\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4444301185*^9, 3.466449885383711*^9},
 CellLabel->"During evaluation of In[41]:="],

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[PartialD]", "2.`"], "0.8222603076458879`"}]], "Output",
 CellChangeTimes->{3.44443011853125*^9, 3.466449885399311*^9},
 CellLabel->"Out[41]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Mathematica\[CloseCurlyQuote]s Representation of Differentiation\
\>", "SidebarTitle", "ProductionPageBreak",
 CellChangeTimes->{{3.444428486671875*^9, 3.444428521390625*^9}, 
   3.4455464049137836`*^9, 3.4719772504092007`*^9},
 CellTags->"sidebar11.4"],

Cell["", "SidebarTitleSpacer"],

Cell[TextData[{
 "More importantly, the prime notation is not synonymous with ",
 StyleBox["D[]", "Literal"],
 " but rather with a differential operator of the form ",
 StyleBox["Derivative[n]", "Literal"],
 ". The operator form clarifies ambiguities that would result from using it \
with functions of more than one variable. Think of ",
 StyleBox["Derivative[n1, n2, ...]", "Literal"],
 " as an operator that acts on a function to produce the specific derivative. \
The number of ",
 StyleBox["n",
  FontFamily->"Birka Italic"],
 "\[CloseCurlyQuote]s should not exceed the number of variables ",
 StyleBox["of the function since each ",
  FontTracking->"SemiCondensed"],
 StyleBox["n",
  FontFamily->"Birka Italic",
  FontTracking->"SemiCondensed"],
 StyleBox[" is ",
  FontTracking->"SemiCondensed"],
 "associated with the ",
 StyleBox["n",
  FontFamily->"Birka Italic"],
 "th derivative of the corresponding variable. Some examples should help \
clarify."
}], "SidebarBody",
 CellChangeTimes->{{3.4444259925*^9, 3.44442607809375*^9}, 
   3.4444261269375*^9, {3.444426878859375*^9, 3.44442695434375*^9}, {
   3.4444274649375*^9, 3.44442752725*^9}, {3.44442760134375*^9, 
   3.444427840796875*^9}, {3.4455464108669086`*^9, 3.4455464218512836`*^9}, {
   3.471023741880473*^9, 3.471023742850441*^9}, 3.471026401539301*^9, 
   3.471977213816615*^9, {3.4760161276355057`*^9, 3.476016129066676*^9}}],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[TextData[{
 "First derivative with respect to ",
 StyleBox["x",
  FontFamily->"Birka Italic"],
 ":"
}], "SidebarBody",
 CellChangeTimes->{3.47102646712682*^9}],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    StyleBox[
     RowBox[{
      RowBox[{"Derivative", "[", "1", "]"}], "[", "f", "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], "[", 
   RowBox[{"x", ",", " ", "y"}], "]"}], " "}]], "SidebarInput",
 CellChangeTimes->{3.471094017712418*^9}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"]}]], "SidebarOutput",
 CellChangeTimes->{3.466449885056111*^9}]
}, Open  ]],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", "\[Prime]",
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarInput",
 CellChangeTimes->{3.444427908296875*^9}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "-", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"]}]], "SidebarOutput",
 CellChangeTimes->{3.466449885087311*^9}]
}, Open  ]]
}, Open  ]],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[TextData[{
 "First derivative with respect to ",
 StyleBox["x",
  FontFamily->"Birka Italic"],
 ", then ",
 StyleBox["y",
  FontFamily->"Birka Italic"],
 ":"
}], "SidebarBody",
 CellChangeTimes->{
  3.471026487249525*^9, {3.471026531642815*^9, 3.471026531747579*^9}}],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    StyleBox[
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "[", "f", "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], "[", 
   RowBox[{"x", ",", " ", "y"}], "]"}], " "}]], "SidebarInput"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarOutput",
 CellChangeTimes->{3.466449885102911*^9}]
}, Open  ]],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarInput",
 CellChangeTimes->{3.444426831046875*^9, 3.4444279414375*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarOutput",
 CellChangeTimes->{3.4664498851185107`*^9}]
}, Open  ]]
}, Open  ]],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[TextData[{
 "First derivative with respect to ",
 StyleBox["x",
  FontFamily->"Birka Italic"],
 ", then second derivative with respect to ",
 StyleBox["y",
  FontFamily->"Birka Italic"],
 ":"
}], "SidebarBody",
 CellChangeTimes->{{3.4710265480234413`*^9, 3.471026577514904*^9}}],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   TagBox[
    StyleBox[
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "[", "f", "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], "[", 
   RowBox[{"x", ",", " ", "y"}], "]"}], " "}]], "SidebarInput"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "2"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarOutput",
 CellChangeTimes->{3.4664498851497107`*^9}]
}, Open  ]],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "2"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarInput",
 CellChangeTimes->{3.44442798553125*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "2"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarOutput",
 CellChangeTimes->{3.466449885165311*^9}]
}, Open  ]]
}, Open  ]],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[TextData[{
 "For the most part, you should work with ",
 StyleBox["D[]", "Literal"],
 " directly, but keep the operator notation in the back of your mind because \
it is how Mathematica represents derivatives internally."
}], "SidebarBody",
 CellChangeTimes->{{3.4444280269375*^9, 3.444428184703125*^9}, 
   3.471023744387581*^9, 3.471026606382751*^9}],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", " ", "y"}], "]"}], ",", " ", "x", ",", " ", "y"}], 
   "]"}], " ", "//", " ", "FullForm"}]], "SidebarInput",
 CellChangeTimes->{{3.444428203265625*^9, 3.444428253171875*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"Derivative", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "[", "f", "]"}], "[", 
    RowBox[{"x", ",", "y"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "SidebarOutput",
 CellChangeTimes->{3.466449885180911*^9}],

Cell["", "SidebarSpacer"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"Derivative", "[", 
      RowBox[{"1", ",", "1"}], "]"}], "[", "f", "]"}], "[", 
    RowBox[{"x", ",", "y"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "SidebarInput",
 CellChangeTimes->{{3.444428224046875*^9, 3.44442825353125*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "SidebarOutput",
 CellChangeTimes->{3.466449885196511*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SidebarEnd"],

Cell[TextData[{
 "Many students will use Mathematica to check ",
 StyleBox["the answers to their calculus",
  FontTracking->"SemiCondensed"],
 " ",
 StyleBox["homework, b",
  FontTracking->"SemiCondensed"],
 StyleBox["ut Mathematica is also useful for generating demonstrat",
  FontTracking->"Plain"],
 StyleBox["ions of the fundamental con",
  FontTracking->"SemiCondensed"],
 StyleBox["cepts",
  FontTracking->"Plain"],
 " underlying differentiation. For example, the derivative of a function at a \
point is the slope of the tangent to the function at that point. Further, \
given two points, the slope of the secant drawn between these points \
approaches the derivative as the points approach each other along the curve. \
The following function uses\[LineSeparator]Mathematica\[CloseCurlyQuote]s \
dynamic features to generate presentations of this fact using any function \
and starting points as input."
}], "Text",
 CellChangeTimes->{
  3.44443120678125*^9, {3.44443291084375*^9, 3.444433264484375*^9}, {
   3.4455464284919086`*^9, 3.4455464356950336`*^9}, 3.471023748313373*^9, {
   3.471026672495018*^9, 3.471026699614233*^9}, {3.4711011281220007`*^9, 
   3.471101129965266*^9}, 3.471977179149519*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"makeDerivativeDemo", "[", 
   RowBox[{"f_", ",", "x1_", ",", "x2_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", " ", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fp", ",", "f2", ",", " ", "p1", ",", "p2", ",", "g", ",", "slope", ",", 
      "slopeText", ",", "buildPlot", ",", "minX", ",", "maxX"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p1", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"x1", ",", 
        RowBox[{"f", "[", "x1", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"p2", " ", "=", 
      RowBox[{"{", 
       RowBox[{"x2", ",", 
        RowBox[{"f", "[", "x2", "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"g", "=", 
      RowBox[{"buildPlot", "[", 
       RowBox[{"f", ",", "fp", ",", "f2", ",", "p1", ",", "p2"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"With", " ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"plotRange", "=", " ", 
         RowBox[{"Inner", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"##", "-", "3"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{"##", " ", "+", "3"}], "]"}]}], "}"}], "&"}], ",", 
           "p1", ",", "p2", ",", "List"}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"minX", "=", " ", 
         RowBox[{"plotRange", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"maxX", " ", "=", " ", 
         RowBox[{"plotRange", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"g", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"p1", ",", "p2"}], "}"}], "]"}], ",", 
             RowBox[{"Locator", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"p1", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"p1", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], ")"}], 
                    "&"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "=", 
                    RowBox[{"buildPlot", "[", 
                    RowBox[{"f", ",", "fp", ",", "f2", ",", "p1", ",", "p2"}],
                     "]"}]}], ")"}], "&"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "Small"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Locator", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", 
                RowBox[{"p2", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"p2", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"f", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], ")"}], 
                    "&"}], ",", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"g", "=", 
                    RowBox[{"buildPlot", "[", 
                    RowBox[{"f", ",", "fp", ",", "f2", ",", "p1", ",", "p2"}],
                     "]"}]}], ")"}], "&"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "Small"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"FilterRules", "[", 
            RowBox[{
             RowBox[{"{", "opts", "}"}], ",", 
             RowBox[{"Options", "[", "g", "]"}]}], "]"}], ",", 
           RowBox[{"PlotRange", "->", " ", "plotRange"}], ",", 
           RowBox[{"Options", "[", "g", "]"}]}], "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Initialization", "\[RuleDelayed]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"The", " ", "actual", " ", "derivative"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"fp", "[", "x_", "]"}], " ", ":=", " ", 
        RowBox[{"Evaluate", "[", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Function", " ", "for", " ", "tangent", " ", "line", " ", "at", " ", 
         "x0"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f2", "[", 
         RowBox[{"x0_", ",", "x_"}], "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"f", "[", "x0", "]"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"fp", "[", "x0", "]"}], 
            RowBox[{"(", 
             RowBox[{"x", "-", "x0"}], ")"}]}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Text", " ", "for", " ", "slope", " ", "of", " ", "line", " ", "from",
          " ", "p1", " ", "to", " ", "p2"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"slopeText", "[", 
         RowBox[{"p1_", ",", "p2_"}], "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "s", "}"}], ",", 
          RowBox[{
           RowBox[{"s", "=", 
            RowBox[{"Divide", "@@", 
             RowBox[{"(", 
              RowBox[{"1.0", "/", 
               RowBox[{"(", 
                RowBox[{"p2", "-", "p1"}], ")"}]}], ")"}]}]}], ";", 
           RowBox[{"ToString", "[", "s", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Plot", " ", "function"}], ",", " ", 
         RowBox[{"tangent", " ", "line"}], ",", " ", 
         RowBox[{"and", " ", "text", " ", "label"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"buildPlot", "[", 
         RowBox[{"ff_", ",", "fp_", ",", "f2_", ",", "p1_", ",", "p2_"}], 
         "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Normal", "[", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ff", "[", "x", "]"}], ",", 
               RowBox[{"f2", "[", 
                RowBox[{
                 RowBox[{"p1", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "x"}], "]"}]}], "}"}], 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{
                RowBox[{"p1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "3"}], ",", 
               RowBox[{
                RowBox[{"p2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "+", "3"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Epilog", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Inset", "[", 
                RowBox[{
                 RowBox[{"Panel", "[", 
                  RowBox[{
                  "\"\<Secant slope = \>\"", " ", "<>", " ", 
                   "\[IndentingNewLine]", 
                   RowBox[{"slopeText", "[", 
                    RowBox[{"p1", ",", "p2"}], "]"}], " ", "<>", " ", 
                   "\[IndentingNewLine]", "\"\<\\nDerivative = \>\"", " ", "<>",
                    "\[IndentingNewLine]", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"fp", "[", 
                    RowBox[{"p1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Left", ",", "Top"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}]}]}], "\[IndentingNewLine]", ")"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.444433465203125*^9, 3.44443347153125*^9}, {
  3.471026723167481*^9, 3.471026738495619*^9}, {3.4710267691279297`*^9, 
  3.471026791730824*^9}, {3.471977420517683*^9, 3.471977420986926*^9}},
 CellLabel->"In[42]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"makeDerivativeDemo", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"Cos", "[", "#", "]"}]}], "]"}], "&"}], ",", " ", "1.25", ",", 
    "1.75"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.44443331678125*^9, 3.4444334213125*^9}, {
   3.444433524078125*^9, 3.444433551796875*^9}, {3.44443358325*^9, 
   3.444433654078125*^9}, 3.4710991904088593`*^9},
 CellLabel->"In[43]:="],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`fp$$, $CellContext`f2$$, $CellContext`p1$$ = {
  1.25, 0.8363629452710967}, $CellContext`p2$$ = {
  1.75, -0.5311662863977763}, $CellContext`g$$ = Graphics[{{{}, {}, {
      Hue[0.67, 0.6, 0.6], 
      Line[CompressedData["
1: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
pwD+B4Lk5dI=
       "]]}, {
      Hue[0.9060679774997897, 0.6, 0.6], 
      Line[CompressedData["
1:eJwVzWs01GkcwPHJJQbZmefPVHvSaDP2JI1wbJR6fm3OpiOxWLdEhUoXCZGV
1jWW7SKbyDpFF5VaNja38jxbG03aJXFsMyac3JIxiNHMmGZ3X3zP5+V3xd6j
PpE6LBbL87/+t9I6olerVZNlFSXxyhke+B1fn9I9pyaVkYvDr03x4NMTzvJK
uZqstyr41nOCBz57HoX596lJcFmusGyEB6oS3tu7zWpSXJI06i7mwTau6F1Q
ipqYnw8IKSI8GFGvmatRqQg3iXFbl8uDlS/nuAdmlUTfI485zueB2MV3maR5
jjy47aRQrTMH+yKntNf3ZkmK2PFZT5gZGNqFRTlXfCBbUjWqqTwGlmd6W5fH
T5GO/rRjvJsIbpfmJwvbJ0gcE9yT386Fi1VcP+GuMdLHkqUuHuFAmoOlo1w7
RNzDPfLEOhy4d9W1tUU2QPLt1Ox3O02hiveSfcBAQlaYdmfanzWB04/d5EdF
naTvvP+bL/uMoOHqnScfop6SQk20ssiZDepYzxPTRleItG++ZHm0AcjXkPL6
2Xrsu8/BwuexPnw3lutBv/obB+6VCi5P64LYtdm8o70HB7jzJ0NW64ChsKQE
TfThzE7D4r/SWWBRYDtiFjqI06+3X7hxWINnr6W0sb8fxcHjvdXGXBX2csYL
38nGsTe/W3r5iAJ3rXEpzbg5iddbq8/wJdN4QNQWkl09jbVj/QqtsRxXVRRu
TR2ewaKwMjnqHMG958Q9MoUC74hkhUvRAP4R9wyq5j/ieEFCg+B9F55ba2Kh
EaqxZU1I+Su3RvzUtlEVt0GDn922eeHo2UT8Dl7V7Y/TYmE3q8AmoJv8Vnfl
z9kOFiz6h88Utw2QA2S12Kl7AYhqLfcOxYwS1qhvVoxcBzyaPAr6bshJ60Xn
jCGFLpxeMm7FXfuBeFUkYRulHpz4QU/jelJB6l7750dxF4K72r4Fc1TEK3/S
6S3PAB4KOZ3D+zSkNco6JsDBEHKa0vbfT2fRo61LNPob2JDR5Ju9xVGH9uTs
d8/cZARZL88OBUl0qeUhn1WaAGNQHvN7uLNCnxZ1KkOqQ03ANTq2tsrPgE4F
b7QOTV4EUzOfC+QCNjXaKr0nuWAKlfm2XTUTRtS33iWn4NJn4JJbeP15kQnd
JFg6/0UQB5wW5cle7DOlY9Vxu5ZKObBA8b6SY8yhCdHzpYmhXDg0+U1qyhsO
jXP1XfVqjAuma0c4/U+41NDT8E3bEQSXSx3vvy9GVHXu8K9mMQi2md6NqyhF
VNbZcWpXLALlKSun8DJEOwOL+fIEBIG7zevFtxD9JcJmD0pFsHjl3CNRHaL2
J7cPBl5AUHirUVTRjWhw5fmxoQcICmo2D4RzGbp9YqZR2IDga6vGcr45Q7F9
UF5iE4Lpnx0iJEsYalW3wpZNEfgkrBzxsWToxOP7R2xFCLgu+rLNdgxNF3dN
xkoQnG1+9pHvydB4C5c/mqQINtptbpR4M3T/7tJ8vX4EsisNyZf8/vsNRzoU
DiLwTLvzyTSEobxpRVyDDIGJ2096nw4y1NBpp5vOJIKmWr2WhmiGqhOJmcc0
gkOClOzjsQzt12T/3qtA8HxhtJEsiaGvYDxLoESQnDjcdiuFoS0Z3v7RagSr
R0PPRKQxtL6l1rpOg0Ac2LPDMouhleylc1otgjyRF6c3h6H/AnILYCU=
       "]]}}}, {
   AspectRatio -> GoldenRatio^(-1), Axes -> True, AxesOrigin -> {0, 0}, 
    Epilog -> {
      Inset[
       Panel["Secant slope = -2.73506\nDerivative = -1.63429"], {Left, Top}, {
       Left, Top}]}, 
    PlotRange -> {{-1.75, 4.75}, {-4.883651976461247, 5.739232847214023}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[
      0.02]}}], $CellContext`slope$$, $CellContext`slopeText$$, \
$CellContext`buildPlot$$, $CellContext`minX$$ = 0., $CellContext`maxX$$ = 6.}, 
  DynamicBox[ToBoxes[
    Graphics[{
      Part[$CellContext`g$$, 1], 
      Line[{$CellContext`p1$$, $CellContext`p2$$}], 
      Locator[
       Dynamic[$CellContext`p1$$, {($CellContext`p1$$ = {
           Part[#, 1], 
           (Sin[Pi Cos[#]]& )[
            Part[#, 1]]})& , ($CellContext`g$$ = $CellContext`buildPlot$$[
          Sin[Pi Cos[#]]& , $CellContext`fp$$, $CellContext`f2$$, \
$CellContext`p1$$, $CellContext`p2$$])& }], Appearance -> Small], 
      Locator[
       Dynamic[$CellContext`p2$$, {($CellContext`p2$$ = {
           Part[#, 1], 
           (Sin[Pi Cos[#]]& )[
            Part[#, 1]]})& , ($CellContext`g$$ = $CellContext`buildPlot$$[
          Sin[Pi Cos[#]]& , $CellContext`fp$$, $CellContext`f2$$, \
$CellContext`p1$$, $CellContext`p2$$])& }], Appearance -> Small]}, 
     FilterRules[{}, 
      Options[$CellContext`g$$]], 
     PlotRange -> {{0., 6.}, {-2.6948033411266796`, 3.3051966588733204`}}, 
     Options[$CellContext`g$$]], StandardForm],
   ImageSizeCache->{288., {84., 89.}}],
  DynamicModuleValues:>{{DownValues[$CellContext`fp$$] = {HoldPattern[
         $CellContext`fp$$[
          Pattern[$CellContext`x$, 
           Blank[]]]] :> -Pi Cos[Pi Cos[$CellContext`x$]] 
        Sin[$CellContext`x$]}}, {
    DownValues[$CellContext`f2$$] = {HoldPattern[
         $CellContext`f2$$[
          Pattern[$CellContext`x0$, 
           Blank[]], 
          Pattern[$CellContext`x$, 
           Blank[]]]] :> 
       Module[{}, (Sin[
          Pi Cos[#]]& )[$CellContext`x0$] + \
$CellContext`fp$$[$CellContext`x0$] ($CellContext`x$ - $CellContext`x0$)]}}, {
    DownValues[$CellContext`slopeText$$] = {HoldPattern[
         $CellContext`slopeText$$[
          Pattern[$CellContext`p1, 
           Blank[]], 
          Pattern[$CellContext`p2, 
           Blank[]]]] :> 
       Module[{$CellContext`s}, $CellContext`s = 
          Apply[Divide, 1./($CellContext`p2 - $CellContext`p1)]; 
         ToString[$CellContext`s]]}}, {
    DownValues[$CellContext`buildPlot$$] = {HoldPattern[
         $CellContext`buildPlot$$[
          Pattern[$CellContext`ff$, 
           Blank[]], 
          Pattern[$CellContext`fp$, 
           Blank[]], 
          Pattern[$CellContext`f2$, 
           Blank[]], 
          Pattern[$CellContext`p1$, 
           Blank[]], 
          Pattern[$CellContext`p2$, 
           Blank[]]]] :> Module[{}, 
         Normal[
          Plot[{
            $CellContext`ff$[$CellContext`x], 
            $CellContext`f2$[
             Part[$CellContext`p1$, 1], $CellContext`x]}, {$CellContext`x, 
            Part[$CellContext`p1$, 1] - 3, Part[$CellContext`p2$, 1] + 3}, 
           Epilog -> {
             Inset[
              Panel[
               StringJoin["Secant slope = ", 
                $CellContext`slopeText$$[$CellContext`p1$, $CellContext`p2$], 
                "\nDerivative = ", 
                ToString[
                 N[
                  $CellContext`fp$[
                   Part[$CellContext`p1$, 1]]]]]], {Left, Top}, {
              Left, Top}]}]]]}}},
  Initialization:>($CellContext`fp$$[
      Pattern[$CellContext`x$, 
       Blank[]]] := Evaluate[
      D[
       (Sin[
       Pi Cos[#]]& )[$CellContext`x$], $CellContext`x$]]; $CellContext`f2$$[
      Pattern[$CellContext`x0$, 
       Blank[]], 
      Pattern[$CellContext`x$, 
       Blank[]]] := 
    Module[{}, (Sin[
       Pi Cos[#]]& )[$CellContext`x0$] + $CellContext`fp$$[$CellContext`x0$] \
($CellContext`x$ - $CellContext`x0$)]; $CellContext`slopeText$$[
      Pattern[$CellContext`p1, 
       Blank[]], 
      Pattern[$CellContext`p2, 
       Blank[]]] := 
    Module[{$CellContext`s}, $CellContext`s = 
       Apply[Divide, 1./($CellContext`p2 - $CellContext`p1)]; 
      ToString[$CellContext`s]]; $CellContext`buildPlot$$[
      Pattern[$CellContext`ff$, 
       Blank[]], 
      Pattern[$CellContext`fp$, 
       Blank[]], 
      Pattern[$CellContext`f2$, 
       Blank[]], 
      Pattern[$CellContext`p1$, 
       Blank[]], 
      Pattern[$CellContext`p2$, 
       Blank[]]] := Module[{}, 
      Normal[
       Plot[{
         $CellContext`ff$[$CellContext`x], 
         $CellContext`f2$[
          Part[$CellContext`p1$, 1], $CellContext`x]}, {$CellContext`x, 
         Part[$CellContext`p1$, 1] - 3, Part[$CellContext`p2$, 1] + 3}, 
        Epilog -> {
          Inset[
           Panel[
            StringJoin["Secant slope = ", 
             $CellContext`slopeText$$[$CellContext`p1$, $CellContext`p2$], 
             "\nDerivative = ", 
             ToString[
              N[
               $CellContext`fp$[
                Part[$CellContext`p1$, 1]]]]]], {Left, Top}, {
           Left, Top}]}]]])]], "Output",
 CellChangeTimes->{{3.44443337965625*^9, 3.4444334220625*^9}, 
   3.444433477015625*^9, {3.44443352709375*^9, 3.444433552765625*^9}, {
   3.44443359953125*^9, 3.4444336170625*^9}, 3.4444336549375*^9, 
   3.4664498854461107`*^9},
 CellLabel->"Out[43]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Integration"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.42774642475*^9, 3.427746459265625*^9}, 
   3.4277465093125*^9, {3.42774663184375*^9, 3.427746642265625*^9}, {
   3.427748296546875*^9, 3.427748302328125*^9}, {3.427748745171875*^9, 
   3.427748752046875*^9}},
 CellTags->"Integration"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
You want to solve problems that involve indefinite or definite integrals \
using symbolic integration. \
\>", "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.445269873359375*^9, 3.445269980515625*^9}, {
  3.4455465059450336`*^9, 3.4455465076481586`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["Integrate", "Literal"],
 " or ",
 StyleBox["\[Integral]", "Literal"],
 " to compute single, double, or higher-order integrations. Indefinite \
integrals specify an expression and the variables of integration."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.471026852814979*^9, 3.471026860608313*^9}, 
   3.471977456836279*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", "x"}], ",", " ", "x"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.445284275890625*^9, 3.44528439696875*^9}},
 CellLabel->"In[44]:="],

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.445284386453125*^9, 3.445284398703125*^9}, 
   3.466449886272911*^9},
 CellLabel->"Out[44]="]
}, Open  ]],

Cell["\<\
Definite integrals provide the minimum and maximum limits, which can be \
constants or expressions.\
\>", "Text",
 CellChangeTimes->{{3.445284459421875*^9, 3.4452845084375*^9}, {
  3.4710268741202507`*^9, 3.471026886042964*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", "x"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10.0"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{
  3.44528445128125*^9, {3.445284513453125*^9, 3.445284579984375*^9}},
 CellLabel->"In[45]:="],

Cell[BoxData["2.302585092094046`"], "Output",
 CellChangeTimes->{{3.4452845463125*^9, 3.445284580875*^9}, 
   3.466449887130911*^9},
 CellLabel->"Out[45]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"x", "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "a", ",", "b"}], "}"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.44528459353125*^9, 3.44528464084375*^9}},
 CellLabel->"In[46]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["a", "3"], "3"]}], "+", 
  FractionBox[
   SuperscriptBox["b", "3"], "3"]}]], "Output",
 CellChangeTimes->{{3.4452846136875*^9, 3.44528464153125*^9}, 
   3.466449887286911*^9},
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[TextData[{
 "The minimum and maximum limits can be ",
 StyleBox["-Infinity", "Literal"],
 " or ",
 StyleBox["Infinity", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.4452847766875*^9, 3.445284815640625*^9}, {
  3.4452848684375*^9, 3.4452848705625*^9}, {3.471026896029613*^9, 
  3.4710268996028433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "3"}], " ", "+", " ", 
       RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], " "}]], "Input",\

 CellChangeTimes->{{3.445284658625*^9, 3.445284677265625*^9}, {
  3.44528471040625*^9, 3.445284758671875*^9}, {3.445284835640625*^9, 
  3.445284846734375*^9}},
 CellLabel->"In[48]:="],

Cell[BoxData[
 RowBox[{"1", "-", 
  RowBox[{"Log", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{{3.445284662703125*^9, 3.445284677984375*^9}, {
   3.445284711046875*^9, 3.44528475965625*^9}, {3.445284839546875*^9, 
   3.44528484746875*^9}, 3.466449887645711*^9},
 CellLabel->"Out[48]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "TopOfPage",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 StyleBox["Integrate", "Literal"],
 " will easily handle most integration problems you are likely to encounter \
in school, engineering, and science. "
}], "Text",
 CellChangeTimes->{{3.44528490240625*^9, 3.445284994359375*^9}, {
   3.446122307359375*^9, 3.446122309234375*^9}, 3.471027246521323*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{
   FractionBox[
    SuperscriptBox["z", "2"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["z", "2"], "-", "1"}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["z", "2"], "+", "1"}]]}]], 
   RowBox[{"\[DifferentialD]", "z"}]}]}]], "Input",
 CellChangeTimes->{
  3.445284271515625*^9, {3.4452850804375*^9, 3.4452851074375*^9}, {
   3.44528515634375*^9, 3.445285184765625*^9}},
 CellLabel->"In[49]:="],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"4", " ", 
     RowBox[{"ArcSinh", "[", "z", "]"}]}], "+", 
    RowBox[{
     SqrtBox["2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", "z"}], "]"}], "+", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z", "-", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox["z", "2"]}]]}]}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{"1", "+", "z", "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            SuperscriptBox["z", "2"]}]]}]}], "]"}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 PageWidth->PaperWidth,
 CellChangeTimes->{
  3.4452851136875*^9, {3.44528515965625*^9, 3.445285186953125*^9}, 
   3.466449887817311*^9},
 CellLabel->"Out[49]="]
}, Open  ]],

Cell[TextData[{
 "Double and higher-order integrals are computed with a single ",
 StyleBox["Integrate", "Literal"],
 " function by adding multiple integration variables. However, if you use the \
traditional integration notation, you will use multiple integral symbols."
}], "Text",
 CellChangeTimes->{{3.44528522603125*^9, 3.4452853358125*^9}, {
  3.446122312484375*^9, 3.4461223175625*^9}, {3.471027268140436*^9, 
  3.471027278071694*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"2", "Pi", " ", "z", " ", 
      RowBox[{"y", "/", "x"}]}], "]"}], " ", "x", " ", "y", " ", "z"}], ",", 
   "x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.445285341296875*^9, 3.445285434765625*^9}, {
  3.44528547346875*^9, 3.44528563890625*^9}, {3.445286688390625*^9, 
  3.445286696234375*^9}, {3.445286775953125*^9, 3.445286789953125*^9}},
 CellLabel->"In[50]:="],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"64", " ", 
    SuperscriptBox["\[Pi]", "2"]}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[Pi]", " ", 
           SuperscriptBox["x", "2"], " ", "y", " ", "z"}], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox["\[Pi]", "3"], " ", 
           SuperscriptBox["y", "3"], " ", 
           SuperscriptBox["z", "3"]}]}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "y", " ", "z"}], "x"], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           SuperscriptBox["x", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"], " ", 
           SuperscriptBox["y", "2"], " ", 
           SuperscriptBox["z", "2"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "y", " ", "z"}], "x"], "]"}]}]}], 
      ")"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Pi]", "4"], " ", 
        SuperscriptBox["y", "4"], " ", 
        SuperscriptBox["z", "4"]}]}], ")"}], " ", 
     RowBox[{"SinIntegral", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]", " ", "y", " ", "z"}], "x"], "]"}]}]}], 
   ")"}]}]], "Output",
 PageWidth->PaperWidth,
 CellChangeTimes->{{3.4452854599375*^9, 3.44528559884375*^9}, 
   3.445285739375*^9, 3.445286697*^9, {3.445286776765625*^9, 
   3.445286791015625*^9}, 3.466449888254111*^9},
 CellLabel->"Out[50]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Integral]", 
  RowBox[{"\[Integral]", 
   RowBox[{"\[Integral]", 
    RowBox[{"x", " ", "y", " ", "z", 
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}], 
     RowBox[{"\[DifferentialD]", "z"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.4452867184375*^9, 3.445286735625*^9}},
 CellLabel->"In[51]:="],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  SuperscriptBox["x", "2"], " ", 
  SuperscriptBox["y", "2"], " ", 
  SuperscriptBox["z", "2"]}]], "Output",
 CellChangeTimes->{3.44528673725*^9, 3.466449888378911*^9},
 CellLabel->"Out[51]="]
}, Open  ]],

Cell["\<\
Some integrations may return with conditionals and assumptions due to \
convergence issues. You can eliminate these by providing your own assumptions.\
\>", "Text",
 CellChangeTimes->{{3.4452884345*^9, 3.445288440046875*^9}, {
   3.445290546734375*^9, 3.445290551953125*^9}, {3.445290628015625*^9, 
   3.4452906925*^9}, {3.445290728203125*^9, 3.4452907551875*^9}, 
   3.44529095534375*^9, 3.44612232271875*^9, 3.4710237580931168`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "c"}], " ", 
     SuperscriptBox["x", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[52]:="],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "c", "]"}], ">", "0"}], ",", 
   FractionBox[
    SqrtBox["\[Pi]"], 
    SqrtBox["c"]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "c"}], " ", 
       SuperscriptBox["x", "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "c", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.445290701890625*^9, 3.466449889314911*^9},
 CellLabel->"Out[52]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "c"}], " ", 
     SuperscriptBox["x", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"c", " ", ">", " ", "0"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445290763734375*^9, 3.445290794734375*^9}, {
  3.445290870546875*^9, 3.4452909085625*^9}},
 CellLabel->"In[53]:="],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], 
  SqrtBox["c"]]], "Output",
 CellChangeTimes->{{3.445290881296875*^9, 3.445290909609375*^9}, 
   3.4664498895801105`*^9},
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[TextData[{
 "You also do this using ",
 StyleBox["GenerateConditions ", "Literal"],
 "\[RightArrow]",
 StyleBox[" False", "Literal"],
 "."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.445291237171875*^9, 3.445291255078125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "c"}], " ", 
     SuperscriptBox["x", "2"]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"GenerateConditions", " ", "\[Rule]", " ", "False"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.44529127196875*^9, 3.4760145155726023`*^9},
 CellLabel->"In[54]:="],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], 
  SqrtBox["c"]]], "Output",
 CellChangeTimes->{3.44529127796875*^9, 3.4664498897049108`*^9},
 CellLabel->"Out[54]="]
}, Open  ]],

Cell[TextData[{
 "You can also get piecewise functions as a result of ",
 StyleBox["Integrate", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.445433258796875*^9, 3.445433282078125*^9}, {
  3.44543352384375*^9, 3.44543353225*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"x", " ", "+", " ", 
     RowBox[{
      RowBox[{"Abs", "[", "x", "]"}], "^", "2"}]}], "]"}], ",", "x", ",", " ", 
   RowBox[{"Assumptions", "\[Rule]", " ", 
    RowBox[{"x", "\[Element]", " ", "Reals"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.44543330546875*^9, 3.4454334586875*^9}, {
  3.44543349140625*^9, 3.445433504625*^9}},
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{"\[Piecewise]", GridBox[{
    {
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "3"]}], 
     RowBox[{"x", "\[LessEqual]", 
      RowBox[{"-", "1"}]}]},
    {
     RowBox[{
      FractionBox["1", "3"], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], "3"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "<", "x", "\[LessEqual]", "0"}]},
    {
     RowBox[{
      FractionBox["1", "3"], "+", 
      FractionBox[
       SuperscriptBox["x", "2"], "2"], "+", 
      FractionBox[
       SuperscriptBox["x", "3"], "3"]}], 
     TagBox["True",
      "PiecewiseDefault",
      AutoDelete->False,
      DeletionWarning->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.84]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}]}]], "Output",
 CellChangeTimes->{{3.44543337615625*^9, 3.445433387875*^9}, 
   3.445433459484375*^9, 3.445433505421875*^9, 3.4664498898453107`*^9},
 CellLabel->"Out[55]="]
}, Open  ]],

Cell[TextData[{
 "When ",
 StyleBox["Integrate", "Literal"],
 " is unable to solve the integration, it will return the unevaluated \
integral in symbolic form. "
}], "Text",
 CellChangeTimes->{{3.445434533453125*^9, 3.44543458509375*^9}, 
   3.471027327861012*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "+", "1"}], ")"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.44543472890625*^9, 3.445434738015625*^9}, {
  3.445434776453125*^9, 3.445434796375*^9}},
 CellLabel->"In[56]:="],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "2", "3"], 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{"Log", "[", "x", "]"}]}]]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Output",
 CellChangeTimes->{3.445434741875*^9, 3.4454347981875*^9, 
  3.466449892107311*^9},
 CellLabel->"Out[56]="]
}, Open  ]],

Cell[TextData[{
 "Applications of integration are numerous, and it would be impossible to \
provide even a small representative set of examples here. Rather, I will \
provide examples that emphasize how ",
 StyleBox["Integrate", "Literal"],
 " can be combined with other Mathematica functions in non-obvious ways."
}], "Text",
 CellChangeTimes->{{3.445292793984375*^9, 3.445292887921875*^9}, {
   3.445292960234375*^9, 3.44529304553125*^9}, 3.446122329359375*^9, {
   3.471027337309743*^9, 3.47102735784791*^9}}],

Cell[TextData[{
 "A simple application is a function to compute the area between two \
arbitrary curves given two points. When you create functions that embed ",
 StyleBox["Integrate", "Literal"],
 ", you often want to allow options to pass through to increase generality."
}], "Text",
 CellChangeTimes->{{3.4454316021875*^9, 3.445431746875*^9}, {
   3.446122332546875*^9, 3.44612233821875*^9}, {3.471027389807631*^9, 
   3.4710273899036083`*^9}, 3.4760145314783163`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"areaBetweenTwoCurves", "[", 
   RowBox[{
   "expr1_", ",", " ", "expr2_", ",", " ", "var_", ",", "a_", ",", "b_", ",", 
    
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"expr1", " ", "-", " ", "expr2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"var", ",", "a", ",", "b"}], "}"}], ",", " ", 
    RowBox[{"Sequence", " ", "@@", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "opts", "}"}], ",", 
       RowBox[{"Options", "[", "Integrate", "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.445431373375*^9, 3.44543140965625*^9}, {
  3.445431461875*^9, 3.445431539421875*^9}},
 CellLabel->"In[57]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"areaBetweenTwoCurves", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", "^", "2"}], ",", "x", ",", "0", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.445431757234375*^9, 3.4454317736875*^9}},
 CellLabel->"In[58]:="],

Cell[BoxData[
 FractionBox["1", "6"]], "Output",
 CellChangeTimes->{3.445431774921875*^9, 3.466449892450511*^9},
 CellLabel->"Out[58]="]
}, Open  ]],

Cell[TextData[{
 "This would generate a huge messy conditional if not for the ability to pass \
assumptions about the arbitrary bounds ",
 StyleBox["a", "Literal"],
 " and ",
 StyleBox["b", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.445431995703125*^9, 3.445432041015625*^9}, 
   3.446122340390625*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"areaBetweenTwoCurves", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", 
   RowBox[{"Sin", "[", "x", "]"}], ",", "x", ",", "a", ",", "b", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"a", ">", "0"}], " ", "&&", " ", 
     RowBox[{"b", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445431805*^9, 3.445431988171875*^9}},
 CellLabel->"In[59]:="],

Cell[BoxData[
 RowBox[{"a", "-", "b", "-", 
  RowBox[{"Cos", "[", "a", "]"}], "+", 
  RowBox[{"Cos", "[", "b", "]"}], "-", 
  RowBox[{"a", " ", 
   RowBox[{"Log", "[", "a", "]"}]}], "+", 
  RowBox[{"b", " ", 
   RowBox[{"Log", "[", "b", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.445431815765625*^9, 3.445431899625*^9}, 
   3.44543194121875*^9, {3.44543197728125*^9, 3.44543199103125*^9}, 
   3.466449897645311*^9},
 CellLabel->"Out[59]="]
}, Open  ]],

Cell[TextData[{
 "Create a table of volumes of hyperspheres. Here ",
 StyleBox["Boole", "Literal"],
 " maps ",
 StyleBox["True", "Literal"],
 " to 1 and ",
 StyleBox["False", "Literal"],
 "\[LineSeparator]to 0. Note that the list of integration limits must be \
converted to a sequence using\[LineSeparator]",
 StyleBox["Apply", "Literal"],
 " (",
 StyleBox["@@", "Literal"],
 "). By the way, this is a very expensive way to calculate volume of a \
hypersphere, but it does illustrates how to parameterize the order of \
integration. Search for hyperspheres on Wikipedia or \
Wolfram\[CloseCurlyQuote]s MathWorld to find a more practical formula."
}], "Text",
 CellChangeTimes->{{3.445298342203125*^9, 3.445298395546875*^9}, {
   3.445298530359375*^9, 3.4452985620625*^9}, 3.445298617828125*^9, {
   3.445427137015625*^9, 3.44542726378125*^9}, {3.445427294046875*^9, 
   3.44542746578125*^9}, {3.446122366203125*^9, 3.446122387359375*^9}, {
   3.471027436222707*^9, 3.471027495042239*^9}, {3.471099277493794*^9, 
   3.471099283821727*^9}, {3.471977852648099*^9, 3.4719778529826527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"Boole", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "i", "]"}], "^", "2"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "\[LessEqual]", 
       "1"}], "]"}], ",", 
     RowBox[{"Sequence", " ", "@@", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "j", "]"}], ",", 
          RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"GenerateConditions", "\[Rule]", "True"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[60]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "\[Pi]", ",", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "2"], ",", 
   FractionBox[
    RowBox[{"8", " ", 
     SuperscriptBox["\[Pi]", "2"]}], "15"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.44529386240625*^9, 3.445293939046875*^9, 3.445294027921875*^9, {
   3.445294269078125*^9, 3.445294276109375*^9}, {3.445294614578125*^9, 
   3.4452946338125*^9}, 3.44529511025*^9, 3.445295288703125*^9, 
   3.445295632*^9, 3.445295693375*^9, 3.44529585559375*^9, 
   3.445296395234375*^9, 3.445298093265625*^9, 3.44542713265625*^9, 
   3.4664499165837107`*^9},
 CellLabel->"Out[60]="]
}, Open  ]],

Cell[TextData[{
 "You can combine ",
 StyleBox["Integrate", "Literal"],
 " with differentiation to create a general function to compute the length of \
a curve between two points."
}], "Text",
 CellChangeTimes->{{3.44542749040625*^9, 3.445427491578125*^9}, {
   3.445427752078125*^9, 3.44542786784375*^9}, 3.445427910875*^9}],

Cell[BoxData[
 RowBox[{"Clear", "[", "lengthOfCurve", "]"}]], "Input",
 CellChangeTimes->{{3.44542859390625*^9, 3.44542859984375*^9}},
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"lengthOfCurve", "[", 
   RowBox[{"expr_", ",", " ", "var_", ",", "a_", ",", "b_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"1", " ", "+", " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"expr", ",", "var"}], "]"}], "^", "2"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"var", ",", "a", ",", "b"}], "}"}], ",", " ", 
    RowBox[{"Sequence", " ", "@@", " ", 
     RowBox[{"FilterRules", "[", 
      RowBox[{
       RowBox[{"{", "opts", "}"}], ",", 
       RowBox[{"Options", "[", "Integrate", "]"}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.445298707*^9, 3.44529888034375*^9}, {
  3.44529921859375*^9, 3.445299232640625*^9}, {3.445427992421875*^9, 
  3.445428020609375*^9}, {3.445428575078125*^9, 3.44542857628125*^9}, {
  3.4454286574375*^9, 3.4454286640625*^9}, {3.44542906628125*^9, 
  3.445429070890625*^9}},
 CellLabel->"In[62]:="],

Cell["\<\
Or, you can compute the length of the hypotenuse of a right triangle.\
\>", "Text",
 CellChangeTimes->{{3.44543586896875*^9, 3.445435906484375*^9}, 
   3.44612239390625*^9, {3.4710275157379932`*^9, 3.47102751719816*^9}, {
   3.4760145452937107`*^9, 3.476014550460052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lengthOfCurve", "[", 
  RowBox[{"x", ",", "x", ",", "0", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.44542803509375*^9, 3.445428047046875*^9}},
 CellLabel->"In[63]:="],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{{3.445428041703125*^9, 3.4454280474375*^9}, 
   3.445428605359375*^9, 3.44542867125*^9, 3.445429075046875*^9, 
   3.4664499166461105`*^9},
 CellLabel->"Out[63]="]
}, Open  ]],

Cell["\<\
Verify the formula for the circumference of a circle given its radius by \
taking twice the arc length of a semicircle. \
\>", "Text",
 CellChangeTimes->{{3.445435675484375*^9, 3.445435701625*^9}, 
   3.445435807265625*^9, {3.445475396625*^9, 3.4454754583125*^9}, 
   3.44612239884375*^9, 3.471027538448101*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"lengthOfCurve", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"r", "^", "2"}], "-", 
      RowBox[{"x", "^", "2"}]}], "]"}], ",", "x", ",", 
    RowBox[{"-", "r"}], ",", "r", ",", 
    RowBox[{"Assumptions", "\[Rule]", " ", 
     RowBox[{"r", ">", "0"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.44543570840625*^9, 3.445435794578125*^9}, {
  3.445475272359375*^9, 3.445475300296875*^9}, {3.4454753405625*^9, 
  3.4454753409375*^9}},
 CellLabel->"In[64]:="],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]", " ", "r"}]], "Output",
 CellChangeTimes->{{3.44543576909375*^9, 3.445435795953125*^9}, {
   3.445475286765625*^9, 3.445475302453125*^9}, 3.445475342921875*^9, 
   3.4664499169425106`*^9},
 CellLabel->"Out[64]="]
}, Open  ]],

Cell["\<\
Here is a purely symbolic solution with assumptions to simplify results.\
\>", "Text",
 CellChangeTimes->{{3.445430910625*^9, 3.445430939609375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lengthOfCurve", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", "x", ",", "a", ",", "b", ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", ">", "0"}], " ", "&&", " ", 
      RowBox[{"b", ">", "0"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445428270953125*^9, 3.4454282825625*^9}, {
  3.44542834784375*^9, 3.445428362578125*^9}, {3.445428414875*^9, 
  3.44542842878125*^9}, {3.44542909903125*^9, 3.4454291016875*^9}, {
  3.445429151734375*^9, 3.445429153359375*^9}},
 CellLabel->"In[65]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SqrtBox[
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "a"}]]}]]}], "+", 
  SqrtBox[
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", "b"}]]}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "a"}]]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "b"}]]}]]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "a"}]]}]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "b"}]]}]]}], ")"}]}]], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.445428324703125*^9, 3.445428363765625*^9, {3.445428421796875*^9, 
   3.44542842940625*^9}, 3.4454285845*^9, {3.4454290931875*^9, 
   3.445429110375*^9}, 3.44542916065625*^9, 3.466449923510111*^9},
 CellLabel->"Out[65]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Solving Differential Equations"
}], "Heading1",
 CellChangeTimes->{{3.445119246359375*^9, 3.445119255296875*^9}, 
   3.446122403921875*^9},
 CellTags->"Solving Differntial Equations"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You have a model of a system described by a differential equation and you \
want to solve that equation symbolically. Two related problems are getting \
the equation in a form Mathematica expects and getting the solution in the \
form you expect.\
\>", "Text",
 CellChangeTimes->{{3.445119260375*^9, 3.44511933671875*^9}, {
  3.445211634569346*^9, 3.4452117267230263`*^9}, {3.471027569591153*^9, 
  3.471027569882697*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2", "TopOfPage"],

Cell["\<\
An undergraduate student of engineering or physics will commonly need to \
solve differential equations that model simple systems. A common problem is \
an undamped oscillator composed of a mass hanging from a spring. The problem \
may appear in a textbook as\
\>", "Text",
 CellChangeTimes->{{3.445119341734375*^9, 3.445119454078125*^9}, {
   3.445119535015625*^9, 3.44511956746875*^9}, {3.445119619890625*^9, 
   3.44511964015625*^9}, {3.445119735421875*^9, 3.445119775328125*^9}, 
   3.44612242553125*^9, {3.471027586167199*^9, 3.471027595928334*^9}}],

Cell["m y'' + k y = 0", "Code",
 CellChangeTimes->{{3.445119613453125*^9, 3.445119615578125*^9}, {
  3.4451196485*^9, 3.4451196621875*^9}},
 CellLabel->"In[66]:="],

Cell[TextData[{
 "This says that the force (mass ",
 "\[Times]",
 " acceleration) is balanced by the force of the spring, as given by Hooke\
\[CloseCurlyQuote]s law, where ",
 StyleBox["k", "Literal"],
 " is the spring constant. The key to solving this equation in Mathematica \
using ",
 StyleBox["DSolve", "Literal"],
 " is to make the equation more explicit. Specifically, the equation omits \
the time variable. You must also replace the ",
 StyleBox["=", "Literal"],
 " symbol with ",
 StyleBox["==", "Literal"],
 " and tell Mathematica what equation we are solving for and what are the \
variables."
}], "Text",
 CellChangeTimes->{{3.445119684078125*^9, 3.445119716875*^9}, {
   3.44511982278125*^9, 3.4451200113125*^9}, {3.445120046578125*^9, 
   3.445120153640625*^9}, {3.446122427015625*^9, 3.4461224393125*^9}, {
   3.471027645311367*^9, 3.471027711941681*^9}, {3.4719779819148817`*^9, 
   3.471977989383749*^9}, 3.47601458174654*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"m", "  ", 
      RowBox[{
       RowBox[{"y", "''"}], "[", "t", "]"}]}], " ", "+", " ", 
     RowBox[{"k", " ", 
      RowBox[{"y", "[", "t", "]"}]}]}], " ", "\[Equal]", " ", "0"}], ",", " ", 
   RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.44512001990625*^9, 3.445120042703125*^9}, {
  3.44512015778125*^9, 3.445120193953125*^9}},
 CellLabel->"In[67]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}], "+", 
     RowBox[{
      RowBox[{"C", "[", "2", "]"}], " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{
         SqrtBox["k"], " ", "t"}], 
        SqrtBox["m"]], "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.4451201768125*^9, 3.445120195890625*^9}, 
   3.4664499239001107`*^9},
 CellLabel->"Out[67]="]
}, Open  ]],

Cell[TextData[{
 "The solution is given as a replacement rule, and since the equation is a \
second order, two constants, ",
 StyleBox["C[1]", "Literal"],
 " and ",
 StyleBox["C[2]", "Literal"],
 ", are introduced. You can provide initial conditions to eliminate the \
constants. In this case, you can also render the solu",
 StyleBox["tion in its custom",
  FontTracking->"SemiCondensed"],
 "ary form by replacing ",
 StyleBox["Sqrt[k]/Sqrt[m]", "Literal"],
 " by the angular frequency ",
 StyleBox["\[Omega]", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.445120223203125*^9, 3.4451203215*^9}, {
   3.445120531484375*^9, 3.44512063446875*^9}, {3.446122444765625*^9, 
   3.446122448578125*^9}, 3.471023764055867*^9, {3.471027747267964*^9, 
   3.471027781357334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"m", "  ", 
         RowBox[{
          RowBox[{"y", "''"}], "[", "t", "]"}]}], " ", "+", " ", 
        RowBox[{"k", " ", 
         RowBox[{"y", "[", "t", "]"}]}]}], " ", "\[Equal]", " ", "0"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], " ", "\[Equal]", " ", "1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], " ", "\[Equal]", "1"}]}], "}"}], 
    ",", " ", 
    RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", "k", "]"}], "/", 
     RowBox[{"Sqrt", "[", "m", "]"}]}], " ", "\[Rule]", " ", "\[Omega]"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.445120329875*^9, 3.445120496640625*^9}, {
  3.44512068878125*^9, 3.445120904296875*^9}, {3.445120954203125*^9, 
  3.445120959140625*^9}},
 CellLabel->"In[68]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SqrtBox["k"], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"t", " ", "\[Omega]"}], "]"}]}], "+", 
      RowBox[{
       SqrtBox["m"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"t", " ", "\[Omega]"}], "]"}]}]}], 
     SqrtBox["k"]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.445120363109375*^9, {3.445120419*^9, 3.445120497140625*^9}, {
   3.4451206925625*^9, 3.445120905*^9}, {3.445120955015625*^9, 
   3.445120959578125*^9}, 3.466449923946911*^9},
 CellLabel->"Out[68]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "The solutions provided by ",
 StyleBox["DSolve", "Literal"],
 " are not automatically simplified, and you often will want to use ",
 StyleBox["Simplify", "Literal"],
 " or ",
 StyleBox["FullSimplify", "Literal"],
 " to p",
 StyleBox["ostprocess them into a more mathemat",
  FontTracking->"Extended"],
 "ically friendly form. This is especially relevant when comparing the answer \
",
 StyleBox["DSolve", "Literal"],
 " finds with answers provided in a typical textbook. Consider this problem \
adapted from ",
 StyleBox["Advanced Engineering Mathematics", "CitationTitle"],
 " by Erwin Kreyszig (John Wiley). Here you want to find the solution to a \
differential equation describing the speed of a fluid flowing out of an \
opening in a container. "
}], "Text",
 CellChangeTimes->{{3.445211788342947*^9, 3.445211993915646*^9}, {
   3.445212575063616*^9, 3.445212624951923*^9}, {3.445212707948785*^9, 
   3.445212739428335*^9}, {3.4710278115788116`*^9, 3.471027842536976*^9}, {
   3.476014607825741*^9, 3.476014619823769*^9}, 3.4765581338482847`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"k", "=", " ", "0.00266"}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"h", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"-", "k"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"h", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"h", "[", "0", "]"}], " ", "==", " ", "150"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", " ", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{"eq", ",", 
    RowBox[{"h", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Input", \
"ProductionPageBreak",
 CellChangeTimes->{{3.444770070796875*^9, 3.444770244125*^9}, {
   3.44477071803125*^9, 3.444770737390625*^9}, {3.4447715088125*^9, 
   3.444771514296875*^9}, 3.444771544515625*^9, {3.445213519092966*^9, 
   3.445213567707313*^9}, {3.445213607541813*^9, 3.445213624878503*^9}},
 CellLabel->"In[69]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"150.`", "\[InvisibleSpace]", "-", 
      RowBox[{"0.03257821357901627`", " ", "t"}], "+", 
      RowBox[{"1.7689000000000001`*^-6", " ", 
       SuperscriptBox["t", "2"]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h", "[", "t", "]"}], "\[Rule]", 
     RowBox[{"150.`", "\[InvisibleSpace]", "+", 
      RowBox[{"0.03257821357901627`", " ", "t"}], "+", 
      RowBox[{"1.7689000000000001`*^-6", " ", 
       SuperscriptBox["t", "2"]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.466449924024911*^9},
 CellLabel->"Out[71]="]
}, Open  ]],

Cell["\<\
Given the physics of the problem, it should be clear we want the first \
solution (the second solution has the height increasing with time). \
\>", "Text",
 CellChangeTimes->{{3.445218815779121*^9, 3.445218919087358*^9}, 
   3.4710278536168833`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.445213677840846*^9, 3.445213686151078*^9}, {
  3.445218933465366*^9, 3.445218934784205*^9}},
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"h", "[", "t", "]"}], "\[Rule]", 
   RowBox[{"1.7689000000000001`*^-6", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "9208.608147007737`"}], "+", "t"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "9208.607964143977`"}], "+", "t"}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.466449924040511*^9},
 CellLabel->"Out[72]="]
}, Open  ]],

Cell[TextData[{
 "Although this has simplified the result somewhat, it is a mu",
 StyleBox["ch more complicated solu",
  FontTracking->"SemiCondensed"],
 "tion than the one provided by Kreyszig, which is"
}], "Text",
 CellChangeTimes->{{3.445215909497879*^9, 3.445215983644664*^9}, {
   3.445216028878478*^9, 3.445216032845027*^9}, {3.4452189704667463`*^9, 
   3.445218972217194*^9}, {3.471027881841069*^9, 3.471027889865769*^9}, 
   3.47197804320236*^9, {3.4760146386888437`*^9, 3.476014638888165*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  StyleBox[
   SuperscriptBox[
    RowBox[{"(", " ", 
     RowBox[{
      SqrtBox["150"], "-", 
      RowBox[{"0.00133`", " ", "t"}]}], ")"}], "2"], "Literal"], 
  TraditionalForm]], "Text", "Input",
 CellChangeTimes->{{3.445216100591419*^9, 3.445216104784781*^9}},
 CellLabel->"In[73]:="],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"5", " ", 
     SqrtBox["6"]}], "-", 
    RowBox[{"0.00133`", " ", "t"}]}], ")"}], "2"]], "Output",
 CellChangeTimes->{3.4664499240717106`*^9},
 CellLabel->"Out[73]="]
}, Open  ]],

Cell[TextData[{
 "Did ",
 StyleBox["DSolve", "Literal"],
 " give the wrong result? A common mistake when using Mathematica is to \
prematurely substitute specific constants as I did above. It is often \
advisable to solve equations entirely in symbolic form and substitute \
constants later. "
}], "Text",
 CellChangeTimes->{{3.445216163897417*^9, 3.4452163150776854`*^9}, {
  3.4452189894263573`*^9, 3.445218994458501*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"h", "'"}], "[", "t", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"-", "k1"}], " ", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"h", "[", "t", "]"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"h", "[", "0", "]"}], " ", "==", " ", "h0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"sol", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"DSolve", "[", 
     RowBox[{"eq", ",", 
      RowBox[{"h", "[", "t", "]"}], ",", "t"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.4452137670287037`*^9, 3.44521380304528*^9}, {
  3.4452138385246067`*^9, 3.445213857558963*^9}, {3.445216344282119*^9, 
  3.445216365274472*^9}, {3.445219029575021*^9, 3.445219031804784*^9}},
 CellLabel->"In[74]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"h", "[", "t", "]"}], "\[Rule]", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SqrtBox["h0"]}], "+", 
       RowBox[{"k1", " ", "t"}]}], ")"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.445213861409898*^9, 3.445216366694989*^9, 
  3.4452190330398207`*^9, 3.4664499241341105`*^9},
 CellLabel->"Out[75]="]
}, Open  ]],

Cell[TextData[{
 "Although this did not get us all the way to the form of the book\
\[CloseCurlyQuote]s solution, you are ",
 StyleBox["more likely to see the final transformation that will demonstrate \
that ",
  FontTracking->"Plain"],
 StyleBox["DSolve", "Literal",
  FontTracking->"Plain"],
 StyleBox[" was correct. It hinges on noticing that 1/4 is the same as (\
\[Dash]1/2)*(\[Dash]1/2).",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.471027986446713*^9, 3.471028001347151*^9}, {
  3.471978060769656*^9, 3.471978066499114*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["h0"]}], "+", 
      RowBox[{"k1", " ", "t"}]}], ")"}], "2"]}], " ", "\[Equal]", "\n", " ", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SqrtBox["h0"]}], "+", 
     RowBox[{"k1", " ", "t"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SqrtBox["h0"]}], "+", 
     RowBox[{"k1", " ", "t"}]}], ")"}]}], "\[Equal]", "\n", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["h0"]}], "+", 
      RowBox[{"k1", " ", "t"}]}], ")"}]}], "-", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       SqrtBox["h0"]}], "+", 
      RowBox[{"k1", " ", "t"}]}], ")"}]}]}], " ", "\[Equal]", "\n", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     SqrtBox["h0"], "-", 
     RowBox[{
      FractionBox["k1", "2"], " ", "t"}]}], ")"}], 
   RowBox[{"(", " ", 
    RowBox[{
     SqrtBox["h0"], "-", 
     RowBox[{
      FractionBox["k1", "2"], " ", "t"}]}], ")"}]}], "\[Equal]", "\n", 
  SuperscriptBox[
   RowBox[{"(", " ", 
    RowBox[{
     SqrtBox["h0"], "-", 
     RowBox[{
      FractionBox["k1", "2"], " ", "t"}]}], ")"}], "2"], " "}]], "Code",
 CellChangeTimes->{{3.445216563162807*^9, 3.4452166659839067`*^9}, {
   3.4452167006178226`*^9, 3.4452167410916758`*^9}, {3.445216866537381*^9, 
   3.44521687236089*^9}, {3.445217476728815*^9, 3.445217570484326*^9}, {
   3.4452176780871153`*^9, 3.445217681320279*^9}, 3.445218626843637*^9}],

Cell[TextData[{
 "Substituting ",
 StyleBox["h0", "Literal"],
 " and ",
 StyleBox["k1", "Literal"],
 " with the constants shows that Mathematica did get the correct solution. \
Alternatively, you can ask Mathematica to prove its solution is equal to the \
book\[CloseCurlyQuote]s solution by using ",
 StyleBox["Resolve", "Literal"],
 " and ",
 StyleBox["ForAll", "Literal"],
 ". The only problem here is that Mathematica does not show its work!"
}], "Text",
 CellChangeTimes->{{3.4452179861756353`*^9, 3.445218097456786*^9}, {
   3.445218382836665*^9, 3.4452184084370728`*^9}, {3.445218505194489*^9, 
   3.4452185411071453`*^9}, 3.446122461140625*^9, {3.471978092705902*^9, 
   3.4719780944074287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Resolve", "[", 
  RowBox[{"ForAll", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"h0", ",", "k1", ",", "t"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SqrtBox["h0"]}], "+", 
         RowBox[{"k1", " ", "t"}]}], ")"}], "2"]}], " ", "\[Equal]", " ", 
     SuperscriptBox[
      RowBox[{"(", " ", 
       RowBox[{
        SqrtBox["h0"], "-", 
        RowBox[{
         FractionBox["k1", "2"], " ", "t"}]}], ")"}], "2"]}]}], "]"}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.4452170663663282`*^9, 3.445217134353773*^9}, {
  3.4452173480593348`*^9, 3.44521736884899*^9}, {3.4452174099562273`*^9, 
  3.4452174178191557`*^9}, {3.445217789752736*^9, 3.445217905221079*^9}},
 CellLabel->"In[76]:="],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.445217910746723*^9, 3.466449924165311*^9},
 CellLabel->"Out[76]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Solving Minima and Maxima Problems"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.42774642475*^9, 3.427746459265625*^9}, 
   3.4277465093125*^9, {3.42774824971875*^9, 3.427748261015625*^9}, {
   3.427748706578125*^9, 3.427748715984375*^9}, 3.42774879525*^9, {
   3.427748968765625*^9, 3.42774898975*^9}, {3.427749096890625*^9, 
   3.427749124765625*^9}, {3.427749745125*^9, 3.42774976125*^9}},
 CellTags->"Minima and Maxima Problems"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
You want to find the minimum or maximum values of a function. You may need to \
find these extremes subject to constraints or for numbers in a specific \
domain (e.g., integers).\
\>", "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.44547054971875*^9, 3.44547059103125*^9}, {
   3.445470649484375*^9, 3.445470732328125*^9}, {3.4455464677887836`*^9, 
   3.4455464736637836`*^9}, 3.4710280328599367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell[TextData[{
 "Although there are standard techniques used in calculus for finding \
extrema, Mathematica provides the specific functions ",
 StyleBox["Minimize", "Literal"],
 " and ",
 StyleBox["Maximize", "Literal"],
 ", which provide a great deal of power."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.445470747375*^9, 3.445470864453125*^9}, {
   3.44547289465625*^9, 3.445472914640625*^9}, {3.445475149078125*^9, 
   3.445475164046875*^9}, 3.471023767575268*^9, {3.4710280790284433`*^9, 
   3.471028098845995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Maximize", "[", 
   RowBox[{
    RowBox[{"1", "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], "4"]}], ",", "x"}], "]"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.445471287765625*^9, 3.4454712945*^9}, {
   3.44547132753125*^9, 3.445471420828125*^9}, {3.44547148959375*^9, 
   3.445471762484375*^9}, {3.445471814890625*^9, 3.44547195765625*^9}, {
   3.44547248871875*^9, 3.445472627625*^9}, {3.445472659015625*^9, 
   3.445472666078125*^9}, 3.445472861046875*^9},
 CellLabel->"In[77]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.710726576062223`", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.5897545123014585`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.44547139596875*^9, 3.445471426078125*^9}, {
   3.4454715053125*^9, 3.445471623359375*^9}, {3.445471664078125*^9, 
   3.445471719453125*^9}, 3.445471763484375*^9, {3.44547182928125*^9, 
   3.445471927421875*^9}, 3.445471958734375*^9, {3.4454724985*^9, 
   3.44547255559375*^9}, {3.44547261190625*^9, 3.445472628359375*^9}, 
   3.445472666765625*^9, 3.4454728644375*^9, 3.466449924399311*^9},
 CellLabel->"Out[77]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Minimize", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"x", "^", "4"}]}], " ", "-", " ", 
     RowBox[{"3", " ", 
      RowBox[{"x", "^", "2"}]}], " ", "+", " ", "x"}], ",", "x"}], "]"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.445474485421875*^9, 3.445474527390625*^9}},
 CellLabel->"In[78]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.029302797928665`"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "0.9396926207859084`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.44547452003125*^9, 3.44547452940625*^9}, 
   3.4664499244461107`*^9},
 CellLabel->"Out[78]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.427746466640625*^9, 3.42774650615625*^9}}],

Cell["\<\
For many applications of minimization or maximization, you are interested in \
the extreme value within a specific interval. \
\>", "Text",
 CellChangeTimes->{{3.445512239609375*^9, 3.44551232365625*^9}, 
   3.4455464758669086`*^9, {3.471028121258767*^9, 3.471028138274281*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Maximize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "3"}], ")"}], "^", "3"}], " ", "-", 
        RowBox[{"2", 
         RowBox[{"x", "^", "2"}]}], " ", "-", " ", "x"}], ")"}], ",", " ", 
      RowBox[{
       RowBox[{"-", "1"}], " ", "<", " ", "x", " ", "<", " ", "4"}]}], "}"}], 
    ",", "x"}], "]"}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{{3.44551234415625*^9, 3.44551236159375*^9}, {
  3.445512417546875*^9, 3.445512421234375*^9}, {3.44551250646875*^9, 
  3.445512540546875*^9}, {3.445512592640625*^9, 3.445512594328125*^9}, {
  3.445512667328125*^9, 3.44551271159375*^9}, {3.445512802453125*^9, 
  3.4455128030625*^9}, {3.44551284559375*^9, 3.44551284753125*^9}},
 CellLabel->"In[79]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.372603218889932`"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.4808538252326664`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.44551254578125*^9, 3.445512600140625*^9, {3.445512672*^9, 
   3.44551271215625*^9}, 3.445512804890625*^9, 3.445512848671875*^9, 
   3.466449924477311*^9},
 CellLabel->"Out[79]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["I restrict this discussion to ",
  FontTracking->"Extended"],
 StyleBox["Maximize", "Literal",
  FontTracking->"Extended"],
 StyleBox[" for simplicity, but everything here applies to ",
  FontTracking->"Extended"],
 StyleBox["Mini", "Literal",
  FontTracking->"Extended"],
 StyleBox["mize", "Literal"],
 " as well. If you are interested in displaying the result of ",
 StyleBox["Maximize", "Literal"],
 ", you will want to force the result to numerical form, as we did in the \
solution. ",
 StyleBox["Maximize", "Literal"],
 " will keep the result in exact form if it is given input in exact form. For \
polynomials, this typically means the result will be expressed in terms of \
radicals or ",
 StyleBox["Root", "Literal"],
 " objects. A ",
 StyleBox["Root[f,k]", "Literal"],
 " object represents the ",
 StyleBox["k", "Literal"],
 "th solution to a polynomial equation ",
 StyleBox["f[x] == 0", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.4455129585*^9, 3.445512959015625*^9}, {
   3.445513293515625*^9, 3.445513490625*^9}, {3.44551390709375*^9, 
   3.44551393825*^9}, {3.445513980828125*^9, 3.44551412090625*^9}, {
   3.445514207703125*^9, 3.44551427359375*^9}, {3.44551433975*^9, 
   3.445514404578125*^9}, {3.44551461584375*^9, 3.44551461959375*^9}, {
   3.445515751984375*^9, 3.44551575346875*^9}, 3.471023768803113*^9, {
   3.471028158908553*^9, 3.471028298615505*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "3"}], ")"}], "^", "3"}], " ", "-", 
       RowBox[{"2", 
        RowBox[{"x", "^", "2"}]}], " ", "-", " ", "x"}], ")"}], ",", " ", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "<", " ", "x", " ", "<", " ", "4"}]}], "}"}], 
   ",", "x"}], "]"}]], "Input",
 CellLabel->"In[80]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "27"}], "+", 
    RowBox[{
     FractionBox["26", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"11", "-", 
       SqrtBox["43"]}], ")"}]}], "-", 
    RowBox[{
     FractionBox["11", "9"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"11", "-", 
        SqrtBox["43"]}], ")"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "27"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"11", "-", 
        SqrtBox["43"]}], ")"}], "3"]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", 
        SqrtBox["43"]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 PageWidth->PaperWidth,
 CellChangeTimes->{3.44551328440625*^9, 3.4664499245085106`*^9},
 CellLabel->"Out[80]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "x"}], ")"}], "4"]}], ",", "x"}], 
  "]"}]], "Input",
 CellLabel->"In[81]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    RowBox[{"8", " ", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"7", " ", "#1"}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], "-", 
    RowBox[{"7", " ", 
     SuperscriptBox[
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"7", " ", "#1"}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}], "2"]}], 
    "+", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"Root", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], "+", 
          RowBox[{"7", " ", "#1"}], "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["#1", "2"]}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}], "3"]}], 
    "-", 
    SuperscriptBox[
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"7", " ", "#1"}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}], "4"]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Root", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], "+", 
         RowBox[{"7", " ", "#1"}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["#1", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["#1", "3"]}]}], "&"}], ",", "1"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.445512878375*^9, 3.466449924602111*^9},
 CellLabel->"Out[81]="]
}, Open  ]],

Cell[TextData[{
 "Sometimes you want to find solutio",
 StyleBox["ns for integer values only. You can constrain ",
  FontTracking->"Extended"],
 StyleBox["Max", "Literal",
  FontTracking->"Extended"],
 StyleBox["imize", "Literal"],
 " to the integers in one of two ways. You might recognize this problem as an \
in\[DiscretionaryHyphen]stance of a knapsack problem where you are optimizing \
the value of the knapsack (item1 has value 8, item2 11, and so on) subject to \
size constraint of 14 where item1 has size 5 and so on."
}], "Text",
 CellChangeTimes->{{3.4455368446325336`*^9, 3.4455368533669086`*^9}, {
   3.44572456584375*^9, 3.445724646078125*^9}, {3.445726247671875*^9, 
   3.445726276796875*^9}, 3.446122571921875*^9, 3.471029042885746*^9, {
   3.471101277855871*^9, 3.471101279680662*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"8", "x1"}], " ", "+", " ", 
      RowBox[{"11", " ", "x2"}], " ", "+", " ", 
      RowBox[{"6", "x3"}], " ", "+", " ", 
      RowBox[{"4", "x4"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"5", "x1"}], " ", "+", 
        RowBox[{"7", "x2"}], "+", 
        RowBox[{"4", "x3"}], "+", 
        RowBox[{"3", "x4"}]}], " ", "\[LessEqual]", " ", "14"}], " ", "&&", 
      " ", 
      RowBox[{"x1", "<", "2"}], " ", "&&", " ", 
      RowBox[{"x2", "<", "2"}], " ", "&&", " ", 
      RowBox[{"x3", "<", " ", "2"}], " ", "&&", " ", 
      RowBox[{"x4", " ", "<", "2"}], " ", "&&", " ", 
      RowBox[{"Element", "[", 
       RowBox[{
        RowBox[{"x1", "|", "x2", "|", "x3", "|", "x4"}], ",", "Integers"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.4457246519375*^9, 3.4457246559375*^9}, {
  3.4457247804375*^9, 3.44572481571875*^9}, {3.44572484990625*^9, 
  3.445724865109375*^9}, {3.44572513771875*^9, 3.44572530071875*^9}, {
  3.445725331140625*^9, 3.44572534990625*^9}, {3.44572539084375*^9, 
  3.445725416484375*^9}},
 CellLabel->"In[82]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0"}], ",", 
     RowBox[{"x2", "\[Rule]", "1"}], ",", 
     RowBox[{"x3", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.445725335609375*^9, 3.445725350859375*^9}, 
   3.4457254173125*^9, 3.4664499247269106`*^9},
 CellLabel->"Out[82]="]
}, Open  ]],

Cell[TextData[{
 "A more convenient notation when all variables are integer is to specify the \
domain as the third argument to ",
 StyleBox["Maximize", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.445725550140625*^9, 3.445725574734375*^9}, {
   3.4457256378125*^9, 3.445725653265625*^9}, {3.445725690625*^9, 
   3.44572571446875*^9}, {3.445726081328125*^9, 3.445726244828125*^9}, 
   3.4461567844955096`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Maximize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"8", "x1"}], " ", "+", " ", 
      RowBox[{"11", " ", "x2"}], " ", "+", " ", 
      RowBox[{"6", "x3"}], " ", "+", " ", 
      RowBox[{"4", "x4"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"5", "x1"}], " ", "+", 
        RowBox[{"7", "x2"}], "+", 
        RowBox[{"4", "x3"}], "+", 
        RowBox[{"3", "x4"}]}], " ", "\[LessEqual]", " ", "14"}], " ", "&&", 
      " ", 
      RowBox[{"x1", "<", "2"}], " ", "&&", " ", 
      RowBox[{"x2", "<", "2"}], " ", "&&", " ", 
      RowBox[{"x3", "<", " ", "2"}], " ", "&&", " ", 
      RowBox[{"x4", " ", "<", "2"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}], ",", "Integers"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.445725525765625*^9, 3.445725533484375*^9}},
 CellLabel->"In[83]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "0"}], ",", 
     RowBox[{"x2", "\[Rule]", "1"}], ",", 
     RowBox[{"x3", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.445725534171875*^9, 3.466449924758111*^9},
 CellLabel->"Out[83]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Maximize", "Literal"],
 " seeks a global maximum, whereas an alternative function, ",
 StyleBox["FindMaximum", "Literal"],
 ", ",
 StyleBox["seeks a local maximum (there is also ",
  FontTracking->"Plain"],
 StyleBox["FindMinimum", "Literal",
  FontTracking->"Plain"],
 StyleBox[" for local minimums). ",
  FontTracking->"Plain"],
 StyleBox["FindMaximum", "Literal",
  FontTracking->"Plain"],
 StyleBox[" al",
  FontTracking->"Plain"],
 "lows you to specify a starting point for the search, but otherwise has a \
very similar form to ",
 StyleBox["Maximize", "Literal"],
 ". The following program demonstrates the difference between ",
 StyleBox["Maxi", "Literal"],
 StyleBox["mize", "Literal",
  FontTracking->"Plain"],
 StyleBox[" and ",
  FontTracking->"Plain"],
 StyleBox["FindMaximum", "Literal",
  FontTracking->"Plain"],
 StyleBox[". The advantag",
  FontTracking->"Plain"],
 StyleBox["e of ",
  FontTracking->"Extended"],
 StyleBox["FindMaximum", "Literal",
  FontTracking->"Extended"],
 StyleBox[" is that it does not require the ob",
  FontTracking->"Extended"],
 "jective function to be differentiable."
}], "Text",
 CellChangeTimes->{{3.4455368099294086`*^9, 3.4455368294294086`*^9}, {
   3.4455425037262836`*^9, 3.4455425880856586`*^9}, {3.4455462145700336`*^9, 
   3.4455462188512836`*^9}, 3.4455467838356586`*^9, 3.4455468378512836`*^9, {
   3.4455472420544086`*^9, 3.4455473216169086`*^9}, {3.4455473714450336`*^9, 
   3.4455474668981586`*^9}, {3.44572647771875*^9, 3.445726526765625*^9}, {
   3.446156802917384*^9, 3.446156806542384*^9}, 3.471023770015086*^9, {
   3.471029083137051*^9, 3.4710291464428663`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"x", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"0.1", " ", 
      RowBox[{"Exp", "[", "x", "]"}]}], "]"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"0.1", " ", "Pi", " ", 
      RowBox[{"Exp", "[", "x", "]"}]}], "]"}]}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"globalMax", " ", "=", " ", 
   RowBox[{"Maximize", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"0", "<", "x", "<", "5"}]}], "}"}], ",", " ", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"localMax", " ", "=", " ", 
   RowBox[{"FindMaximum", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.02", "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", 
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"f", "[", "x", "]"}]}], "}"}], "]"}], "/.", " ", 
       RowBox[{"Last", "[", "globalMax", "]"}]}], " ", ",", 
      "\[IndentingNewLine]", "Blue", ",", " ", 
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"f", "[", "x", "]"}]}], "}"}], "]"}], "/.", " ", 
       RowBox[{"Last", "[", "localMax", "]"}]}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4455434216325336`*^9, 3.4455436293044086`*^9}, {
   3.4455439802106586`*^9, 3.4455441037887836`*^9}, {3.4455441522887836`*^9, 
   3.4455441664919086`*^9}, {3.4455442214919086`*^9, 
   3.4455442586169086`*^9}, {3.4455443613044086`*^9, 
   3.4455443935387836`*^9}, {3.4455447030544086`*^9, 
   3.4455447481012836`*^9}, {3.4455448448044086`*^9, 
   3.4455448676481586`*^9}, {3.4455449101012836`*^9, 
   3.4455449842887836`*^9}, {3.4455450283825336`*^9, 
   3.4455450660544086`*^9}, {3.4455453247262836`*^9, 
   3.4455453848200336`*^9}, {3.4455455839606586`*^9, 
   3.4455455932575336`*^9}, {3.4455456252575336`*^9, 3.4455456773356586`*^9}, 
   3.4455458067887836`*^9, {3.4455458473669086`*^9, 3.4455458761169086`*^9}, {
   3.4455459327887836`*^9, 3.4455461258200336`*^9}, {3.4455467076950336`*^9, 
   3.4455467251169086`*^9}, {3.4455470981325336`*^9, 
   3.4455471330544086`*^9}, {3.4455471831169086`*^9, 3.4455472089294086`*^9}, 
   3.4455510189919086`*^9, 3.471096964529276*^9},
 CellLabel->"In[84]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Elf1Zw2eqzeysjep/x+eVE/E
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    Background->None,
    Epilog->{
      PointSize[0.02], 
      RGBColor[1, 0, 0], 
      PointBox[{4.82892428537131, 4.819210505667163}], 
      RGBColor[0, 0, 1], 
      PointBox[{1.6992264300765068`, 1.4355425044597416`}]},
    ImageMargins->0.,
    PlotRange->{{0, 5}, {-3.130968907284764, 4.818966367583266}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}], {0., 0.}, ImageScaled[{0., 0.}], {200., 120.05617971991998`},
   
   ContentSelectable->True],
  AspectRatio->0.6152808985995999,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{200., 123.05617971991998`},
  PlotRange->{{0., 200.}, {-2.999999999999989, 120.05617971991998`}},
  PlotRangePadding->None]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.446122628421875*^9, 3.4461226284375*^9}, 
   3.44612477540625*^9, 3.4664499252417107`*^9, {3.4719781485785227`*^9, 
   3.471978153994578*^9}},
 CellLabel->"Out[88]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Solving Vector Calculus Problems"
}], "Heading1",
 CellChangeTimes->{3.445639784265625*^9},
 CellTags->"Vector Calculus Problems"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to find solutions to problems within vector fields. Such problems \
arise in mechanics, electromagnetic theory, and fluid dynamics.\
\>", "Text",
 CellChangeTimes->{{3.445639797609375*^9, 3.445639848453125*^9}, {
   3.4456399476875*^9, 3.445639950734375*^9}, {3.4459402416875*^9, 
   3.445940271875*^9}, 3.4461224675625*^9, 3.471023771124894*^9, {
   3.471978171555111*^9, 3.4719781729917107`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Simple vector calculus problems can be solved in terms of the calculus \
primitives discussed in this chapter\[CloseCurlyQuote]s recipes along with \
vector functio",
 StyleBox["ns like ",
  FontTracking->"SemiCondensed"],
 StyleBox["Dot", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" and ",
  FontTracking->"SemiCondensed"],
 StyleBox["Cross", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". For ex",
  FontTracking->"SemiCondensed"],
 "ample, line integrals are commonly used to calculate work performed when \
moving a particle along a path in a vector field. Here ",
 StyleBox["F", "Literal"],
 " is the vector equation of the field, ",
 StyleBox["f", "Literal"],
 " is the equation of the path through the field, ",
 StyleBox["var", "Literal"],
 " is the parameter of ",
 StyleBox["f", "Literal"],
 ", and ",
 StyleBox["a", "Literal"],
 " and ",
 StyleBox["b", "Literal"],
 " are the start and end points of the path."
}], "Text",
 CellChangeTimes->{{3.44563945059375*^9, 3.445639471765625*^9}, {
   3.445639506875*^9, 3.445639677109375*^9}, {3.44580857228125*^9, 
   3.44580864559375*^9}, {3.445808820296875*^9, 3.44580883678125*^9}, 
   3.445808869015625*^9, {3.4458089641875*^9, 3.445808969265625*^9}, {
   3.446122470921875*^9, 3.4461224768125*^9}, 3.47102918153016*^9, {
   3.4719781796003923`*^9, 3.471978191042444*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lineIntegral", "[", 
   RowBox[{
   "F_", ",", " ", "f_", ",", " ", "var_", ",", " ", "a_", ",", " ", "b_"}], 
   "]"}], " ", ":=", " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"f", "[", "var", "]"}], "]"}], ",", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"f", "[", "var", "]"}], ",", " ", "var"}], "]"}]}], "]"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"var", ",", " ", "a", ",", " ", "b"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "+", "y"}], ",", 
    RowBox[{"y", "^", "2"}], ",", 
    RowBox[{"x", "-", "z"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "t"}], "+", "1"}], ",", 
    RowBox[{"t", "+", "2"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "6"}], " ", "t"}], " ", "+", "1"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"lineIntegral", "[", 
  RowBox[{"F", ",", "f", ",", "t", ",", "0", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.44580889303125*^9, 3.445808939296875*^9}},
 CellLabel->"In[89]:="],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["35", "3"]}]], "Output",
 CellChangeTimes->{3.445808948234375*^9, 3.4664499253041105`*^9},
 CellLabel->"Out[92]="]
}, Open  ]],

Cell[TextData[{
 "Another common operation in vector calculus is the surface integral over \
scalar functions and vector fields. Surface integrals are the 2D analog of \
line integrals. One way to think of the scalar surface integral is to imagine \
a surface ",
 StyleBox["f", "Literal"],
 " made of a material whose density varies as described by a second function ",
 StyleBox["g", "Literal"],
 ". The surface integral of ",
 StyleBox["f", "Literal"],
 " over ",
 StyleBox["g", "Literal"],
 " ",
 "is then the mass per unit thickness. "
}], "Text",
 CellChangeTimes->{{3.445810040796875*^9, 3.445810061109375*^9}, {
  3.4458116804375*^9, 3.44581173471875*^9}, {3.445815376*^9, 
  3.44581542296875*^9}, {3.445815550125*^9, 3.445815556375*^9}, {
  3.445815596984375*^9, 3.44581561959375*^9}, {3.44581566471875*^9, 
  3.4458157835*^9}, {3.4458158226875*^9, 3.44581591396875*^9}, {
  3.445815950671875*^9, 3.4458160115*^9}, {3.445816665203125*^9, 
  3.44581667659375*^9}, {3.446122483453125*^9, 3.44612248621875*^9}, {
  3.4710292002497053`*^9, 3.471029214850935*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"surfaceIntegralScalar", "[", 
   RowBox[{"g_", ",", " ", "f_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_", ",", "v1a_", ",", "v1b_"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v2_", ",", "v2a_", ",", "v2b_"}], "}"}]}], "]"}], " ", ":=", 
  " ", "\[IndentingNewLine]", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"f", "[", 
       RowBox[{"v1", ",", "v2"}], "]"}], "]"}], 
     RowBox[{"Norm", "[", 
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"v1", ",", "v2"}], "]"}], ",", "v1"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"v1", ",", "v2"}], "]"}], ",", "v2"}], "]"}]}], "]"}], 
      "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v1a", ",", "v1b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v2", ",", "v2a", ",", "v2b"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.445816206328125*^9, 3.44581621428125*^9}, {
   3.44581676178125*^9, 3.445816781390625*^9}, {3.445816857953125*^9, 
   3.445816891890625*^9}, 3.445821285046875*^9},
 CellLabel->"In[93]:="],

Cell[TextData[{
 "For example, consider the surface ",
 StyleBox["f1", "Literal"],
 ", which is a half sphere over the interval ",
 StyleBox["{\[Phi], 0, Pi/2}", "Literal"],
 " and ",
 StyleBox["{\[Theta], 0, 2 Pi}", "Literal"],
 ", and compute the surface integral given a density function given by ",
 StyleBox["(x^2 + y^2) z.", "Literal"]
}], "Text",
 CellChangeTimes->{{3.44582128953125*^9, 3.4458213605*^9}, {
   3.445821397078125*^9, 3.44582142346875*^9}, {3.445821483140625*^9, 
   3.44582151528125*^9}, 3.44612248890625*^9, 3.471029596280402*^9, {
   3.471029641770791*^9, 3.4710296617206163`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"\[Phi]_", ",", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], " ", "+", " ", 
     RowBox[{"y", "^", "2"}]}], ")"}], "z"}]}], "\[IndentingNewLine]", 
 RowBox[{}], "\[IndentingNewLine]", 
 RowBox[{"surfaceIntegralScalar", "[", 
  RowBox[{"g1", ",", "f1", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.445816206328125*^9, 3.44581621428125*^9}, {
   3.44581676178125*^9, 3.445816781390625*^9}, {3.445816857953125*^9, 
   3.445816891890625*^9}, {3.445821285046875*^9, 3.445821316546875*^9}, {
   3.445821458296875*^9, 3.44582146784375*^9}, 3.445821539609375*^9, {
   3.445850865109375*^9, 3.44585094378125*^9}, {3.445851163078125*^9, 
   3.445851177890625*^9}},
 CellLabel->"In[94]:="],

Cell[BoxData[
 FractionBox["\[Pi]", "2"]], "Output",
 CellChangeTimes->{
  3.4458214718125*^9, 3.44582154159375*^9, {3.445850887609375*^9, 
   3.44585090815625*^9}, 3.466449925491311*^9},
 CellLabel->"Out[96]="],

Cell[TextData[{
 StyleBox["If we use a constant function (uniform density), we get the \
surface area of the half ",
  FontTracking->"SemiCondensed"],
 "sphere as expected (surface area of an entire sphere is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"4", 
    SuperscriptBox["\[Pi]r", "2"]}], TraditionalForm]]],
 ")."
}], "Text",
 CellChangeTimes->{{3.445850957671875*^9, 3.4458510126875*^9}, {
  3.4458510525625*^9, 3.445851148671875*^9}, {3.44585142796875*^9, 
  3.445851433109375*^9}, {3.446122493171875*^9, 3.44612249725*^9}, {
  3.471029676022108*^9, 3.471029719853236*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g2", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], " ", ":=", 
  "1"}], "\[IndentingNewLine]", 
 RowBox[{"surfaceIntegralScalar", "[", 
  RowBox[{"g2", ",", "f1", ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4458511806875*^9, 3.44585118321875*^9}, {
  3.4458514393125*^9, 3.445851446328125*^9}, {3.44585154478125*^9, 
  3.4458516166875*^9}, {3.445851668734375*^9, 3.445851686765625*^9}},
 CellLabel->"In[97]:="],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{
  3.4458214718125*^9, 3.44582154159375*^9, {3.445850887609375*^9, 
   3.44585090840625*^9}, {3.445851442296875*^9, 3.445851447234375*^9}, {
   3.44585154690625*^9, 3.445851618421875*^9}, {3.44585167853125*^9, 
   3.445851688328125*^9}, 3.4664499256005106`*^9},
 CellLabel->"Out[98]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["For a vector field, there is a similar",
  FontTracking->"Plain"],
 StyleBox[" equation using",
  FontTracking->"SemiCondensed"],
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["Dot", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" in place of scalar multiplication",
  FontTracking->"SemiCondensed"],
 StyleBox[" by the norm. The traditional way to visualize the vector surface \
interval",
  FontTracking->"Plain"],
 StyleBox[" is to consider",
  FontTracking->"SemiCondensed"],
 StyleBox[" a fluid flowing through a surface where there is a vector \
function ",
  FontTracking->"Plain"],
 StyleBox["F", "Literal",
  FontTracking->"Plain"],
 StyleBox[" describing the velocity of the fluid at various points on the \
surface. The surface integral is then the ",
  FontTracking->"Plain"],
 StyleBox["flux", "Techical Italic",
  FontTracking->"Plain"],
 StyleBox[", or the quantity of fluid flowing through the surface in unit \
time.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.4458215571875*^9, 3.445821670265625*^9}, {
  3.445821731328125*^9, 3.445821736734375*^9}, {3.445821777484375*^9, 
  3.445821934703125*^9}, {3.44582203353125*^9, 3.44582207103125*^9}, {
  3.4710297402475777`*^9, 3.471029785921115*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"surfaceIntegralVector", "[", 
   RowBox[{"F_", ",", " ", "f_", ",", " ", 
    RowBox[{"{", 
     RowBox[{"v1_", ",", "v1a_", ",", "v1b_"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"v2_", ",", "v2a_", ",", "v2b_"}], "}"}]}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"F", "[", 
       RowBox[{"f", "[", 
        RowBox[{"v1", ",", "v2"}], "]"}], "]"}], ",", 
      RowBox[{"Cross", "[", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"v1", ",", "v2"}], "]"}], ",", "v1"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"v1", ",", "v2"}], "]"}], ",", "v2"}], "]"}]}], "]"}]}], 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"v1", ",", "v1a", ",", "v1b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v2", ",", "v2a", ",", "v2b"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[99]:="],

Cell[TextData[{
 "Here is the solution to the flux described by ",
 StyleBox["{3 y, -z, x^2}", "Literal"],
 " through a surface described parametrically as",
 " ",
 StyleBox["{s t, s + t, (s^2 - t^2)/2}", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.4458229159375*^9, 3.4458229196875*^9}, {
   3.44585123821875*^9, 3.44585126065625*^9}, {3.445936938765625*^9, 
   3.445937097375*^9}, 3.471023772704767*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"s_", ",", "t_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", " ", "t"}], ",", 
    RowBox[{"s", "+", "t"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"s", "^", "2"}], "-", 
       RowBox[{"t", "^", "2"}]}], ")"}], "/", "2"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"F", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"3", "y"}], ",", 
    RowBox[{"-", "z"}], ",", 
    RowBox[{"x", "^", "2"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"surfaceIntegralVector", "[", 
  RowBox[{"F", ",", "f", ",", 
   RowBox[{"{", 
    RowBox[{"s", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.44582285953125*^9, 3.44582287728125*^9}},
 CellLabel->"In[100]:="],

Cell[BoxData[
 RowBox[{"-", "15"}]], "Output",
 CellChangeTimes->{3.44582288275*^9, 3.445937162609375*^9, 
  3.466449925928111*^9},
 CellLabel->"Out[102]="]
}, Open  ]],

Cell["\<\
A standard result from electrostatics is that the net flux out of a unit \
sphere, for a field that is everywhere normal, is zero. We can verify this as \
follows:\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.4459397444375*^9, 3.445939905578125*^9}, 
   3.446122499109375*^9, {3.471029805705971*^9, 3.471029807364867*^9}, {
   3.476014775561781*^9, 3.476014792975101*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"F2", "[", 
   RowBox[{"{", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", "^", "2"}], " ", "+", " ", 
     RowBox[{"y", "^", "2"}], " ", "+", " ", 
     RowBox[{"z", "^", "2"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.445938214859375*^9, 3.4459382623125*^9}, {
  3.445938706484375*^9, 3.44593871484375*^9}, {3.445938845578125*^9, 
  3.445938853296875*^9}},
 CellLabel->"In[103]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", 
   RowBox[{"\[Theta]_", ",", "\[Phi]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Phi]", "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
    RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.445938274140625*^9, 3.4459383778125*^9}},
 CellLabel->"In[104]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"surfaceIntegralVector", "[", 
  RowBox[{"F2", ",", "f2", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445938390359375*^9, 3.44593846009375*^9}, {
  3.445938536484375*^9, 3.445938539421875*^9}, {3.445938600734375*^9, 
  3.445938629078125*^9}, {3.44593957365625*^9, 3.445939582109375*^9}},
 CellLabel->"In[105]:="],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.44593846790625*^9, 3.445938541640625*^9, 3.445938631859375*^9, 
   3.445938731265625*^9, {3.44593885709375*^9, 3.44593888425*^9}, 
   3.445938986390625*^9, 3.445939583765625*^9, 3.466449926240111*^9},
 CellLabel->"Out[105]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "The solution shows how the calculus primitives and other Mathematica \
functions can be used to build up higher-order vector calculus solutions. \
However, if you are interested in solving problems in vector calculus, the \
package",
 StyleBox[" ",
  FontTracking->"SemiCondensed"],
 StyleBox["VectorAnalysis`", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" is defi",
  FontTracking->"SemiCondensed"],
 "nitely worth a look. Be forewarned that you might be in for a bit of a \
learning curve with this particular package, but it offers a lot of \
functionality. An important feature of the package is that it simplifies \
working in different coordinate systems.\[LineSeparator]Before you can make \
effective use of ",
 StyleBox["VectorAnalysis`", "Literal"],
 ", you need to understand how coordinate systems are used and which \
coordinate system is appropriate to your problem."
}], "Text",
 CellChangeTimes->{{3.445898839609375*^9, 3.44589900934375*^9}, {
   3.445899065734375*^9, 3.44589935946875*^9}, 3.44612250090625*^9, {
   3.4710298741766148`*^9, 3.471029930521986*^9}, {3.471101341977844*^9, 
   3.471101343078979*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<VectorAnalysis`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.44589936975*^9, 3.44589939046875*^9}},
 CellLabel->"In[106]:="],

Cell[CellGroupData[{

Cell[BoxData["CoordinateSystem"], "Input",
 CellChangeTimes->{{3.445899424890625*^9, 3.445899433046875*^9}},
 CellLabel->"In[107]:="],

Cell[BoxData["Cartesian"], "Output",
 CellChangeTimes->{3.445899434046875*^9, 3.445940337984375*^9, 
  3.44594045521875*^9, 3.445948128609375*^9, 3.466449928174511*^9},
 CellLabel->"Out[107]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetCoordinates", "[", "Spherical", "]"}]], "Input",
 CellLabel->"In[108]:="],

Cell[BoxData[
 RowBox[{"Spherical", "[", 
  RowBox[{"Rr", ",", "Ttheta", ",", "Pphi"}], "]"}]], "Output",
 CellChangeTimes->{3.44589946946875*^9, 3.445940360078125*^9, 3.445940459*^9, 
  3.44594813046875*^9, 3.466449928205711*^9},
 CellLabel->"Out[108]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["CoordinateSystem"], "Input",
 CellLabel->"In[109]:="],

Cell[BoxData["Spherical"], "Output",
 CellChangeTimes->{3.44589947734375*^9, 3.44594036209375*^9, 
  3.44594046259375*^9, 3.445948132953125*^9, 3.466449928236911*^9},
 CellLabel->"Out[109]="]
}, Open  ]],

Cell[TextData[{
 "When you use ",
 StyleBox["VectorAnalysis`", "Literal"],
 ", you will typically want to use functions in that package in place of some \
standard Mathematica functions such as ",
 StyleBox["Dot", "Literal"],
 " and ",
 StyleBox["Cross", "Literal"],
 ". This is because the alternatives ",
 StyleBox["DotProduct", "Literal"],
 " and",
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["CrossProduct", "Literal",
  FontTracking->"Plain"],
 StyleBox[" r",
  FontTracking->"Plain"],
 StyleBox["espect the current co",
  FontTracking->"Extended"],
 "ordinate system. For example, if the current coordinate system is ",
 StyleBox["Spherical", "Literal"],
 ", you expect the following ",
 StyleBox["DotProduct", "Literal"],
 " to be zero because the vectors are orthogonal in spherical coordinates."
}], "Text",
 CellChangeTimes->{{3.44589956090625*^9, 3.4458995731875*^9}, {
   3.445900403671875*^9, 3.445900585484375*^9}, {3.44590085303125*^9, 
   3.445900910328125*^9}, {3.445900983609375*^9, 3.445901009984375*^9}, {
   3.44612250384375*^9, 3.446122511390625*^9}, {3.471029948658634*^9, 
   3.471030057966955*^9}, 3.4719783046376038`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DotProduct", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"Pi", "/", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"Pi", "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4459008208125*^9, 3.44590083759375*^9}, {
  3.445940308765625*^9, 3.44594032534375*^9}},
 CellLabel->"In[110]:="],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.445900838671875*^9, 3.445940467390625*^9, 
  3.4664499282681108`*^9},
 CellLabel->"Out[110]="]
}, Open  ]],

Cell[TextData[{
 "In contrast, ",
 StyleBox["Dot", "Literal"],
 " and ",
 StyleBox["Cross", "Literal"],
 " always assume Cartesian coordinates."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.445900931703125*^9, 3.445900960921875*^9}, {
   3.445941449234375*^9, 3.445941452953125*^9}, 3.446122514453125*^9, 
   3.47102377404466*^9, {3.471030085563231*^9, 3.471030102754801*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"Pi", "/", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"Pi", "/", "2"}], ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.445900914578125*^9, 3.445900922921875*^9}, 
   3.445940480921875*^9},
 CellLabel->"In[111]:="],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   SuperscriptBox["\[Pi]", "2"], "4"]}]], "Output",
 CellChangeTimes->{3.445900924390625*^9, 3.445940481734375*^9, 
  3.4664499282993107`*^9},
 CellLabel->"Out[111]="]
}, Open  ]],

Cell[TextData[{
 "Some of the most important vector calculus operations are ",
 StyleBox["Div", "Literal"],
 " (divergence), ",
 StyleBox["Grad", "Literal"],
 " (gradient), ",
 StyleBox["Curl", "Literal"],
 ", and the ",
 StyleBox["Laplacian", "Literal"],
 ". Although it would make a nice exercise to implement these from the \
calculus primitives, as I did for line and surface integrals, there is no \
need if you use the ",
 StyleBox["VectorAnalysis`", "Literal"],
 " package. These operations use the default coordinate system, or you can \
specify a specific coordinate system as a separate argument."
}], "Text",
 CellChangeTimes->{{3.445941754125*^9, 3.44594194365625*^9}, {
   3.445941993875*^9, 3.445942048453125*^9}, 3.4461225170625*^9, {
   3.4710301530640583`*^9, 3.471030182251203*^9}, 3.471030230214274*^9}],

Cell["\<\
The divergence represents the instantaneous outflow of a vector field at each \
point.\
\>", "Text",
 CellChangeTimes->{{3.445947939953125*^9, 3.445947987515625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{"Div", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "+", " ", 
       RowBox[{"y", "^", "2"}], " ", "+", " ", 
       RowBox[{"z", "^", "2"}]}], ")"}]}], ",", 
    RowBox[{"Cartesian", "[", 
     RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.445947997265625*^9, 3.44594802*^9}, {
  3.44594805753125*^9, 3.44594808803125*^9}, {3.445948144078125*^9, 
  3.4459481563125*^9}},
 CellLabel->"In[112]:="],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"x", "+", "y", "+", "z"}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"], "+", 
      SuperscriptBox["z", "2"]}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{3.4459481575*^9, 3.466449928330511*^9},
 CellLabel->"Out[112]="]
}, Open  ]],

Cell["\<\
The curl of a vector field represents the amount of rotation.\
\>", "Text",
 CellChangeTimes->{{3.445948283890625*^9, 3.445948327828125*^9}, {
   3.445950331453125*^9, 3.44595034103125*^9}, 3.471030247384204*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", 
  RowBox[{"Curl", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "2"}], " ", "+", " ", 
       RowBox[{"y", "^", "2"}], " ", "+", " ", 
       RowBox[{"z", "^", "2"}]}], ")"}]}], ",", " ", 
    RowBox[{"Cartesian", "[", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.44594833396875*^9, 3.445948366453125*^9}},
 CellLabel->"In[113]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"y", "-", "z"}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], "2"]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"x", "-", "z"}], ")"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"], "+", 
       SuperscriptBox["z", "2"]}], ")"}], "2"]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"x", "-", "y"}], ")"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"], "+", 
        SuperscriptBox["z", "2"]}], ")"}], "2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.445948335625*^9, 3.4459483669375*^9}, 
   3.4664499283617105`*^9},
 CellLabel->"Out[113]="]
}, Open  ]],

Cell["\<\
By definition, the divergence of the curl must be zero since the curl has no \
net outflow.\
\>", "Text",
 CellChangeTimes->{{3.44595037825*^9, 3.44595040209375*^9}, {
   3.445950504484375*^9, 3.44595052421875*^9}, 3.471030258161441*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetCoordinates", "[", 
   RowBox[{"Cartesian", "[", 
    RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Div", "[", 
  RowBox[{"Curl", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], " ", "+", " ", 
      RowBox[{"y", "^", "2"}], " ", "+", " ", 
      RowBox[{"z", "^", "2"}]}], ")"}]}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.44595041721875*^9, 3.445950484375*^9}},
 CellLabel->"In[114]:="],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.445950476640625*^9, 3.466449928392911*^9},
 CellLabel->"Out[115]="]
}, Open  ]],

Cell[TextData[{
 "The gradient of a function ",
 StyleBox["f", "Literal"],
 " is a vector-valued function that indicates the direction in which ",
 StyleBox["f", "Literal"],
 " is increasing most rapidly. If you were climbing a hill, you would move in \
the direction of the gradient at each point to re",
 StyleBox["ach the top (strictly speaking the gradi",
  FontTracking->"SemiCondensed"],
 "ent would only be guaranteed to be directing you to a local peak). You can \
visualize the meaning of the gradient by using ",
 StyleBox["VectorPlot", "Literal"],
 ". I restrict the result to 2D for easier visualization. "
}], "Text",
 CellChangeTimes->{{3.445944186859375*^9, 3.44594433628125*^9}, {
   3.445944467*^9, 3.44594452328125*^9}, {3.445944571109375*^9, 
   3.4459448*^9}, {3.445944840703125*^9, 3.445944849984375*^9}, {
   3.44612251971875*^9, 3.446122523*^9}, 3.4664497600181108`*^9, 
   3.471023775643097*^9, {3.471030277153016*^9, 3.471030291839851*^9}, 
   3.471088039728579*^9, 3.47108835680023*^9, {3.471978420279584*^9, 
   3.4719784485134068`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Plot3D", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "3"]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"VectorPlot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"Grad", "[", " ", 
           RowBox[{
            RowBox[{
             SuperscriptBox["x", "2"], " ", 
             SuperscriptBox["y", "3"], " ", "1"}], ",", 
            RowBox[{"Cartesian", "[", 
             RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], "]"}], ",", 
          RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]], "Input",
 CellLabel->"In[116]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[InsetBox[
     GraphicsBox[{{}, {InsetBox[
         Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
7cB+/yL2iu0An+uPN/qXIfuJdqDvRLUD4BnfHzjGM74/2oc8cOjjsj+p1ny0
+Al9X9f4TLbGm35H76/0Xj1PjLrI5+mFV5vc+0YL48DxG39vLHkb5zhAO2d/
qZWvaI2x1A/ywCFHv2B1w38HpnzB93K8R+K2vHG81/sf7w21f+bOnYRjxYZz
Xhw83iBnnVZFvJN37qwb0nlvsL9apMU/W4o1Iw75tOXb22+vWt7LuHNnW555
FSm/t1Hr9GdubCEO+a3j25tdubLo+CtO+W0aD+72298X7M9MXVlx3/frvK3+
7xLEF19fm/DWnEbE0f6sjrP/Xra/53/G9f/Fg/208b7868Qh/0mO9UMG5E1J
iNU8uuIJ7TVOFPmClvxKI+8tbOlTj3ikPl2M9Gu31a9k4pD/te/9U2ceTdV5
UsTiJ444/V7fjlUzwvPzFv+biJP/Q81bDs6YYOQ77rG+b1Pi/L47Hn+nTbml
RsbJMMr/+cmu+2of2k2c4+di9D2fv3GI44r7+EceL3rPnuMcP8B/b9grttWA
ohwn3Hd6pUTCzJScHA/A5xdbUGLZW0f53YHHJnUteX3DFH5f4EPmbB/Xek8u
fl/FE5pZ3zdCfvdtfsfI9mP4vSL1Sed3of3381f7yT/71TctvuSVweSZPHQ/
VnPx5Lzkk7z9mbRxRodi5JP7dY1u3ff2U6fJJ/AVf901o3SHLuQT+JKlba/2
qLOU8w74XD+f+Qh5Bv7thrat0jqWI8/Ax0YNyZz94qvkGXiPBl/nO1xgCnlW
POEVi+dI+fHkObL9muQ5Up9S5DlS/3zkmf3NKLO4zo8NyDPwlfc+17/TpY3k
mXw23zhqyfhR5Bnr5iLfHj5GnoHP9u3eM+QZ+A/+/Iohz8Anqr8BnoF/4s/3
NPIMfIBvN3qQZ+AtfPuTTJ4VTyhv8Rwpv4I8R7bfiTxH6hPYn0j9q5LnyP5+
SZ7Jj283lpBn8unbhwPkGf5GjDWegY/zv9cm8gx8lP99XyPPwAdb4xl4D2s8
A29pjWfg1azxrHhCXovnSPlgPEe2H4znSH2C8RypfzCeI/sbjOdIfoLxTD6t
8Qw/t6OPf0Segb9l8Qy8qcUz8LoWz8CrWTwDL2PxDPxui2fFVx6zeI6UD3iO
bD/gOVKfgOdI/QOeI/sb8BzJT8BzJJ/kOZP1BzyHcOU5hCvPIVx5DuHKcwhX
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

           "], {{
             {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
                 "]],
                 Polygon3DBox[CompressedData["
1:eJwtmgv8/uV8xu/jk0Ohg3M6yWGO5cxmCyFCaquGDWMxxphDaicx5lCYs9Js
EuXQSCWnKWeTQ85rmdMwlClDwmzv9309r9f/ef2f+/t9ft/DfX8+13V9rs99
2JMetfeflVIa//6X/0cp87b8/5pS6s/4/u1S+isY35Xzf8T4WMZPYrwT47sx
/mM+T+e3r+XYb3Lu+Vzie4zvx3d/fxSf/Th3Iseu4Pt3+DyD76/n2D35zYv5
eP8duR73mI/m77/L+Xtz/OGM/5D/X8l57tUexfgv+P/BnH81x+7Muecw/n3G
/8j4AMYn8Jtb8J3nqP/F96/zeRbf/5Vjj+f8exg/hTHvV+7C+Ll55nIrrvN7
23d5HePf4f/rcOxIzv+S8T/x/V2c/08+vgvzUrh39/rOFcfL3zL+Gp/n8f2W
/P53Ofc0Pjxr/RbHns25/+D9Ot/fzPn3Zz58hvIbjA/Ns03+tryAv2Ee5zf4
/yeMmYO6B7+9PZ9/yNy1P+H8X+Ye9aTMkfeeT2V8Ytas/x3f38b3B/L/9fkb
14vnqJ/k2J9y/lzGrF1lzgu/7d9kzLOU4zjGvefXco3CnLbDcu3JvSrPXZw7
ftN/wPeXcP5NnOP9+g05fxU+9+X7I/k8gfNX4zzrNY0J/i+nMzbWLuVzO8bM
eSX+JmvW3p5YMWY67964Rj2Nsdd7Ob8hXurfM96f76xZvzXjGzA+mP/fwrG7
bOd38v2HfJ7M8ZdxzLnjvSbxW1/KmPv2ZzK+O9/P4ffX4Pv/JMYqf1/ul9ib
zsUnGDPf/WzGf8343YyJu35qcqLyPuWg5MrkPoV4rL/mO2vYjPfzOOZcsBaD
9yt7cZx82Wz4/7Gc9xhx3U/OmtZ3MD40a914xvpxxvyun8X5v2FMHJeHMH4j
nyfy/er8jvee5shvMyZW2zX5zvxNztcTEuPd/H1R3r3x9/NoPsRBfWHWuD8j
c1JuzPn7Z66cs7Iv44Mzl/0YxrszJkcnazt5j/LPjHmGeVmuWcmXco/cq3P9
clXO34lzzMF4W+Kj3ZHxIzj/Rc6b16zpvIgPcVzOYEzMzB/lmcuNGN8n79KJ
93I9xlx/uibkbDG2yYn5uDxTPT456LP2ixPPjTyc/57fVHP+5vnbCS7UFyQH
+9H5FOKp3SvnnJNCTLcDM1fztxizXg3MmpcHw4yt9tBg22QN6/c5xpx28mS8
lTE533fh3B/w4T3rRXln330yR/XLjL33ZxmTS/UrjF2Lz/H3XKuyFp213dyE
8zxXATsa+DSv5MO8FOKjsSbz/4K74m/lfv3GuUa/kHMvzrUnuFU/xd84l//C
GNyqFzBm3vr7GIs9n2cMFnWu23fgOzhQwcRuzIitXLP8OeOP8mFtCzhYxV/n
gLgoH+N5mLNJDnTysIALlbjs5MxkHgt/15jjSc534qaIc8bLwzgGrtRPc4w8
7+TNFMM+w9hY/CBjcKCQj42Y2EhZP+U8WFvIxQGuVfOTXKw8V3dObpa5ds7n
V/kN71J+zjlicGOcEyeVNa1yDDje4cLC+9U78B3cHIdlfcWMlQ/EXGUeysXb
35OvBc5sPNeGufJ1y035Dc89xYvKmGeoYrM44/yxHtW15tgQL4jLBkdsyLPB
Mxa4t4OPm735/zH89giOMSfN+CWu6hcYg8UdXhtgZQUHC1gwWNdJ7Fdzijzp
F4RH5dPKg/Vr8xvWovA3ncnb7MPvwYb6JY6RC517TOaucN0G32x4dumq+Lzi
pRjwKr7DEwVe7c7nA5I75pS5NR4YLDGnzJ956/BDJZcn7ziJowLvtGvxnbWb
xE0BT9vOfFdzEAcFfGvmi5pBbriEYzxnhx/6leGL5tzKV2/gPLhd4Ib+33zA
qHKNrP1GDLwNY3PusvB3/0XwuZ2zfR4wtsphzFuHB9trwn1ihtgx4Kj6gKzx
kH/A+OocgsP9ouSl+VmY205+Dtcbvmrv5f7E6ODalXkrPMeAhwbPWJ0jdNHg
WqNt+dDcQ1eMA4Jv9SnBx3nqVgPw2+4cnsL4x4y5Voffxr2Dj/WvSvQYx6uY
x7iDI5NnrsYUedH/jfucnrlwTjrz2tFY1ZwkHvqu/J44r8RZIa47uNR5hirG
ENv9utwPniq3DqcsPOY5i1qJ/J5w1HhQsFdOES/HwcHaFf9qFrRfBTcL9+mX
5hl8lnZa9Ma4Z/C3Hh29MO4V/K3HhN/GgeGfSk4vvXhIuE3MX9ivluFeld90
1+we4Yf6tPBPd+5Y4wbHLH0oV/McRa76XjSH2qPBaeqvCQ6o/yrYOsHieaft
+pIY85K8k+9mjstNakJzqcnlJ0YTmosNnaVWVGOJ7Y0YVnupCc3lhq5SK6qp
5IJGXKq1BrlcvTZ5M3n2sccWPz8XvTL23uL/F5JPzecnLir5VcnRsdcWjz8f
PSAnubbt9eEq39lYbqdmLprzw3tV+K0+MzEgN7SXJTaMebG4vTK5sPibdW4v
DbfJNWql9pJwjhghl7QTgx3msLHY3pDcNueM1XZKcnGKd2hUNcgE1wdrV+CB
duGWb78S7movT6yPfbZ88MXgxyAHC7jXiPUJzo/rbPlSbCP35oe2mpg47ei8
sesWb8A89eLYeYtPH9+u70f4PbGw9BlcPnbZ4hX3XPr17GD9Wn+4tHGN4jv+
iuO8y/zoVt8dutV/5FCBd9tnom8GGLX0Gms0wYqB7inov/aRxFsFRwq8WNUg
crJzg3ZqYMhED44bb/H6S8HLAXaUDzCWXy6LRlXLNnBR7WrNZO3UDgkfzQ9z
bXKhMO5vyTsUYrw9KO+mxizgW4Pv1Z4DbivwTLso+kNNrBZt4KVaWYyRu9sr
gj39tbl2sxZ875bv+btKXnf0UJMfjBFjl9hsxoP1EjjdjcEnBnvq2OITc9jU
JK4FnNbOTW6ao9Zqk+NNYcC7DP/GtQM3GjpyfixroBZvR2/X5gnBviL2G/fq
VUncZ2H+2yfDRcaIsbL4kLyrrEF/0FYvkFeVOevOodjN9ap4qY5EAxVyqlp/
wCONuCjEcaV+6c7rPpnPeqvwe+N/tUVFVzfrb3KgUstV6w3wdaq1jVnmcuzG
2FrHZyKfO9duXw53GxPGhjFbwPD29MSyMV/A/PbU5MJ8Z7hGzln4ZW0EpzR+
M5nbbq0F5ja1K3Hard0PZ6z2J86syazNmlzFHHXWoaBHmlqZOO/WXvBHs54n
b7q1Ou/U1AbkpTWPudXMFTiwgwMFvdNY90ned3CiUIc3Ymqez/9yvZwMx1fi
rZlLrtebU1uveGeuGhg11YvEQZOTuW5Xb5qL8EaTP9S31lrwZrOWJqf7mYyJ
1SafMofWXNZejdif6inmq/CsjVyaxMak7q1qErH8Z8mhwru2pyW3GphTxFhi
tIqL5Hwxr3mmyhwM9Qm52+AB9fAwtq1/fPbvJoa9dvtAYnugW1e95dqph64I
dzWea54WfWesqdkGa9UMDp9x72iS5Z9Y/1jvPDd62FhW8w7maOg/cO3O822u
Hk2l19HeGq2l5tDraG+JFpHD9Tbam8Pt/chofTW/+dxZy3r35PiKZ/JcrdWY
9wm2LP/GGFNfvihzqNZrZ2Zup1rbHNyT52nRQHoP7W3RRsNcUX8T65sZTFt8
fPNgnWuuNmzvSSwM6xXrN9Zm1efW38asfhT8M77Bd/KkwTuTfJp3zPw5j+Lz
8iP0j/RXXpGYX37UXZILnXyucshu0duuSVVznpy1WvyLNmrcc9Uj7wjXFt5v
6KPI7TuFA+QC56jCY+WkzJ05VF8VDDe3xqGZO+dQb2Sor+G8ar4Qh11vCi3e
yLt5cTB4eVwHBJvH14NdBX0w3hAMUVu2dwdbzMnlr90juTremdzTwxjcc5wd
rVGIr/HSYEZ9ZThELOkcr3IcmNXgo2FtJWdxncHvhs8nX/O7Dfk7vr3lF+Zx
M1IPiZUFPhvM2YBfqjHK+g31AzhZ98k1O3Vc576VuazUUp2466xL5VkrvNWJ
y6G2lR/BuwlfDNeS52qs0eZqwYR6VjBMrJif2nIw+NfBv+HcE4ONNdkQS+PX
wSNxaUNuDvWRmATPT665/B8xhjqynxGMVSu0A4K9YtTyj+4X7HLd1vrJNWiZ
Dk5bTzb135nB3PrGYKpYPIzvS6LbVv0JRi6/7KBgpxha3xSMFluHsShu7BH/
aaKL6vvCCX3LKXJruyBcM9Ep9f3BtC5ec50qZnG8XRxMrOcGc8XKoX8sB4Er
q/4/IPq1mo/E0PhSvheec5wUjqinhnPkjqEfyBy2b6b+lOPNnXZeuH98K3zY
Dw0ezMOTK+bM0sf6zWjEprYHcwfzqn+lplRbNvHFGkz8I+fHFxIbhTgeaNTx
5ZwrrMswP7hWvUUwcZycdXf9PdbRMOPzibXiu786HFLVRIeHW5Z/p1/4kGgl
48x4M4b7geGYek44T+4Zxrp12jciS+SY+q5woNyjx1qtMeA+vVdrIGshayS9
dGsmaydrHr1X80ktoWcx7pB80+vQc9B7GOCI3o6ew8ov84U10yOQP4Z+ALml
p6S3P1i3Qh5VtM64PJ5Uv2nmWK9qUHMUPQLifVifgKUF3VNZr+H6iM3Gudoe
3TTUNtZoP9/yD+9dfSaeYxADbf/oaPX00OMwVvTkeY8BXwxj2xy0dqbeGMS2
9ap1a3cOHsc5c4S4GSfk/nrpeurd+NCPuVGeWaodche4rWdiL2IwV9Wa9Mot
Purny6FouyEGEb8FnKlowSG+mQvkhzX/IC83eybujXljf9wgsW9OWNuNnRI7
Ypb+lZ6BPC1fD3Jss1fi1Jg0Nofeijny42186r0Y85cnn+RvvSs1qvGqx6Pu
VBOoDcanc+1KfA7nfMdgsRg60AwdDNSHc01cm6aXqH+jF0beDL1nclxPZFgv
iR37bc//KB5W2+aoubqud0g4Rq7Z8P72MVyD8Yl4cOpoNYhaZKjrbhLM1s9q
Pw2ui+9yx5CLfhpNMfibzY7RVeqrAe5tdoquUl8N+KuenLWp4Frzne0vWIN8
L/ylR6RXpF84wOdBDlbX5Pvhs+a9jwvnyX2ur9eq8Mc4L/NRr52c6PD6hlqh
HZFj473JB70IPYl+efLBWs6aroP7m22dLofKpZud85zeY6iXeZdiP0VuEf/0
o/VE7aW53vKDPZ1vpr4ex+Re+iD6C0O+0ePV6yJ2h365HrC9LLhviBV6ruSP
fsW4f7hHDtLbUV/oJYsB9gaa1zZ+1adg38a64bZ5x/GxrWd5/3C23L25bupW
33mgbTbqADUi1x/yCXVluVY4Sf3T0d1qITlNv0yOXZgrHotx+q17hXP14xY+
6bExbwMcHdZP+tdiy+sSPwvzz0/uDbWo66fWkOf0zA9OTplbHV2vltFDWf6c
2PDhYPbiB/MBTtLzE+82xpUYrDf2geSD72YPsaNzN8SBfTf7b+ODwQt/KyZ2
r3efxF4lTwZ8uxGz9g8mjY9HkyzOkH92zxw4F3LY0k+755ycJP+Iz97Lnl93
fZ0vewyXxG9Z+SMG6I3pb8K11p5qLmt7PQN7OWpkvYTNHtFYRW66ejh26dMz
g196MvZCll69fvCrk/t6bHqheiT2+lZ9tks8Fb0zPU+9llVfS3TWNrvFg1n1
nFp91+Cz3rYe9/hZPBN7Q9ZAeinWf0sfG+sjNZG9RD1eayU9Mnt7eix6Z3pg
9sb0ePTGlqa3RrJ2uubWc9FPkPuulhrBXp7+grXD0ucMrSfXfJCHq19pLvJe
G73n6yVnzd3N7tGgSx+oUVi3Zg0i1lwneNntMaCj5GPjpd9yGz8nJX/6bbbr
edo23/bb8tdlib9+iy3+vCY5aW7qeXTrmOfnmN/t12zMaz0Xe0rghR56tcYz
9+wnoQvsT6z+zsXJ164e0q84IfjWbx7MX/HNGvabhRMW/onv8o9cybxtbhhN
vvT+jqlpqzWGsbjDNt5vF00gH6vJuznBM6rVrcH6g6MJ1AZ6ek28BTv0+tTY
/d6JYWN54bk5axw+ORpy+SHEmdrSULN3tPyR/aMR7Z3pIaod1az2rvRU1bJT
vaqGOYrrfTIae3mkewWLVo/e+t5+n/1W6yn9P2ouvebVT7BfpncHHk79XPEE
TOh6iOpN1kVPoX8qNU8/PJpN7TbVp+Y3GNP1ceUv+4vHb+tB9Zx+vrWW/pfc
a42sF8vcLD3jnKM1x3e2Nf0DoxHUCs6xc22Padxsi4/GNEE+rPH1B3jH1e+5
JDXr6l/aH/hO9MHynNUZ+sinh4vWfodLU3NWPUH7nXKO9Z/9cHRq/9AWf9HR
6mm19lRv856r361Har1n/9te74XxSOwd6mnrnRgf1up64tP+Irm4/Dq5Vw8Z
zLC3tPy7bU25PDf94IelBrIWUhOoDeT7vmc0gFrAmtTaVHycD43H0Hs0iPi5
PHf5C67Wi1/+m/wJD4x9o1+7eGmtSYwvv9L+h/0bNe0T+dh7NUf18MVj96u4
P+OLyQdrVT3weWTur9dh/TX1aNX38ptcYj1EDtsbtgZdeP6L1KLWvPOI1KjL
Q9s7XOf7dbDVmsDaYFhL2BO0ttAPcS8Mc6amVlsP+Rmdbc/EfsGkLq9qYPW2
/Ke/foNgjFjTzAVrfJ6t6l/aS+R3az+EnHx85so5W/UmOFt/mHt0NdixiXVj
3n7F0qtiyx2DLc3c0zPgPerjgsnL67tbuGuIFXrGrt/bg8ELa+4cbB7283eN
ZlQ7Drlul2hKteWwPtszGOb9pmurJ3tWvIIpl6gv7SfpKXk/8/ec1HbTuVfv
nJtaWY2ntmx3j/ab5ov1DHPdwbZpLKmXnQtwZ9jbJlfdw+L+i3FBtLGc4vNP
Y1t81KsgB6wRrA3cz2XtMFyffcLhaz7s9crZv0xtYoyu+Tf33rHVF2B1u2Lr
b+we7mpXbv0ReLS6J0z/W89p2+cxho1lexLVPU36Lc/ONfXuFv7uGw+jqvnk
NbTruG+wQw285sPe6Pmpedbz6/+jad0Tse7lvoB9o0nVpvMByQ1rrFVr6W2B
J829IHq4+nv2PG4SPdufle+Nv5v2NMwV9fq7UmtPvderJGYG2GBNYW1R1Jf6
k/qz8j043+SHQ5KLal6179SPuzA1jbXNdO+WPUB7aWDt2i+hXgFT236Jybbb
Fi/kfrWP+czfNHvGej3ypfWBPXDrBYYWq/Ynpv3Yz6bGW/18eLHqmYP3eu2r
BqqJaevjvnOw3R6H/Y7pvc3/s+NdDPeX/SQcIVdMtZN8od9qbtsvPyT1jXVO
cy2ODD+3r27rFXXZHbZaSG18WPTs0rXuhzk0Gljd7J6Y9oNwztLjv877WNN2
ucV6V4/4rqkrh72jTTSW1x+/yv1Wv9w61v1dO2x/c91gpVpXjtOvWv0XPS3m
th8UzeT7+SxqKfcctkvDmdb/U2/j2HDY8k/VsnqMaic90kfk3j6D9ZmaSO3m
3KiV7DnX7Z4l90KpkdRq1nhqJ3v29u7tabu30h63vW574O7tmsaDfoje0nu2
9Qlz0w4KluvxLs9Qr9k9evYu5Bd7ie4h7MlVPdnVz3Ev2AGpwdR2g78v8Jp7
yuzvqTnFM2sWteiU+46KRlGrTPFXD9B+PXk6xVP324Bjq9+iNlePEbd6lVNu
Zo31GPUap1ymvwA/661Oudw9CO6H/EziVTxvtw8ez6smlvUI9QoX3o/kQFev
i/fqRXsF523zFb5ptwt+q5m9vzWoWnrukPfX09bbnmqBx0RzqD0WXzlnepfG
r1zQM5/611Mse3Q0nFpuqi0fFY2mVptgltpOzah2nHL1Y6Nh1DJzk/jQg9eL
X/1O8/GX0QmrPyQfqWO51hR/HxHOlDtXf3nn6BV1yxSvHx4OlotXv2mX6Bd1
zFTrPjKaS+01xfvHR2OoNQZzrzepR2l/ePl5vo+xYb/vw1ud5v6N5wUT5ap2
frDSGmLt/b1V+F5MrS8PZ4m1w36yHoy1xZui8Vftsn+0/5ArTskU2G8YrJVe
uZ65eyGH8f6yaCb7S4O5KO7hUzsfx0d/lWdZevKM5EPfLZpF7WINsvbO3D61
ybBXDz7aE1z9INbG/RfueXPvW39Jnr25F408HM/J+9rDsZdjD7naA4SX7S3L
2WqVdla4fDwz93NPkv2yQU7Zf3LPjv2yoV+tp+h+CPkPbLP3ZA/KvZPjuMyP
e35Wf4v3cv+Fe3bduzvcq7jtca9+4BGZf/cAuxd4kNdFz8r9Ju7psjZwb+9t
UzuOh4Qf3YO99ivKrafkmO8+eG9rQ/fAuhd2vDBcaM9d/11NJpc185tnHu49
08O19tQvcn84eOYeIveLDHLB/SLu6XNv39rTLeaItXoo9tvtkYgt+rl6vfpF
xurzw5kF3dNeFS4dR2XsnkD3Bop37nlUQ0w9V/1e93Gbm2DxANvsrSx8Ojaa
oJ6ZGFMrjKfkfdzT5X4WewTd/gu4q9cz5DP3tJrLJyQH3LvnM6zcOCPXasck
FodepHuyxQLmbrhfwz3Wajv9a/enuUdRLrF/B5a4X8I9me7NlA/FHDFgen+1
knt+rR31u8hN97+4Z9O9m0Psd8+w+zHsx5Hr1g4rv5/1/6skEcY=
                 "]], 
                Polygon3DBox[CompressedData["
1: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

                 "]]}]}, {}, {}, {}, {}}, {
             {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVVEUB/B17rmpZZnDEFSCXj5KhxE60YGCDkIQoyRLE/FRlxDppWN1
4NToAySNGinYyIF+AvORlqXiF5AmEgj9jg4Wv/+65+519t6crkL/9VcRkag5
9J/n5ClPI9JhlvM1qznJexH5Ff+5Jjf77RM7+YVPuKy+ySPc5DsecYZ/+dH6
E+u75QXZ/Fii+bHGA8/uqxf673yueiJyN/QbvElzc7e4xdvc5h3+YA13vGvI
ukf6Wv2u3CTXyT9Zz1+8yz06U/xmA/+wkftm9FrXqgb12b76VIs9PtCvM5uz
ykouemZv+TL5MxHzZhxzmod8S2dKrQ13mzp3PKZ7iA7rH8ruJ+w1naX9pe9Z
Zd5Xzy+pAf1VPlPtakrvnckHXqH7jst8w1JOMFs3zovmZeva5BK5Qi5WBX3m
SxZxjBc4GmcHSbLvIKU7jZxofvzLvpf/xdg+Hg==
               "]]}, {
              Line3DBox[{873, 1164, 1189, 561, 1188, 1165, 1191, 1548, 1083, 
               1190, 1166, 1193, 1549, 1084, 1192, 1353, 1372, 1195, 1085, 
               1194, 1354, 1373, 1254, 1086, 1253, 1362, 1374, 1087, 1255, 
               793, 1273, 1550, 874, 1196, 1375, 1088, 875, 1376, 1089, 876, 
               1377, 1090, 877, 1378, 1091, 878, 1379, 1092, 879, 1380, 1093, 
               880, 1551, 1197, 1094, 1198}], 
              Line3DBox[{881, 1167, 1200, 1274, 1542, 1199, 1168, 1202, 572, 
               1201, 1169, 1204, 1552, 1095, 1203, 1355, 1381, 1256, 1096, 
               1205, 1363, 1382, 1097, 1257, 1573, 1206, 1098, 882, 1383, 
               1275, 1457, 883, 1276, 1458, 884, 1384, 1099, 885, 1385, 1100, 
               886, 1386, 1101, 887, 1387, 1102, 888, 1388, 1103, 889, 1389, 
               1104, 890}], 
              Line3DBox[{892, 1170, 1258, 1277, 1543, 891, 1171, 1260, 1278, 
               1544, 893, 1172, 1262, 585, 894, 1364, 1390, 1105, 895, 1391, 
               1106, 896, 1392, 1107, 897, 1393, 1279, 1459, 898, 1280, 1460, 
               899, 1281, 1461, 900, 592, 901, 1394, 1108, 902, 1395, 1109, 
               903, 1396, 1110, 904, 1397, 1111, 905}], 
              Line3DBox[{919, 1219, 1218, 1558, 918, 1115, 1402, 917, 1114, 
               1401, 916, 608, 915, 1465, 1285, 914, 1464, 1284, 913, 1463, 
               1283, 912, 1462, 1282, 1400, 911, 1113, 1399, 910, 1112, 1398, 
               909, 600, 908, 1555, 1212, 1263, 1211, 907, 1554, 1210, 1261, 
               1209, 906, 1553, 1208, 1259, 1207, 1215}], 
              Line3DBox[{921, 1213, 1264, 1214, 1556, 920, 1216, 1265, 1217, 
               1557, 922, 1286, 1466, 923, 1287, 1467, 924, 615, 925, 1403, 
               1116, 926, 1404, 1288, 1468, 927, 1289, 1469, 928, 1290, 1470, 
               929, 1291, 1471, 930, 1292, 1472, 931, 1293, 1473, 932, 1405, 
               1117, 933, 1406, 1118, 934}], 
              Line3DBox[{936, 1220, 1266, 1221, 1559, 935, 1294, 1474, 937, 
               1295, 1475, 938, 1296, 1476, 939, 1297, 1477, 940, 631, 941, 
               1407, 1298, 1478, 942, 1299, 1479, 943, 1300, 1480, 944, 1301, 
               1481, 945, 1302, 1482, 946, 1303, 1483, 947, 639, 948, 1408, 
               1119, 949}], 
              Line3DBox[{953, 1409, 1120, 951, 1410, 1121, 955, 1411, 1122, 
               957, 1412, 1123, 959, 1413, 1124, 961, 1414, 1125, 963, 1415, 
               648, 965, 1416, 1126, 967, 1417, 1127, 969, 1418, 1128, 971, 
               1419, 1129, 973, 1420, 1130, 975, 1421, 1131, 977, 1423, 1133, 
               979}], Line3DBox[{978, 1132, 1422, 976, 1496, 1315, 974, 1495, 
               1314, 972, 1494, 1313, 970, 1493, 1312, 968, 1492, 1311, 966, 
               1491, 1310, 964, 1490, 647, 962, 1489, 1309, 960, 1488, 1308, 
               958, 1487, 1307, 956, 1486, 1306, 954, 1485, 1305, 950, 1484, 
               1304, 952}], 
              Line3DBox[{981, 1316, 1497, 980, 1424, 1134, 982, 1425, 1135, 
               983, 1426, 1136, 984, 1427, 1137, 985, 1428, 1138, 986, 1429, 
               1317, 1498, 987, 664, 988, 1430, 1139, 989, 1431, 1140, 990, 
               1432, 1141, 991, 1433, 1142, 992, 1434, 1143, 993, 1435, 1144, 
               994}], Line3DBox[{996, 1318, 1499, 995, 1319, 1500, 997, 1436, 
               1145, 998, 1437, 1146, 999, 1438, 1147, 1000, 1439, 1148, 1001,
                1440, 1320, 1501, 1002, 1321, 1502, 1003, 680, 1004, 1441, 
               1149, 1005, 1442, 1150, 1006, 1443, 1151, 1007, 1444, 1152, 
               1008, 1560, 1222, 1267, 1153, 1009}], 
              Line3DBox[{1011, 1322, 1503, 1010, 1323, 1504, 1012, 687, 1013, 
               1445, 1154, 1014, 1446, 1155, 1015, 1447, 1156, 1016, 1448, 
               1324, 1505, 1017, 1325, 1506, 1018, 1326, 1507, 1019, 695, 
               1020, 1449, 1157, 1021, 1450, 1158, 1022, 1562, 1224, 1268, 
               1159, 1023, 1561, 1223, 1270, 1160, 1024}], 
              Line3DBox[{1038, 1228, 1271, 1227, 1564, 1037, 1226, 1269, 1225,
                1563, 1036, 1232, 1231, 1566, 1035, 709, 1034, 1513, 1332, 
               1033, 1512, 1331, 1032, 1511, 1330, 1031, 1510, 1329, 1453, 
               1030, 1162, 1452, 1029, 1161, 1451, 1028, 701, 1027, 1509, 
               1328, 1026, 1508, 1327, 1025, 1565, 1230, 1229, 1272}], 
              Line3DBox[{1040, 1333, 1514, 1039, 1334, 1515, 1041, 1335, 1516,
                1042, 1336, 1517, 1043, 714, 1044, 1454, 1163, 1045, 1455, 
               1337, 1518, 1046, 1338, 1519, 1047, 1339, 1520, 1048, 1340, 
               1521, 1049, 1365, 1522, 1236, 1050, 757, 1233, 1173, 1051, 
               1545, 1174, 1234, 1175, 1052, 1546, 1176, 1235, 1177, 1053}], 
              Line3DBox[{1055, 1341, 1523, 1054, 1342, 1524, 1056, 1343, 1525,
                1057, 1344, 1526, 1058, 1345, 1527, 1059, 726, 1060, 1456, 
               1346, 1528, 1061, 1347, 1529, 1062, 1241, 1530, 1366, 1063, 
               1242, 1531, 1367, 1064, 1356, 1567, 1237, 1178, 1065, 1357, 
               1568, 1238, 1179, 1066, 767, 1239, 1180, 1067, 1547, 1181, 
               1240, 1182, 1068}], 
              Line3DBox[{1082, 1187, 1247, 778, 1081, 1186, 1246, 1571, 1361, 
               1080, 1185, 1245, 1570, 1360, 1079, 1184, 1244, 1569, 1359, 
               1078, 1358, 1541, 1243, 1183, 1077, 1371, 1540, 1252, 1076, 
               1370, 1539, 1251, 1075, 1572, 1250, 1538, 1369, 1074, 1537, 
               1352, 1073, 1536, 1351, 1072, 1535, 1350, 1071, 1534, 1349, 
               1070, 1533, 1348, 1069, 1368, 1532, 1248, 1249}]}, {
              Line3DBox[{359, 743, 782, 562, 1548, 360, 750, 799, 572, 384, 
               755, 1544, 584, 398, 808, 1554, 598, 413, 811, 1557, 612, 428, 
               1474, 627, 443, 1485, 642, 1410, 458, 657, 1424, 473, 1500, 
               672, 488, 1504, 686, 502, 1508, 699, 515, 1515, 711, 527, 1524,
                722, 538, 1533, 733, 549}], 
              Line3DBox[{361, 744, 783, 563, 1549, 362, 751, 800, 573, 1552, 
               385, 756, 585, 399, 809, 1555, 599, 414, 1466, 613, 429, 1475, 
               628, 444, 1486, 643, 1411, 459, 658, 1425, 474, 673, 1436, 489,
                687, 503, 1509, 700, 516, 1516, 712, 528, 1525, 723, 539, 
               1534, 734, 550}], 
              Line3DBox[{363, 745, 784, 746, 1372, 786, 752, 801, 753, 1381, 
               865, 803, 804, 1390, 400, 600, 415, 1467, 614, 430, 1476, 629, 
               445, 1487, 644, 1412, 460, 659, 1426, 475, 674, 1437, 490, 688,
                1445, 504, 701, 517, 1517, 713, 529, 1526, 724, 540, 1535, 
               735, 551}], 
              Line3DBox[{364, 747, 785, 748, 1373, 862, 789, 802, 790, 1382, 
               386, 586, 1391, 401, 601, 1398, 416, 615, 431, 1477, 630, 446, 
               1488, 645, 1413, 461, 660, 1427, 476, 675, 1438, 491, 689, 
               1446, 505, 702, 1451, 518, 714, 530, 1527, 725, 541, 1536, 736,
                552}], 
              Line3DBox[{365, 787, 861, 788, 1374, 366, 805, 866, 1573, 806, 
               387, 587, 1392, 402, 602, 1399, 417, 616, 1403, 432, 631, 447, 
               1489, 646, 1414, 462, 661, 1428, 477, 676, 1439, 492, 690, 
               1447, 506, 703, 1452, 519, 715, 1454, 531, 726, 542, 1537, 737,
                553}], 
              Line3DBox[{367, 791, 863, 793, 368, 574, 1383, 388, 588, 1393, 
               403, 603, 1400, 418, 617, 1404, 433, 632, 1407, 448, 647, 1415,
                463, 662, 1429, 478, 677, 1440, 493, 691, 1448, 507, 704, 
               1453, 520, 716, 1455, 532, 727, 1456, 543, 1538, 849, 851, 
               871}], Line3DBox[{371, 566, 1376, 372, 577, 1384, 391, 1461, 
               591, 406, 1464, 606, 421, 1470, 620, 436, 1480, 635, 451, 1492,
                650, 1417, 466, 665, 1430, 481, 680, 496, 1507, 694, 510, 
               1512, 707, 523, 1520, 719, 535, 1530, 837, 870, 730, 546, 1540,
                853, 854, 740, 556}], 
              Line3DBox[{373, 567, 1377, 374, 578, 1385, 392, 592, 407, 1465, 
               607, 422, 1471, 621, 437, 1481, 636, 452, 1493, 651, 1418, 467,
                666, 1431, 482, 681, 1441, 497, 695, 511, 1513, 708, 524, 
               1521, 720, 536, 1531, 838, 839, 731, 547, 1541, 771, 855, 741, 
               557}], Line3DBox[{375, 568, 1378, 376, 579, 1386, 393, 593, 
               1394, 408, 608, 423, 1472, 622, 438, 1482, 637, 453, 1494, 652,
                1419, 468, 667, 1432, 483, 682, 1442, 498, 696, 1449, 512, 
               709, 525, 1522, 831, 832, 833, 1567, 763, 840, 764, 842, 1569, 
               772, 856, 773, 558}], 
              Line3DBox[{377, 569, 1379, 378, 580, 1387, 394, 594, 1395, 409, 
               609, 1401, 424, 1473, 623, 439, 1483, 638, 454, 1495, 653, 
               1420, 469, 668, 1433, 484, 683, 1443, 499, 697, 1450, 513, 826,
                1566, 827, 828, 757, 758, 834, 1568, 765, 841, 766, 844, 1570,
                774, 857, 775, 559}], 
              Line3DBox[{379, 570, 1380, 380, 581, 1388, 395, 595, 1396, 410, 
               610, 1402, 425, 624, 1405, 440, 639, 455, 1496, 654, 1421, 470,
                669, 1434, 485, 684, 1444, 500, 819, 1562, 820, 868, 821, 
               1563, 822, 829, 759, 1545, 760, 835, 767, 843, 768, 846, 1571, 
               776, 858, 777, 560}], 
              Line3DBox[{381, 796, 1551, 797, 382, 582, 1389, 396, 596, 1397, 
               411, 812, 1558, 813, 426, 625, 1406, 441, 640, 1408, 456, 655, 
               1422, 1423, 471, 670, 1435, 486, 815, 1560, 816, 867, 817, 
               1561, 818, 869, 823, 1564, 824, 830, 761, 1546, 762, 836, 769, 
               1547, 845, 770, 847, 778, 859, 779, 860}], 
              Line3DBox[{548, 732, 848, 1532, 537, 721, 1523, 526, 710, 1514, 
               514, 698, 1565, 825, 501, 685, 1503, 487, 671, 1499, 472, 656, 
               1497, 457, 1409, 641, 1484, 442, 626, 1559, 814, 427, 611, 
               1556, 810, 412, 597, 1553, 807, 397, 583, 1543, 754, 383, 571, 
               1542, 798, 749, 358, 561, 781, 742, 780}], 
              Line3DBox[{554, 738, 1572, 850, 544, 728, 1528, 533, 717, 1518, 
               521, 705, 1510, 508, 692, 1505, 494, 678, 1501, 479, 663, 1498,
                464, 648, 1490, 449, 633, 1478, 434, 618, 1468, 419, 604, 
               1462, 404, 589, 1459, 389, 575, 1457, 369, 564, 1550, 792, 
               794}], Line3DBox[{555, 739, 872, 852, 1539, 545, 729, 1529, 
               534, 718, 1519, 522, 706, 1511, 509, 693, 1506, 495, 679, 1502,
                480, 664, 465, 1416, 649, 1491, 450, 634, 1479, 435, 619, 
               1469, 420, 605, 1463, 405, 590, 1460, 390, 576, 1458, 370, 
               1375, 565, 795, 864}]}, {}, {}}},
           VertexNormals->CompressedData["
1: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
c+LJV4knLyKd8o50yibSKasYOkWf9E486Z2HpHdySR+NIn10RKSPOD11iPTU
fpGe4vRXAOmvByL9xek1SdJra/6TvkNGf2SMj4x4kBE/MuaLjLwxdLE+6e4a
0t092ulu/Xa62470u1I7/b6a9P5O0vsJpPdDyR8wIH/gFPkD68lPCCQ/YZTI
T+D8h3vkP4T8J78CGf3xXcmt4UWalzGq44/3PRyioCGtaPC9ZCPM+PLhYLhz
MqZWGplcfuIMdcVjc5OvImbXT7XaaSuG+QcSXY2fW0B1WsQD5QgLzLXuYlot
ewZLPudIxo/mQYVMQ+g5Zx7mnjCXe6iyAise9z134uQhKNGykpyT3QVZefuv
fRsr8nmWtvN5IskXsidfaK/IF+J8JG3ykaaRj7STfCcT8p0ukO90gXyqMeRT
BQp9KmY+44fsvHFhlR56WHa2GhE1FPi7DWQmyzrhh3vhwU63AzCuX+1td60r
UH+0u5Z8519Y8HG4itMwQ8xsMVj+YKY21PSdueuX1yjkBYSkZ3/zR95mnYSa
6/egPKfV/MW9UuTxZJ4HvW3BMs+BA9M9UqHY5+maBI2pyBvnuygEZmNluF/N
VvMMyJ+/bGehZAz5cs7tfLkg5CUOODegcBSW908Zoy87D4oXzb39MnIy8mIk
LGWm2iLvo02dj1kHKN8yNnToiAFYeHVg5aQsOcw6EBCe6bkequ8+MR4V3AWz
Iq93jU4ahvENeocKfe5Bfa/ABIfpNZio07tm3xpn9N1cr6s4WLBPpweOdj9+
vJ3PfOGf30FUrR81WeMSxrhnvdjVRxbqs15NnGivBfktbU+yLDZjhlHM5Jnj
3aHGZZ9sxwJz4N0onmG1uBMW7Rj8cOucEVChr7BfZf9h4NX6q3yTz8Wyscu3
dV6jDSWzFsjfLvgKvFVqox+kvMdK3RNDpdedh4L+53ZdnhgIhec2qgRJSWO1
y/05GlPuQta0D54XXc0w50Kx3RqLdVj4y+182oRFUFUnpXBYUxU/zKp0iTMV
xPNcwTy533Kom/iqsHhlM6ZEVltu9fDA2Hidx6PgEjTsPXUv/PQZjHGdaxZi
/Rx9FgzZ6vSkEviW56o2ry1t996L0z+/d5giPklsnw++V966qsctb6i/F9hP
S94dsj77K+/+dBFzzDbm2j8bCDUJBkOfb2+GXK3D8VGmblgcJjnqbYYxVI5x
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
Jb0wifRCo0gv3IzvHNdDXRLPcX8FuqltaEpTIew2vPPmle8M3B6QM/GuWKog
ni+vCwd8Jj3SRnqkUqhHSL/0/EO/cHqnlPTOE5He4X7PuJt+z6gl/D0j6al6
0lNSIj3F6a9rpL+2iPQXp9ecSK95ivQap+/ySd89Fek7fcObBwPGb8ajAWlO
vRf2EMwrq//pabf/+j1v/iCU++v3vHuk/np//q/f89rmkH782F4/kt48Snoz
WqQ3OX16lPTpcpE+5fSsL+nZHKGeJf37nPTvFqH+Jb08iPTydpFe5vR1Aenr
jyJ9zenxEaTHc0V6nNPvSPo9S6TfOb3fn/R+ilDvs/wT8g0UyTeYIPQNyGeY
Rj7DGJHPwPkSS8mX4It8Cc7HmEg+hovIx+B8j8/keywT+R6cf5LQ7h5Zkxkn
51Nlkk/1RuhT0e+UFel3yo70O+VttO6KtO6HhOtOdbKOq5MFP0V1wvljLeSP
XSN/7Dvnp6n8JD8tUeSncftoOe2jeuE+on3XmfZdZ+G+I7/Omvy63iK/jvP3
1pK/N5X8PQvyA/P/8AM5PJEmPJEW4gnhTyXhj68Qf8hvdCa/0V7oN5I/qU/+
pAH5k5PIz6xq52ci+Z8a5H8GkP+pSX5pwB9+KeevXvrDX+VwtRfhqpQQVwmH
rQmHK4U4TP7tZfJvHYT+Lfm9W8jvXSn0e8k33tTON/5CPnNZO5+5lHxp1z98
ac7HNiUfW07kY//uez8T+d7cedSfzqMy0XnEnV+96PzqKTq/OJ//Hfn8xiKf
n7sXyKF7gc3/3Av8do8wmu4RjrS7d/AQ3Ttw9xRmdE8xmO4pNpGuDyJdP1yk
6wuGr3+2vC0AMy4/KU05/hhq7ssdl0hMJF9ixh++BHe/oEH3C4vpfqGF7iPW
0H3EArqPWNVufDfR+Nx9jQzd16ym+5qudL9jw93vXPpF9zsD6T5oJN0HzaX7
oKmYOa33+P4df2KM3ebVgwscoT5R11VHUxrT9Ra+qNoWge+vT9vv+EYB6i/9
sCyRfUT8/+Yf/P/v+wWD79z9gtIPul+Iaqd/tf75Xcbf44e3G9+B9Tssule6
QPdKFqLfHXDtJtR+7Z/fI/w2Lxeal1Q7X2Iu8f9bmGfh+lNjqw+mYnlKnkQ8
1J5b0G1f336Y/s3qcvr6txj1tNF9/uml0CAlL2e225/iMaDnnhPdc6X77ZDz
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
2Ew4oC3Egf8D1AtIzw==
            "]],
          Axes->True,
          BoxRatios->{1, 1, 0.4},
          Method->{"RotationControl" -> "Globe"},
          
          PlotRange->{{-1, 1}, {-1, 1}, {-0.9999992857144897, 
            0.9999992857144897}},
          PlotRangePadding->{
            Scaled[0.02], 
            Scaled[0.02], 
            Scaled[0.02]}], {192., -189.}, ImageScaled[{0.5, 0.5}], {360., 360.},
         
         ContentSelectable->True], InsetBox[
         GraphicsBox[{{}, 
           {Hue[0.67, 0.6, 0.6], 
            {Arrowheads[{{0.04587368524026634, 1.}}], 
             ArrowBox[{{-1.0560331814680526`, -1.084049772202079}, \
{-0.9439668185319474, -0.9159502277979211}}]}, 
            {Arrowheads[{{0.032298196169596914`, 1.}}], 
             ArrowBox[{{-1.0352862017408144`, -0.9188937101892826}, \
{-0.9647137982591855, -0.795392004096432}}]}, 
            {Arrowheads[{{0.021569321080806097`, 1.}}], 
             ArrowBox[{{-1.0204202556370454`, -0.7571682511235098}, \
{-0.9795797443629546, -0.6714031774479191}}]}, 
            {Arrowheads[{{0.013337164442113476`, 1.}}], 
             ArrowBox[{{-1.0104551708861673`, -0.5988733950047607}, \
{-0.9895448291138327, -0.5439837478523826}}]}, 
            {Arrowheads[{{0.007291208761895114, 1.}}], 
             ArrowBox[{{-1.004410775217602, -0.4440091418330351}, \
{-0.9955892247823982, -0.41313371530982246`}}]}, 
            {Arrowheads[{{0.0031718739892488508`, 1.}}], 
             ArrowBox[{{-1.001306896360771, -0.2925754916083332}, \
{-0.998693103639229, -0.27885307982023866`}}]}, 
            {Arrowheads[{{0.0007824882767554155, 1.}}], 
             ArrowBox[{{-1.0001633620450963`, -0.1445724443306549}, \
{-0.9998366379549036, -0.14114184138363126`}}]}, 
            {Arrowheads[{{0.0007824882767554141, 1.}}], 
             ArrowBox[{{-0.9998366379549036, 
              0.1411418413836308}, {-1.0001633620450965`, 
              0.14457244433065441`}}]}, 
            {Arrowheads[{{0.003171873989248824, 1.}}], 
             ArrowBox[{{-0.9986931036392291, 
              0.2788530798202382}, {-1.0013068963607707`, 
              0.2925754916083327}}]}, 
            {Arrowheads[{{0.007291208761895114, 1.}}], 
             ArrowBox[{{-0.9955892247823982, 
              0.413133715309822}, {-1.004410775217602, 
              0.44400914183303464`}}]}, 
            {Arrowheads[{{0.013337164442113426`, 1.}}], 
             ArrowBox[{{-0.9895448291138328, 
              0.5439837478523821}, {-1.010455170886167, 
              0.5988733950047601}}]}, 
            {Arrowheads[{{0.021569321080806073`, 1.}}], 
             ArrowBox[{{-0.9795797443629546, 
              0.6714031774479187}, {-1.0204202556370454`, 
              0.7571682511235093}}]}, 
            {Arrowheads[{{0.032298196169596886`, 1.}}], 
             ArrowBox[{{-0.9647137982591856, 
              0.7953920040964315}, {-1.0352862017408144`, 
              0.918893710189282}}]}, 
            {Arrowheads[{{0.04587368524026623, 1.}}], 
             ArrowBox[{{-0.9439668185319475, 
              0.9159502277979208}, {-1.0560331814680524`, 
              1.0840497722020783`}}]}, 
            {Arrowheads[{{0.03552620327140163, 1.}}], 
             ArrowBox[{{-0.905171298401188, -1.0617508530464252`}, \
{-0.8091144158845265, -0.9382491469535748}}]}, 
            {Arrowheads[{{0.024761472749431558`, 1.}}], 
             ArrowBox[{{-0.8873881729206982, -0.9025108308096187}, \
{-0.8268975413650163, -0.8117748834760957}}]}, 
            {Arrowheads[{{0.016367184630421618`, 1.}}], 
             ArrowBox[{{-0.8746459334031819, -0.7457912515542988}, \
{-0.8396397808825325, -0.6827801770171301}}]}, 
            {Arrowheads[{{0.010020442262720964`, 1.}}], 
             ArrowBox[{{-0.8661044321881435, -0.5915921152804656}, \
{-0.8481812820975709, -0.5512650275766776}}]}, 
            {Arrowheads[{{0.005429312061185359, 1.}}], 
             ArrowBox[{{-0.8609235216150873, -0.43991342198811917`}, \
{-0.8533621926706271, -0.4172294351547384}}]}, 
            {Arrowheads[{{0.0023450412926574247`, 1.}}], 
             ArrowBox[{{-0.858263054023518, -0.29075517167725945`}, \
{-0.8560226602621964, -0.28067339975131245`}}]}, 
            {Arrowheads[{{0.0005758216191758567, 1.}}], 
             ArrowBox[{{-0.8572828817529398, -0.14411736434788644`}, \
{-0.8570028325327745, -0.14159692136639968`}}]}, 
            {Arrowheads[{{0.0005758216191758504, 1.}}], 
             ArrowBox[{{-0.8570028325327746, 
              0.14159692136639926`}, {-0.8572828817529399, 
              0.144117364347886}}]}, 
            {Arrowheads[{{0.002345041292657412, 1.}}], 
             ArrowBox[{{-0.8560226602621964, 
              0.280673399751312}, {-0.858263054023518, 
              0.29075517167725895`}}]}, 
            {Arrowheads[{{0.005429312061185347, 1.}}], 
             ArrowBox[{{-0.8533621926706271, 
              0.417229435154738}, {-0.8609235216150873, 
              0.43991342198811867`}}]}, 
            {Arrowheads[{{0.010020442262720931`, 1.}}], 
             ArrowBox[{{-0.848181282097571, 
              0.5512650275766772}, {-0.8661044321881435, 
              0.5915921152804651}}]}, 
            {Arrowheads[{{0.016367184630421583`, 1.}}], 
             ArrowBox[{{-0.8396397808825325, 
              0.6827801770171297}, {-0.8746459334031818, 
              0.7457912515542983}}]}, 
            {Arrowheads[{{0.024761472749431537`, 1.}}], 
             ArrowBox[{{-0.8268975413650163, 
              0.8117748834760954}, {-0.8873881729206982, 
              0.9025108308096182}}]}, 
            {Arrowheads[{{0.035526203271401616`, 1.}}], 
             ArrowBox[{{-0.8091144158845265, 
              0.9382491469535743}, {-0.9051712984011879, 
              1.0617508530464248`}}]}, 
            {Arrowheads[{{0.02663832581154028, 1.}}], 
             ArrowBox[{{-0.7543094153343234, -1.0428825368377954`}, \
{-0.6742620132371054, -0.9571174631622047}}]}, 
            {Arrowheads[{{0.018322531725287826`, 1.}}], 
             ArrowBox[{{-0.7394901441005819, -0.8886483944114416}, \
{-0.6890812844708469, -0.8256373198742729}}]}, 
            {Arrowheads[{{0.011941296657711984`, 1.}}], 
             ArrowBox[{{-0.7288716111693183, -0.7361645596111203}, \
{-0.6996998174021105, -0.6924068689603087}}]}, 
            {Arrowheads[{{0.0072067374839475725`, 1.}}], 
             ArrowBox[{{-0.7217536934901196, -0.5854310324368314}, \
{-0.7068177350813093, -0.5574261104203119}}]}, 
            {Arrowheads[{{0.003852410532962913, 1.}}], 
             ArrowBox[{{-0.7174362680125729, -0.43644781288857487`}, \
{-0.711135160558856, -0.42069504425428267`}}]}, 
            {Arrowheads[{{0.0016452742895718773`, 1.}}], 
             ArrowBox[{{-0.715219211686265, -0.28921490096635083`}, \
{-0.7133522168851637, -0.28221367046222096`}}]}, 
            {Arrowheads[{{0.0004009475274851476, 1.}}], 
             ArrowBox[{{-0.7144024014607833, -0.1437322966701593}, \
{-0.7141690271106456, -0.14198198904412682`}}]}, 
            {Arrowheads[{{0.00040094752748514136`, 1.}}], 
             ArrowBox[{{-0.7141690271106456, 
              0.1419819890441264}, {-0.7144024014607833, 
              0.14373229667015885`}}]}, 
            {Arrowheads[{{0.0016452742895718651`, 1.}}], 
             ArrowBox[{{-0.7133522168851638, 
              0.28221367046222057`}, {-0.7152192116862651, 
              0.2892149009663504}}]}, 
            {Arrowheads[{{0.003852410532962891, 1.}}], 
             ArrowBox[{{-0.711135160558856, 
              0.4206950442542822}, {-0.7174362680125728, 
              0.43644781288857437`}}]}, 
            {Arrowheads[{{0.007206737483947551, 1.}}], 
             ArrowBox[{{-0.7068177350813093, 
              0.5574261104203114}, {-0.7217536934901196, 
              0.5854310324368308}}]}, 
            {Arrowheads[{{0.01194129665771197, 1.}}], 
             ArrowBox[{{-0.6996998174021105, 
              0.6924068689603082}, {-0.7288716111693182, 
              0.7361645596111198}}]}, 
            {Arrowheads[{{0.018322531725287788`, 1.}}], 
             ArrowBox[{{-0.6890812844708469, 
              0.8256373198742725}, {-0.7394901441005818, 
              0.8886483944114411}}]}, 
            {Arrowheads[{{0.026638325811540225`, 1.}}], 
             ArrowBox[{{-0.6742620132371054, 
              0.9571174631622043}, {-0.7543094153343233, 
              1.0428825368377947`}}]}, 
            {Arrowheads[{{0.019151170556702287`, 1.}}], 
             ArrowBox[{{-0.6034475322674588, -1.027444823576189}, \
{-0.5394096105896844, -0.972555176423811}}]}, 
            {Arrowheads[{{0.012949664895861296`, 1.}}], 
             ArrowBox[{{-0.5915921152804656, -0.8773064009947512}, \
{-0.5512650275766776, -0.8369793132909632}}]}, 
            {Arrowheads[{{0.008277414573286134, 1.}}], 
             ArrowBox[{{-0.5830972889354548, -0.7282881752939742}, \
{-0.5597598539216886, -0.7002832532774548}}]}, 
            {Arrowheads[{{0.004891155110998823, 1.}}], 
             ArrowBox[{{-0.5774029547920958, -0.5803901464738579}, \
{-0.5654541880650475, -0.5624669963832855}}]}, 
            {Arrowheads[{{0.002559402250428051, 1.}}], 
             ArrowBox[{{-0.5739490144100584, -0.4336123145344023}, \
{-0.5689081284470849, -0.4235305426084553}}]}, 
            {Arrowheads[{{0.001072456703444028, 1.}}], 
             ArrowBox[{{-0.5721753693490121, -0.2879546794756075}, \
{-0.5706817735081311, -0.28347389195296435`}}]}, 
            {Arrowheads[{{0.000257863957253246, 1.}}], 
             ArrowBox[{{-0.5715219211686267, -0.14341724129747346`}, \
{-0.5713352216885166, -0.14229704441681268`}}]}, 
            {Arrowheads[{{0.000257863957253246, 1.}}], 
             ArrowBox[{{-0.5713352216885166, 
              0.14229704441681224`}, {-0.5715219211686267, 
              0.14341724129747302`}}]}, 
            {Arrowheads[{{0.001072456703444016, 1.}}], 
             ArrowBox[{{-0.5706817735081311, 
              0.2834738919529639}, {-0.5721753693490121, 
              0.287954679475607}}]}, 
            {Arrowheads[{{0.002559402250428051, 1.}}], 
             ArrowBox[{{-0.5689081284470848, 
              0.42353054260845485`}, {-0.5739490144100583, 
              0.43361231453440185`}}]}, 
            {Arrowheads[{{0.004891155110998823, 1.}}], 
             ArrowBox[{{-0.5654541880650474, 
              0.562466996383285}, {-0.5774029547920957, 
              0.5803901464738574}}]}, 
            {Arrowheads[{{0.008277414573286134, 1.}}], 
             ArrowBox[{{-0.5597598539216886, 
              0.7002832532774542}, {-0.5830972889354548, 
              0.7282881752939736}}]}, 
            {Arrowheads[{{0.01294966489586126, 1.}}], 
             ArrowBox[{{-0.5512650275766776, 
              0.8369793132909628}, {-0.5915921152804655, 
              0.8773064009947507}}]}, 
            {Arrowheads[{{0.019151170556702266`, 1.}}], 
             ArrowBox[{{-0.5394096105896845, 
              0.9725551764238105}, {-0.6034475322674588, 
              1.0274448235761886`}}]}, 
            {Arrowheads[{{0.012964537057689483`, 1.}}], 
             ArrowBox[{{-0.4525856492005942, -1.0154377132616064`}, \
{-0.40455720794226335`, -0.9845622867383936}}]}, 
            {Arrowheads[{{0.008584496120584607, 1.}}], 
             ArrowBox[{{-0.44369408646034925`, -0.8684848505595476}, \
{-0.41344877068250824`, -0.8458008637261668}}]}, 
            {Arrowheads[{{0.005346878862958705, 1.}}], 
             ArrowBox[{{-0.4373229667015911, -0.7221620986028605}, \
{-0.41981989044126644`, -0.7064093299685683}}]}, 
            {Arrowheads[{{0.0030628450947346574`, 1.}}], 
             ArrowBox[{{-0.4330522160940719, -0.5764694573915451}, \
{-0.4240906410487857, -0.5663876854655981}}]}, 
            {Arrowheads[{{0.0015475920468394767`, 1.}}], 
             ArrowBox[{{-0.43046176080754384`, -0.43140692692560134`}, \
{-0.4266810963353137, -0.42573593021725614`}}]}, 
            {Arrowheads[{{0.0006262776414200573, 1.}}], 
             ArrowBox[{{-0.42913152701175916`, -0.2869745072050293}, \
{-0.4280113301310984, -0.2844540642235426}}]}, 
            {Arrowheads[{{0.00014656508079109203`, 1.}}], 
             ArrowBox[{{-0.42864144087647005`, -0.1431721982298289}, \
{-0.42850141626638744`, -0.1425420874844572}}]}, 
            {Arrowheads[{{0.00014656508079109203`, 1.}}], 
             ArrowBox[{{-0.4285014162663875, 
              0.1425420874844568}, {-0.4286414408764701, 
              0.1431721982298285}}]}, 
            {Arrowheads[{{0.0006262776414200573, 1.}}], 
             ArrowBox[{{-0.4280113301310984, 
              0.2844540642235421}, {-0.42913152701175916`, 
              0.2869745072050288}}]}, 
            {Arrowheads[{{0.0015475920468394767`, 1.}}], 
             ArrowBox[{{-0.4266810963353137, 
              0.42573593021725575`}, {-0.43046176080754384`, 
              0.43140692692560095`}}]}, 
            {Arrowheads[{{0.0030628450947346574`, 1.}}], 
             ArrowBox[{{-0.4240906410487857, 
              0.5663876854655977}, {-0.4330522160940719, 
              0.5764694573915446}}]}, 
            {Arrowheads[{{0.005346878862958695, 1.}}], 
             ArrowBox[{{-0.41981989044126644`, 
              0.7064093299685679}, {-0.43732296670159104`, 
              0.7221620986028601}}]}, 
            {Arrowheads[{{0.008584496120584583, 1.}}], 
             ArrowBox[{{-0.4134487706825083, 
              0.8458008637261664}, {-0.44369408646034925`, 
              0.868484850559547}}]}, 
            {Arrowheads[{{0.01296453705768946, 1.}}], 
             ArrowBox[{{-0.4045572079422634, 
              0.9845622867383932}, {-0.45258564920059413`, 
              1.015437713261606}}]}, 
            {Arrowheads[{{0.007909879406035863, 1.}}], 
             ArrowBox[{{-0.30172376613372953`, -1.0068612058940474`}, \
{-0.2697048052948423, -0.9931387941059527}}]}, 
            {Arrowheads[{{0.005118804500856113, 1.}}], 
             ArrowBox[{{-0.2957960576402329, -0.8621837431058307}, \
{-0.2756325137883389, -0.8521019711798836}}]}, 
            {Arrowheads[{{0.0030898632049762204`, 1.}}], 
             ArrowBox[{{-0.2915486444677275, -0.7177863295377793}, \
{-0.2798799269608444, -0.7107850990336495}}]}, 
            {Arrowheads[{{0.0016957029373994268`, 1.}}], 
             ArrowBox[{{-0.288701477396048, -0.5736689651898932}, \
{-0.2827270940325239, -0.56918817766725}}]}, 
            {Arrowheads[{{0.0008093540559913265, 1.}}], 
             ArrowBox[{{-0.2869745072050293, -0.42983165006217217`}, \
{-0.2844540642235426, -0.42731120708068543`}}]}, 
            {Arrowheads[{{0.0003056971944374287, 1.}}], 
             ArrowBox[{{-0.2860876846745062, -0.2862743841546163}, \
{-0.28534088675406566`, -0.28515418727395553`}}]}, 
            {Arrowheads[{{0.00006702854396524975, 1.}}], 
             ArrowBox[{{-0.28576096058431344`, -0.14299716746722566`}, \
{-0.2856676108442584, -0.14271711824706046`}}]}, 
            {Arrowheads[{{0.00006702854396524975, 1.}}], 
             ArrowBox[{{-0.2856676108442584, 
              0.14271711824706004`}, {-0.28576096058431344`, 
              0.14299716746722524`}}]}, 
            {Arrowheads[{{0.0003056971944374287, 1.}}], 
             ArrowBox[{{-0.28534088675406566`, 
              0.2851541872739551}, {-0.2860876846745062, 
              0.28627438415461587`}}]}, 
            {Arrowheads[{{0.0008093540559913265, 1.}}], 
             ArrowBox[{{-0.2844540642235425, 
              0.42731120708068493`}, {-0.28697450720502926`, 
              0.42983165006217167`}}]}, 
            {Arrowheads[{{0.0016957029373994268`, 1.}}], 
             ArrowBox[{{-0.28272709403252383`, 
              0.5691881776672496}, {-0.28870147739604796`, 
              0.5736689651898927}}]}, 
            {Arrowheads[{{0.0030898632049762204`, 1.}}], 
             ArrowBox[{{-0.2798799269608444, 
              0.7107850990336491}, {-0.2915486444677275, 
              0.7177863295377789}}]}, 
            {Arrowheads[{{0.00511880450085609, 1.}}], 
             ArrowBox[{{-0.2756325137883389, 
              0.8521019711798833}, {-0.29579605764023287`, 
              0.8621837431058302}}]}, 
            {Arrowheads[{{0.00790987940603585, 1.}}], 
             ArrowBox[{{-0.2697048052948423, 
              0.9931387941059523}, {-0.3017237661337295, 
              1.006861205894047}}]}, 
            {Arrowheads[{{0.0037176868452303085`, 1.}}], 
             ArrowBox[{{-0.15086188306686488`, -1.0017153014735118`}, \
{-0.13485240264742127`, -0.9982846985264882}}]}, 
            {Arrowheads[{{0.0023596522831916926`, 1.}}], 
             ArrowBox[{{-0.14789802882011657`, -0.8584030786336005}, \
{-0.13781625689416957`, -0.8558826356521138}}]}, 
            {Arrowheads[{{0.0013830983136335897`, 1.}}], 
             ArrowBox[{{-0.14577432223386386`, -0.7151608680987307}, \
{-0.1399399634804223, -0.7134105604726982}}]}, 
            {Arrowheads[{{0.0007244046124043364, 1.}}], 
             ArrowBox[{{-0.14435073869802412`, -0.571988669868902}, \
{-0.14136354701626203`, -0.5708684729882412}}]}, 
            {Arrowheads[{{0.00031992528130350353`, 1.}}], 
             ArrowBox[{{-0.14348725360251477`, -0.4288864839441146}, \
{-0.1422270321117714, -0.42825637319874293`}}]}, 
            {Arrowheads[{{0.00010598143358746103`, 1.}}], 
             ArrowBox[{{-0.1430438423372532, -0.28585431032436853`}, \
{-0.14267044337703294`, -0.28557426110420336`}}]}, 
            {Arrowheads[{{0.000019106074652338855`, 1.}}], 
             ArrowBox[{{-0.14288048029215683`, -0.1428921490096637}, \
{-0.1428338054221293, -0.1428221367046224}}]}, 
            {Arrowheads[{{0.000019106074652338855`, 1.}}], 
             ArrowBox[{{-0.1428338054221293, 
              0.142822136704622}, {-0.14288048029215683`, 
              0.1428921490096633}}]}, 
            {Arrowheads[{{0.00010598143358746103`, 1.}}], 
             ArrowBox[{{-0.14267044337703294`, 
              0.28557426110420286`}, {-0.1430438423372532, 
              0.28585431032436803`}}]}, 
            {Arrowheads[{{0.00031992528130350353`, 1.}}], 
             ArrowBox[{{-0.14222703211177137`, 
              0.4282563731987425}, {-0.14348725360251474`, 
              0.42888648394411416`}}]}, 
            {Arrowheads[{{0.0007244046124043305, 1.}}], 
             ArrowBox[{{-0.14136354701626203`, 
              0.5708684729882408}, {-0.1443507386980241, 
              0.5719886698689016}}]}, 
            {Arrowheads[{{0.0013830983136335897`, 1.}}], 
             ArrowBox[{{-0.13993996348042229`, 
              0.7134105604726977}, {-0.14577432223386383`, 
              0.7151608680987301}}]}, 
            {Arrowheads[{{0.0023596522831916926`, 1.}}], 
             ArrowBox[{{-0.13781625689416957`, 
              0.8558826356521134}, {-0.14789802882011657`, 
              0.8584030786336002}}]}, 
            {Arrowheads[{{0.0037176868452303085`, 1.}}], 
             ArrowBox[{{-0.13485240264742127`, 
              0.9982846985264877}, {-0.15086188306686488`, 
              1.0017153014735114`}}]}, 
            {Arrowheads[{{0.0037176868452302903`, 1.}}], 
             ArrowBox[{{0.1508618830668644, -1.0017153014735118`}, {
              0.13485240264742085`, -0.9982846985264883}}]}, 
            {Arrowheads[{{0.0023596522831916865`, 1.}}], 
             ArrowBox[{{0.1478980288201161, -0.8584030786336005}, {
              0.13781625689416913`, -0.8558826356521138}}]}, 
            {Arrowheads[{{0.0013830983136335897`, 1.}}], 
             ArrowBox[{{0.14577432223386338`, -0.7151608680987307}, {
              0.13993996348042184`, -0.7134105604726982}}]}, 
            {Arrowheads[{{0.0007244046124043305, 1.}}], 
             ArrowBox[{{0.14435073869802367`, -0.571988669868902}, {
              0.1413635470162616, -0.5708684729882412}}]}, 
            {Arrowheads[{{0.00031992528130350353`, 1.}}], 
             ArrowBox[{{0.14348725360251433`, -0.4288864839441146}, {
              0.14222703211177096`, -0.42825637319874293`}}]}, 
            {Arrowheads[{{0.00010598143358746103`, 1.}}], 
             ArrowBox[{{0.14304384233725276`, -0.28585431032436853`}, {
              0.1426704433770325, -0.28557426110420336`}}]}, 
            {Arrowheads[{{0.000019106074652338855`, 1.}}], 
             ArrowBox[{{0.1428804802921564, -0.1428921490096637}, {
              0.14283380542212887`, -0.1428221367046224}}]}, 
            {Arrowheads[{{0.000019106074652338855`, 1.}}], 
             ArrowBox[{{0.14283380542212887`, 0.142822136704622}, {
              0.1428804802921564, 0.1428921490096633}}]}, 
            {Arrowheads[{{0.00010598143358746103`, 1.}}], 
             ArrowBox[{{0.1426704433770325, 0.28557426110420286`}, {
              0.14304384233725276`, 0.28585431032436803`}}]}, 
            {Arrowheads[{{0.00031992528130350353`, 1.}}], 
             ArrowBox[{{0.14222703211177093`, 0.4282563731987425}, {
              0.1434872536025143, 0.42888648394411416`}}]}, 
            {Arrowheads[{{0.0007244046124043305, 1.}}], 
             ArrowBox[{{0.1413635470162616, 0.5708684729882408}, {
              0.14435073869802367`, 0.5719886698689016}}]}, 
            {Arrowheads[{{0.0013830983136335834`, 1.}}], 
             ArrowBox[{{0.13993996348042187`, 0.7134105604726977}, {
              0.14577432223386338`, 0.7151608680987301}}]}, 
            {Arrowheads[{{0.0023596522831916744`, 1.}}], 
             ArrowBox[{{0.13781625689416915`, 0.8558826356521134}, {
              0.1478980288201161, 0.8584030786336001}}]}, 
            {Arrowheads[{{0.003717686845230296, 1.}}], 
             ArrowBox[{{0.13485240264742085`, 0.9982846985264877}, {
              0.1508618830668644, 1.0017153014735114`}}]}, 
            {Arrowheads[{{0.007909879406035842, 1.}}], 
             ArrowBox[{{0.3017237661337291, -1.0068612058940472`}, {
              0.26970480529484187`, -0.9931387941059527}}]}, 
            {Arrowheads[{{0.00511880450085609, 1.}}], 
             ArrowBox[{{0.2957960576402325, -0.8621837431058307}, {
              0.27563251378833853`, -0.8521019711798837}}]}, 
            {Arrowheads[{{0.0030898632049762204`, 1.}}], 
             ArrowBox[{{0.29154864446772705`, -0.7177863295377793}, {
              0.27987992696084396`, -0.7107850990336495}}]}, 
            {Arrowheads[{{0.0016957029373994268`, 1.}}], 
             ArrowBox[{{0.28870147739604757`, -0.5736689651898932}, {
              0.28272709403252344`, -0.56918817766725}}]}, 
            {Arrowheads[{{0.0008093540559913265, 1.}}], 
             ArrowBox[{{0.2869745072050289, -0.42983165006217217`}, {
              0.28445406422354214`, -0.42731120708068543`}}]}, 
            {Arrowheads[{{0.0003056971944374287, 1.}}], 
             ArrowBox[{{0.28608768467450574`, -0.2862743841546163}, {
              0.2853408867540652, -0.28515418727395553`}}]}, 
            {Arrowheads[{{0.00006702854396524975, 1.}}], 
             ArrowBox[{{0.285760960584313, -0.14299716746722566`}, {
              0.28566761084425796`, -0.14271711824706046`}}]}, 
            {Arrowheads[{{0.00006702854396524975, 1.}}], 
             ArrowBox[{{0.28566761084425796`, 0.14271711824706004`}, {
              0.285760960584313, 0.14299716746722524`}}]}, 
            {Arrowheads[{{0.0003056971944374287, 1.}}], 
             ArrowBox[{{0.2853408867540652, 0.2851541872739551}, {
              0.28608768467450574`, 0.28627438415461587`}}]}, 
            {Arrowheads[{{0.0008093540559913265, 1.}}], 
             ArrowBox[{{0.2844540642235421, 0.42731120708068493`}, {
              0.2869745072050288, 0.42983165006217167`}}]}, 
            {Arrowheads[{{0.001695702937399437, 1.}}], 
             ArrowBox[{{0.2827270940325234, 0.5691881776672496}, {
              0.28870147739604757`, 0.5736689651898927}}]}, 
            {Arrowheads[{{0.0030898632049762204`, 1.}}], 
             ArrowBox[{{0.27987992696084396`, 0.7107850990336491}, {
              0.29154864446772705`, 0.7177863295377789}}]}, 
            {Arrowheads[{{0.00511880450085609, 1.}}], 
             ArrowBox[{{0.27563251378833853`, 0.8521019711798833}, {
              0.2957960576402325, 0.8621837431058302}}]}, 
            {Arrowheads[{{0.00790987940603584, 1.}}], 
             ArrowBox[{{0.2697048052948419, 0.9931387941059523}, {
              0.30172376613372903`, 1.006861205894047}}]}, 
            {Arrowheads[{{0.012964537057689473`, 1.}}], 
             ArrowBox[{{0.4525856492005937, -1.0154377132616064`}, {
              0.4045572079422629, -0.9845622867383936}}]}, 
            {Arrowheads[{{0.008584496120584583, 1.}}], 
             ArrowBox[{{0.4436940864603488, -0.8684848505595476}, {
              0.41344877068250785`, -0.8458008637261669}}]}, 
            {Arrowheads[{{0.005346878862958705, 1.}}], 
             ArrowBox[{{0.43732296670159065`, -0.7221620986028605}, {
              0.419819890441266, -0.7064093299685683}}]}, 
            {Arrowheads[{{0.0030628450947346574`, 1.}}], 
             ArrowBox[{{0.4330522160940714, -0.5764694573915451}, {
              0.4240906410487852, -0.5663876854655981}}]}, 
            {Arrowheads[{{0.0015475920468394767`, 1.}}], 
             ArrowBox[{{0.4304617608075434, -0.43140692692560134`}, {
              0.42668109633531326`, -0.42573593021725614`}}]}, 
            {Arrowheads[{{0.0006262776414200573, 1.}}], 
             ArrowBox[{{0.4291315270117587, -0.2869745072050293}, {
              0.42801133013109793`, -0.2844540642235426}}]}, 
            {Arrowheads[{{0.00014656508079109203`, 1.}}], 
             ArrowBox[{{0.4286414408764696, -0.1431721982298289}, {
              0.428501416266387, -0.1425420874844572}}]}, 
            {Arrowheads[{{0.00014656508079108587`, 1.}}], 
             ArrowBox[{{0.42850141626638705`, 0.1425420874844568}, {
              0.42864144087646966`, 0.14317219822982846`}}]}, 
            {Arrowheads[{{0.0006262776414200573, 1.}}], 
             ArrowBox[{{0.42801133013109793`, 0.2844540642235421}, {
              0.4291315270117587, 0.2869745072050288}}]}, 
            {Arrowheads[{{0.0015475920468394663`, 1.}}], 
             ArrowBox[{{0.42668109633531326`, 0.42573593021725575`}, {
              0.4304617608075434, 0.4314069269256009}}]}, 
            {Arrowheads[{{0.0030628450947346574`, 1.}}], 
             ArrowBox[{{0.42409064104878524`, 0.5663876854655977}, {
              0.43305221609407146`, 0.5764694573915446}}]}, 
            {Arrowheads[{{0.005346878862958687, 1.}}], 
             ArrowBox[{{0.419819890441266, 0.7064093299685679}, {
              0.43732296670159065`, 0.72216209860286}}]}, 
            {Arrowheads[{{0.008584496120584572, 1.}}], 
             ArrowBox[{{0.41344877068250785`, 0.8458008637261665}, {
              0.44369408646034875`, 0.8684848505595472}}]}, 
            {Arrowheads[{{0.012964537057689421`, 1.}}], 
             ArrowBox[{{0.40455720794226296`, 0.9845622867383933}, {
              0.4525856492005937, 1.0154377132616057`}}]}, 
            {Arrowheads[{{0.019151170556702266`, 1.}}], 
             ArrowBox[{{0.6034475322674584, -1.027444823576189}, {
              0.5394096105896841, -0.972555176423811}}]}, 
            {Arrowheads[{{0.01294966489586126, 1.}}], 
             ArrowBox[{{0.5915921152804652, -0.8773064009947512}, {
              0.5512650275766773, -0.8369793132909633}}]}, 
            {Arrowheads[{{0.008277414573286134, 1.}}], 
             ArrowBox[{{0.5830972889354543, -0.7282881752939742}, {
              0.5597598539216881, -0.7002832532774548}}]}, 
            {Arrowheads[{{0.004891155110998823, 1.}}], 
             ArrowBox[{{0.5774029547920954, -0.5803901464738578}, {
              0.5654541880650471, -0.5624669963832853}}]}, 
            {Arrowheads[{{0.002559402250428051, 1.}}], 
             ArrowBox[{{0.573949014410058, -0.43361231453440224`}, {
              0.5689081284470845, -0.42353054260845524`}}]}, 
            {Arrowheads[{{0.001072456703444028, 1.}}], 
             ArrowBox[{{0.5721753693490117, -0.2879546794756075}, {
              0.5706817735081307, -0.28347389195296435`}}]}, 
            {Arrowheads[{{0.000257863957253246, 1.}}], 
             ArrowBox[{{0.5715219211686262, -0.14341724129747346`}, {
              0.5713352216885161, -0.14229704441681268`}}]}, 
            {Arrowheads[{{0.000257863957253246, 1.}}], 
             ArrowBox[{{0.5713352216885161, 0.14229704441681224`}, {
              0.5715219211686262, 0.14341724129747302`}}]}, 
            {Arrowheads[{{0.001072456703444016, 1.}}], 
             ArrowBox[{{0.5706817735081307, 0.2834738919529639}, {
              0.5721753693490117, 0.287954679475607}}]}, 
            {Arrowheads[{{0.0025594022504280395`, 1.}}], 
             ArrowBox[{{0.5689081284470844, 0.42353054260845485`}, {
              0.5739490144100579, 0.4336123145344018}}]}, 
            {Arrowheads[{{0.004891155110998823, 1.}}], 
             ArrowBox[{{0.565454188065047, 0.562466996383285}, {
              0.5774029547920952, 0.5803901464738574}}]}, 
            {Arrowheads[{{0.008277414573286134, 1.}}], 
             ArrowBox[{{0.5597598539216881, 0.7002832532774543}, {
              0.5830972889354543, 0.7282881752939737}}]}, 
            {Arrowheads[{{0.01294966489586126, 1.}}], 
             ArrowBox[{{0.5512650275766773, 0.8369793132909629}, {
              0.5915921152804652, 0.8773064009947508}}]}, 
            {Arrowheads[{{0.0191511705567022, 1.}}], 
             ArrowBox[{{0.5394096105896841, 0.9725551764238106}, {
              0.6034475322674583, 1.0274448235761884`}}]}, 
            {Arrowheads[{{0.02663832581154028, 1.}}], 
             ArrowBox[{{0.7543094153343229, -1.0428825368377954`}, {
              0.674262013237105, -0.9571174631622047}}]}, 
            {Arrowheads[{{0.018322531725287805`, 1.}}], 
             ArrowBox[{{0.7394901441005814, -0.8886483944114415}, {
              0.6890812844708465, -0.8256373198742729}}]}, 
            {Arrowheads[{{0.01194129665771197, 1.}}], 
             ArrowBox[{{0.7288716111693179, -0.7361645596111202}, {
              0.6996998174021102, -0.6924068689603086}}]}, 
            {Arrowheads[{{0.007206737483947551, 1.}}], 
             ArrowBox[{{0.7217536934901192, -0.5854310324368314}, {
              0.7068177350813089, -0.557426110420312}}]}, 
            {Arrowheads[{{0.0038524105329629005`, 1.}}], 
             ArrowBox[{{0.7174362680125724, -0.43644781288857487`}, {
              0.7111351605588555, -0.4206950442542827}}]}, 
            {Arrowheads[{{0.0016452742895718773`, 1.}}], 
             ArrowBox[{{0.7152192116862646, -0.28921490096635083`}, {
              0.7133522168851633, -0.28221367046222096`}}]}, 
            {Arrowheads[{{0.00040094752748514136`, 1.}}], 
             ArrowBox[{{0.7144024014607828, -0.1437322966701593}, {
              0.7141690271106451, -0.14198198904412684`}}]}, 
            {Arrowheads[{{0.00040094752748514136`, 1.}}], 
             ArrowBox[{{0.7141690271106451, 0.1419819890441264}, {
              0.7144024014607828, 0.14373229667015885`}}]}, 
            {Arrowheads[{{0.0016452742895718651`, 1.}}], 
             ArrowBox[{{0.7133522168851634, 0.28221367046222057`}, {
              0.7152192116862647, 0.2892149009663504}}]}, 
            {Arrowheads[{{0.003852410532962891, 1.}}], 
             ArrowBox[{{0.7111351605588555, 0.4206950442542823}, {
              0.7174362680125723, 0.4364478128885744}}]}, 
            {Arrowheads[{{0.007206737483947551, 1.}}], 
             ArrowBox[{{0.7068177350813089, 0.5574261104203115}, {
              0.7217536934901192, 0.5854310324368309}}]}, 
            {Arrowheads[{{0.01194129665771195, 1.}}], 
             ArrowBox[{{0.6996998174021102, 0.6924068689603082}, {
              0.7288716111693179, 0.7361645596111197}}]}, 
            {Arrowheads[{{0.018322531725287805`, 1.}}], 
             ArrowBox[{{0.6890812844708465, 0.8256373198742725}, {
              0.7394901441005814, 0.8886483944114411}}]}, 
            {Arrowheads[{{0.026638325811540263`, 1.}}], 
             ArrowBox[{{0.6742620132371051, 0.9571174631622043}, {
              0.7543094153343229, 1.042882536837795}}]}, 
            {Arrowheads[{{0.03552620327140163, 1.}}], 
             ArrowBox[{{0.9051712984011875, -1.0617508530464252`}, {
              0.8091144158845259, -0.9382491469535748}}]}, 
            {Arrowheads[{{0.024761472749431537`, 1.}}], 
             ArrowBox[{{0.8873881729206977, -0.9025108308096186}, {
              0.8268975413650158, -0.8117748834760957}}]}, 
            {Arrowheads[{{0.016367184630421597`, 1.}}], 
             ArrowBox[{{0.8746459334031814, -0.7457912515542987}, {
              0.8396397808825321, -0.6827801770171301}}]}, 
            {Arrowheads[{{0.010020442262720931`, 1.}}], 
             ArrowBox[{{0.8661044321881429, -0.5915921152804656}, {
              0.8481812820975705, -0.5512650275766777}}]}, 
            {Arrowheads[{{0.005429312061185359, 1.}}], 
             ArrowBox[{{0.8609235216150869, -0.4399134219881191}, {
              0.8533621926706266, -0.41722943515473837`}}]}, 
            {Arrowheads[{{0.0023450412926574247`, 1.}}], 
             ArrowBox[{{0.8582630540235175, -0.2907551716772594}, {
              0.856022660262196, -0.2806733997513124}}]}, 
            {Arrowheads[{{0.0005758216191758567, 1.}}], 
             ArrowBox[{{0.8572828817529393, -0.14411736434788644`}, {
              0.8570028325327741, -0.14159692136639968`}}]}, 
            {Arrowheads[{{0.0005758216191758504, 1.}}], 
             ArrowBox[{{0.8570028325327742, 0.14159692136639926`}, {
              0.8572828817529394, 0.144117364347886}}]}, 
            {Arrowheads[{{0.002345041292657412, 1.}}], 
             ArrowBox[{{0.856022660262196, 0.280673399751312}, {
              0.8582630540235175, 0.29075517167725895`}}]}, 
            {Arrowheads[{{0.005429312061185347, 1.}}], 
             ArrowBox[{{0.8533621926706266, 0.417229435154738}, {
              0.8609235216150869, 0.43991342198811867`}}]}, 
            {Arrowheads[{{0.010020442262720931`, 1.}}], 
             ArrowBox[{{0.8481812820975706, 0.5512650275766773}, {
              0.866104432188143, 0.5915921152804652}}]}, 
            {Arrowheads[{{0.01636718463042157, 1.}}], 
             ArrowBox[{{0.8396397808825322, 0.6827801770171297}, {
              0.8746459334031813, 0.7457912515542983}}]}, 
            {Arrowheads[{{0.024761472749431503`, 1.}}], 
             ArrowBox[{{0.8268975413650158, 0.8117748834760954}, {
              0.8873881729206976, 0.9025108308096181}}]}, 
            {Arrowheads[{{0.035526203271401616`, 1.}}], 
             ArrowBox[{{0.809114415884526, 0.9382491469535743}, {
              0.9051712984011875, 1.0617508530464248`}}]}, 
            {Arrowheads[{{0.045873685240266276`, 1.}}], 
             ArrowBox[{{1.0560331814680521`, -1.0840497722020788`}, {
              0.9439668185319471, -0.9159502277979211}}]}, 
            {Arrowheads[{{0.032298196169596886`, 1.}}], 
             ArrowBox[{{1.035286201740814, -0.9188937101892825}, {
              0.9647137982591851, -0.795392004096432}}]}, 
            {Arrowheads[{{0.021569321080806073`, 1.}}], 
             ArrowBox[{{1.020420255637045, -0.7571682511235097}, {
              0.9795797443629541, -0.6714031774479191}}]}, 
            {Arrowheads[{{0.013337164442113452`, 1.}}], 
             ArrowBox[{{1.0104551708861669`, -0.5988733950047607}, {
              0.9895448291138322, -0.5439837478523827}}]}, 
            {Arrowheads[{{0.007291208761895126, 1.}}], 
             ArrowBox[{{1.0044107752176015`, -0.4440091418330351}, {
              0.9955892247823978, -0.4131337153098224}}]}, 
            {Arrowheads[{{0.0031718739892488508`, 1.}}], 
             ArrowBox[{{1.0013068963607705`, -0.2925754916083332}, {
              0.9986931036392286, -0.27885307982023866`}}]}, 
            {Arrowheads[{{0.0007824882767554155, 1.}}], 
             ArrowBox[{{1.0001633620450958`, -0.1445724443306549}, {
              0.9998366379549032, -0.14114184138363126`}}]}, 
            {Arrowheads[{{0.0007824882767554141, 1.}}], 
             ArrowBox[{{0.9998366379549032, 0.1411418413836308}, {
              1.000163362045096, 0.14457244433065441`}}]}, 
            {Arrowheads[{{0.003171873989248824, 1.}}], 
             ArrowBox[{{0.9986931036392287, 0.2788530798202382}, {
              1.0013068963607703`, 0.2925754916083327}}]}, 
            {Arrowheads[{{0.007291208761895103, 1.}}], 
             ArrowBox[{{0.9955892247823978, 0.413133715309822}, {
              1.0044107752176015`, 0.4440091418330346}}]}, 
            {Arrowheads[{{0.013337164442113426`, 1.}}], 
             ArrowBox[{{0.9895448291138323, 0.5439837478523822}, {
              1.0104551708861667`, 0.5988733950047602}}]}, 
            {Arrowheads[{{0.021569321080806052`, 1.}}], 
             ArrowBox[{{0.9795797443629541, 0.6714031774479187}, {
              1.020420255637045, 0.7571682511235092}}]}, 
            {Arrowheads[{{0.032298196169596886`, 1.}}], 
             ArrowBox[{{0.9647137982591851, 0.7953920040964315}, {
              1.035286201740814, 0.918893710189282}}]}, 
            {Arrowheads[{{0.04587368524026623, 1.}}], 
             ArrowBox[{{0.9439668185319471, 0.9159502277979208}, {
              1.056033181468052, 1.0840497722020783`}}]}}},
          AspectRatio->1,
          Frame->True,
          Method->{"TransparentPolygonMesh" -> True},
          
          PlotRange->{{-1.1010152544552212`, 
           1.1010152544552212`}, {-1.1010152544552212`, 1.1010152544552212`}},
          
          PlotRangeClipping->True,
          PlotRangePadding->{
            Scaled[0.02], 
            Scaled[0.02]}], {576., -189.}, 
         ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
      Background->None,
      ContentSelectable->True,
      ImageMargins->0.,
      ImageSize->{303.3333333333333, Automatic},
      PlotRangePadding->{6, 5}], {0., 0.}, ImageScaled[{0., 0.}], {303.3333333333333, 158.1899641577061},
     
     ContentSelectable->True],
    AspectRatio->0.5203617242029805,
    Background->None,
    ContentSelectable->True,
    ImageMargins->0.,
    ImagePadding->0.,
    ImageSize->{304., 158.1899641577061},
    PlotRange->{{0., 304.}, {0., 158.1899641577061}},
    PlotRangePadding->None], {0., 0.}, ImageScaled[{0., 0.}], {303.3333333333333, 158.1899641577061},
   
   ContentSelectable->True],
  AspectRatio->0.511389970337412,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{309.3333333333333, 158.1899641577061},
  PlotRange->{{0., 309.3333333333333}, {0., 158.1899641577061}},
  PlotRangePadding->None]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.4664499290637107`*^9, 3.471097021113083*^9},
 Magnification->0.97,
 CellLabel->"Out[116]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2WithHeadAbove"],

Cell[TextData[{
 "The Mathematica tutorial to the ",
 StyleBox["VectorAnalysis", "Literal"],
 " package is essential reading for using those functions."
}], "Text",
 CellChangeTimes->{{3.445940522953125*^9, 3.445940600890625*^9}, {
   3.4459413134375*^9, 3.44594135115625*^9}, {3.44594151565625*^9, 
   3.445941670359375*^9}, 3.44594195946875*^9, 3.446122526125*^9}],

Cell[TextData[{
 StyleBox["Div, Grad, Curl, and All That", "CitationTitle"],
 " by H. M. Schey (W.W. Norton) and ",
 StyleBox["Vector Calculus", "CitationTitle"],
 " by Paul C. Matthews (Springer) are two of my favorite informal \
introductions to vector calculus."
}], "Text",
 CellChangeTimes->{{3.445940522953125*^9, 3.445940600890625*^9}, {
   3.4459413134375*^9, 3.44594135115625*^9}, {3.44594151565625*^9, 
   3.445941670359375*^9}, 3.471979072539349*^9, {3.47601483531317*^9, 
   3.4760148484338827`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Solving Problems Involving Sums \[LineSeparator]and Products"
}], "Heading1",
 CellChangeTimes->{{3.4460516304375*^9, 3.446051645703125*^9}, 
   3.471097065346005*^9},
 CellTags->"Sums and Products"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to solve problems in discrete calculus that are expressed in terms \
of sums or products.\
\>", "Text",
 CellChangeTimes->{{3.471088920264738*^9, 3.4710889407296658`*^9}, {
  3.471979091025341*^9, 3.4719790999682217`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell["\<\
Mathematica can handle infinite sums and products with ease, provided, of \
course, they converge.\
\>", "Text",
 CellChangeTimes->{{3.446054786015625*^9, 3.4460548013125*^9}, {
   3.44605700575*^9, 3.446057040484375*^9}, 3.471088993949337*^9, 
   3.476014884455203*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", 
   SuperscriptBox["n", "2"]]}]], "Input",
 CellChangeTimes->{{3.44605471471875*^9, 3.446054764390625*^9}},
 CellLabel->"In[117]:="],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "2"], "6"]], "Output",
 CellChangeTimes->{3.446054766*^9, 3.4664499293757105`*^9},
 CellLabel->"Out[117]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Product]", 
   RowBox[{"i", "=", "2"}], "\[Infinity]"], 
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    FractionBox["1", 
     SuperscriptBox["i", "3"]]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.446056896921875*^9, 3.446056977609375*^9}},
 CellLabel->"In[118]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{"Cosh", "[", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", "\[Pi]"}], "2"], "]"}], 
  RowBox[{"3", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.446056923859375*^9, 3.446056978703125*^9}, 
   3.466449929484911*^9},
 CellLabel->"Out[118]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "If sums or products don\[CloseCurlyQuote]t converge, Mathematica will let \
you know by emitting an\[LineSeparator]error. You can test for convergence \
without evaluating the sum using ",
 StyleBox["Sum\[DiscretionaryHyphen]Convergence", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.446057048171875*^9, 3.446057067203125*^9}, {
   3.44605812296875*^9, 3.446058131625*^9}, {3.446126616125*^9, 
   3.44612667965625*^9}, {3.446126810140625*^9, 3.44612681678125*^9}, 
   3.446127013328125*^9, 3.4461568356205096`*^9, 3.471089007086299*^9, {
   3.471101396322513*^9, 3.471101411866871*^9}, {3.47197911180228*^9, 
   3.471979116994157*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", "n"]}]], "Input",
 CellChangeTimes->{{3.446058148125*^9, 3.446058148828125*^9}},
 CellLabel->"In[119]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "::", "\<\"div\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Sum does not converge.\\\\\\\"\\\", \
\\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Sum/div\\\", ButtonNote -> \
\\\"Sum::div\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.446058149921875*^9, 3.4664499296721106`*^9},
 CellLabel->"During evaluation of In[119]:="],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"n", "=", "1"}], "\[Infinity]"], 
  FractionBox["1", "n"]}]], "Output",
 CellChangeTimes->{3.446058149921875*^9, 3.466449929703311*^9},
 CellLabel->"Out[119]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["n", "k"]], ",", 
      RowBox[{"SumConvergence", "[", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox["n", "k"]], ",", "n"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.446128043734375*^9, 3.44612809253125*^9}, {
  3.44612815453125*^9, 3.4461282574375*^9}},
 CellLabel->"In[120]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     FractionBox["1", "n"], "False"},
    {
     FractionBox["1", 
      SuperscriptBox["n", "2"]], "True"},
    {
     FractionBox["1", 
      SuperscriptBox["n", "3"]], "True"},
    {
     FractionBox["1", 
      SuperscriptBox["n", "4"]], "True"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.446128046890625*^9, 3.44612809296875*^9, {3.4461282155625*^9, 
   3.44612825796875*^9}, 3.4664499297501106`*^9},
 CellLabel->"Out[120]//TableForm="]
}, Open  ]],

Cell[TextData[{
 StyleBox["As with ",
  FontTracking->"Extended"],
 StyleBox["Integrate", "Literal",
  FontTracking->"Extended"],
 StyleBox[", ",
  FontTracking->"Extended"],
 StyleBox["Sum", "Literal",
  FontTracking->"Extended"],
 StyleBox[" can specify multiple summation variables. In traditional form \
these sum",
  FontTracking->"Extended"],
 StyleBox["s are rendered as a multiple summation, but keep in mind that \
these",
  FontTracking->"Plain"],
 StyleBox[" are en",
  FontTracking->"Extended"],
 StyleBox["tered as ",
  FontTracking->"SemiCondensed"],
 StyleBox["Sum[expr", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[",{n,nmin,nmax},{m,mmin,mmaz}]", "Literal",
  FontTracking->"Plain"],
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["rather than ",
  FontTracking->"SemiCondensed"],
 StyleBox["Sum[Sum[expr, ", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox["{n,nmin,nmax}],{m,mmin,mmaz}].", "Literal"]
}], "Text",
 CellChangeTimes->{{3.44605482159375*^9, 3.446054855796875*^9}, {
   3.44605494715625*^9, 3.44605497475*^9}, {3.4461270549375*^9, 
   3.446127131515625*^9}, {3.44612719053125*^9, 3.446127228453125*^9}, {
   3.446127284359375*^9, 3.44612734253125*^9}, {3.446127395046875*^9, 
   3.4461274286875*^9}, {3.44612746325*^9, 3.446127471953125*^9}, {
   3.446127564015625*^9, 3.4461276678125*^9}, {3.44612780825*^9, 
   3.446127823375*^9}, {3.446156840823634*^9, 3.446156842886134*^9}, 
   3.4710237809529676`*^9, {3.47108903440515*^9, 3.471089061683848*^9}, {
   3.4719791494007*^9, 3.471979167237816*^9}, {3.476016299744096*^9, 
   3.47601630764711*^9}}],

Cell["This double summation has a surprisingly simply solution.", "Text",
 CellChangeTimes->{{3.44605482159375*^9, 3.446054855796875*^9}, {
   3.44605494715625*^9, 3.44605497475*^9}, {3.4461270549375*^9, 
   3.446127131515625*^9}, {3.44612719053125*^9, 3.446127228453125*^9}, {
   3.446127284359375*^9, 3.44612734253125*^9}, {3.446127395046875*^9, 
   3.4461274286875*^9}, {3.44612746325*^9, 3.446127471953125*^9}, {
   3.446127564015625*^9, 3.4461276678125*^9}, {3.44612780825*^9, 
   3.44612784609375*^9}, 3.4461568916205096`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"m", "=", "1"}], "\[Infinity]"], 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   FractionBox[
    RowBox[{
     SuperscriptBox["m", "2"], " ", "n"}], 
    RowBox[{
     SuperscriptBox["2", "m"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        SuperscriptBox["2", "n"]}], "+", 
       RowBox[{
        SuperscriptBox["2", "m"], " ", "n"}]}], ")"}]}]]}]}]], "Input",
 CellChangeTimes->{
  3.446054623796875*^9, {3.446054875421875*^9, 3.44605494175*^9}},
 CellLabel->"In[121]:="],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.44605463234375*^9, {3.446054887828125*^9, 3.44605494340625*^9}, 
   3.466449930077711*^9},
 CellLabel->"Out[121]="]
}, Open  ]],

Cell["\<\
This is a very famous sum attributed to Srinivasa Ramanujan, one of India\
\[CloseCurlyQuote]s greatest mathematical geniuses. You might think that \
Mathematica is just doing some simple pattern matching to recognize this \
result; however, substitute for any of the magic constants in this formula, \
and Mathematica will handle it just as well (but don\[CloseCurlyQuote]t \
expect the answer to be as pretty).\
\>", "Text",
 CellChangeTimes->{{3.446055788421875*^9, 3.446055854796875*^9}, {
  3.4460559668125*^9, 3.446056080390625*^9}, {3.446122532703125*^9, 
  3.446122535234375*^9}, {3.446127901546875*^9, 3.4461279031875*^9}, {
  3.4710890794195642`*^9, 3.471089144024542*^9}, {3.4710891972114697`*^9, 
  3.471089241846752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox["2"]}], "9801"], 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "0"}], "\[Infinity]"], 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", "k"}], ")"}], "!"}], 
     RowBox[{"(", 
      RowBox[{"1103", " ", "+", " ", 
       RowBox[{"26390", " ", "k"}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}], "4"], 
     SuperscriptBox["396", 
      RowBox[{"4", "k"}]]}]]}]}]], "Input",
 CellChangeTimes->{{3.44605563465625*^9, 3.446055765140625*^9}, {
  3.44605588025*^9, 3.446055922375*^9}, {3.446055955328125*^9, 
  3.446055957828125*^9}},
 CellLabel->"In[122]:="],

Cell[BoxData[
 FractionBox["1", "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.446055771390625*^9, {3.4460558810625*^9, 3.44605592446875*^9}, 
   3.44605595865625*^9, 3.4664499301089106`*^9},
 CellLabel->"Out[122]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "k"}], ")"}], "!"}], 
    RowBox[{"(", 
     RowBox[{"5", " ", "+", " ", 
      RowBox[{"10", " ", "k"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"k", "!"}], ")"}], "4"], 
    SuperscriptBox["300", 
     RowBox[{"4", "k"}]]}]]}]], "Input",
 CellChangeTimes->{{3.44605636203125*^9, 3.4460563645*^9}, {
  3.446056396234375*^9, 3.44605644728125*^9}, {3.4460564886875*^9, 
  3.4460565508125*^9}},
 CellLabel->"In[123]:="],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "135000000"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"675000000", " ", 
     RowBox[{"HypergeometricPFQ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "3"], ",", 
         FractionBox["2", "3"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       FractionBox["1", "300000000"]}], "]"}]}], "+", 
    RowBox[{"HypergeometricPFQ", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        FractionBox["4", "3"], ",", 
        FractionBox["5", "3"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", 
      FractionBox["1", "300000000"]}], "]"}]}], ")"}]}]], "Output",
 PageWidth->PaperWidth,
 CellChangeTimes->{{3.446056353953125*^9, 3.446056365484375*^9}, {
   3.446056398703125*^9, 3.446056448015625*^9}, {3.446056495*^9, 
   3.44605655203125*^9}, 3.466449930280511*^9},
 CellLabel->"Out[123]="]
}, Open  ]],

Cell["\<\
Here is a very pretty formula for \[Pi] that combines an infinite sum and an \
infinite product.\
\>", "Text",
 CellChangeTimes->{{3.446120966578125*^9, 3.44612096753125*^9}, {
  3.446121026828125*^9, 3.446121036078125*^9}, {3.446121066390625*^9, 
  3.4461211135625*^9}, {3.44612127684375*^9, 3.446121292484375*^9}, {
  3.44612142275*^9, 3.446121434578125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   UnderoverscriptBox["\[Product]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   RowBox[{"(", 
    RowBox[{"1", " ", "+", " ", 
     FractionBox["1", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["n", "2"]}], "-", "1", " "}]]}], ")"}]}], 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   FractionBox["1", 
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["n", "2"]}], "-", "1"}]]}]]], "Input",
 CellChangeTimes->{{3.446120370546875*^9, 3.4461204334375*^9}, {
  3.446120520140625*^9, 3.4461205920625*^9}},
 CellLabel->"In[124]:="],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.44612046796875*^9, 3.446120603828125*^9, 
  3.4664499340869107`*^9},
 CellLabel->"Out[124]="]
}, Open  ]],

Cell[TextData[{
 "As of version 7, Mathematica can handle indefinite sums and products. \
Mathematica will seek to eliminate the sum if possible. Fo",
 StyleBox["r example, the sum over ",
  FontTracking->"SemiCondensed"],
 StyleBox["k", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" of a polyno",
  FontTracking->"SemiCondensed"],
 "mial is another polynomial that can be expressed in terms of ",
 StyleBox["k", "Literal"],
 ", and products over polynomials will invariably reduce to some expression \
involving ",
 StyleBox["Gamma", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.44606585178125*^9, 3.44606588903125*^9}, {
  3.446066006234375*^9, 3.446066092234375*^9}, {3.44606629134375*^9, 
  3.446066355703125*^9}, {3.4710892972777567`*^9, 3.471089297366729*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  UnderscriptBox["\[Sum]", "k"], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["k", "3"]}], "-", 
    SuperscriptBox["k", "2"], "+", 
    RowBox[{"3", " ", "k"}], "+", "5"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.4460659665625*^9, 3.4460659875*^9}},
 CellLabel->"In[125]:="],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "12"], " ", "k", " ", 
  RowBox[{"(", 
   RowBox[{"40", "+", 
    RowBox[{"33", " ", "k"}], "-", 
    RowBox[{"22", " ", 
     SuperscriptBox["k", "2"]}], "+", 
    RowBox[{"9", " ", 
     SuperscriptBox["k", "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.446065991234375*^9, 3.4664499341805105`*^9},
 CellLabel->"Out[125]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["\[Product]", "k"], 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["k", "2"], "-", 
    RowBox[{"3", " ", "k"}], "+", "5"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.44606612884375*^9, 3.446066130953125*^9}, {
  3.446066163953125*^9, 3.446066183078125*^9}, {3.446066229484375*^9, 
  3.44606627065625*^9}},
 CellLabel->"In[126]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   RowBox[{"Cosh", "[", 
    FractionBox[
     RowBox[{
      SqrtBox["11"], " ", "\[Pi]"}], "2"], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], "-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["11"]}], "2"], "+", "k"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["3", "2"]}], "+", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["11"]}], "2"], "+", "k"}], "]"}]}], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.44606621159375*^9, {3.4460662455*^9, 3.44606627290625*^9}, 
   3.466449934242911*^9},
 CellLabel->"Out[126]="]
}, Open  ]],

Cell[TextData[{
 "The Z-transform is an important infinite sum used in signal processing. It \
is defined as ",
 StyleBox["Sum[f[n] z^-n,{n,0,Infinity}]", "Literal"],
 ", but is directly supported using ",
 StyleBox["ZTransform", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.4461448692142596`*^9, 3.4461448889017596`*^9}, {
  3.4461449389330096`*^9, 3.4461449514642596`*^9}, {3.4461452464642596`*^9, 
  3.4461452667767596`*^9}, {3.4461473407455096`*^9, 3.446147491386134*^9}, {
  3.471089316257049*^9, 3.47108931794016*^9}, {3.471089402031142*^9, 
  3.4710894021293917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ZTransform", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", "n", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.446144993698634*^9, 3.446144997979884*^9}, {
  3.446145033073634*^9, 3.4461450845267596`*^9}, {3.446145134011134*^9, 
  3.4461451363392596`*^9}},
 CellLabel->"In[127]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{"z", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "z"}], ")"}], "3"]]], "Output",
 CellChangeTimes->{{3.446145050511134*^9, 3.446145101886134*^9}, 
   3.4461451369642596`*^9, 3.4664499343365107`*^9},
 CellLabel->"Out[127]="]
}, Open  ]],

Cell[TextData[{
 "Here is an unconventional application for ",
 StyleBox["Sum", "Literal"],
 ", but one that is sometimes used in discrete math to introduce the idea of \
a generating function. You can use ",
 StyleBox["Sum", "Literal"],
 " to construct a generating function for solutions to problems like ",
 StyleBox["x1+x2+x3 == 12", "Literal"],
 " subject to ",
 StyleBox["x1 >= 4", "Literal"],
 ", ",
 StyleBox["x2 >= 2", "Literal"],
 ", and ",
 StyleBox["5 >= x3 >= 2", "Literal"],
 ". Each ",
 StyleBox["Sum", "Literal"],
 " is constructed from the smallest number the associated variable can take \
to the largest, by considering the smallest the other variables can take. For \
example, ",
 StyleBox["x1", "Literal"],
 " must be at least 4 but can\[CloseCurlyQuote]t be greater than 12\[Dash]2\
\[Dash]2 = 8, since ",
 StyleBox["x2", "Literal"],
 " and ",
 StyleBox["x3", "Literal"],
 " must each be at least 2. Here we use ",
 StyleBox["Expand", "Literal"],
 " to generate the polynomial and ",
 StyleBox["Cases", "Literal"],
 " to find the exponents that sum to 12, thus giving all solutions."
}], "Text",
 CellChangeTimes->{{3.4461417079955096`*^9, 3.4461417092142596`*^9}, {
   3.4461417646517596`*^9, 3.446141936323634*^9}, {3.446142181823634*^9, 
   3.4461423297142596`*^9}, {3.446142361323634*^9, 3.4461424161830096`*^9}, {
   3.446142452073634*^9, 3.4461426149955096`*^9}, 3.446142729573634*^9, {
   3.4461429129330096`*^9, 3.446142944854884*^9}, {3.446143051042384*^9, 
   3.4461432417142596`*^9}, {3.4461438834642596`*^9, 3.4461439128392596`*^9}, 
   3.446143950323634*^9, 3.446156909448634*^9, {3.471023782477419*^9, 
   3.471023784844756*^9}, {3.471089531963608*^9, 3.4710895466341267`*^9}, {
   3.471089582470207*^9, 3.471089610504644*^9}, 3.472396342709079*^9, {
   3.476015021219771*^9, 3.476015024728921*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", " ", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "4"}], "8"], 
     RowBox[{
      SuperscriptBox["x1", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "2"}], "6"], 
       RowBox[{
        SuperscriptBox["x2", "n"], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "2"}], "5"], 
         SuperscriptBox["x3", "n"]}]}]}]}]}], " ", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["x1", "n1_"], " ", 
      SuperscriptBox["x2", "n2_"], 
      SuperscriptBox["x3", "n3_"]}], " ", "/;", " ", 
     RowBox[{
      RowBox[{"n1", "+", "n2", "+", "n3"}], "\[Equal]", "12"}]}], 
    "\[RuleDelayed]", "  ", 
    RowBox[{"{", 
     RowBox[{"n1", ",", "n2", ",", "n3"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[128]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"8", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.446142016917384*^9, 3.4461420354642596`*^9}, 
   3.4461428898392596`*^9, 3.4461434454330096`*^9, 3.4461437594955096`*^9, 
   3.446144343386134*^9, 3.466449934383311*^9},
 CellLabel->"Out[128]="]
}, Open  ]],

Cell[TextData[{
 "If you only care about the number of solutions, it would fall out of the \
coefficient of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "12"], TraditionalForm]]],
 " in the expansion of this polynomial."
}], "Text",
 CellChangeTimes->{{3.4461440262142596`*^9, 3.446144101167384*^9}, {
   3.446144368167384*^9, 3.446144376448634*^9}, {3.4461444095267596`*^9, 
   3.446144420542384*^9}, 3.446156919354884*^9, {3.4710896306860857`*^9, 
   3.471089640878868*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", " ", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "4"}], "8"], 
     RowBox[{
      SuperscriptBox["x", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"n", "=", "2"}], "6"], 
       RowBox[{
        SuperscriptBox["x", "n"], " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"n", "=", "2"}], "5"], 
         SuperscriptBox["x", "n"]}]}]}]}]}], " ", "]"}], ",", 
   RowBox[{
    RowBox[{"a_", " ", 
     SuperscriptBox["x", "12"]}], " ", "\[RuleDelayed]", " ", "a"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4461441149017596`*^9, 3.446144160229884*^9}, {
  3.446144201667384*^9, 3.4461442072767596`*^9}, {3.4461442431205096`*^9, 
  3.4461442460892596`*^9}, {3.4461442840892596`*^9, 3.446144328386134*^9}},
 CellLabel->"In[129]:="],

Cell[BoxData[
 RowBox[{"{", "14", "}"}]], "Output",
 CellChangeTimes->{3.4461441210892596`*^9, 3.4461442076517596`*^9, 
  3.4461442488080096`*^9, 3.4461443291830096`*^9, 3.466449934430111*^9},
 CellLabel->"Out[129]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 StyleBox["See ",
  FontColor->GrayLevel[0]],
 ButtonBox["Recipe 11.11",
  BaseStyle->"Hyperlink",
  ButtonData->"Generating Functions"],
 StyleBox[" for more information on generating functions in Mathematica.",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.4461432606830096`*^9, 3.446143274104884*^9}, {
  3.4461444987455096`*^9, 3.4461445438705096`*^9}, {3.4461448413392596`*^9, 
  3.4461448413392596`*^9}, {3.471089672163422*^9, 3.471089672862101*^9}, {
  3.4760150469387007`*^9, 3.47601504771397*^9}, {3.476015112051667*^9, 
  3.476015112069511*^9}}],

Cell[TextData[{
 StyleBox["Readers who are interested in gaining insight into the algorithm",
  FontColor->GrayLevel[0]],
 StyleBox["s that underlie Mathe",
  FontTracking->"Extended",
  FontColor->GrayLevel[0]],
 StyleBox["matica\[CloseCurlyQuote]s amazing feats with infinite sums should \
read ",
  FontColor->GrayLevel[0]],
 StyleBox["A=B", "Emphasis",
  FontColor->GrayLevel[0]],
 StyleBox[" by Marko Petkovsek, Herbert S. Wilf, and ",
  FontColor->GrayLevel[0]],
 StyleBox["Doron Zeilberger (A K Peters), which is available on",
  FontTracking->"Extended",
  FontColor->GrayLevel[0]],
 StyleBox["line at ",
  FontColor->GrayLevel[0]],
 StyleBox[ButtonBox["http://bit.ly/1LJiwe",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/1LJiwe"], None},
  ButtonNote->"http://bit.ly/1LJiwe"], "URL",
  FontColor->GrayLevel[0]],
 StyleBox[".",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.4664530539793997`*^9, 3.4664530559224*^9}, 
   3.471089934813425*^9, 3.471090068790277*^9, 3.4710901053326683`*^9, {
   3.471090190990315*^9, 3.471090219260056*^9}, {3.471090348652812*^9, 
   3.4710903603418427`*^9}, {3.471090540618338*^9, 3.4710905406641808`*^9}, 
   3.471101471705779*^9, {3.47197921420794*^9, 3.471979222578536*^9}, {
   3.472396410989726*^9, 3.472396413251485*^9}, {3.476015119843112*^9, 
   3.476015137615127*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Solving Difference Equations"
}], "Heading1",
 CellChangeTimes->{{3.445956094390625*^9, 3.44595610528125*^9}, {
  3.44604095621875*^9, 3.44604096115625*^9}},
 CellTags->"Difference Equations"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to solve problems that arise in discrete systems such as finance, \
actuarial science, dynamical systems, and numerical analysis. Many such \
problems can be modeled as recurrence relations, also known as difference \
equations.\
\>", "Text",
 CellChangeTimes->{{3.44602821390625*^9, 3.44602821575*^9}, {
  3.446028252703125*^9, 3.446028277984375*^9}, {3.4460291663125*^9, 
  3.446029233046875*^9}, {3.4460302900625*^9, 3.446030291609375*^9}, {
  3.446040988515625*^9, 3.44604102734375*^9}, {3.446048900046875*^9, 
  3.4460489125625*^9}, {3.4461225373125*^9, 3.446122541375*^9}, {
  3.4710905672950077`*^9, 3.47109057856353*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2", "TopOfPage"],

Cell[TextData[{
 StyleBox["RSolve", "Literal"],
 " is used to solve difference equations. A simple problem where ",
 StyleBox["RSolve", "Literal"],
 " applies is in mortgage calculations. Suppose you want to derive a function \
for the outstanding principal over the life of a loan. Let\[CloseCurlyQuote]s \
say the yearly interest rate is 5.75%, the monthly payment is $1,000.00, and \
the term is 30 years. This loan can be described as the following difference \
equation. Here the constraint ",
 StyleBox["y[360] == 0", "Literal"],
 " arises from the condition that the last payment is zero (I am using ",
 StyleBox["y[0]", "Literal"],
 " as the origin)."
}], "Text",
 CellChangeTimes->{{3.446030331703125*^9, 3.446030344546875*^9}, {
   3.446030376046875*^9, 3.446030376984375*^9}, {3.446039823640625*^9, 
   3.446040030390625*^9}, {3.446040189234375*^9, 3.446040290046875*^9}, {
   3.44604066934375*^9, 3.4460406953125*^9}, {3.446041046375*^9, 
   3.44604109028125*^9}, 3.446048924515625*^9, {3.446122544046875*^9, 
   3.44612254703125*^9}, 3.4710237886220713`*^9, {3.4710906218828382`*^9, 
   3.4710906600164623`*^9}, {3.471090698766836*^9, 3.4710907003521433`*^9}, {
   3.471101508121541*^9, 3.471101574389448*^9}, {3.476015160586358*^9, 
   3.476015187464911*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", " ", "=", " ", "0.0575"}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"payment", " ", "=", " ", "1000.00"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"n", "+", "1"}], "]"}], " ", "\[Equal]", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", 
           RowBox[{"i", "/", "12"}]}], ")"}], " ", 
         RowBox[{"y", "[", "n", "]"}]}], " ", "-", " ", "payment"}]}], ",", 
      RowBox[{
       RowBox[{"y", "[", "360", "]"}], "\[Equal]", "0"}]}], "}"}], ",", "y", 
    ",", "n"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{3.471097107362108*^9},
 CellLabel->"In[130]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{"0.9952311839104291`", "\[Times]", 
       SuperscriptBox["2.718281828459045`", 
        RowBox[{
         RowBox[{"-", "0.004780223172989661`"}], " ", "n"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"209695.65217390942`", "\[Times]", 
          SuperscriptBox["1.0047916666666667`", "n"]}], "-", 
         RowBox[{"37516.350896923774`", "\[Times]", 
          SuperscriptBox["1.0047916666666667`", "n"], " ", 
          SuperscriptBox["2.718281828459045`", 
           RowBox[{"0.004780223172989661`", " ", "n"}]]}]}], ")"}]}]}], 
     "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.466449934648511*^9},
 CellLabel->"Out[132]="],

Cell["\<\
From this we can figure out the initial principal or the payoff at any given \
month:\
\>", "Text",
 CellChangeTimes->{{3.446040152859375*^9, 3.4460401711875*^9}, {
  3.44604029978125*^9, 3.4460403053125*^9}, {3.44604037046875*^9, 
  3.44604039165625*^9}, {3.471090715396653*^9, 3.471090724991331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"y", "[", "0", "]"}], " ", "/.", " ", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.44604030834375*^9, 3.446040317921875*^9}},
 CellLabel->"In[133]:="],

Cell[BoxData["171358.20985476486`"], "Output",
 CellChangeTimes->{
  3.446040318515625*^9, {3.446047652359375*^9, 3.446047676546875*^9}, 
   3.4460477181875*^9, 3.4664499346953106`*^9},
 CellLabel->"Out[133]="]
}, Open  ]],

Cell["\<\
After 60 months, or 5 years, very little has been paid off, which is quite \
depressing but a fact of life.\
\>", "Text",
 CellChangeTimes->{{3.446040422578125*^9, 3.446040445375*^9}, {
  3.446040518140625*^9, 3.446040568046875*^9}, {3.446040647265625*^9, 
  3.44604065421875*^9}, {3.4710907377718678`*^9, 3.4710907679036303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "[", "0", "]"}], " ", "-", 
   RowBox[{"y", "[", "60", "]"}]}], " ", "/.", " ", 
  RowBox[{"sol", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.446040398171875*^9, 3.446040412515625*^9}, {
  3.44604044978125*^9, 3.4460405139375*^9}, {3.4460405809375*^9, 
  3.446040603328125*^9}},
 CellLabel->"In[134]:="],

Cell[BoxData["12402.587062016712`"], "Output",
 CellChangeTimes->{{3.44604044740625*^9, 3.4460405146875*^9}, {
   3.44604058653125*^9, 3.446040603875*^9}, 3.466449934726511*^9},
 CellLabel->"Out[134]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 StyleBox["Setting up a difference equation is often a matter of solving the \
problem by hand for small values of ",
  FontTracking->"Plain"],
 StyleBox["n",
  FontFamily->"I Times Italic",
  FontTracking->"Plain"],
 StyleBox[" and then detecting",
  FontTracking->"Plain"],
 StyleBox[" the relationship between successive values. Con",
  FontTracking->"Extended"],
 StyleBox["sider the Towers of Hanoi puzzle. A one-disk problem is solved in \
one move (",
  FontTracking->"Plain"],
 StyleBox["T[1] = 1", "Literal",
  FontTracking->"Plain"],
 StyleBox["), a two-disk problem is solved in three moves (",
  FontTracking->"Plain"],
 StyleBox["T[2] = 3", "Literal",
  FontTracking->"Plain"],
 StyleBox["), and three-disk problem is solved in seven moves ",
  FontTracking->"Plain"],
 StyleBox["(",
  FontTracking->"SemiCondensed"],
 StyleBox["T[3] = 7", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox["). It follows then that ",
  FontTracking->"SemiCondensed"],
 StyleBox["T[n] = 2 T[n-1] + 1", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[".",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.4460420689375*^9, 3.446042429703125*^9}, 
   3.446045543921875*^9, {3.471090786916226*^9, 3.471090884954123*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"T", "[", "n", "]"}], " ", "\[Equal]", " ", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"T", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], " ", "+", " ", "1"}]}], ",", " ", 
     RowBox[{
      RowBox[{"T", "[", "1", "]"}], " ", "\[Equal]", " ", "1"}]}], "}"}], ",",
    "T", ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.44604243253125*^9, 3.446042475609375*^9}},
 CellLabel->"In[135]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"T", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["2", "n"]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.446042478984375*^9, 3.466449934804511*^9},
 CellLabel->"Out[135]="]
}, Open  ]],

Cell["\<\
A seemingly innocent difference equation can result in a solution involving \
complex numbers. This is a second-order equation, so two initial values are \
required to get an exact solution with no arbitrary constants.\
\>", "Text",
 CellChangeTimes->{{3.4460443436875*^9, 3.446044344390625*^9}, {
   3.446044508859375*^9, 3.4460445289375*^9}, {3.44604521978125*^9, 
   3.44604534009375*^9}, {3.44604624734375*^9, 3.446046323546875*^9}, 
   3.44612255425*^9, {3.4710909449013577`*^9, 3.4710909560282717`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", "n", "]"}], " ", "==", " ", 
       RowBox[{"2", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"a", "[", 
           RowBox[{"n", "-", "1"}], "]"}], " ", "-", " ", 
          RowBox[{"a", "[", 
           RowBox[{"n", "-", "2"}], "]"}]}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"a", "[", "0", "]"}], "==", "1"}], ",", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], " ", "\[Equal]", " ", "2"}]}], "}"}], 
    ",", "a", ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4460426210625*^9, 3.446042712875*^9}, 
   3.4460427563125*^9, {3.446043029125*^9, 3.446043036546875*^9}},
 CellLabel->"In[136]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], "n"], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "n"]}]}], ")"}]}]}], 
     "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.446042713921875*^9, {3.44604274840625*^9, 3.446042760375*^9}, 
   3.44604303725*^9, 3.466449934929311*^9},
 CellLabel->"Out[136]="]
}, Open  ]],

Cell[TextData[{
 "Note that like ",
 StyleBox["DSolve", "Literal"],
 ", ",
 StyleBox["RSolve", "Literal"],
 " does not try to simplify the result. It is advisable to try to simplify \
it; in this case, you see that complex numbers disappear, and the result is \
in terms of trigonometric functions, which you may not have expected."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.446045280625*^9, 3.446045291203125*^9}, {
   3.446045341984375*^9, 3.44604539853125*^9}, {3.446045430421875*^9, 
   3.446045511609375*^9}, 3.446122557546875*^9, {3.47109100366191*^9, 
   3.4710910161971292`*^9}, 3.471091064801901*^9, {3.4710910960043488`*^9, 
   3.47109112094627*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"a", "[", "n", "]"}], "/.", " ", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4460429955625*^9, 3.446043006125*^9}, {
   3.44604304609375*^9, 3.446043090296875*^9}, 3.44604313678125*^9, {
   3.4460432494375*^9, 3.446043254125*^9}, 3.446043600375*^9, {
   3.44604375090625*^9, 3.44604387903125*^9}, {3.446044241890625*^9, 
   3.446044317890625*^9}, {3.446045252015625*^9, 3.446045258109375*^9}},
 CellLabel->"In[137]:="],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellChangeTimes->{
  3.446043006546875*^9, {3.446043075921875*^9, 3.446043090859375*^9}, 
   3.446043137609375*^9, 3.446043254953125*^9, 3.446043601328125*^9, {
   3.446043766890625*^9, 3.446043782453125*^9}, {3.44604382946875*^9, 
   3.446043879625*^9}, {3.44604426175*^9, 3.446044273890625*^9}, {
   3.446044308546875*^9, 3.446044318515625*^9}, 3.4460452590625*^9, 
   3.466449935038511*^9},
 CellLabel->"Out[137]="]
}, Open  ]],

Cell[TextData[{
 "As with ",
 StyleBox["DSolve", "Literal"],
 ", if you do not provide initial conditions, you will get solutions in\
\[DiscretionaryHyphen]volving arbitrary constants of the form ",
 StyleBox["C[N]", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.44604731425*^9, 3.446047393578125*^9}, {
   3.446047747421875*^9, 3.446047750640625*^9}, {3.4710911450529823`*^9, 
   3.471091171055372*^9}, 3.471091313433544*^9, {3.471101619927724*^9, 
   3.471101621713962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "n", "]"}], " ", "-", 
      RowBox[{"3", " ", 
       RowBox[{"a", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}]}], " ", "\[Equal]", " ", 
     RowBox[{"5", 
      RowBox[{"(", 
       RowBox[{"3", "^", "n"}], ")"}]}]}], "}"}], ",", "a", ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.446046332765625*^9, 3.446046453046875*^9}, {
   3.44604651221875*^9, 3.44604652834375*^9}, 3.44604729096875*^9},
 CellLabel->"In[138]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"a", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "n", "}"}], ",", 
      RowBox[{
       RowBox[{"5", " ", 
        SuperscriptBox["3", "n"], " ", "n"}], "+", 
       RowBox[{
        SuperscriptBox["3", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "n"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.446046454234375*^9, 3.446046472671875*^9}, 
   3.44604652903125*^9, 3.446047292015625*^9, 3.446047375265625*^9, 
   3.4664499350697107`*^9},
 CellLabel->"Out[138]="]
}, Open  ]],

Cell[TextData[{
 "These solutions were found in terms of pure functions because we asked for \
the solution in terms of ",
 StyleBox["a", "Literal"],
 ", but you can change the form of the second argument to ",
 StyleBox["a[n]", "Literal"],
 " to get the solution in that form."
}], "Text",
 CellChangeTimes->{{3.44604777653125*^9, 3.4460479254375*^9}, {
   3.446047962796875*^9, 3.4460479959375*^9}, 3.44604845359375*^9, 
   3.44604848653125*^9, {3.446122560921875*^9, 3.446122564265625*^9}, 
   3.471023789668592*^9, {3.471091325943494*^9, 3.471091362818223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", 
  RowBox[{"RSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", "n", "]"}], " ", "-", 
       RowBox[{"3", " ", 
        RowBox[{"a", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}]}], " ", "\[Equal]", " ", 
      RowBox[{"5", 
       RowBox[{"(", 
        RowBox[{"3", "^", "n"}], ")"}]}]}], "}"}], ",", 
    RowBox[{"a", "[", "n", "]"}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.446047936125*^9, 3.44604793871875*^9}, {
  3.4460480434375*^9, 3.4460480453125*^9}},
 CellLabel->"In[139]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "[", "n", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{"5", " ", 
      SuperscriptBox["3", "n"], " ", "n"}], "+", 
     RowBox[{
      SuperscriptBox["3", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "n"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.446047941265625*^9, 3.44604804725*^9, 
  3.466449935100911*^9},
 CellLabel->"Out[139]="]
}, Open  ]],

Cell[TextData[{
 "You can evaluate this solution for specific ",
 StyleBox["n", "Literal"],
 " and ",
 StyleBox["C[1]", "Literal"],
 " using ",
 StyleBox["ReplaceAll", "Literal"],
 " ",
 "(",
 StyleBox["//.", "Literal"],
 ")."
}], "Text",
 CellChangeTimes->{{3.44604871996875*^9, 3.446048804109375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "n", "]"}], " ", "//.", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"{", 
    RowBox[{"sol", ",", 
     RowBox[{"n", "\[Rule]", "3"}], ",", " ", 
     RowBox[{
      RowBox[{"C", "[", "1", "]"}], " ", "\[Rule]", " ", "2"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.446048494078125*^9, 3.446048514421875*^9}, {
  3.4460486098125*^9, 3.44604870778125*^9}},
 CellLabel->"In[140]:="],

Cell[BoxData["423"], "Output",
 CellChangeTimes->{{3.44604868625*^9, 3.4460487085625*^9}, 
   3.4664499351789107`*^9},
 CellLabel->"Out[140]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "One of the best introductions to the subject of difference equations is ",
 StyleBox["An Introduction to Difference Equations", "CitationTitle"],
 " by Saber Elaydi (Springer)."
}], "Text",
 CellChangeTimes->{{3.446154100417384*^9, 3.4461541468392596`*^9}, {
  3.4461541884955096`*^9, 3.4461542101830096`*^9}, {3.4710914138608103`*^9, 
  3.47109142282154*^9}, {3.476015271070571*^9, 3.476015272515602*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Generating Functions \[LineSeparator]and Sequence Recognition"
}], "Heading1",
 CellChangeTimes->{{3.44612853734375*^9, 3.446128551*^9}, 3.47109730444252*^9},
 CellTags->"Generating Functions"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want Mathematica to generate a function associated with a particular \
sequence or to infer a function that will produce the sequence for successive \
integers.\
\>", "Text",
 CellChangeTimes->{{3.471091448528063*^9, 3.4710914759081163`*^9}, {
  3.471091507625922*^9, 3.471091525459247*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2", "ProductionPageBreak"],

Cell[TextData[{
 "Use ",
 StyleBox["FindGeneratingFunction", "Literal"],
 " to derive the generating function for a sequence.\[LineSeparator]Recall \
that the power series of a generating function encodes the sequence in its\
\[LineSeparator]coefficients. "
}], "Text",
 CellChangeTimes->{{3.4461293895625*^9, 3.446129473421875*^9}, {
  3.446129527359375*^9, 3.44612957040625*^9}, {3.471097312723414*^9, 
  3.471097322902872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "=", 
  RowBox[{"FindGeneratingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",",
       "64", ",", "81", ",", "100"}], "}"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4461287688125*^9, 3.44612879509375*^9}, {
   3.446128868609375*^9, 3.4461288830625*^9}, {3.44612902096875*^9, 
   3.446129026140625*^9}, 3.44612909925*^9, {3.44612920021875*^9, 
   3.446129204578125*^9}},
 CellLabel->"In[141]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "-", "x"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "x"}], ")"}], "3"]]], "Output",
 CellChangeTimes->{
  3.446128795875*^9, {3.446128870203125*^9, 3.446128884125*^9}, 
   3.4461290270625*^9, 3.4461291015625*^9, {3.44612919028125*^9, 
   3.44612920625*^9}, 3.466449935334911*^9},
 CellLabel->"Out[141]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.44612918375*^9, 3.44612924246875*^9}, {
  3.446129425953125*^9, 3.446129426296875*^9}},
 CellLabel->"In[142]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   RowBox[{"4", " ", "x"}], "+", 
   RowBox[{"9", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"16", " ", 
    SuperscriptBox["x", "3"]}], "+", 
   RowBox[{"25", " ", 
    SuperscriptBox["x", "4"]}], "+", 
   RowBox[{"36", " ", 
    SuperscriptBox["x", "5"]}], "+", 
   RowBox[{"49", " ", 
    SuperscriptBox["x", "6"]}], "+", 
   RowBox[{"64", " ", 
    SuperscriptBox["x", "7"]}], "+", 
   RowBox[{"81", " ", 
    SuperscriptBox["x", "8"]}], "+", 
   RowBox[{"100", " ", 
    SuperscriptBox["x", "9"]}], "+", 
   RowBox[{"121", " ", 
    SuperscriptBox["x", "10"]}], "+", 
   RowBox[{"144", " ", 
    SuperscriptBox["x", "11"]}], "+", 
   RowBox[{"169", " ", 
    SuperscriptBox["x", "12"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "13"],
    SeriesData[$CellContext`x, 0, {}, 0, 13, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 
   144, 169}, 0, 13, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.446129243578125*^9, 3.446129426921875*^9, 
  3.466449935366111*^9},
 CellLabel->"Out[142]="]
}, Open  ]],

Cell[TextData[{
 "Use ",
 StyleBox["FindSequenceFunction", "Literal"],
 " to find an expression that maps the integers to the spec\
\[DiscretionaryHyphen]ified sequence."
}], "Text",
 CellChangeTimes->{{3.4461296094375*^9, 3.446129642515625*^9}, {
  3.471101671428434*^9, 3.4711016753619423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", " ", "=", 
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",",
       "64", ",", "81", ",", "100"}], "}"}], ",", "n"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.446129036234375*^9, 3.446129075578125*^9}, 
   3.44612911003125*^9, {3.4461293365*^9, 3.4461293385*^9}},
 CellLabel->"In[143]:="],

Cell[BoxData[
 SuperscriptBox["n", "2"]], "Output",
 CellChangeTimes->{{3.446129066578125*^9, 3.446129076125*^9}, 
   3.446129111484375*^9, 3.446129339875*^9, 3.4664499353973107`*^9},
 CellLabel->"Out[143]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"s", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.44612934215625*^9, 3.446129368953125*^9}, {
  3.446129444125*^9, 3.446129444421875*^9}},
 CellLabel->"In[144]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100", ",", "121", ",", "144"}], "}"}]], "Output",
 CellChangeTimes->{3.446129369640625*^9, 3.446129444984375*^9, 
  3.4664499354285107`*^9},
 CellLabel->"Out[144]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 StyleBox["FindSequenceFunction", "Literal"],
 " can deal with sequences that are not strictly increasing and with \
noninteger sequences. "
}], "Text",
 CellChangeTimes->{{3.446133650578125*^9, 3.446133702609375*^9}, 
   3.446135033578125*^9, 3.4710915553023453`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindSequenceFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "3", ",", 
      RowBox[{"-", "11"}], ",", "13", ",", 
      RowBox[{"-", "29"}], ",", "31", ",", 
      RowBox[{"-", "55"}], ",", "57", ",", 
      RowBox[{"-", "89"}], ",", "91", ",", 
      RowBox[{"-", "131"}], ",", "133", ",", 
      RowBox[{"-", "181"}], ",", "183", ",", 
      RowBox[{"-", "239"}]}], "}"}], ",", "n"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.446132934265625*^9, 3.44613345378125*^9, {3.44613353521875*^9, 
   3.44613355175*^9}},
 CellLabel->"In[145]:="],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "n"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "n"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "n"}], ")"}]}], "+", 
    SuperscriptBox["n", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.446132946734375*^9, 3.446133456625*^9, {3.446133544265625*^9, 
   3.446133552921875*^9}, 3.466449935974511*^9},
 CellLabel->"Out[145]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindSequenceFunction", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["12", "25"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["30", "49"], ",", 
     FractionBox["21", "32"], ",", 
     FractionBox["56", "81"], ",", 
     FractionBox["18", "25"], ",", 
     FractionBox["90", "121"]}], "}"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.446134975734375*^9, 3.44613498603125*^9}},
 CellLabel->"In[146]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "x"}], "+", 
   SuperscriptBox["x", "2"]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{3.4461349865625*^9, 3.4664499360057106`*^9},
 CellLabel->"Out[146]="]
}, Open  ]],

Cell[TextData[{
 "You can synthesize a generating function from an expression using ",
 StyleBox["Generating\[DiscretionaryHyphen]Function", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{
  3.471093580075424*^9, {3.471979286323613*^9, 3.471979289512838*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", " ", "=", 
  RowBox[{"GeneratingFunction", "[", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "+", "1"}], ")"}], "!"}]], ",", "n", ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.446150127323634*^9, 3.446150190386134*^9}, {
  3.446150244573634*^9, 3.4461502730267596`*^9}, {3.446150354854884*^9, 
  3.4461503766517596`*^9}, {3.446150817604884*^9, 3.446150821573634*^9}},
 CellLabel->"In[147]:="],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "x"]}], "x"]], "Output",
 CellChangeTimes->{{3.446150155792384*^9, 3.4461501624017596`*^9}, 
   3.4461501957142596`*^9, {3.446150248979884*^9, 3.4461502735580096`*^9}, {
   3.446150358917384*^9, 3.446150377448634*^9}, 3.4461510980580096`*^9, 
   3.4461512925267596`*^9, 3.4664499360681105`*^9},
 CellLabel->"Out[147]="]
}, Open  ]],

Cell[TextData[{
 "And recover the sequence to the ",
 StyleBox["Nth", "Literal"],
 " term using the following expression:"
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.4461506522455096`*^9, 3.446150782667384*^9}, {
  3.471091588341179*^9, 3.471091589895912*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"N", "=", "12"}], "}"}], ",", 
   RowBox[{"1", "/", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{
        RowBox[{"Simplify", "[", 
         RowBox[{"Series", "[", 
          RowBox[{"g", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "N"}], "}"}]}], "]"}], "]"}], ",", 
        "n"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "N"}], "}"}]}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.4461501982767596`*^9, 3.4461502306517596`*^9}, {
  3.446150422417384*^9, 3.4461504366205096`*^9}, {3.446150472573634*^9, 
  3.446150556104884*^9}, {3.4461505909017596`*^9, 3.4461506244330096`*^9}, {
  3.4461510862455096`*^9, 3.4461510925580096`*^9}, {3.4461512767767596`*^9, 
  3.4461512883705096`*^9}},
 CellLabel->"In[148]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "6", ",", "24", ",", "120", ",", "720", ",", "5040", ",", "40320",
    ",", "362880", ",", "3628800", ",", "39916800", ",", "479001600", ",", 
   "6227020800"}], "}"}]], "Output",
 CellChangeTimes->{
  3.446150524573634*^9, 3.446150556511134*^9, 3.4461505921830096`*^9, 
   3.446150624854884*^9, {3.4461510932455096`*^9, 3.446151100011134*^9}, 
   3.446151294854884*^9, 3.466449936099311*^9},
 CellLabel->"Out[148]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "For the nonexpert, a very approachable book on generating functions is ",
 StyleBox["Generatingfunctionology", "CitationTitle"],
 " by Herbert S. Wilf",
 StyleBox[" (A K Peters). An online version can be found at ",
  FontTracking->"Extended"],
 StyleBox[ButtonBox["http",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/3bkssK"], None},
  ButtonNote->"http://bit.ly/3bkssK"], "URL",
  FontTracking->"Extended"],
 StyleBox[ButtonBox["://bit.ly/3bkssK",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/3bkssK"], None},
  ButtonNote->"http://bit.ly/3bkssK"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{
  3.4664530989904003`*^9, {3.471091617690192*^9, 3.471091734123032*^9}, 
   3.472396501076445*^9, {3.476015289222694*^9, 3.476015294781461*^9}}]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{"RulerBar", "EditBar"},
CellGrouping->Manual,
WindowSize->{1010, 593},
WindowMargins->{{34, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingStartingPageNumber->425,
PrintingPageRange->{1, Automatic},
PageHeaders->{{None, None, None}, {None, None, None}},
PageFooters->{{
   Cell[
    TextData[{
      CounterBox["Page"], 
      "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]Chapter ", 
      CounterBox["ChapterLabel"], ":\[ThickSpace]\[ThickSpace]", 
      " Calculus: Continuous and Discrete"}], "Footer"], None, None}, {
  None, None, 
   Cell[
    TextData[{
      CounterBox[
      "Page", CounterFunction :> (
        Part[{"", 
          "11.1\[ThickSpace]\[ThickSpace]Computing Limits\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.2\[ThickSpace]\[ThickSpace]Working with Piecewise Functions\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.2\[ThickSpace]\[ThickSpace]Working with Piecewise Functions\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.3\[ThickSpace]\[ThickSpace]Using Power Series Representations \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.3\[ThickSpace]\[ThickSpace]Using Power Series Representations \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.4\[ThickSpace]\[ThickSpace]Differentiating Functions \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.4\[ThickSpace]\[ThickSpace]Differentiating Functions \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.4\[ThickSpace]\[ThickSpace]Differentiating Functions \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.4\[ThickSpace]\[ThickSpace]Differentiating Functions \
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.5\[ThickSpace]\[ThickSpace]Integration\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.5\[ThickSpace]\[ThickSpace]Integration\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.5\[ThickSpace]\[ThickSpace]Integration\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.6\[ThickSpace]\[ThickSpace]Solving Differential Equations\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.6\[ThickSpace]\[ThickSpace]Solving Differential Equations\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.6\[ThickSpace]\[ThickSpace]Solving Differential Equations\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.7\[ThickSpace]\[ThickSpace]Solving Minima and Maxima Problems\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.7\[ThickSpace]\[ThickSpace]Solving Minima and Maxima Problems\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.8\[ThickSpace]\[ThickSpace]Solving Vector Calculus Problems\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.8\[ThickSpace]\[ThickSpace]Solving Vector Calculus Problems\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.8\[ThickSpace]\[ThickSpace]Solving Vector Calculus Problems\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.8\[ThickSpace]\[ThickSpace]Solving Vector Calculus Problems\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.9\[ThickSpace]\[ThickSpace]Solving Problems Involving Sums \
\[LineSeparator]and Products\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.9\[ThickSpace]\[ThickSpace]Solving Problems Involving Sums \
\[LineSeparator]and Products\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.9\[ThickSpace]\[ThickSpace]Solving Problems Involving Sums \
\[LineSeparator]and Products\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.10\[ThickSpace]\[ThickSpace]Solving Difference Equations\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.10\[ThickSpace]\[ThickSpace]Solving Difference Equations\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "11.11\[ThickSpace]\[ThickSpace]Generating Functions \
\[LineSeparator]and Sequence Recognition\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.11\[ThickSpace]\[ThickSpace]Generating Functions \
\[LineSeparator]and Sequence Recognition\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "11.11\[ThickSpace]\[ThickSpace]Generating Functions \
\[LineSeparator]and Sequence Recognition\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]"}, # - CurrentValue[
          InputNotebook[], PrintingStartingPageNumber] + 1]& )], 
      CounterBox["Page"]}], "Footer"]}},
PageHeaderLines->{False, False},
PageFooterLines->{True, True},
PrintingOptions->{"CellBackgroundHalftoneAngle"->Automatic,
"CellBackgroundHalftoneDensity"->Automatic,
"FacingPages"->True,
"FirstPageFace"->"Right",
"FirstPageFooter"->True,
"FirstPageHeader"->False,
"GraphicsPrintingFormat"->"Automatic",
"IncludePostScriptResourceDirectives"->True,
"IncludeSpecialFonts"->True,
"Magnification"->1.,
"OpacityRenderingMethod"->Automatic,
"PageFooterMargins"->{24, 24},
"PageHeaderMargins"->{36, 36},
"PageSize"->{504, 661.5},
"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->Automatic,
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->True,
"PrintSelectionHighlighting"->False,
"PrintingMargins"->{{72, 72}, {72, 54}},
"RasterizationResolution"->"Automatic",
"RestPagesFooter"->True,
"RestPagesHeader"->True,
"UnixShellPrintingCommand"->Automatic,
"UsePostScriptOutputFile"->False,
"UseUnixShellPrintingCommand"->False,
"VertexColorRenderingMethod"->Automatic},
CellLabelAutoDelete->False,
FontTracking->"Plain",
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"ora.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "chCalculus"->{
  Cell[545, 20, 148, 6, 63, "ChapterLabel",
   CounterAssignments->{{"ChapterLabel", 11}},
   CellTags->"chCalculus"]},
 "IntroductionCh11"->{
  Cell[1647, 52, 238, 10, 63, "Heading1",
   CellTags->"IntroductionCh11"]},
 "Computing Limits"->{
  Cell[9255, 224, 519, 14, 65, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Computing Limits"]},
 "Piecewise Functions"->{
  Cell[31361, 719, 530, 14, 46, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Piecewise Functions"]},
 "Power Series Representations"->{
  Cell[61025, 1466, 624, 16, 46, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Power Series Representations"]},
 "Differentiating Functions"->{
  Cell[155822, 3179, 589, 16, 46, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Differentiating Functions"]},
 "sidebar11.4"->{
  Cell[168940, 3609, 263, 5, 35, "SidebarTitle",
   CellTags->"sidebar11.4"]},
 "Integration"->{
  Cell[215030, 4715, 495, 15, 46, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Integration"]},
 "Solving Differntial Equations"->{
  Cell[243516, 5623, 296, 11, 46, "Heading1",
   CellTags->"Solving Differntial Equations"]},
 "Minima and Maxima Problems"->{
  Cell[260635, 6158, 605, 15, 65, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"Minima and Maxima Problems"]},
 "Vector Calculus Problems"->{
  Cell[307583, 7216, 243, 10, 46, "Heading1",
   CellTags->"Vector Calculus Problems"]},
 "Sums and Products"->{
  Cell[446322, 9935, 312, 11, 70, "Heading1",
   CellTags->"Sums and Products"]},
 "Difference Equations"->{
  Cell[470837, 10694, 305, 11, 65, "Heading1",
   CellTags->"Difference Equations"]},
 "Generating Functions"->{
  Cell[487876, 11206, 306, 10, 70, "Heading1",
   CellTags->"Generating Functions"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"chCalculus", 506345, 11732},
 {"IntroductionCh11", 506488, 11736},
 {"Computing Limits", 506588, 11739},
 {"Piecewise Functions", 506760, 11743},
 {"Power Series Representations", 506945, 11747},
 {"Differentiating Functions", 507137, 11751},
 {"sidebar11.4", 507313, 11755},
 {"Integration", 507410, 11758},
 {"Solving Differntial Equations", 507590, 11762},
 {"Minima and Maxima Problems", 507717, 11765},
 {"Vector Calculus Problems", 507907, 11769},
 {"Sums and Products", 508020, 11772},
 {"Difference Equations", 508129, 11775},
 {"Generating Functions", 508242, 11778}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 148, 6, 63, "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 11}},
 CellTags->"chCalculus"],
Cell[696, 28, 332, 4, 63, "ChapterTitle"],
Cell[1031, 34, 307, 8, 64, "Epigraph"],
Cell[1341, 44, 281, 4, 60, "EpigraphAuthor"],
Cell[CellGroupData[{
Cell[1647, 52, 238, 10, 63, "Heading1",
 CellTags->"IntroductionCh11"],
Cell[1888, 64, 1764, 25, 175, "Text"],
Cell[3655, 91, 2529, 55, 140, "Text"],
Cell[6187, 148, 1893, 37, 62, "Text"],
Cell[CellGroupData[{
Cell[8105, 189, 96, 1, 76, "Heading2"],
Cell[8204, 192, 521, 13, 25, "Text"],
Cell[8728, 207, 478, 11, 25, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9255, 224, 519, 14, 65, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Computing Limits"],
Cell[CellGroupData[{
Cell[9799, 242, 171, 2, 76, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[9973, 246, 290, 6, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10300, 257, 159, 2, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[10462, 261, 472, 16, 56, "Text"],
Cell[CellGroupData[{
Cell[10959, 281, 253, 7, 20, "Input"],
Cell[11215, 290, 142, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11394, 298, 327, 9, 20, "Input"],
Cell[11724, 309, 163, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11924, 317, 323, 9, 20, "Input"],
Cell[12250, 328, 195, 3, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12494, 337, 161, 2, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[12658, 341, 279, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[12962, 350, 981, 31, 47, "Input"],
Cell[13946, 383, 15575, 272, 86, "Output"]
}, Open  ]],
Cell[29536, 658, 331, 7, 56, "Text"],
Cell[CellGroupData[{
Cell[29892, 669, 532, 14, 20, "Input"],
Cell[30427, 685, 143, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30607, 693, 565, 15, 20, "Input"],
Cell[31175, 710, 125, 2, 20, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31361, 719, 530, 14, 46, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Piecewise Functions"],
Cell[CellGroupData[{
Cell[31916, 737, 202, 3, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[32121, 742, 331, 7, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32489, 754, 190, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[32682, 759, 481, 9, 56, "Text"],
Cell[CellGroupData[{
Cell[33188, 772, 1271, 30, 32, "Input"],
Cell[34462, 804, 1237, 36, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35736, 845, 437, 12, 32, "Input"],
Cell[36176, 859, 6954, 123, 158, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43179, 988, 192, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[43374, 993, 853, 20, 72, "Text"],
Cell[CellGroupData[{
Cell[44252, 1017, 1200, 35, 67, "Input"],
Cell[45455, 1054, 8014, 157, 92, "Output"]
}, Open  ]],
Cell[53484, 1214, 252, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[53761, 1223, 251, 7, 20, "Input"],
Cell[54015, 1232, 1082, 33, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55134, 1270, 303, 8, 20, "Input"],
Cell[55440, 1280, 1155, 36, 63, "Output"]
}, Open  ]],
Cell[56610, 1319, 469, 12, 56, "Text"],
Cell[CellGroupData[{
Cell[57104, 1335, 279, 6, 20, "Input"],
Cell[57386, 1343, 1545, 47, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58968, 1395, 245, 6, 20, "Input"],
Cell[59216, 1403, 1748, 56, 68, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61025, 1466, 624, 16, 46, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Power Series Representations"],
Cell[CellGroupData[{
Cell[61674, 1486, 202, 3, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[61879, 1491, 190, 3, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62106, 1499, 203, 3, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[62312, 1504, 473, 10, 56, "Text"],
Cell[CellGroupData[{
Cell[62810, 1518, 291, 8, 20, "Input"],
Cell[63104, 1528, 807, 25, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63948, 1558, 148, 3, 20, "Input"],
Cell[64099, 1563, 260, 4, 33, "Output"]
}, Open  ]],
Cell[64374, 1570, 955, 26, 72, "Text"],
Cell[65332, 1598, 509, 15, 20, "Input"],
Cell[65844, 1615, 428, 7, 56, "Text"],
Cell[66275, 1624, 669, 21, 32, "Input"],
Cell[66947, 1647, 81486, 1358, 453, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148470, 3010, 192, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[148665, 3015, 233, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[148923, 3025, 465, 13, 20, "Input"],
Cell[149391, 3040, 455, 15, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149883, 3060, 542, 15, 33, "Input"],
Cell[150428, 3077, 5333, 95, 141, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155822, 3179, 589, 16, 46, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Differentiating Functions"],
Cell[CellGroupData[{
Cell[156436, 3199, 202, 3, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[156641, 3204, 431, 8, 56, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157109, 3217, 190, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[157302, 3222, 339, 10, 40, "Text"],
Cell[CellGroupData[{
Cell[157666, 3236, 228, 6, 20, "Input"],
Cell[157897, 3244, 178, 4, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158112, 3253, 283, 8, 20, "Input"],
Cell[158398, 3263, 178, 4, 20, "Output"]
}, Open  ]],
Cell[158591, 3270, 769, 21, 57, "Text"],
Cell[CellGroupData[{
Cell[159385, 3295, 244, 7, 20, "Input"],
Cell[159632, 3304, 161, 4, 20, "Output"]
}, Open  ]],
Cell[159808, 3311, 252, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[160085, 3320, 302, 9, 20, "Input"],
Cell[160390, 3331, 198, 5, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160625, 3341, 277, 8, 20, "Input"],
Cell[160905, 3351, 246, 7, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161188, 3363, 360, 11, 20, "Input"],
Cell[161551, 3376, 216, 6, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[161816, 3388, 192, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[162011, 3393, 811, 14, 72, "Text"],
Cell[CellGroupData[{
Cell[162847, 3411, 268, 8, 20, "Input"],
Cell[163118, 3421, 243, 7, 20, "Output"]
}, Open  ]],
Cell[163376, 3431, 467, 14, 40, "Text"],
Cell[CellGroupData[{
Cell[163868, 3449, 568, 17, 35, "Input"],
Cell[164439, 3468, 392, 12, 40, "Output"]
}, Open  ]],
Cell[164846, 3483, 876, 22, 56, "Text"],
Cell[165725, 3507, 491, 14, 20, "Input"],
Cell[166219, 3523, 513, 14, 20, "Input"],
Cell[CellGroupData[{
Cell[166757, 3541, 296, 7, 20, "Input"],
Cell[167056, 3550, 325, 8, 20, "Output"]
}, Open  ]],
Cell[167396, 3561, 209, 5, 40, "Text"],
Cell[167608, 3568, 373, 11, 20, "Input"],
Cell[CellGroupData[{
Cell[168006, 3583, 146, 3, 20, "Input"],
Cell[168155, 3588, 561, 10, 37, "Message"],
Cell[168719, 3600, 184, 4, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168940, 3609, 263, 5, 35, "SidebarTitle",
 CellTags->"sidebar11.4"],
Cell[169206, 3616, 30, 0, 5, "SidebarTitleSpacer"],
Cell[169239, 3618, 1396, 31, 101, "SidebarBody"],
Cell[170638, 3651, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[170688, 3655, 164, 6, 13, "SidebarBody"],
Cell[170855, 3663, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[170905, 3667, 355, 12, 13, "SidebarInput"],
Cell[171263, 3681, 320, 10, 32, "SidebarOutput"]
}, Open  ]],
Cell[171598, 3694, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[171648, 3698, 185, 5, 13, "SidebarInput"],
Cell[171836, 3705, 320, 10, 32, "SidebarOutput"]
}, Open  ]]
}, Open  ]],
Cell[172183, 3719, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[172233, 3723, 272, 10, 13, "SidebarBody"],
Cell[172508, 3735, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[172558, 3739, 341, 12, 13, "SidebarInput"],
Cell[172902, 3753, 258, 9, 16, "SidebarOutput"]
}, Open  ]],
Cell[173175, 3765, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[173225, 3769, 277, 9, 15, "SidebarInput"],
Cell[173505, 3780, 260, 9, 16, "SidebarOutput"]
}, Open  ]]
}, Open  ]],
Cell[173792, 3793, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[173842, 3797, 283, 9, 13, "SidebarBody"],
Cell[174128, 3808, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[174178, 3812, 341, 12, 13, "SidebarInput"],
Cell[174522, 3826, 260, 9, 16, "SidebarOutput"]
}, Open  ]],
Cell[174797, 3838, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[174847, 3842, 256, 9, 15, "SidebarInput"],
Cell[175106, 3853, 258, 9, 16, "SidebarOutput"]
}, Open  ]]
}, Open  ]],
Cell[175391, 3866, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[175441, 3870, 357, 7, 42, "SidebarBody"],
Cell[175801, 3879, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[175851, 3883, 277, 7, 13, "SidebarInput"],
Cell[176131, 3892, 349, 12, 13, "SidebarOutput"],
Cell[176483, 3906, 25, 0, 3, "SidebarSpacer"],
Cell[CellGroupData[{
Cell[176533, 3910, 371, 12, 13, "SidebarInput"],
Cell[176907, 3924, 258, 9, 16, "SidebarOutput"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[177216, 3939, 22, 0, 37, "SidebarEnd"],
Cell[177241, 3941, 1212, 25, 137, "Text"],
Cell[178456, 3968, 9256, 231, 577, "Input"],
Cell[CellGroupData[{
Cell[187737, 4203, 480, 12, 32, "Input"],
Cell[188220, 4217, 26749, 491, 153, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215030, 4715, 495, 15, 46, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Integration"],
Cell[CellGroupData[{
Cell[215550, 4734, 202, 3, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[215755, 4739, 277, 6, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216069, 4750, 190, 3, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[216262, 4755, 380, 10, 40, "Text"],
Cell[CellGroupData[{
Cell[216667, 4769, 223, 6, 20, "Input"],
Cell[216893, 4777, 173, 4, 20, "Output"]
}, Open  ]],
Cell[217081, 4784, 238, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[217344, 4793, 307, 9, 20, "Input"],
Cell[217654, 4804, 156, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[217847, 4812, 381, 11, 33, "Input"],
Cell[218231, 4825, 275, 9, 37, "Output"]
}, Open  ]],
Cell[218521, 4837, 313, 9, 23, "Text"],
Cell[CellGroupData[{
Cell[218859, 4850, 502, 15, 20, "Input"],
Cell[219364, 4867, 290, 6, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[219703, 4879, 205, 3, 25, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[219911, 4884, 316, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[220252, 4894, 492, 16, 47, "Input"],
Cell[220747, 4912, 1057, 36, 65, "Output"]
}, Open  ]],
Cell[221819, 4951, 442, 8, 56, "Text"],
Cell[CellGroupData[{
Cell[222286, 4963, 486, 11, 20, "Input"],
Cell[222775, 4976, 1802, 53, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224614, 5034, 354, 9, 28, "Input"],
Cell[224971, 5045, 247, 7, 36, "Output"]
}, Open  ]],
Cell[225233, 5055, 444, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[225702, 5066, 316, 11, 20, "Input"],
Cell[226021, 5079, 701, 22, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226759, 5106, 516, 14, 20, "Input"],
Cell[227278, 5122, 194, 6, 42, "Output"]
}, Open  ]],
Cell[227487, 5131, 244, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[227756, 5142, 452, 13, 20, "Input"],
Cell[228211, 5157, 165, 5, 42, "Output"]
}, Open  ]],
Cell[228391, 5165, 234, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[228650, 5175, 446, 11, 20, "Input"],
Cell[229099, 5188, 1481, 46, 82, "Output"]
}, Open  ]],
Cell[230595, 5237, 264, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[230884, 5248, 423, 12, 20, "Input"],
Cell[231310, 5262, 369, 11, 36, "Output"]
}, Open  ]],
Cell[231694, 5276, 512, 9, 72, "Text"],
Cell[232209, 5287, 471, 8, 56, "Text"],
Cell[232683, 5297, 783, 21, 50, "Input"],
Cell[CellGroupData[{
Cell[233491, 5322, 238, 5, 20, "Input"],
Cell[233732, 5329, 136, 3, 36, "Output"]
}, Open  ]],
Cell[233883, 5335, 310, 9, 40, "Text"],
Cell[CellGroupData[{
Cell[234218, 5348, 410, 10, 20, "Input"],
Cell[234631, 5360, 440, 11, 20, "Output"]
}, Open  ]],
Cell[235086, 5374, 1087, 22, 105, "Text"],
Cell[CellGroupData[{
Cell[236198, 5400, 892, 26, 51, "Input"],
Cell[237093, 5428, 696, 17, 37, "Output"]
}, Open  ]],
Cell[237804, 5448, 325, 7, 40, "Text"],
Cell[238132, 5457, 158, 3, 20, "Input"],
Cell[238293, 5462, 1047, 26, 51, "Input"],
Cell[239343, 5490, 282, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[239650, 5499, 198, 4, 20, "Input"],
Cell[239851, 5505, 221, 5, 23, "Output"]
}, Open  ]],
Cell[240087, 5513, 321, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[240433, 5523, 531, 14, 20, "Input"],
Cell[240967, 5539, 253, 5, 20, "Output"]
}, Open  ]],
Cell[241235, 5547, 159, 3, 23, "Text"],
Cell[CellGroupData[{
Cell[241419, 5554, 579, 13, 20, "Input"],
Cell[242001, 5569, 1454, 47, 62, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243516, 5623, 296, 11, 46, "Heading1",
 CellTags->"Solving Differntial Equations"],
Cell[CellGroupData[{
Cell[243837, 5638, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[243880, 5640, 432, 8, 56, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244349, 5653, 41, 0, 25, "Heading2"],
Cell[244393, 5655, 564, 9, 72, "Text"],
Cell[244960, 5666, 163, 3, 22, "Code"],
Cell[245126, 5671, 944, 21, 88, "Text"],
Cell[CellGroupData[{
Cell[246095, 5696, 480, 13, 20, "Input"],
Cell[246578, 5711, 642, 22, 42, "Output"]
}, Open  ]],
Cell[247235, 5736, 773, 19, 72, "Text"],
Cell[CellGroupData[{
Cell[248033, 5759, 990, 29, 33, "Input"],
Cell[249026, 5790, 650, 20, 42, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[249725, 5816, 30, 0, 38, "Heading2"],
Cell[249758, 5818, 1069, 23, 86, "Text"],
Cell[CellGroupData[{
Cell[250852, 5845, 987, 26, 99, "Input"],
Cell[251842, 5873, 681, 18, 65, "Output"]
}, Open  ]],
Cell[252538, 5894, 259, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[252822, 5903, 258, 6, 50, "Input"],
Cell[253083, 5911, 413, 13, 65, "Output"]
}, Open  ]],
Cell[253511, 5927, 503, 9, 25, "Text"],
Cell[CellGroupData[{
Cell[254039, 5940, 313, 10, 67, "Text"],
Cell[254355, 5952, 238, 8, 72, "Output"]
}, Open  ]],
Cell[254608, 5963, 424, 9, 46, "Text"],
Cell[CellGroupData[{
Cell[255057, 5976, 912, 25, 75, "Input"],
Cell[255972, 6003, 473, 15, 77, "Output"]
}, Open  ]],
Cell[256460, 6021, 548, 13, 46, "Text"],
Cell[257011, 6036, 1830, 63, 293, "Code"],
Cell[258844, 6101, 704, 16, 48, "Text"],
Cell[CellGroupData[{
Cell[259573, 6121, 879, 26, 77, "Input"],
Cell[260455, 6149, 119, 2, 55, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[260635, 6158, 605, 15, 65, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"Minima and Maxima Problems"],
Cell[CellGroupData[{
Cell[261265, 6177, 202, 3, 76, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[261470, 6182, 425, 8, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261932, 6195, 190, 3, 76, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[262125, 6200, 542, 12, 46, "Text"],
Cell[CellGroupData[{
Cell[262692, 6216, 705, 19, 60, "Input"],
Cell[263400, 6237, 602, 12, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264039, 6254, 363, 11, 50, "Input"],
Cell[264405, 6267, 319, 9, 55, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[264773, 6282, 192, 3, 76, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[264968, 6287, 288, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[265281, 6296, 849, 21, 20, "Input"],
Cell[266133, 6319, 387, 11, 20, "Output"]
}, Open  ]],
Cell[266535, 6333, 1413, 33, 105, "Text"],
Cell[CellGroupData[{
Cell[267973, 6370, 461, 15, 20, "Input"],
Cell[268437, 6387, 858, 31, 73, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269332, 6423, 349, 13, 20, "Input"],
Cell[269684, 6438, 2054, 68, 62, "Output"]
}, Open  ]],
Cell[271753, 6509, 803, 15, 88, "Text"],
Cell[CellGroupData[{
Cell[272581, 6528, 1288, 34, 50, "Input"],
Cell[273872, 6564, 413, 11, 20, "Output"]
}, Open  ]],
Cell[274300, 6578, 416, 9, 40, "Text"],
Cell[CellGroupData[{
Cell[274741, 6591, 921, 26, 35, "Input"],
Cell[275665, 6619, 363, 10, 20, "Output"]
}, Open  ]],
Cell[276043, 6632, 1656, 42, 105, "Text"],
Cell[CellGroupData[{
Cell[277724, 6678, 2838, 71, 127, "Input"],
Cell[280565, 6751, 26957, 458, 158, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[307583, 7216, 243, 10, 46, "Heading1",
 CellTags->"Vector Calculus Problems"],
Cell[CellGroupData[{
Cell[307851, 7230, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[307894, 7232, 417, 7, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308348, 7244, 28, 0, 38, "Heading2"],
Cell[308379, 7246, 1371, 34, 105, "Text"],
Cell[CellGroupData[{
Cell[309775, 7284, 1366, 42, 81, "Input"],
Cell[311144, 7328, 157, 4, 79, "Output"]
}, Open  ]],
Cell[311316, 7335, 1067, 22, 65, "Text"],
Cell[312386, 7359, 1233, 34, 75, "Input"],
Cell[313622, 7395, 606, 13, 48, "Text"],
Cell[CellGroupData[{
Cell[314253, 7412, 1440, 37, 122, "Input"],
Cell[315696, 7451, 211, 5, 74, "Output"],
Cell[315910, 7458, 579, 14, 30, "Text"],
Cell[316492, 7474, 676, 17, 75, "Input"],
Cell[317171, 7493, 359, 7, 55, "Output"]
}, Open  ]],
Cell[317545, 7503, 1270, 33, 67, "Text"],
Cell[318818, 7538, 1030, 31, 75, "Input"],
Cell[319851, 7571, 412, 10, 27, "Text"],
Cell[CellGroupData[{
Cell[320288, 7585, 938, 29, 99, "Input"],
Cell[321229, 7616, 156, 4, 55, "Output"]
}, Open  ]],
Cell[321400, 7623, 396, 7, 25, "Text"],
Cell[321799, 7632, 576, 16, 50, "Input"],
Cell[322378, 7650, 506, 14, 50, "Input"],
Cell[CellGroupData[{
Cell[322909, 7668, 505, 11, 50, "Input"],
Cell[323417, 7681, 278, 5, 55, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[323744, 7692, 30, 0, 76, "Heading2"],
Cell[323777, 7694, 1160, 23, 86, "Text"],
Cell[324940, 7719, 166, 3, 50, "Input"],
Cell[CellGroupData[{
Cell[325131, 7726, 133, 2, 50, "Input"],
Cell[325267, 7730, 193, 3, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325497, 7738, 100, 2, 50, "Input"],
Cell[325600, 7742, 255, 5, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325892, 7752, 67, 1, 20, "Input"],
Cell[325962, 7755, 191, 3, 20, "Output"]
}, Open  ]],
Cell[326168, 7761, 1154, 29, 105, "Text"],
Cell[CellGroupData[{
Cell[327347, 7794, 421, 12, 20, "Input"],
Cell[327771, 7808, 144, 3, 20, "Output"]
}, Open  ]],
Cell[327930, 7814, 388, 9, 23, "Text"],
Cell[CellGroupData[{
Cell[328343, 7827, 395, 12, 20, "Input"],
Cell[328741, 7841, 216, 6, 36, "Output"]
}, Open  ]],
Cell[328972, 7850, 822, 18, 105, "Text"],
Cell[329797, 7870, 176, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[329998, 7878, 622, 17, 20, "Input"],
Cell[330623, 7897, 405, 13, 42, "Output"]
}, Open  ]],
Cell[331043, 7913, 222, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[331290, 7921, 563, 16, 20, "Input"],
Cell[331856, 7939, 1083, 37, 42, "Output"]
}, Open  ]],
Cell[332954, 7979, 247, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[333226, 7988, 604, 17, 35, "Input"],
Cell[333833, 8007, 117, 2, 20, "Output"]
}, Open  ]],
Cell[333965, 8012, 1064, 20, 105, "Text"],
Cell[CellGroupData[{
Cell[335054, 8036, 1303, 38, 53, "Input"],
Cell[336360, 8076, 108939, 1826, 157, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445348, 9908, 41, 0, 26, "Heading2WithHeadAbove"],
Cell[445392, 9910, 366, 7, 40, "Text"],
Cell[445761, 9919, 512, 10, 56, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[446322, 9935, 312, 11, 70, "Heading1",
 CellTags->"Sums and Products"],
Cell[CellGroupData[{
Cell[446659, 9950, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[446702, 9952, 241, 5, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446980, 9962, 28, 0, 38, "Heading2"],
Cell[447011, 9964, 280, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[447316, 9974, 252, 7, 38, "Input"],
Cell[447571, 9983, 161, 4, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447769, 9992, 318, 9, 40, "Input"],
Cell[448090, 10003, 289, 9, 46, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448428, 10018, 30, 0, 38, "Heading2"],
Cell[448461, 10020, 659, 12, 56, "Text"],
Cell[CellGroupData[{
Cell[449145, 10036, 225, 6, 38, "Input"],
Cell[449373, 10044, 483, 9, 37, "Message"],
Cell[449859, 10055, 227, 6, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450123, 10066, 550, 17, 37, "Input"],
Cell[450676, 10085, 916, 29, 108, "Output"]
}, Open  ]],
Cell[451607, 10117, 1601, 40, 68, "Text"],
Cell[453211, 10159, 532, 7, 23, "Text"],
Cell[CellGroupData[{
Cell[453768, 10170, 615, 20, 40, "Input"],
Cell[454386, 10192, 168, 4, 20, "Output"]
}, Open  ]],
Cell[454569, 10199, 744, 12, 88, "Text"],
Cell[CellGroupData[{
Cell[455338, 10215, 738, 25, 45, "Input"],
Cell[456079, 10242, 214, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456330, 10252, 633, 21, 41, "Input"],
Cell[456966, 10275, 951, 28, 73, "Output"]
}, Open  ]],
Cell[457932, 10306, 371, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[458328, 10317, 645, 20, 52, "Input"],
Cell[458976, 10339, 147, 3, 20, "Output"]
}, Open  ]],
Cell[459138, 10345, 783, 18, 72, "Text"],
Cell[CellGroupData[{
Cell[459946, 10367, 322, 10, 32, "Input"],
Cell[460271, 10379, 372, 11, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460680, 10395, 370, 10, 22, "Input"],
Cell[461053, 10407, 722, 24, 46, "Output"]
}, Open  ]],
Cell[461790, 10434, 581, 12, 40, "Text"],
Cell[CellGroupData[{
Cell[462396, 10450, 313, 7, 20, "Input"],
Cell[462712, 10459, 357, 11, 37, "Output"]
}, Open  ]],
Cell[463084, 10473, 1835, 40, 153, "Text"],
Cell[CellGroupData[{
Cell[464944, 10517, 946, 30, 121, "Input"],
Cell[465893, 10549, 1236, 34, 55, "Output"]
}, Open  ]],
Cell[467144, 10586, 483, 11, 30, "Text"],
Cell[CellGroupData[{
Cell[467652, 10601, 894, 25, 85, "Input"],
Cell[468549, 10628, 217, 4, 55, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[468815, 10638, 28, 0, 76, "Heading2"],
Cell[468846, 10640, 586, 13, 25, "Text"],
Cell[469435, 10655, 1353, 33, 43, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[470837, 10694, 305, 11, 65, "Heading1",
 CellTags->"Difference Equations"],
Cell[CellGroupData[{
Cell[471167, 10709, 40, 0, 76, "Heading2WithHeadAbove"],
Cell[471210, 10711, 648, 11, 43, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471895, 10727, 41, 0, 76, "Heading2"],
Cell[471939, 10729, 1273, 22, 67, "Text"],
Cell[473215, 10753, 828, 25, 99, "Input"],
Cell[474046, 10780, 826, 21, 65, "Output"],
Cell[474875, 10803, 312, 6, 25, "Text"],
Cell[CellGroupData[{
Cell[475212, 10813, 232, 6, 50, "Input"],
Cell[475447, 10821, 210, 4, 55, "Output"]
}, Open  ]],
Cell[475672, 10828, 341, 6, 25, "Text"],
Cell[CellGroupData[{
Cell[476038, 10838, 385, 10, 50, "Input"],
Cell[476426, 10850, 202, 3, 55, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476677, 10859, 30, 0, 76, "Heading2"],
Cell[476710, 10861, 1259, 34, 68, "Text"],
Cell[CellGroupData[{
Cell[477994, 10899, 519, 15, 50, "Input"],
Cell[478516, 10916, 361, 11, 59, "Output"]
}, Open  ]],
Cell[478892, 10930, 519, 8, 43, "Text"],
Cell[CellGroupData[{
Cell[479436, 10942, 784, 22, 50, "Input"],
Cell[480223, 10966, 821, 25, 77, "Output"]
}, Open  ]],
Cell[481059, 10994, 675, 13, 56, "Text"],
Cell[CellGroupData[{
Cell[481759, 11011, 543, 11, 20, "Input"],
Cell[482305, 11024, 728, 19, 20, "Output"]
}, Open  ]],
Cell[483048, 11046, 482, 11, 40, "Text"],
Cell[CellGroupData[{
Cell[483555, 11061, 549, 16, 20, "Input"],
Cell[484107, 11079, 624, 18, 20, "Output"]
}, Open  ]],
Cell[484746, 11100, 565, 11, 56, "Text"],
Cell[CellGroupData[{
Cell[485336, 11115, 589, 17, 20, "Input"],
Cell[485928, 11134, 470, 15, 20, "Output"]
}, Open  ]],
Cell[486413, 11152, 303, 12, 23, "Text"],
Cell[CellGroupData[{
Cell[486741, 11168, 436, 12, 20, "Input"],
Cell[487180, 11182, 143, 3, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[487372, 11191, 28, 0, 38, "Heading2"],
Cell[487403, 11193, 424, 7, 40, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[487876, 11206, 306, 10, 70, "Heading1",
 CellTags->"Generating Functions"],
Cell[CellGroupData[{
Cell[488207, 11220, 40, 0, 26, "Heading2WithHeadAbove"],
Cell[488250, 11222, 305, 6, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488592, 11233, 51, 0, 25, "Heading2"],
Cell[488646, 11235, 430, 9, 56, "Text"],
Cell[CellGroupData[{
Cell[489101, 11248, 531, 12, 20, "Input"],
Cell[489635, 11262, 405, 12, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[490077, 11279, 277, 7, 20, "Input"],
Cell[490357, 11288, 1169, 36, 35, "Output"]
}, Open  ]],
Cell[491541, 11327, 297, 7, 40, "Text"],
Cell[CellGroupData[{
Cell[491863, 11338, 429, 10, 20, "Input"],
Cell[492295, 11350, 208, 4, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[492540, 11359, 277, 7, 20, "Input"],
Cell[492820, 11368, 308, 7, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[493177, 11381, 30, 0, 38, "Heading2"],
Cell[493210, 11383, 284, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[493519, 11393, 646, 18, 33, "Input"],
Cell[494168, 11413, 554, 19, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[494759, 11437, 544, 15, 36, "Input"],
Cell[495306, 11454, 277, 9, 38, "Output"]
}, Open  ]],
Cell[495598, 11466, 260, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[495883, 11476, 475, 12, 37, "Input"],
Cell[496361, 11490, 424, 9, 35, "Output"]
}, Open  ]],
Cell[496800, 11502, 274, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[497099, 11512, 904, 24, 35, "Input"],
Cell[498006, 11538, 469, 10, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[498524, 11554, 28, 0, 38, "Heading2"],
Cell[498555, 11556, 798, 21, 56, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
