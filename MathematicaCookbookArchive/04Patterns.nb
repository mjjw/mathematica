(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    365801,      10199]
NotebookOptionsPosition[    324168,       9018]
NotebookOutlinePosition[    335898,       9275]
CellTagsIndexPosition[    335021,       9253]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "CHAPTER ",
 
 CounterBox["ChapterLabel"]
}], "ChapterLabel",
 CellChangeTimes->{3.42029958084375*^9},
 CounterAssignments->{{"ChapterLabel", 4}},
 CellTags->"chPatterns"],

Cell["Patterns and Rule-Based Programming", "ChapterTitle",
 CellChangeTimes->{{3.420299552875*^9, 3.420299571296875*^9}, {
  3.42170467446875*^9, 3.421704693546875*^9}}],

Cell["\<\
You are an obsession
I cannot sleep
I am your possession
Unopened at your feet
There\[CloseCurlyQuote]s no balance
No equality
Be still I will not accept defeat

I will have you
Yes, I will have you
I will find a way and I will have you
Like a butterfly
A wild butterly
I will collect you and capture you\
\>", "Epigraph",
 CellChangeTimes->{{3.420300373515625*^9, 3.420300384109375*^9}, {
   3.420309971234375*^9, 3.420309972921875*^9}, 3.4673673554602003`*^9}],

Cell["Animotion, \[OpenCurlyDoubleQuote]Obsession\[CloseCurlyDoubleQuote]", \
"EpigraphAuthor",
 CellChangeTimes->{{3.42030039571875*^9, 3.420300422375*^9}, {
   3.4673673815842*^9, 3.4673674005411997`*^9}, {3.470159684094015*^9, 
   3.4701596915842323`*^9}, 3.47041811460147*^9, {3.470423202625763*^9, 
   3.4704232060666933`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introduction"
}], "Heading1",
 CellChangeTimes->{{3.420300450828125*^9, 3.42030045715625*^9}},
 CellTags->"IntroductionCh4"],

Cell[TextData[{
 StyleBox["In ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["Chapter 2",
  BaseStyle->"Hyperlink",
  ButtonData->{"Chapter 2", None}],
  FontTracking->"Plain"],
 StyleBox[", I argue that the functional style of programming is the \
preferred way ",
  FontTracking->"Plain"],
 StyleBox["to solve problems in Mathematica. Although ",
  FontTracking->"Extended"],
 StyleBox["functions form much of the brawn",
  FontTracking->"Plain"],
 StyleBox[", pat",
  FontTracking->"Extended"],
 StyleBox["tern matching provides the brains. In fact, functions and patterns \
should be thought of as partners rather than competitors. By mastering both \
functional programming and pattern-based programming, you will be able to use \
Mathematica to its fullest potential. In fact, once you get the hang of \
pattern-based solutions they may become a bit of an obsession.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, {3.420310043078125*^9, 
   3.4203103406875*^9}, {3.420310538328125*^9, 3.4203105505*^9}, {
   3.421846220765625*^9, 3.42184624565625*^9}, {3.4698833185917253`*^9, 
   3.4698833944239817`*^9}, {3.470160208548272*^9, 3.4701602575877533`*^9}, {
   3.470160292518961*^9, 3.470160355942635*^9}, 3.471265157591099*^9, {
   3.471701143315777*^9, 3.471701143851409*^9}}],

Cell[TextData[{
 StyleBox["If you have done any programming that involves text manipulation, \
you have no ",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Plain"],
 StyleBox["doubt been exposed to regular expressions, a concise syntax for \
describing",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Extended"],
 " ",
 StyleBox["patterns in text and manipulating text. Mathematica\
\[CloseCurlyQuote]s pattern syntax general",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Extended"],
 StyleBox["i",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Plain"],
 StyleBox["zes regular expressions to the domain of symbolic processing, \
which allows you to manipulate arbitrary symbolic structures.",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Extended"],
 StyleBox[" Patterns and rules are at the foundation of Mathematica\
\[CloseCurlyQuote]s symbolic processing capabilities. Symbolic",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Plain"],
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["integration",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Plain"],
 StyleBox[",",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Extended"],
 " \n",
 StyleBox["differentiation, equation solving, and simplification are all \
driven by the pattern primitives explained in this chapter. ",
  TextJustification->1.,
  LineSpacing->{1, 0},
  ParagraphSpacing->{0., 0.},
  FontTracking->"Extended"]
}], "Text",
 CellChangeTimes->{{3.470160341697921*^9, 3.4701603675940847`*^9}, {
   3.470160397886179*^9, 3.4701604020219193`*^9}, 3.470160439045073*^9, 
   3.47016048149979*^9, 3.47016051612949*^9, {3.470423500235057*^9, 
   3.470423511291671*^9}, {3.470423614131761*^9, 3.4704236232766447`*^9}, {
   3.470424051196011*^9, 3.4704240555628643`*^9}, {3.471264895343383*^9, 
   3.471264934957219*^9}, {3.471264969634079*^9, 3.471265032042633*^9}, {
   3.471701123446775*^9, 3.471701125890978*^9}, {3.475581963744529*^9, 
   3.475581971294376*^9}, 3.4755820200184317`*^9, {3.475582134464004*^9, 
   3.475582147432269*^9}, {3.485522068456724*^9, 3.485522074185604*^9}, {
   3.485522179066441*^9, 3.485522185857576*^9}}],

Cell[TextData[{
 "In the context of Mathematica, a ",
 StyleBox["pattern", "Techical Italic"],
 " is an expression that acts as a template against which other expressions \
can be matched. Some of the most useful patterns contain variables that are \
bound to values as a result of the matching process. However, many times just \
knowing that a pattern matched is sufficient. Patterns are central to \
specifying constraints in function arguments (e.g.,",
 " ",
 StyleBox["Integer", "Literal"],
 "). They also play roles in parsing, replacing, and counting, as we show in \
the recipes here. I defer the role of patterns in string manipulation to ",
 ButtonBox["Chapter 5",
  BaseStyle->"Hyperlink",
  ButtonData->{"Chapter 5", None}],
 ". "
}], "Text",
 CellChangeTimes->{
  3.465683223356*^9, {3.47016069100618*^9, 3.4701606938461323`*^9}, {
   3.4701607382528*^9, 3.47016075804906*^9}, 3.47016083833633*^9, {
   3.470160874945134*^9, 3.470160875628352*^9}, {3.470160907813479*^9, 
   3.470160950458177*^9}, {3.4701609809915752`*^9, 3.470160986808626*^9}, {
   3.470161228067788*^9, 3.470161250298326*^9}}],

Cell[TextData[{
 StyleBox["Rules build on patterns by specifying a mapping from a pattern to \
another ",
  FontTracking->"Plain"],
 "expression that uses all or parts of the matched results. Rules pervade \
Mathematica, as you will see in this chapter\[CloseCurlyQuote]s recipes and t",
 StyleBox["hroughout this book. ",
  FontTracking->"Plain"],
 StyleBox["It\[CloseCurlyQuote]s safe to say that Mathe",
  FontTracking->"SemiCondensed"],
 "matica would be almost as crippled by the removal of rules as it would be \
by the removal of the definition for ",
 StyleBox["Plus", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.470161032671053*^9, 3.470161122940872*^9}, {
  3.47558216919728*^9, 3.475582175518053*^9}}],

Cell["\<\
The rest of this introduction gives a brief overview of the most important \
primitives associated with pattern matching. This will make the recipes a bit \
easier to follow if you are new to these concepts. The recipes will explore \
the primitives more deeply, and as usual, you should refer to the Mathematica \
documentation for subtle details or clarification.\
\>", "Text",
 CellChangeTimes->{{3.470161137194579*^9, 3.4701612029696417`*^9}}],

Cell[CellGroupData[{

Cell["Blanks", "Heading2",
 CellChangeTimes->{{3.421657305828125*^9, 3.421657311515625*^9}}],

Cell[TextData[{
 "The most basic pattern constructs are ",
 StyleBox["Blank[]", "Literal"],
 " (",
 StyleBox["_", "Literal"],
 "), ",
 StyleBox["BlankSequence[]", "Literal"],
 " (",
 StyleBox["__", "Literal"],
 "), and ",
 StyleBox["BlankNullSequence[]", "Literal"],
 " (",
 StyleBox["___", "Literal"],
 "). ",
 StyleBox["Blank[]", "Literal"],
 " matches any expression ",
 StyleBox["(_)", "Literal"],
 ", whereas ",
 StyleBox["Blank[h]", "Literal"],
 " (",
 StyleBox["_h", "Literal"],
 ") matches any expression with head ",
 StyleBox["h", "Literal"],
 ". ",
 StyleBox["BlankSequence", "Literal"],
 " (__) means one or more; ",
 StyleBox["BlankNullSequence", "Literal"],
 " means zero or more. Thus,",
 " ",
 StyleBox["___h", "Literal"],
 " means zero or more expressions with head ",
 StyleBox["h", "Literal"],
 ". Here ",
 StyleBox["MatchQ", "Literal"],
 " tests if a pattern matches an expression."
}], "Text",
 CellChangeTimes->{
  3.470161256682845*^9, {3.470161776612749*^9, 3.4701618019741993`*^9}, {
   3.4701621022158003`*^9, 3.470162193332615*^9}, 3.4701622542611647`*^9, {
   3.4701623772939*^9, 3.4701623987091837`*^9}, {3.471265239613387*^9, 
   3.471265241204108*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{"a", ",", "_"}], "]"}]], "Input",
 CellChangeTimes->{3.420313052203125*^9},
 CellLabel->"In[1]:="],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.420313053734375*^9, 3.4210184375625*^9, 
  3.4334422879375*^9, 3.43344695925*^9, 3.465684253343*^9, 
  3.467848126443775*^9, 3.4685973964005413`*^9},
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], ",", "_a"}], "]"}]], "Input",
 CellChangeTimes->{{3.420312993703125*^9, 3.420313032609375*^9}, {
  3.42031339275*^9, 3.4203134221875*^9}, {3.420315383375*^9, 
  3.420315412453125*^9}},
 CellLabel->"In[2]:="],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.420313036890625*^9, 3.42031303696875*^9}, {
   3.420313403609375*^9, 3.420313422671875*^9}, {3.420315385015625*^9, 
   3.420315413140625*^9}, 3.421018437703125*^9, 3.43344228803125*^9, 
   3.433446959328125*^9, 3.4656842534040003`*^9, 3.4678481264811707`*^9, 
   3.468597396435334*^9},
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"By", " ", "itself", " ", 
    StyleBox["a", "Literal"], " ", "has", " ", "head", " ", 
    RowBox[{"Symbol", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"MatchQ", "[", 
   RowBox[{"a", ",", "_a"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.420315427078125*^9, 3.420315452796875*^9}, {
  3.470162464207003*^9, 3.470162471764824*^9}},
 CellLabel->"In[3]:="],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.420315428203125*^9, 3.42101843771875*^9, 
  3.433442288078125*^9, 3.433446959359375*^9, 3.465684253448*^9, 
  3.4678481265274076`*^9, 3.4685973964718237`*^9},
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "_List"}], "]"}]], "Input",
 CellChangeTimes->{{3.420313131734375*^9, 3.42031325628125*^9}, {
  3.42031329775*^9, 3.42031332234375*^9}, {3.420315183046875*^9, 
  3.420315205296875*^9}, {3.42031532928125*^9, 3.42031535725*^9}},
 CellLabel->"In[4]:="],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.42031313353125*^9, 3.420313216125*^9}, {
   3.420313250328125*^9, 3.4203132570625*^9}, {3.4203133046875*^9, 
   3.420313322921875*^9}, 3.42031520621875*^9, 3.420315364703125*^9, 
   3.421018437734375*^9, 3.433442288125*^9, 3.433446959390625*^9, 
   3.465684253483*^9, 3.4678481265652637`*^9, 3.4685973965180264`*^9},
 CellLabel->"Out[4]="]
}, Open  ]],

Cell[TextData[{
 "Blanks are more powerful when you can determine what they are matched \
against so you can use the matched value for further processing. This is most \
often done using a prefix symbol (e.g., ",
 StyleBox["x_", "Literal"],
 ", ",
 StyleBox["x__", "Literal"],
 ", ",
 StyleBox["x___", "Literal"],
 "). This syntax should be familiar since it is most commonly used for \
function arguments. However, as shown in this recipe, there are other \
contexts where binding symbols to matches comes into play."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.4701624941349983`*^9, 3.4701625292648983`*^9}, 
   3.470162562615615*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "f1", " ", "will", " ", "match", " ", "when", " ", "called", " ", "with", 
    " ", "a", " ", "single", " ", "integer", " ", 
    RowBox[{"argument", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"f1", "[", "n_Integer", "]"}], " ", ":=", " ", 
    RowBox[{"{", "n", "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "f2", " ", "will", " ", "match", " ", "when", " ", "called", " ", "with", 
     " ", "one", " ", "or", " ", "more", " ", 
     RowBox[{"integers", "."}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"f2", "[", "n__Integer", "]"}], " ", ":=", " ", 
    RowBox[{"{", "n", "}"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "f3", " ", "will", " ", "match", " ", "when", " ", "called", " ", "with", 
     " ", "zero", " ", "or", " ", "more", " ", 
     RowBox[{"integers", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f3", "[", "n___Integer", "]"}], " ", ":=", " ", 
    RowBox[{"{", "n", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.42032271415625*^9, 3.420322727921875*^9}, {
   3.420322864234375*^9, 3.42032290778125*^9}, {3.4203229786875*^9, 
   3.42032310103125*^9}, 3.4701625778855677`*^9, {3.470162622198551*^9, 
   3.470162622495027*^9}, {3.470162653410138*^9, 3.470162653765431*^9}},
 CellLabel->"In[5]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", "10", "]"}], " ", 
  RowBox[{"(*", "Match", "*)"}]}]], "Input",
 CellChangeTimes->{{3.420323106*^9, 3.42032311140625*^9}, {
  3.420323257734375*^9, 3.420323264046875*^9}, {3.470162684479587*^9, 
  3.47016268681774*^9}},
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{"{", "10", "}"}]], "Output",
 CellChangeTimes->{{3.42032311403125*^9, 3.4203231210625*^9}, 
   3.421018437765625*^9, 3.433442288171875*^9, 3.433446959453125*^9, 
   3.465684253542*^9, 3.467848126643888*^9, 3.468597396584765*^9},
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"10", ",", "20"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"No", " ", "match"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.420323126171875*^9, 3.420323142671875*^9}, {
  3.420323274078125*^9, 3.42032328371875*^9}, {3.4701627134390717`*^9, 
  3.470162715622706*^9}},
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"f1", "[", 
  RowBox[{"10", ",", "20"}], "]"}]], "Output",
 CellChangeTimes->{3.420323143890625*^9, 3.42101843778125*^9, 
  3.43344228821875*^9, 3.433446959484375*^9, 3.465684253578*^9, 
  3.4678481266818323`*^9, 3.468597396618272*^9},
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", 
   RowBox[{"10", ",", "20"}], "]"}], " ", 
  RowBox[{"(*", "Match", "*)"}]}]], "Input",
 CellChangeTimes->{{3.42032316*^9, 3.42032316528125*^9}, {
  3.420323287171875*^9, 3.420323293578125*^9}, {3.470162733205605*^9, 
  3.470162735438656*^9}},
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.420323166203125*^9, 3.421018437796875*^9, 
  3.433442288234375*^9, 3.433446959515625*^9, 3.465684253612*^9, 
  3.46784812672849*^9, 3.468597396655946*^9},
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"No", " ", "match"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.420323169453125*^9, 3.420323170828125*^9}, {
  3.420323296359375*^9, 3.4203233044375*^9}, {3.470162754234865*^9, 
  3.470162755551002*^9}},
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"f2", "[", "]"}]], "Output",
 CellChangeTimes->{3.420323171515625*^9, 3.4210184378125*^9, 
  3.433442288265625*^9, 3.433446959546875*^9, 3.4656842536470003`*^9, 
  3.467848126765065*^9, 3.468597396685029*^9},
 CellLabel->"Out[11]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", "]"}], " ", 
  RowBox[{"(*", "Match", "*)"}]}]], "Input",
 CellChangeTimes->{{3.420323177109375*^9, 3.420323180234375*^9}, {
  3.420323307796875*^9, 3.42032331453125*^9}, {3.4701627800362263`*^9, 
  3.470162783404153*^9}},
 CellLabel->"In[12]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.42032318075*^9, 3.421018437828125*^9, 
  3.433442288296875*^9, 3.433446959578125*^9, 3.4656842536809998`*^9, 
  3.4678481268114767`*^9, 3.468597396722103*^9},
 CellLabel->"Out[12]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", 
   RowBox[{"1", ",", "2", ",", "\"\<3\>\""}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"No", " ", "match"}], "*)"}]}]], "Input",
 CellChangeTimes->{
  3.42032318409375*^9, {3.42032323690625*^9, 3.420323242265625*^9}, {
   3.420323317296875*^9, 3.42032332634375*^9}, {3.420323371734375*^9, 
   3.420323398890625*^9}},
 CellLabel->"In[13]:="],

Cell[BoxData[
 RowBox[{"f3", "[", 
  RowBox[{"1", ",", "2", ",", "\<\"3\"\>"}], "]"}]], "Output",
 CellChangeTimes->{3.420323375671875*^9, 3.421018437859375*^9, 
  3.433442288328125*^9, 3.433446959609375*^9, 3.465684253716*^9, 
  3.4678481268444366`*^9, 3.468597396751889*^9},
 CellLabel->"Out[13]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Alternatives", "Heading2",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.4216573755625*^9}}],

Cell[TextData[{
 "Sometimes you need to construct patterns that match two or more forms. This \
can be done using ",
 StyleBox["Alternatives[p1,p2,...,pn]", "Literal"],
 " or, more commonly, using vertical bar ",
 StyleBox["p1|p2|...|pn", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.42165742003125*^9, 3.421657423265625*^9}, {
  3.421657551453125*^9, 3.4216575865625*^9}, {3.421657677625*^9, 
  3.421657701640625*^9}, {3.4216577390625*^9, 3.42165788946875*^9}, {
  3.470162810411663*^9, 3.4701628195057373`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", "r", ",", "t", ",", "i", ",", "c", ",", "h", ",", "o", ",", "k",
      ",", "e"}], "}"}], ",", " ", 
   RowBox[{"a", "|", "e", "|", "i", "|", "o", "|", "u"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.42165789821875*^9, 3.42165796740625*^9}},
 CellLabel->"In[14]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "i", ",", "o", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.4216579713125*^9, 3.433442288359375*^9, 
  3.433446959640625*^9, 3.465684253769*^9, 3.46784812688171*^9, 
  3.468597396801737*^9},
 CellLabel->"Out[14]="]
}, Open  ]],

Cell["This form can also appear in functions.", "Text",
 CellChangeTimes->{{3.42165808928125*^9, 3.421658114*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_Complex", "|", "x_Real", "|", "x_Integer"}], "]"}], " ", ":=", 
  " ", "x"}]}], "Input",
 CellLabel->"In[15]:="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"f", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3.14", ",", 
    RowBox[{"10", "+", 
     RowBox[{"3", "I"}]}], ",", " ", 
    RowBox[{"1", "/", "2"}], ",", " ", "\"\<foo\>\""}], "}"}]}]], "Input", \
"ProductionPageBreak",
 CellChangeTimes->{{3.421658273703125*^9, 3.421658279078125*^9}, {
  3.42165835525*^9, 3.4216583843125*^9}},
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3.14`", ",", 
   RowBox[{"10", "+", 
    RowBox[{"3", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"f", "[", 
    FractionBox["1", "2"], "]"}], ",", 
   RowBox[{"f", "[", "\<\"foo\"\>", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.465684253826*^9, 3.4678481269609737`*^9, 
  3.4685973968676653`*^9},
 CellLabel->"Out[17]="],

Cell["Repeats", "Heading2",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.421657381484375*^9}}],

Cell[TextData[{
 "You use ",
 StyleBox["Repeated[p]", "Literal"],
 " ",
 "or ",
 StyleBox["p..", "Literal"],
 " to match one or more instances of some pattern ",
 StyleBox["p", "Literal"],
 "; you use ",
 StyleBox["RepeatedNull[p]", "Literal"],
 " or ",
 StyleBox["p...", "Literal"],
 " to match zero or more instances of ",
 StyleBox["p", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.421659033390625*^9, 3.42165908378125*^9}, {
   3.42165911496875*^9, 3.4216591303125*^9}, {3.421659175453125*^9, 
   3.42165927896875*^9}, 3.421701001203125*^9, {3.421701113265625*^9, 
   3.4217011133125*^9}, 3.421846324921875*^9, 3.4701612629404087`*^9, {
   3.4701628551928797`*^9, 3.470162890154731*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", ".."}], ",", 
     RowBox[{"0", ".."}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4217011331875*^9, 3.421701274328125*^9}, {
  3.421701353625*^9, 3.421701357*^9}, {3.4217016963125*^9, 
  3.421701697984375*^9}},
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.421701276265625*^9, 3.42170135865625*^9, 
  3.421701699015625*^9, 3.433442288484375*^9, 3.433446959734375*^9, 
  3.4656842538789997`*^9, 3.467848127015239*^9, 3.468597396901991*^9},
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "..."}], ",", 
     RowBox[{"0", "..."}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.421701434125*^9, 3.421701464890625*^9}, {
  3.42170149525*^9, 3.421701511*^9}, {3.421701550125*^9, 3.42170163959375*^9}},
 CellLabel->"In[19]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4217015615625*^9, 3.421701640296875*^9}, 
   3.433442288546875*^9, 3.433446959765625*^9, 3.465684253915*^9, 
   3.467848127049304*^9, 3.4685973969519978`*^9},
 CellLabel->"Out[19]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["PatternSequence", "Heading2",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.421657384953125*^9}, {3.421706961203125*^9, 
   3.421706967671875*^9}}],

Cell[TextData[{
 StyleBox["Repeated", "Literal"],
 " (",
 StyleBox["p..", "Literal"],
 ") matches a",
 StyleBox[" very specific sequence, whereas ",
  FontTracking->"Extended"],
 StyleBox["BlankSequence", "Literal",
  FontTracking->"Extended"],
 StyleBox[" (",
  FontTracking->"Extended"],
 StyleBox["x__", "Literal",
  FontTracking->"Extended"],
 StyleBox[") is ver",
  FontTracking->"Extended"],
 "y general. Sometimes you need to match a sequence of intermediate \
specificity. ",
 StyleBox["Pattern\[DiscretionaryHyphen]Sequence", "Literal"],
 " was introduced in Mathematica 6 to help achieve this. The following means ",
 StyleBox["f", "Literal"],
 " is a function that takes exactly two expressions."
}], "Text",
 CellChangeTimes->{
  3.47016126981709*^9, {3.470162922024337*^9, 3.470162936487927*^9}, {
   3.475585696819628*^9, 3.4755856983164454`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x", ":", 
    RowBox[{"PatternSequence", "[", 
     RowBox[{"_", ",", "_"}], "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Power", "[", "x", "]"}]}]}], "Input",
 CellLabel->"In[20]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "1", "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"No", " ", "match"}], ",", " ", 
    RowBox[{"too", " ", "few"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.470162960349512*^9, 3.47016296156735*^9}},
 CellLabel->"In[22]:="],

Cell[BoxData[
 RowBox[{"f", "[", "1", "]"}]], "Output",
 CellChangeTimes->{3.465684253981*^9, 3.4678481271275473`*^9, 
  3.468597397018012*^9},
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"2", ",", "3"}], "]"}], " ", 
  RowBox[{"(*", "Match", "*)"}]}]], "Input",
 CellChangeTimes->{{3.4701629768450623`*^9, 3.4701629783010483`*^9}},
 CellLabel->"In[23]:="],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.4656842540150003`*^9, 3.467848127162013*^9, 
  3.468597397052244*^9},
 CellLabel->"Out[23]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"2", ",", "3", ",", "4"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"No", " ", "match"}], ",", " ", 
    RowBox[{"too", " ", "many"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.470163004408516*^9, 3.470163006249196*^9}},
 CellLabel->"In[24]:="],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"2", ",", "3", ",", "4"}], "]"}]], "Output",
 CellChangeTimes->{3.46568425405*^9, 3.4678481273120813`*^9, 
  3.4685973970860853`*^9},
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Above, ",
  FontTracking->"Plain"],
 StyleBox["PatternSequence", "Literal",
  FontTracking->"Plain"],
 StyleBox[" is not strictly necessary because",
  FontTracking->"SemiCondensed"],
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["f[x_,y_] := Power[x,y]", "Literal",
  FontTracking->"Plain"],
 StyleBox[" is",
  FontTracking->"Plain"],
 " the more conventional notation, but consider these more interesting use \
cases."
}], "Text",
 CellChangeTimes->{{3.47016307419272*^9, 3.470163085215979*^9}, {
   3.470163126703745*^9, 3.470163126993534*^9}, {3.470396969010832*^9, 
   3.470396969427231*^9}, 3.4712654541071672`*^9}],

Cell["\<\
f[0 | PatternSequence[]] := 0 (*Matches either f[0] or f[]*)
f[p : PatternSequence[_,_],___] := {p} (*Names the first two elements of a
sequence and discards the rest*)
f[p : Longests@PatternSequence[a,b]..,rest___] (*The longest repeated
sequence of a,b*)\
\>", "Code",
 CellChangeTimes->{
  3.470161420559678*^9, {3.470397026839882*^9, 3.470397027954651*^9}, {
   3.470397093868122*^9, 3.470397113349812*^9}, {3.47039715114501*^9, 
   3.470397151764143*^9}, {3.470397213793075*^9, 3.470397256640669*^9}, {
   3.471265476221098*^9, 3.471265503897728*^9}, 3.47170126480698*^9, {
   3.475582272853119*^9, 3.475582284196048*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Except", "Heading2", "ProductionPageBreak",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.421657384953125*^9}, {3.421706961203125*^9, 
   3.421706967671875*^9}}],

Cell[TextData[{
 "Often, it is easier to describe what you don",
 "\[CloseCurlyQuote]",
 "t want to match than what you do. In these cases, you can use ",
 StyleBox["Except[p]", "Literal"],
 " to indicate matching for everything except what matches ",
 StyleBox["p", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.421701753546875*^9, 3.4217018684375*^9}, {
  3.470397354191441*^9, 3.470397417891118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", "r", ",", "t", ",", "i", ",", "c", ",", "h", ",", "o", ",", "k",
      ",", "e"}], "}"}], ",", " ", 
   RowBox[{"Except", "[", 
    RowBox[{"a", "|", "e", "|", "i", "|", "o", "|", "u"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.42170195184375*^9, 3.4217019600625*^9}},
 CellLabel->"In[25]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"r", ",", "t", ",", "c", ",", "h", ",", "k"}], "}"}]], "Output",
 CellChangeTimes->{3.42170196171875*^9, 3.433442288640625*^9, 
  3.433446959828125*^9, 3.465684254104*^9, 3.467848127378833*^9, 
  3.468597397123684*^9},
 CellLabel->"Out[25]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditions and Pattern Tests", "Heading2",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.421657388359375*^9}, {3.421702358796875*^9, 
   3.42170236325*^9}}],

Cell["\<\
Conditions allow you to qualify a pattern with an additional test that the \
matching element must pass for the match to succeed. This is a powerful \
construct because it extends the degree of control over the matching process \
to any criteria Mathematica can compute. \
\>", "Text",
 CellChangeTimes->{{3.421702107171875*^9, 3.421702181484375*^9}, {
  3.42170221334375*^9, 3.421702398921875*^9}, {3.42170243090625*^9, 
  3.42170246475*^9}, {3.42170254909375*^9, 3.421702578234375*^9}, {
  3.470397445047574*^9, 3.4703974451866207`*^9}, {3.470397484278194*^9, 
  3.470397503910899*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], ",", " ", 
   RowBox[{"b__", "/;", 
    RowBox[{
     RowBox[{"Total", "[", "b", "]"}], ">", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.421702680421875*^9, 3.421702728984375*^9}},
 CellLabel->"In[26]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.421702719*^9, 3.421702729765625*^9}, 
   3.433442288796875*^9, 3.433446959859375*^9, 3.465684254159*^9, 
   3.467848127433548*^9, 3.468597397169559*^9},
 CellLabel->"Out[26]="]
}, Open  ]],

Cell[TextData[{
 "Pattern tests also qualify the match, but they apply to the entire pattern \
and, therefore, don",
 "\[CloseCurlyQuote]",
 "t require pattern variables. The following lists all primes less than ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "50"], TraditionalForm]]],
 " + 2 of the form ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "n"], TraditionalForm]]],
 "\[PlusMinus] 1."
}], "Text",
 CellChangeTimes->{{3.421702107171875*^9, 3.421702181484375*^9}, {
   3.42170221334375*^9, 3.421702398921875*^9}, {3.42170243090625*^9, 
   3.42170246475*^9}, {3.42170254909375*^9, 3.4217026235*^9}, {
   3.421703355484375*^9, 3.42170343678125*^9}, {3.421703477625*^9, 
   3.421703500078125*^9}, {3.42170354059375*^9, 3.421703565125*^9}, 
   3.42184634484375*^9, {3.470397519200362*^9, 3.470397538195711*^9}, {
   3.4703975859374332`*^9, 3.4703976121684427`*^9}}],

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"Union", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "^", "n"}], " ", "-", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "^", "n"}], "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "50"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"_", "?", "PrimeQ"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4217027840625*^9, 3.421702820484375*^9}, {
  3.42170286871875*^9, 3.42170295125*^9}, {3.42170298678125*^9, 
  3.421703155390625*^9}, {3.421703212875*^9, 3.4217032200625*^9}, {
  3.421703252578125*^9, 3.42170329675*^9}, {3.421703381203125*^9, 
  3.421703381703125*^9}},
 CellLabel->"In[27]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "5", ",", "7", ",", "17", ",", "31", ",", "127", ",", 
   "257", ",", "8191", ",", "65537", ",", "131071", ",", "524287", ",", 
   "2147483647"}], "}"}]], "Output",
 CellChangeTimes->{{3.421702928734375*^9, 3.4217029518125*^9}, {
   3.421702995625*^9, 3.42170301796875*^9}, {3.42170305296875*^9, 
   3.42170310503125*^9}, {3.421703139546875*^9, 3.421703156203125*^9}, 
   3.4217032210625*^9, {3.42170326959375*^9, 3.421703297421875*^9}, 
   3.421703382640625*^9, 3.4334422889375*^9, 3.433446959890625*^9, 
   3.465684254207*^9, 3.4678481274835987`*^9, 3.468597397206663*^9},
 CellLabel->"Out[27]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"Union", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "^", "n"}], " ", "-", "1"}], ",", 
         RowBox[{
          RowBox[{"2", "^", "n"}], "+", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "50"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"#1", " ", "<", " ", "127"}], "&"}], ")"}]}]}], "]"}]], "Input",\

 CellLabel->"In[28]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "1", ",", "2", ",", "3", ",", "5", ",", "7", ",", "9", ",", "15", 
   ",", "17", ",", "31", ",", "33", ",", "63", ",", "65"}], "}"}]], "Output",
 CellChangeTimes->{3.465684254244*^9, 3.467848127533119*^9, 
  3.4685973972525883`*^9},
 CellLabel->"Out[28]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
A common mistake is to write the last example in one of two ways that will \
not work:
\
\>", "NoteWarning",
 CellChangeTimes->{
  3.470397639165926*^9, {3.4704184299838543`*^9, 3.470418431817514*^9}, 
   3.471265884727738*^9}],

Cell[CellGroupData[{

Cell["\<\
Cases[Union[Flatten[Table[{2^n - 1, 2^n + 1}, {n, 0, 50}]]], _?(#1 < 127)&] \
(*wrong!*)\
\>", "NoteWarningInput",
 CellMargins->{{97, 36}, {3, 0}},
 CellLabel->"In[29]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "NoteWarningOutput",
 CellMargins->{{97, 36}, {3, 0}},
 CellChangeTimes->{3.465684254292*^9, 3.467848127611539*^9, 
  3.4685973973194723`*^9},
 CellLabel->"Out[29]="]
}, Open  ]],

Cell["\<\
Cases[Union[Flatten[Table[{2^n - 1, 2^n + 1}, {n, 0, 50}]]], _?#1 < 127&]  \
(*wrong!*)\
\>", "NoteWarningInput",
 CellMargins->{{97, 36}, {3, 0}},
 CellLabel->"In[30]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "NoteWarningOutput",
 CellMargins->{{97, 36}, {3, 0}},
 CellChangeTimes->{3.4656842543269997`*^9, 3.467848127657467*^9, 
  3.4685973973584833`*^9},
 CellLabel->"Out[30]="],

Cell["\<\
I still make this mistake from time to time, and it\[CloseCurlyQuote]s \
frustrating; pay attention to those parentheses!\
\>", "NoteWarningEnd",
 CellChangeTimes->{{3.4703976815256147`*^9, 3.470397729340672*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Rules", "Heading2", "TopOfPage",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.421657388359375*^9}, 3.421703587796875*^9}],

Cell[TextData[{
 "Rules take pattern matching to a new level of expressiveness, allowing you \
to perform transformations on matched expressions. Rules are an integral part \
of Mathematica internal operations and are used in expressing solutions to \
equations (see ",
 ButtonBox["Recipe 11.6",
  BaseStyle->"Hyperlink",
  ButtonData->{"Calculus.nb", "Solving Differntial Equations"}],
 "), ",
 StyleBox["Options", "Literal"],
 " (see ",
 ButtonBox["Recipe 2.17",
  BaseStyle->"Hyperlink",
  ButtonData->{
   "FunctionalProgramming.nb", "Creating Functions that Accept Options"}],
 "), and ",
 StyleBox["SparseArrays", "Literal"],
 " (see ",
 ButtonBox["Recipe 3.8",
  BaseStyle->"Hyperlink",
  ButtonData->{"DataStructures.nb", "Using Sparse Arrays to Conserve Memory"}],
 "). ",
 StyleBox["Rules", "Literal"],
 " are also the foundation of Mathematica\[CloseCurlyQuote]s symbolic \
abilities. With all these applications, no serious user of Mathematica can \
afford to ignore them."
}], "Text",
 CellChangeTimes->{
  3.4701612862220592`*^9, {3.470397768412869*^9, 3.470397812411515*^9}, {
   3.470398161885903*^9, 3.470398170366391*^9}, {3.4703984865413446`*^9, 
   3.470398505946712*^9}, {3.470398565214772*^9, 3.470398571978415*^9}, {
   3.470398914428548*^9, 3.470398915395445*^9}, {3.471266044474832*^9, 
   3.4712660550080833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "we", " ", "use", " ", "a", " ", "rule", " ", "to", " ", 
    "replace", " ", "all", " ", 
    RowBox[{"(", "/.", ")"}], " ", "occurrences", " ", "of", " ", "x", " ", 
    "with", " ", "the", " ", "numerical", " ", "value", " ", "of", " ", 
    RowBox[{"Pi", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"x", " ", "-", " ", 
    RowBox[{"x", "^", "2"}], " ", "+", 
    RowBox[{"x", "^", "3"}], " ", "-", 
    RowBox[{"x", " ", "^", "4"}], " ", "+", " ", 
    RowBox[{"x", "^", "5"}]}], "  ", "/.", " ", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"N", "[", "Pi", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.421705528546875*^9, 3.421705641265625*^9}, {
   3.42170568259375*^9, 3.421705721375*^9}, {3.42170581684375*^9, 
   3.421705894109375*^9}, {3.4703989273031683`*^9, 3.470398948229372*^9}, 
   3.47039897858906*^9},
 CellLabel->"In[32]:="],

Cell[BoxData["232.88885868407925`"], "Output",
 CellChangeTimes->{{3.421705600546875*^9, 3.421705608609375*^9}, 
   3.421705642125*^9, {3.421705701078125*^9, 3.4217057225625*^9}, 
   3.43344228896875*^9, 3.43344695990625*^9, 3.4656842544110003`*^9, 
   3.467848127762602*^9, 3.468597397469315*^9},
 CellLabel->"Out[32]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Convert", " ", "matching", " ", "binary", " ", "digit", " ", "list", " ", 
    "to", " ", 
    RowBox[{"integers", ".", " ", "You"}], " ", "need", " ", "to", " ", "use",
     " ", "RuleDelayed", " ", "since", " ", "b", " ", "is", " ", "not", " ", 
    "defined", " ", "until", " ", "the", " ", 
    RowBox[{"match", "."}]}], "*)"}], 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], "}"}], ",", " ", 
    
    RowBox[{
     RowBox[{"b", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", " ", ".."}], ",", " ", 
        RowBox[{"0", " ", ".."}]}], "}"}]}], "\[RuleDelayed]", " ", 
     RowBox[{"FromDigits", "[", 
      RowBox[{"b", ",", "2"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.42032269503125*^9, 3.421657285765625*^9, {
   3.42165733659375*^9, 3.421657388359375*^9}, {3.421705131875*^9, 
   3.421705170046875*^9}, {3.421705212421875*^9, 3.421705287359375*^9}, {
   3.42170537059375*^9, 3.421705443484375*^9}, 3.4703990109712687`*^9},
 CellLabel->"In[33]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.421705256875*^9, 3.4217052885625*^9}, 
   3.433442289109375*^9, 3.4334469599375*^9, 3.465684254448*^9, 
   3.467848127812314*^9, 3.468597397506627*^9},
 CellLabel->"Out[33]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["A good way to gain insight into the difference between ",
  FontTracking->"SemiCondensed"],
 StyleBox["\[Rule]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" and ",
  FontTracking->"SemiCondensed"],
 StyleBox["\[RuleDelayed]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" is to consider replace\[DiscretionaryHyphen]",
  FontTracking->"SemiCondensed"],
 "ments of a randomly generated number."
}], "Text",
 CellChangeTimes->{
  3.4203006726875*^9, 3.420300868296875*^9, 3.420310043078125*^9, {
   3.420312174515625*^9, 3.420312233234375*^9}, {3.4203125664375*^9, 
   3.420312570515625*^9}, {3.420312666828125*^9, 3.42031285396875*^9}, {
   3.4203129053125*^9, 3.420312914046875*^9}, {3.420312948375*^9, 
   3.4203129853125*^9}, 3.421019952078125*^9, {3.42170591421875*^9, 
   3.42170601709375*^9}, {3.421846388640625*^9, 3.421846392296875*^9}, {
   3.470399065258358*^9, 3.470399065758699*^9}, {3.4712671597185802`*^9, 
   3.471267161727512*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"With", " ", "Rule"}], ",", " ", 
    RowBox[{
     RowBox[{"RandomInteger", "[", "]"}], " ", "is", " ", "evaluated", " ", 
     "immediately", " ", "so", " ", "is", " ", "constant", " ", "while", " ", 
     "the", " ", "rule", " ", "is", " ", 
     RowBox[{"applied", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}], "/.", "  ", 
   RowBox[{"x", "\[Rule]", " ", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4217060205*^9, 3.421706061546875*^9}, {
   3.4217061015625*^9, 3.421706152859375*^9}, {3.421706208671875*^9, 
   3.421706215796875*^9}, {3.470399080399949*^9, 3.47039909545604*^9}, 
   3.471267172717532*^9},
 CellLabel->"In[34]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.4217060458125*^9, 3.4217060626875*^9}, 
   3.4334422891875*^9, 3.43344696*^9, 3.465684254493*^9, 3.467848127846754*^9,
    3.468597397535754*^9},
 CellLabel->"Out[34]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"With", " ", "RuleDelayed"}], ",", " ", 
    RowBox[{
    "it", " ", "is", " ", "newly", " ", "evaluated", " ", "on", " ", "each", 
     " ", 
     RowBox[{"match", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "x", ",", "x", ",", "x"}], "}"}], "/.", "  ", 
   RowBox[{"x", "\[RuleDelayed]", "  ", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"{", 
      RowBox[{"0", ",", "100"}], "}"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.421706075328125*^9, 3.421706080109375*^9}, {
  3.421706158265625*^9, 3.4217061996875*^9}, {3.4703991420796623`*^9, 
  3.4703991885533237`*^9}},
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "37", ",", "62", ",", "23"}], "}"}]], "Output",
 CellChangeTimes->{3.421706081*^9, 3.43344228921875*^9, 3.433446960015625*^9, 
  3.465684254533*^9, 3.467848127900219*^9, 3.46859739757504*^9},
 CellLabel->"Out[35]="]
}, Open  ]],

Cell["See Also", "Heading2"],

Cell[TextData[{
 "The tutorial of pattern primitives is a useful resource:",
 StyleBox[" ", "URL"],
 StyleBox[ButtonBox["tutorial/PatternsAndTransformationRules",
  BaseStyle->"Hyperlink",
  ButtonData->{
    FrontEnd`FileName[{"tutorial"}, "PatternsAndTransformationRules", 
     CharacterEncoding -> "UTF-8"], None}], "URL"],
 ". Committing most of these to memory will strengthen your Mathematica \
skills considerably."
}], "Text",
 CellChangeTimes->{
  3.470399209018759*^9, {3.470399240729542*^9, 3.4703992407326803`*^9}, {
   3.471267480291046*^9, 3.4712674804984922`*^9}}]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Collecting Items That Match ",
 " ",
 "(or Don\[CloseCurlyQuote]t Match) a Pattern"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{{3.470399255876771*^9, 3.470399256285624*^9}, 
   3.470482438550192*^9, 3.4755823553821087`*^9, 3.485522090698414*^9},
 CellTags->"FindingItemsThatMatchAPattern"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.42030071015625*^9, 3.420300756109375*^9}, {
  3.42030081553125*^9, 3.420300820015625*^9}}],

Cell["\<\
You have a list or other expression and want to find values that match a \
pattern. You may also want to transform the matching values as they are found.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017030109375*^9, 3.421017051359375*^9}, 3.42101726153125*^9, 
   3.421017327375*^9}],

Cell[TextData[{
 "Use ",
 StyleBox["Cases", "Literal"],
 " with a pattern to produce a list of expressions that match the pattern."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", " ", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Cases", "[", 
  RowBox[{"list", ",", "_Integer"}], "]"}]}], "Input",
 CellChangeTimes->{{3.470481433663637*^9, 3.470481434604927*^9}},
 CellLabel->"In[36]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.4656842545889997`*^9, 3.46784812795019*^9, 
  3.468597397606865*^9},
 CellLabel->"Out[37]="]
}, Open  ]],

Cell[TextData[{
 "Use a rule to transform matches to other forms. Here the matched integers \
are squared to produce the result. This added capability of ",
 StyleBox["Cases", "Literal"],
 " is extremely powerful."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"list", ",", 
   RowBox[{"x_Integer", ":>", 
    RowBox[{"x", "^", "2"}]}]}], "]"}]], "Input",
 CellLabel->"In[38]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.465684254634*^9, 3.467848127996305*^9, 
  3.4685973976367273`*^9},
 CellLabel->"Out[38]="]
}, Open  ]],

Cell[TextData[{
 "Wrapping the pattern in ",
 StyleBox["Except", "Literal"],
 " gives the nonmatching values."
}], "Text",
 CellChangeTimes->{3.4703992905402403`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"Except", "[", "_Integer", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4210225165625*^9, 3.42102252359375*^9}},
 CellLabel->"In[39]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "\<\"test\"\>", ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"1", "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.421022524171875*^9, 3.43344228928125*^9, 
  3.433446960078125*^9, 3.465684254679*^9, 3.467848128050922*^9, 
  3.468597397670216*^9},
 CellLabel->"Out[39]="]
}, Open  ]],

Cell[TextData[{
 "Note the use of colon syntax when capturing the value matched using ",
 StyleBox["Except", "Literal"],
 " ",
 "with a rule-based transformation. Here I use a rule that demonstrates that \
the type of object produced does not need to be the same as the type that \
matched (i.e., all results here are symbols)."
}], "Text",
 CellChangeTimes->{{3.470161303472159*^9, 3.470161304587407*^9}, {
  3.47039930275692*^9, 3.4703993029010553`*^9}, {3.470399340306816*^9, 
  3.470399340549426*^9}, {3.470399372713917*^9, 3.470399421416356*^9}, {
  3.470399454336274*^9, 3.470399456905046*^9}, {3.470399488718519*^9, 
  3.470399499087351*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", ":", 
     RowBox[{"Except", "[", "_Integer", "]"}]}], " ", "\[RuleDelayed]", "  ", 
    
    RowBox[{"Head", "[", "x", "]"}]}]}], " ", "]"}]], "Input",
 CellLabel->"In[40]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Real", ",", "String", ",", "List", ",", "Plus"}], "}"}]], "Output",\

 CellChangeTimes->{3.465684254725*^9, 3.467848128101322*^9, 
  3.468597397707052*^9},
 CellLabel->"Out[40]="]
}, Open  ]]
}, Open  ]],

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017036734375*^9, 3.421017051359375*^9}, 3.42101726153125*^9, 
   3.421017327375*^9}],

Cell[TextData[{
 StyleBox["Cases", "Literal"],
 " will work with any expression, not just lists. However, you need to keep \
in mind that Mathematica will rearrange the expression before the pattern is \
applied."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"x", "+", "y", "-", 
    RowBox[{"z", "^", "2"}], "+", 
    RowBox[{"z", "^", "3"}], "+", 
    RowBox[{"x", "^", "5"}]}], ",", 
   RowBox[{"_", "^", "_"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4218472065*^9, 3.421847217625*^9}, {
  3.421847336171875*^9, 3.421847381015625*^9}, {3.421847424609375*^9, 
  3.421847449640625*^9}, {3.421847497671875*^9, 3.42184749934375*^9}, {
  3.42184753246875*^9, 3.421847537421875*^9}, {3.421847766546875*^9, 
  3.421847768078125*^9}},
 CellLabel->"In[41]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "5"], ",", 
   SuperscriptBox["z", "3"]}], "}"}]], "Output",
 CellChangeTimes->{{3.421847371234375*^9, 3.42184738203125*^9}, {
   3.421847425953125*^9, 3.421847450125*^9}, 3.4218475000625*^9, 
   3.421847538125*^9, 3.421847768828125*^9, 3.433442289359375*^9, 
   3.433446960109375*^9, 3.4656842547790003`*^9, 3.467848128199635*^9, 
   3.468597397736566*^9},
 CellLabel->"Out[41]="]
}, Open  ]],

Cell[TextData[{
 "You may have expected ",
 StyleBox["z^2", "Literal"],
 " or ",
 StyleBox["-z^2 ", "Literal"],
 "to be selected; examining the ",
 StyleBox["FullForm", "Literal"],
 " of the expression will reveal why it was not. ",
 StyleBox["FullForm", "Literal"],
 " is your friend when it comes to debugging pattern matching because that is \
the form that Mathematica sees."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.470399521980238*^9, 3.470399539624771*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", "y", "-", 
   RowBox[{"z", "^", "2"}], "+", 
   RowBox[{"z", "^", "3"}], "+", 
   RowBox[{"x", "^", "5"}]}], "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.421847922328125*^9, 3.42184792678125*^9}},
 CellLabel->"In[42]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Plus", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Power", "[", 
      RowBox[{"x", ",", "5"}], "]"}], ",", "y", ",", 
     RowBox[{"Times", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"Power", "[", 
        RowBox[{"z", ",", "2"}], "]"}]}], "]"}], ",", 
     RowBox[{"Power", "[", 
      RowBox[{"z", ",", "3"}], "]"}]}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.421847927421875*^9, 3.433442289421875*^9, 
  3.433446960140625*^9, 3.465684254826*^9, 3.467848128302005*^9, 
  3.4685973977743893`*^9},
 CellLabel->"Out[42]//FullForm="]
}, Open  ]],

Cell[TextData[{
 "Providing a level specification will allow you to reach down deeper. Level \
specifications are discussed in ",
 ButtonBox["Recipe 3.9",
  BaseStyle->"Hyperlink",
  ButtonData->{
   "DataStructures.nb", 
    "Manipulating Deeply Nested Lists Using Functions with Level \
Specifications"}],
 "."
}], "Text",
 CellChangeTimes->{{3.4703996418292227`*^9, 3.4703996469762907`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"x", "+", "y", "-", 
    RowBox[{"z", "^", "2"}], "+", 
    RowBox[{"z", "^", "3"}], "+", 
    RowBox[{"x", "^", "5"}]}], ",", 
   RowBox[{"_", "^", "_"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.421848008140625*^9, 3.421848011453125*^9}},
 FontWeight->"Plain",
 CellLabel->"In[43]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["x", "5"], ",", 
   SuperscriptBox["z", "2"], ",", 
   SuperscriptBox["z", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.42184801359375*^9, 3.433442289453125*^9, 
  3.433446960171875*^9, 3.4656842548710003`*^9, 3.4678481284807*^9, 
  3.4685973978076487`*^9},
 CellLabel->"Out[43]="]
}, Open  ]],

Cell["\<\
You can also limit the number of matches using an optional fourth argument.\
\>", "Text",
 CellChangeTimes->{{3.42184837334375*^9, 3.42184846078125*^9}, 
   3.4334414033125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"x", "+", "y", "-", 
    RowBox[{"z", "^", "2"}], "+", 
    RowBox[{"z", "^", "3"}], "+", 
    RowBox[{"x", "^", "5"}]}], ",", 
   RowBox[{"_", "^", "_"}], ",", "2", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.421848413796875*^9, 3.42184841665625*^9}, {
  3.421848502703125*^9, 3.4218485145625*^9}},
 CellLabel->"In[44]:="],

Cell[BoxData[
 RowBox[{"{", 
  SuperscriptBox["x", "5"], "}"}]], "Output",
 CellChangeTimes->{
  3.421848417734375*^9, {3.42184850428125*^9, 3.421848515390625*^9}, 
   3.433442289484375*^9, 3.433446960265625*^9, 3.465684254915*^9, 
   3.4678481285128183`*^9, 3.468597397853128*^9},
 CellLabel->"Out[44]="]
}, Open  ]],

Cell[TextData[{
 "Take into account the attributes ",
 StyleBox["Flat", "Literal"],
 " and ",
 StyleBox["Orderless", "Literal"],
 " when pattern matching. ",
 StyleBox["Flat", "Literal"],
 " means nested expressions like ",
 StyleBox["Plus[a,Plus[b,c]]", "Literal"],
 " will be flattened; ",
 StyleBox["Orderless", "Literal"],
 " means the operation is communicative, and Mathematica will account for \
this when pattern matching."
}], "Text",
 CellChangeTimes->{{3.42102128984375*^9, 3.421021299484375*^9}, {
   3.421021751296875*^9, 3.421021791359375*^9}, {3.421022081546875*^9, 
   3.421022100234375*^9}, {3.421022148046875*^9, 3.421022242171875*^9}, {
   3.421022286140625*^9, 3.42102233728125*^9}, 3.4218463999375*^9, 
   3.4701613082632103`*^9, {3.470399727155628*^9, 3.470399743070767*^9}, {
   3.470399775079282*^9, 3.470399790247875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Attributes", "[", "Plus", "]"}]], "Input",
 CellChangeTimes->{{3.421018467671875*^9, 3.421018542171875*^9}, {
   3.421018755484375*^9, 3.4210187796875*^9}, {3.4210195978125*^9, 
   3.421019614296875*^9}, {3.421019959375*^9, 3.421020011734375*^9}, {
   3.421021256171875*^9, 3.421021276125*^9}, 3.421022396609375*^9, 
   3.4210225671875*^9},
 CellLabel->"In[45]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "Flat", ",", "Listable", ",", "NumericFunction", ",", "OneIdentity", ",", 
   "Orderless", ",", "Protected"}], "}"}]], "Output",
 CellChangeTimes->{3.421020012375*^9, 3.433442289515625*^9, 
  3.433446960515625*^9, 3.46568425496*^9, 3.467848128547258*^9, 
  3.468597397887113*^9},
 CellLabel->"Out[45]="]
}, Open  ]],

Cell[TextData[{
 "Here we select every expression that contains",
 StyleBox[" b +", "Literal"],
 ", no matter its level or order in the input expression."
}], "Text",
 CellChangeTimes->{{3.470399823648881*^9, 3.470399896366357*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "+", "b"}], ",", 
     RowBox[{"a", "+", "c"}], ",", 
     RowBox[{"b", "+", "a"}], ",", 
     RowBox[{
      RowBox[{"a", "^", "2"}], "+", "b"}], ",", 
     RowBox[{"Plus", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Plus", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"b", "+", "_"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.421018467671875*^9, 3.421018542171875*^9}, {
  3.421018755484375*^9, 3.4210187796875*^9}, {3.4210195978125*^9, 
  3.421019614296875*^9}, {3.421019959375*^9, 3.421020004796875*^9}, {
  3.4210204220625*^9, 3.42102042321875*^9}, {3.421021205203125*^9, 
  3.42102123296875*^9}},
 CellLabel->"In[46]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{"a", "+", "b"}], ",", 
   RowBox[{
    SuperscriptBox["a", "2"], "+", "b"}], ",", 
   RowBox[{"a", "+", "b", "+", "c"}]}], "}"}]], "Output",
 CellChangeTimes->{3.42102001671875*^9, 3.421020424453125*^9, 
  3.42102123659375*^9, 3.4334422895625*^9, 3.433446960546875*^9, 
  3.465684255005*^9, 3.467848128646515*^9, 3.468597397920327*^9},
 CellLabel->"Out[46]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Hold", "Literal"],
 " will suppress transformations due to ",
 StyleBox["Flat", "Literal"],
 " and ",
 StyleBox["Orderless", "Literal"],
 ", but the pattern itself is still reordered from ",
 StyleBox["b + a", "Literal"],
 " to ",
 StyleBox["a + b", "Literal"],
 ". In ",
 ButtonBox["Recipe 4.8",
  BaseStyle->"Hyperlink",
  ButtonData->"PreventingEvaluationUntilReplaceIsComplete"],
 " we show how to prevent this using ",
 StyleBox["HoldPattern", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{
  3.46568325109*^9, 3.470161309950395*^9, {3.470399932486722*^9, 
   3.47039997650664*^9}, {3.470400012928104*^9, 3.470400020075437*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
     RowBox[{"a", "+", "b"}], ",", 
     RowBox[{"a", "+", "c"}], ",", 
     RowBox[{"b", "+", "a"}], ",", 
     RowBox[{
      RowBox[{"a", "^", "2"}], "+", "b"}], ",", " ", 
     RowBox[{"Plus", "[", 
      RowBox[{"a", ",", 
       RowBox[{"Plus", "[", 
        RowBox[{"b", ",", "c"}], "]"}]}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"b", "+", "a"}]}], "]"}]], "Input",
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", "+", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.4656842550480003`*^9, 3.46784812880119*^9, 
  3.4685973979579563`*^9},
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[TextData[{
 "An alternative to ",
 StyleBox["Cases", "Literal"],
 " is the combination of ",
 StyleBox["Position", "Literal"],
 " and ",
 StyleBox["Extract", "Literal"],
 ". Here ",
 StyleBox["Position", "Literal"],
 " locates the items, and ",
 StyleBox["Extract", "Literal"],
 " returns them. This variation would be more helpful than ",
 StyleBox["Cases", "Literal"],
 ", for example, if you needed to know the positions as well as the items, \
since ",
 StyleBox["Cases", "Literal"],
 " does not provide positional information. By default, ",
 StyleBox["Position", "Literal"],
 " will search every level, but you can restrict it with a levelspec as I do \
here."
}], "Text",
 CellChangeTimes->{
  3.470400114288825*^9, {3.470400156597198*^9, 3.470400163744261*^9}, {
   3.470400223104257*^9, 3.4704003477657948`*^9}, 3.471267631048209*^9, 
   3.4765526474894876`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", " ", "=", " ", 
   RowBox[{"Position", "[", 
    RowBox[{"list", ",", "_Integer", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Extract", "[", 
  RowBox[{"list", ",", "positions"}], "]"}]}], "Input",
 CellChangeTimes->{{3.471267939671679*^9, 3.471267943681477*^9}},
 CellLabel->"In[48]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.465684255092*^9, 3.467848128852787*^9, 
  3.468597397987331*^9},
 CellLabel->"Out[50]="]
}, Open  ]],

Cell["\<\
One useful application of this idiom is matching on one list and extracting \
from a parallel list.\
\>", "Text",
 CellChangeTimes->{{3.470400363305541*^9, 3.470400422059314*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"names", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Jane\>\"", ",", " ", "\"\<Jim\>\"", ",", " ", "\"\<Jeff\>\"", ",", 
     " ", "\"\<Jessie\>\"", ",", " ", "\"\<Jezebel\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ages", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "30", ",", " ", "20", ",", " ", "42", ",", " ", "16", ",", " ", "69"}], 
    "}"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"Extract", "[", 
  RowBox[{"names", ",", 
   RowBox[{"Position", "[", 
    RowBox[{"ages", ",", 
     RowBox[{"x_", "/;", 
      RowBox[{"x", ">", "30"}]}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->"In[51]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Jeff\"\>", ",", "\<\"Jezebel\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.4656842551359997`*^9, 3.4678481288848886`*^9, 
  3.468597398020256*^9},
 CellLabel->"Out[53]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 ButtonBox["Recipe 3.9",
  BaseStyle->"Hyperlink",
  ButtonData->{
   "DataStructures.nb", 
    "Manipulating Deeply Nested Lists Using Functions with Level \
Specifications"}],
 " also discusses ",
 StyleBox["Position", "Literal"],
 " and ",
 StyleBox["Extract", "Literal"],
 " in greater detail."
}], "Text",
 CellChangeTimes->{{3.470400448230884*^9, 3.470400448386125*^9}, {
  3.470400484957165*^9, 3.470400486600871*^9}, {3.471267992634921*^9, 
  3.471267992854499*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Excluding Items That Match ",
 " ",
 "(or Don\[CloseCurlyQuote]t Match) a Pattern"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.470400516720099*^9, 3.4704005246044693`*^9}, 
   3.470482448459773*^9, 3.4755823902085733`*^9, 3.485522095802123*^9},
 CellTags->"RemovingItemsThatMatch"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, 3.421017209125*^9,
    3.42101726153125*^9, 3.421017327375*^9}],

Cell["\<\
You have a list or other expression and want to exclude elements that do not \
match a pattern.\
\>", "Text",
 CellChangeTimes->{{3.4704005381399384`*^9, 3.470400566908991*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017030109375*^9, 3.421017051359375*^9}, 3.42101726153125*^9, 
   3.421017327375*^9}],

Cell[TextData[{
 StyleBox["DeleteCases", "Literal"],
 " has features similar to ",
 StyleBox["Cases", "Literal"],
 " but excludes elements that match."
}], "Text",
 CellChangeTimes->{{3.470400580548864*^9, 3.470400581701949*^9}, {
  3.471268253964892*^9, 3.4712682695621853`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", "_Integer"}], "]"}]], "Input",
 CellChangeTimes->{{3.42184865684375*^9, 3.42184865790625*^9}},
 CellLabel->"In[54]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "\<\"test\"\>", ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"1", "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.421848659140625*^9, 3.433442289640625*^9, 
  3.43344696059375*^9, 3.465684255189*^9, 3.467848128935635*^9, 
  3.468597398053907*^9},
 CellLabel->"Out[54]="]
}, Open  ]],

Cell[TextData[{
 "Wrapping the pattern in ",
 StyleBox["Except", "Literal",
  FontTracking->"Extended"],
 StyleBox[" makes ",
  FontTracking->"Extended"],
 StyleBox["DeleteCases", "Literal",
  FontTracking->"Extended"],
 StyleBox[" work like ",
  FontTracking->"Extended"],
 StyleBox["Cases", "Literal",
  FontTracking->"Extended"],
 StyleBox[" for the non-inverted pattern.",
  FontTracking->"Extended"]
}], "Text",
 CellChangeTimes->{{3.421848736234375*^9, 3.421848785546875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}], ",", 
   RowBox[{"Except", "[", "_Integer", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.421848799296875*^9, 3.421848805890625*^9}},
 CellLabel->"In[55]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.4218488064375*^9, 3.433442289671875*^9, 
  3.433446960625*^9, 3.465684255233*^9, 3.467848128970174*^9, 
  3.468597398103648*^9},
 CellLabel->"Out[55]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Cases", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" and ",
  FontTracking->"SemiCondensed"],
 StyleBox["DeleteCases", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" can be made to return the same result by using ",
  FontTracking->"SemiCondensed"],
 StyleBox["Except", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", but ",
  FontTracking->"SemiCondensed"],
 StyleBox["Cases", "Literal",
  FontTracking->"Plain"],
 StyleBox[" should be used when you want to transform the items that remain \
(see ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["Recipe 4.1",
  BaseStyle->"Hyperlink",
  ButtonData->"FindingItemsThatMatchAPattern"],
  FontTracking->"Plain"],
 StyleBox[").",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.4704006443861923`*^9, 3.470400683665243*^9}, {
  3.470400718243243*^9, 3.4704007241757717`*^9}, {3.4704820666892843`*^9, 
  3.470482066900242*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"x", "+", "1"}]}], "}"}], ",", 
    RowBox[{"Except", "[", "_Integer", "]"}]}], "]"}], " ", "\[Equal]", 
  "\[IndentingNewLine]", " ", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"x", "+", "1"}]}], "}"}], ",", "_Integer"}], "]"}]}]], "Input",
 CellLabel->"In[56]:="],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.42184884415625*^9, 3.433442289703125*^9, 
  3.43344696065625*^9, 3.465684255277*^9, 3.467848129018607*^9, 
  3.4685973981556587`*^9},
 CellLabel->"Out[56]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "TopOfPage",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017036734375*^9, 3.421017051359375*^9}, 3.42101726153125*^9, 
   3.421017327375*^9}],

Cell[TextData[{
 "Most of the variations supported by ",
 StyleBox["Cases", "Literal"],
 " discussed in ",
 ButtonBox["Recipe 4.1",
  BaseStyle->"Hyperlink",
  ButtonData->"FindingItemsThatMatchAPattern"],
 " apply to ",
 StyleBox["DeleteCases", "Literal"],
 " as well. In fact, given the existence of ",
 StyleBox["Except", "Literal"],
 ", one could argue that ",
 StyleBox["DeleteCases", "Literal"],
 " is redundant. However, given the context of the problem, usually either ",
 StyleBox["Cases", "Literal"],
 " or ",
 StyleBox["DeleteCases", "Literal"],
 " will be easier to understand compared to using pattern inversions. Also, \
",
 StyleBox["Except", "Literal"],
 " has some limitations since pattern variables like ",
 StyleBox["x_", "Literal"],
 " can\[CloseCurlyQuote]t appear inside of an ",
 StyleBox["Except", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.4701613117160597`*^9, 3.470161312867428*^9}, {
  3.470401170057735*^9, 3.4704011767548723`*^9}, {3.470401497278788*^9, 
  3.4704015260662127`*^9}, {3.470401556942128*^9, 3.470401560105104*^9}, {
  3.470482070913657*^9, 3.470482071745637*^9}}],

Cell["\<\
Use levelspecs to constrain deletions to particular portions of an expression \
tree. Here is an expression that is nine levels deep.\
\>", "Text",
 CellChangeTimes->{{3.470401582622171*^9, 3.470401584439445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", " ", "=", " ", 
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{"x", "+", 
      RowBox[{"Sqrt", "[", "x", "]"}]}], "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Input",
 CellChangeTimes->{{3.4323284741875*^9, 3.432328551765625*^9}, {
  3.4323290075*^9, 3.4323291001875*^9}, {3.43233232815625*^9, 
  3.43233233625*^9}},
 CellLabel->"In[57]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   SqrtBox[
    RowBox[{
     SqrtBox["x"], "+", "x"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", 
     RowBox[{"2", " ", 
      SqrtBox["x"]}], "+", 
     RowBox[{"8", " ", "x"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      SqrtBox["x"]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        SqrtBox["x"], "+", "x"}]]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.432328511125*^9, 3.432328552296875*^9}, {
   3.432329009296875*^9, 3.432329100671875*^9}, 3.43233233940625*^9, 
   3.43344229121875*^9, 3.43344696075*^9, 3.465684255546*^9, 
   3.4678481293047543`*^9, 3.468597398269939*^9},
 CellLabel->"Out[57]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Depth", "[", "expr", "]"}]], "Input",
 CellChangeTimes->{{3.43232904509375*^9, 3.432329080453125*^9}},
 CellLabel->"In[58]:="],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{{3.432329080875*^9, 3.432329108234375*^9}, 
   3.4323323485625*^9, 3.433442291796875*^9, 3.433446960796875*^9, 
   3.465684255594*^9, 3.467848129352808*^9, 3.468597398303877*^9},
 CellLabel->"Out[58]="]
}, Open  ]],

Cell["You can delete roots at level four.", "Text",
 CellChangeTimes->{{3.43233257021875*^9, 3.43233262065625*^9}, {
  3.470401597558105*^9, 3.4704015985351477`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"Sqrt", "[", "_", "]"}], ",", 
   RowBox[{"{", "4", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.43232856528125*^9, 3.43232862475*^9}, 
   3.432329119546875*^9, {3.432329374953125*^9, 3.432329422359375*^9}, {
   3.43233236125*^9, 3.432332393375*^9}},
 CellLabel->"In[59]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   SqrtBox["x"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"8", " ", "x"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      SqrtBox["x"]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        SqrtBox["x"], "+", "x"}]]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.432328577125*^9, 3.432328626140625*^9, {3.4323291104375*^9, 
   3.43232912*^9}, {3.4323293759375*^9, 3.432329423015625*^9}, {
   3.43233238365625*^9, 3.432332395015625*^9}, 3.433442291859375*^9, 
   3.433446960828125*^9, 3.465684255638*^9, 3.467848129482561*^9, 
   3.4685973983378477`*^9},
 CellLabel->"Out[59]="]
}, Open  ]],

Cell["You can also delete roots at levels up to four.", "Text",
 CellChangeTimes->{{3.4323326246875*^9, 3.432332662375*^9}, {
  3.470401607867853*^9, 3.470401608639503*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"Sqrt", "[", "_", "]"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.432329451015625*^9, 3.43232945103125*^9}, {
  3.432332415046875*^9, 3.43233242325*^9}},
 CellLabel->"In[60]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"8", " ", "x"}]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", 
     RowBox[{"2", " ", 
      SqrtBox["x"]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        SqrtBox["x"], "+", "x"}]]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.4323324249375*^9, 3.43344229190625*^9, 3.433446960875*^9,
   3.465684255683*^9, 3.4678481295371723`*^9, 3.4685973983762083`*^9},
 CellLabel->"Out[60]="]
}, Open  ]],

Cell["Or, you delete roots at every level.", "Text",
 CellChangeTimes->{{3.43233267078125*^9, 3.432332700921875*^9}, {
  3.47040163644291*^9, 3.4704016549696417`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteCases", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"Sqrt", "[", "_", "]"}], ",", "Infinity"}], "]"}]], "Input",
 CellChangeTimes->{{3.432332443984375*^9, 3.43233244678125*^9}},
 CellLabel->"In[61]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "12"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"8", " ", "x"}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"Log", "[", "5", "]"}], "8"]}]], "Output",
 CellChangeTimes->{3.432332448078125*^9, 3.43344229196875*^9, 
  3.433446960921875*^9, 3.465684256527*^9, 3.467848129586735*^9, 
  3.468597398471169*^9},
 CellLabel->"Out[61]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Just as ",
  FontTracking->"Plain"],
 StyleBox["Extract", "Literal",
  FontTracking->"Plain"],
 StyleBox[" plus ",
  FontTracking->"Plain"],
 StyleBox["Position", "Literal",
  FontTracking->"Plain"],
 StyleBox[" is the equivalent of ",
  FontTracking->"Plain"],
 StyleBox["Cases", "Literal",
  FontTracking->"Plain"],
 StyleBox[" (discussed in ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["Recipe 4.1",
  BaseStyle->"Hyperlink",
  ButtonData->"FindingItemsThatMatchAPattern"],
  FontTracking->"Plain"],
 StyleBox["), ",
  FontTracking->"Plain"],
 StyleBox["Delete", "Literal",
  FontTracking->"Plain"],
 StyleBox[" plus ",
  FontTracking->"Plain"],
 StyleBox["Position", "Literal",
  FontTracking->"Plain"],
 StyleBox[" is the equivalent ",
  FontTracking->"Plain"],
 StyleBox["for ",
  FontTracking->"SemiCondensed"],
 StyleBox["DeleteCases", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". Again, remember that ",
  FontTracking->"SemiCondensed"],
 StyleBox["Position", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" looks at all levels unless you restrict it.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.470161314362233*^9, {3.470401668355686*^9, 3.470401677519308*^9}, {
   3.470401727791778*^9, 3.470401733619244*^9}, {3.470401798083375*^9, 
   3.470401887085441*^9}, {3.4704820968903217`*^9, 3.4704820970803957`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", " ", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"{", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Delete", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Position", "[", 
       RowBox[{"list", ",", "_Integer"}], "]"}]}], "]"}], ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Delete", "[", 
     RowBox[{"list", ",", 
      RowBox[{"Position", "[", 
       RowBox[{"list", ",", "_Integer", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]}], "Input",
 CellLabel->"In[62]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1.2`", ",", "\<\"test\"\>", ",", 
       RowBox[{"{", "}"}], ",", "x"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1.2`", ",", "\<\"test\"\>", ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"1", "+", "x"}]}], "}"}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.465684256591*^9, 3.467848129640225*^9, 
  3.4685973985044117`*^9},
 CellLabel->"Out[63]="]
}, Open  ]],

Cell[TextData[{
 "This leads to a way to get the results of ",
 StyleBox["Cases", "Literal"],
 " and ",
 StyleBox["DeleteCases", "Literal"],
 " without executing the pattern match twice."
}], "Text",
 CellChangeTimes->{{3.470401915906233*^9, 3.47040191945975*^9}, {
  3.470401954377801*^9, 3.470401954762189*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", " ", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.2", ",", "\"\<test\>\"", ",", "3", ",", 
     RowBox[{"{", "2", "}"}], ",", 
     RowBox[{"x", "+", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"positions", " ", "=", 
   RowBox[{"Position", "[", 
    RowBox[{"list", ",", "_Integer", ",", 
     RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"{", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Extract", "[", 
     RowBox[{"list", ",", "positions"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Delete", "[", 
     RowBox[{"list", ",", "positions"}], "]"}]}], "\[IndentingNewLine]", 
   "}"}], "]"}]}], "Input",
 CellLabel->"In[64]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{"1.2`", ",", "\<\"test\"\>", ",", 
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"1", "+", "x"}]}], "}"}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.465684256656*^9, 3.467848129683704*^9, 
  3.46859739853827*^9},
 CellLabel->"Out[66]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Counting Items That Match a Pattern"
}], "Heading1",
 CellChangeTimes->{{3.42030071015625*^9, 3.420300768640625*^9}, {
   3.42100702465625*^9, 3.4210070425625*^9}, 3.4755825344334583`*^9},
 CellTags->"CountingItemsThatMatchAPattern"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, 3.421017209125*^9,
    3.42101726153125*^9}],

Cell["\<\
You need to know the number of expressions that match a pattern by matching \
the expressions themselves or their position.\
\>", "Text",
 CellChangeTimes->{
  3.465683258336*^9, {3.470401996486924*^9, 3.47040201536771*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017030109375*^9, 3.421017051359375*^9}, 3.42101726153125*^9}],

Cell[TextData[{
 "Use ",
 StyleBox["Count", "Literal"],
 " to count matching elements in an expres",
 StyleBox["sion or at particular",
  FontTracking->"Plain"],
 StyleBox[" levels in an ex",
  FontTracking->"Extended"],
 "pression. Counting literal matches is perhaps the simplest application of \
",
 StyleBox["Count", "Literal"],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1", ",", "a", ",", "2", ",", "a", ",", "3"}], "}"}], 
   ",", "a"}], "]"}]], "Input",
 CellChangeTimes->{{3.43272218740625*^9, 3.43272223653125*^9}},
 CellLabel->"In[67]:="],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.4327222378125*^9, 3.433442292015625*^9, 
  3.43344696096875*^9, 3.46568425671*^9, 3.467848129789145*^9, 
  3.4685973985757236`*^9},
 CellLabel->"Out[67]="]
}, Open  ]],

Cell[TextData[{
 "By default, ",
 StyleBox["Count", "Literal"],
 " works only on level one (levelspec ",
 StyleBox["{1}", "Literal"],
 "), but you can provide alternate levelspecs as a third argument."
}], "Text",
 CellChangeTimes->{{3.4327222491875*^9, 3.432722396453125*^9}, 
   3.47040204450769*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"expr", " ", "=", 
   RowBox[{"1", "+", 
    RowBox[{"3", "I"}], "+", "4", "+", 
    RowBox[{"I", " ", "x"}], "+", 
    RowBox[{"x", "^", "2"}], "+", 
    SuperscriptBox["y", 
     SuperscriptBox["x", "x"]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", " ", 
  RowBox[{
   RowBox[{"Count", "[", 
    RowBox[{"expr", ",", "x"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Count", "[", 
    RowBox[{"expr", ",", "x", ",", "Infinity"}], "]"}]}], "}"}]}], "Input",
 CellLabel->"In[68]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.465684256759*^9, 3.467848129886939*^9, 
  3.468597398604603*^9},
 CellLabel->"Out[69]="],

Cell[TextData[{
 StyleBox["Count", "Literal"],
 " can be derived from ",
 StyleBox["Position", "Literal"],
 " or ",
 StyleBox["Cases", "Literal"],
 ", so these are handy if you need the matching items (or positions) in \
addition to the count."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.470402067995693*^9, 3.470402076053893*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "a", ",", "2", ",", "a", ",", "3"}], "}"}], 
    ",", "a"}], "]"}], "]"}]], "Input",
 CellLabel->"In[70]:="],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.465684256804*^9, 3.467848129937243*^9, 
  3.468597398638755*^9},
 CellLabel->"Out[70]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "1", ",", "a", ",", "2", ",", "a", ",", "3"}], "}"}], 
    ",", "a", ",", 
    RowBox[{"{", "1", "}"}]}], "]"}], "]"}]], "Input",
 CellLabel->"In[71]:="],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.46568425684*^9, 3.467848129983714*^9, 
  3.468597398671523*^9},
 CellLabel->"Out[71]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017036734375*^9, 3.421017051359375*^9}, 3.42101726153125*^9}],

Cell[TextData[{
 "Other counting functions include ",
 StyleBox["LeafCount", "Literal"],
 " and ",
 StyleBox["Tally", "Literal"],
 ". It is difficult to emulate ",
 StyleBox["LeafCount", "Literal"],
 " using ",
 StyleBox["Count", "Literal"],
 " because ",
 StyleBox["LeafCount", "Literal"],
 " treats complex numbers in their ",
 StyleBox["FullForm", "Literal"],
 " (e.g., ",
 StyleBox["Complex[1,1]", "Literal"],
 " has ",
 StyleBox["LeafCount", "Literal"],
 " == 3) but using ",
 StyleBox["FullForm", "Literal"],
 " on an expression does not provide the right answer."
}], "Text",
 CellChangeTimes->{{3.43223601590625*^9, 3.4322360175625*^9}, {
   3.432721004046875*^9, 3.4327210261875*^9}, {3.432721077796875*^9, 
   3.432721086078125*^9}, {3.43272256790625*^9, 3.432722571921875*^9}, {
   3.432724194265625*^9, 3.43272422803125*^9}, {3.43272436940625*^9, 
   3.432724457953125*^9}, {3.43272452015625*^9, 3.43272458709375*^9}, {
   3.432724815890625*^9, 3.432724829046875*^9}, {3.43272492525*^9, 
   3.4327249413125*^9}, {3.43272506984375*^9, 3.43272507534375*^9}, {
   3.432725113203125*^9, 3.432725141640625*^9}, 3.433441431984375*^9, {
   3.47040210383142*^9, 3.470402120907872*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LeafCount", "[", "expr", "]"}], ",", 
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{"FullForm", "[", "expr", "]"}], ",", 
     RowBox[{"_", "?", "AtomQ"}], ",", "Infinity", ",", 
     RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.43272261453125*^9, 3.432722696734375*^9}, {
   3.432722758546875*^9, 3.432722797015625*^9}, {3.432722977609375*^9, 
   3.43272305121875*^9}, {3.432723214703125*^9, 3.43272323678125*^9}, {
   3.43272329553125*^9, 3.432723351734375*^9}, {3.432723873203125*^9, 
   3.43272387815625*^9}, {3.432724058578125*^9, 3.43272416409375*^9}, {
   3.43272468546875*^9, 3.43272474021875*^9}, {3.4327248395625*^9, 
   3.432724857234375*^9}, 3.432724901015625*^9, {3.432725248625*^9, 
   3.43272525121875*^9}},
 CellLabel->"In[72]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", ",", "14"}], "}"}]], "Output",
 CellChangeTimes->{3.465684256894*^9, 3.467848130037801*^9, 
  3.468597398708658*^9},
 CellLabel->"Out[72]="]
}, Open  ]],

Cell[TextData[{
 "You need to eliminate the complex numbers using ",
 StyleBox["ReplaceAll", "Literal"],
 " before performing the count, so ",
 StyleBox["LeafCount", "Literal"],
 " is rather unique. "
}], "Text",
 CellChangeTimes->{{3.432725146453125*^9, 3.432725210421875*^9}, {
  3.470402147234599*^9, 3.470402157320087*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"LeafCount", "[", "expr", "]"}], ",", 
   RowBox[{"Count", "[", 
    RowBox[{
     RowBox[{"expr", " ", "/.", " ", 
      RowBox[{
       RowBox[{"Complex", "[", 
        RowBox[{"r_", ",", "i_"}], "]"}], "\[RuleDelayed]", " ", 
       RowBox[{"complex", "[", 
        RowBox[{"r", ",", "i"}], "]"}]}]}], ",", 
     RowBox[{"_", "?", "AtomQ"}], ",", "Infinity", ",", 
     RowBox[{"Heads", "\[Rule]", "True"}]}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.432723429109375*^9, 3.432723483640625*^9}, {
   3.432723614734375*^9, 3.432723628828125*^9}, 3.4327238595*^9, {
   3.432724958359375*^9, 3.432725028875*^9}},
 CellLabel->"In[73]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"17", ",", "17"}], "}"}]], "Output",
 CellChangeTimes->{3.465684256939*^9, 3.46784813008785*^9, 
  3.468597398738783*^9},
 CellLabel->"Out[73]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Tally", "Literal"],
 " counts equivalent elements in a list using ",
 StyleBox["SameQ", "Literal"],
 " or a user-supplied equality test. It works only on lists, so you",
 "\[CloseCurlyQuote]",
 "ll need to convert expressions with other heads to ",
 StyleBox["List", "Literal"],
 " before using ",
 StyleBox["Tally", "Literal"],
 ". The output is a list of pairs showing the element and its count."
}], "Text",
 CellChangeTimes->{{3.432725284703125*^9, 3.432725295953125*^9}, {
   3.4327253334375*^9, 3.432725456828125*^9}, {3.4327270516875*^9, 
   3.4327270695*^9}, {3.432727149078125*^9, 3.432727206265625*^9}, {
   3.432727250890625*^9, 3.4327272699375*^9}, 3.433441433734375*^9, {
   3.470402185560224*^9, 3.4704021988989973`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"{", 
   RowBox[{
   "a", ",", "x", ",", "a", ",", "x", ",", "a", ",", "a", ",", "b", ",", 
    "y"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.432727214140625*^9, 3.43272722775*^9}, {
  3.432727274015625*^9, 3.432727324921875*^9}},
 CellLabel->"In[74]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.465684257031*^9, 3.467848130138926*^9, 
  3.4685973987767057`*^9},
 CellLabel->"Out[74]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{"Flatten", "@", 
   RowBox[{"Apply", "[", 
    RowBox[{"List", ",", "expr", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[75]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"5", "+", 
      RowBox[{"3", " ", "\[ImaginaryI]"}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.465684257067*^9, 3.467848130187944*^9, 
  3.468597398805607*^9},
 CellLabel->"Out[75]="]
}, Open  ]],

Cell["\<\
Here is an example using a different equivalence relation (congruence module \
7).\
\>", "Text",
 CellChangeTimes->{3.470402212562512*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tally", "[", 
  RowBox[{
   RowBox[{"Prime", "[", 
    RowBox[{"Range", "[", "100", "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#1", ",", "7"}], "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Mod", "[", 
      RowBox[{"#2", ",", "7"}], "]"}]}], "&"}]}], "]"}]], "Input",
 CellLabel->"In[76]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "18"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29", ",", "15"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4656842571140003`*^9, 3.467848130238942*^9, 
  3.468597398855075*^9},
 CellLabel->"Out[76]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.43272749853125*^9, 3.432727500359375*^9}}],

Cell[TextData[{
 "Level specifications are covered in detail in ",
 ButtonBox["Recipe 3.9",
  BaseStyle->"Hyperlink",
  ButtonData->{
   "DataStructures.nb", 
    "Manipulating Deeply Nested Lists Using Functions with Level \
Specifications"}],
 "."
}], "Text",
 CellChangeTimes->{
  3.47016131579217*^9, {3.47040224993258*^9, 3.4704022574479427`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Replacing Parts of an Expression"
}], "Heading1", "TopOfPage",
 CellChangeTimes->{{3.432459476734375*^9, 3.432459492796875*^9}},
 CellTags->"ReplacingPartsOfAnExpression"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.432459499671875*^9, 3.4324595029375*^9}}],

Cell["\<\
You want to transform the parts of an expression designated by an index.\
\>", "Text",
 CellChangeTimes->{3.471703447984623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.43245965396875*^9, 3.432459657171875*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["ReplacePart", "Literal"],
 ", which can use indices or index patterns to limit the scope of a \
replacement."
}], "Text",
 CellChangeTimes->{{3.4324596778125*^9, 3.4324597378125*^9}, {
   3.43245981865625*^9, 3.432459820078125*^9}, 3.433441442125*^9, {
   3.4704025636513577`*^9, 3.4704025638356237`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Replace", " ", "elements", " ", "at", " ", "position", " ", "three", " ", 
    "and", " ", "position", " ", 
    RowBox[{"seven", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
      "h", ",", "i"}], "}"}], " ", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", " ", "\[Rule]", " ", "3"}], ",", " ", 
      RowBox[{"7", " ", "\[Rule]", " ", "11"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.432459875796875*^9, 3.43246000975*^9}, {
  3.432460047609375*^9, 3.43246005584375*^9}, {3.43246030615625*^9, 
  3.43246034446875*^9}, {3.470402578521729*^9, 3.4704025890121393`*^9}},
 CellLabel->"In[77]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "b", ",", "3", ",", "d", ",", "e", ",", "f", ",", "11", ",", "h", 
   ",", "i"}], "}"}]], "Output",
 CellChangeTimes->{3.432460014234375*^9, 3.43246005709375*^9, 
  3.433442292390625*^9, 3.433446961390625*^9, 3.465684257171*^9, 
  3.467848130288993*^9, 3.4685973988888474`*^9},
 CellLabel->"Out[77]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0", ",", "20", ",", "2"}], "]"}]], "Input",
 CellLabel->"In[78]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", 
   "14", ",", "16", ",", "18", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.46568425721*^9, 3.467848130387989*^9, 
  3.468597398926326*^9},
 CellLabel->"Out[78]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Place an ",
  FontTracking->"Plain"],
 StyleBox["x", "Emphasis",
  FontTracking->"Plain"],
 StyleBox[" at prime-numbered positions. Note that the pos",
  FontTracking->"Plain"],
 StyleBox["ition is being tested for pri",
  FontTracking->"Extended"],
 StyleBox["mality,",
  FontTracking->"Plain"],
 " not for value."
}], "Text",
 CellChangeTimes->{{3.470402608561351*^9, 3.470402682543633*^9}}],

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h",
      ",", "i"}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i_", "?", "PrimeQ"}], " ", ":>", " ", "x"}], "}"}]}], 
  "]"}]], "Input",
 CellLabel->"In[79]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "x", ",", "x", ",", "d", ",", "x", ",", "f", ",", "x", ",", "h", 
   ",", "i"}], "}"}]], "Output",
 CellChangeTimes->{3.4656842572539997`*^9, 3.46784813056784*^9, 
  3.4685973989550667`*^9},
 CellLabel->"Out[79]="]
}, Open  ]],

Cell["\<\
If you want access to the value as well, you can use the position to index \
into the list.\
\>", "Text",
 CellChangeTimes->{3.470402695973605*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"list", "=", 
     RowBox[{"{", 
      RowBox[{
      "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", 
       "h", ",", "i"}], "}"}]}], "}"}], ",", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{"list", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i_", "?", "PrimeQ"}], " ", ":>", " ", 
       RowBox[{"Framed", "[", 
        RowBox[{"list", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[80]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", 
   FrameBox["b",
    StripOnInput->False], ",", 
   FrameBox["c",
    StripOnInput->False], ",", "d", ",", 
   FrameBox["e",
    StripOnInput->False], ",", "f", ",", 
   FrameBox["g",
    StripOnInput->False], ",", "h", ",", "i"}], "}"}]], "Output",
 CellChangeTimes->{3.465684257303*^9, 3.467848130622098*^9, 
  3.4685973989895372`*^9},
 CellLabel->"Out[80]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.432473511234375*^9, 3.43247351421875*^9}}],

Cell[TextData[{
 "On first encounter, you might think ",
 StyleBox["ReplacePart", "Literal"],
 " and ",
 "part",
 " assignment are redundant."
}], "Text",
 CellChangeTimes->{{3.432473524328125*^9, 3.43247357640625*^9}, 
   3.4334414446875*^9, 3.43344156659375*^9, 3.470402719523587*^9, 
   3.470402751825495*^9, {3.470402807639165*^9, 3.470402827297632*^9}, {
   3.470402859093534*^9, 3.470402859424436*^9}, 3.4755826996234903`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", " ", "5", ",", " ", "6"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"list1", "[", 
    RowBox[{"[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], "]"}], "]"}], " ", "=", " ", "99"}], 
  ";"}], "\[IndentingNewLine]", "list1"}], "Input",
 CellChangeTimes->{{3.43247358190625*^9, 3.432473802984375*^9}, {
  3.43247383359375*^9, 3.432473849875*^9}},
 CellLabel->"In[81]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"99", ",", "2", ",", "99", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.432473691921875*^9, 3.43247370075*^9}, {3.432473735*^9, 
   3.432473803625*^9}, 3.432473851265625*^9, 3.433442292484375*^9, 
   3.433446961453125*^9, 3.4656842573599997`*^9, 3.467848130669304*^9, 
   3.468597399022711*^9},
 CellLabel->"Out[83]="]
}, Open  ]],

Cell[TextData[{
 "This seems similar to what is achieved using ",
 StyleBox["ReplacePart", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.470402906083468*^9, 3.470402906238866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", " ", "5", ",", " ", "6"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"list2", " ", "=", 
  RowBox[{"ReplacePart", "[", 
   RowBox[{"list1", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "99"}], ",", 
      RowBox[{"3", "\[Rule]", "99"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.432473883234375*^9, 3.432473930859375*^9}, {
  3.43247396840625*^9, 3.432473970921875*^9}, {3.432480686078125*^9, 
  3.432480693359375*^9}},
 CellLabel->"In[84]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"99", ",", "2", ",", "99", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.432473908703125*^9, 3.432473931984375*^9}, 
   3.432473973296875*^9, 3.432480694890625*^9, 3.433442292546875*^9, 
   3.43344696146875*^9, 3.465684257409*^9, 3.46784813072307*^9, 
   3.4685973990545883`*^9},
 CellLabel->"Out[85]="]
}, Open  ]],

Cell[TextData[{
 "However, there are a multitude of differences. First, ",
 StyleBox["ReplacePart", "Literal"],
 " does not modify the list but creates a new list with modified values. "
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.432473986875*^9, 3.43247400375*^9}, {
   3.432479623953125*^9, 3.43247965309375*^9}, {3.43248065971875*^9, 
   3.432480676265625*^9}, 3.4334415688125*^9, 3.470161317896327*^9, {
   3.4704029340060587`*^9, 3.470402950218656*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"list1", ",", " ", "list2"}], "}"}]], "Input",
 CellChangeTimes->{{3.432473975796875*^9, 3.4324739796875*^9}, {
  3.432480703796875*^9, 3.432480709578125*^9}},
 CellLabel->"In[86]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"99", ",", "2", ",", "99", ",", "4", ",", "5", ",", "6"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.43247398015625*^9, 3.43248071021875*^9, 
  3.433442292578125*^9, 3.43344696153125*^9, 3.465684257457*^9, 
  3.46784813082128*^9, 3.468597399093253*^9},
 CellLabel->"Out[86]="]
}, Open  ]],

Cell[TextData[{
 "A related difference is that assignment is meaningful only to symbols, not \
expressions. In contrast, ",
 StyleBox["ReplacePart", "Literal"],
 " can use either as input. "
}], "Text",
 CellChangeTimes->{{3.4704029838249598`*^9, 3.4704030172979937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], " ", "=", " ", "99"}]], "Input",
 CellChangeTimes->{{3.432480793171875*^9, 3.43248081240625*^9}},
 CellLabel->"In[87]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"setps\"\>"}], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\({1, 2, 3}\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" in the part assignment is not a \
symbol.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/setps\\\", ButtonNote -> \
\\\"Set::setps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.432480816734375*^9, 3.433442293328125*^9, 
  3.4334469615625*^9, 3.4656842575290003`*^9, 3.467848131114717*^9, 
  3.468597399123774*^9},
 CellLabel->"During evaluation of In[87]:="],

Cell[BoxData["99"], "Output",
 CellChangeTimes->{3.432480816796875*^9, 3.433442293328125*^9, 
  3.4334469615625*^9, 3.465684257532*^9, 3.467848131118408*^9, 
  3.4685973991291637`*^9},
 CellLabel->"Out[87]="]
}, Open  ]],

Cell[TextData[{
 "Another important difference is that it is harmless to specify an index \
that does not match. ",
 StyleBox["ReplacePart", "Literal"],
 " simply returns a new list with the same content. Contrast this to part \
assignment, where you get an error."
}], "Text",
 CellChangeTimes->{{3.4324808330625*^9, 3.432480840734375*^9}, {
   3.432480926125*^9, 3.432480949796875*^9}, {3.432480988375*^9, 
   3.43248109296875*^9}, {3.433441581375*^9, 3.433441586859375*^9}, 
   3.470403057286269*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"10", "\[Rule]", " ", "99"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432480954171875*^9, 3.432480984*^9}},
 CellLabel->"In[88]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.432480985125*^9, 3.43344229346875*^9, 
  3.43344696159375*^9, 3.4656842575810003`*^9, 3.467848131152513*^9, 
  3.468597399158021*^9},
 CellLabel->"Out[88]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"list1", "[", 
   RowBox[{"[", "10", "]"}], "]"}], " ", "=", " ", "99"}]], "Input",
 CellChangeTimes->{{3.43248109740625*^9, 3.43248110646875*^9}},
 CellLabel->"In[89]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Set", "::", "\<\"partw\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Part \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(10\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" of \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({1, 2, 3, 4, 5, 6}\\), \\\"MT\
\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" does not exist.\\\\\\\"\\\", \
\\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Set::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.43248110834375*^9, 3.433442293640625*^9, 
  3.433446961625*^9, 3.4656842576359997`*^9, 3.467848132474337*^9, 
  3.468597399194078*^9},
 CellLabel->"During evaluation of In[89]:="],

Cell[BoxData["99"], "Output",
 CellChangeTimes->{3.432481108375*^9, 3.43344229365625*^9, 
  3.433446961640625*^9, 3.465684257639*^9, 3.467848132477949*^9, 
  3.468597399199513*^9},
 CellLabel->"Out[89]="]
}, Open  ]],

Cell[TextData[{
 "Part assignment gains flexibility by supporting ranges and lists of \
position, whereas ",
 StyleBox["ReplacePart", "Literal"],
 " uses index patterns."
}], "Text",
 CellChangeTimes->{{3.432492919328125*^9, 3.43249299121875*^9}, {
   3.432493343359375*^9, 3.4324933476875*^9}, 3.43344159015625*^9, {
   3.4704030878297853`*^9, 3.470403104477577*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list1", " ", "=", " ", 
   RowBox[{"Range", "[", "10", "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.432493215484375*^9, 3.432493261390625*^9}},
 CellLabel->"In[90]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"Range", "[", "10", "]"}], ",", " ", 
   RowBox[{
    RowBox[{"i_", "?", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", " ", ">", " ", "3"}], " ", "&&", " ", 
        RowBox[{"#", " ", "<", " ", "7"}]}], " ", "&"}], ")"}]}], "\[Rule]", 
    "99"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432492999296875*^9, 3.43249309928125*^9}, {
  3.432493167046875*^9, 3.432493190859375*^9}},
 CellLabel->"In[91]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "99", ",", "99", ",", "99", ",", "7", ",", 
   "8", ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{
  3.432493106671875*^9, {3.432493176984375*^9, 3.43249319253125*^9}, 
   3.43344229371875*^9, 3.433446961671875*^9, 3.465684257729*^9, 
   3.4678481326717997`*^9, 3.468597399290061*^9},
 CellLabel->"Out[91]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"list1", "[", 
    RowBox[{"[", 
     RowBox[{"4", ";;", "6"}], "]"}], "]"}], " ", "=", " ", "99"}], 
  ";"}], "\[IndentingNewLine]", "list1"}], "Input",
 CellChangeTimes->{{3.43249329725*^9, 3.4324933170625*^9}},
 CellLabel->"In[92]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "99", ",", "99", ",", "99", ",", "7", ",", 
   "8", ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{{3.4324933109375*^9, 3.4324933179375*^9}, 
   3.433442293765625*^9, 3.433446961703125*^9, 3.465684257766*^9, 
   3.467848132726729*^9, 3.468597399323208*^9},
 CellLabel->"Out[93]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["ReplacePart", "Literal"],
 " works on arbitrarily nested expressions, including matrices. Also note \
that the index patterns can be referenced on the right side of rules."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.432493838046875*^9, 3.432493899890625*^9}, {
  3.43249510184375*^9, 3.4324951100625*^9}, {3.432495144046875*^9, 
  3.432495201296875*^9}, {3.43344159246875*^9, 3.433441594390625*^9}, {
  3.470403124563442*^9, 3.470403152995694*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplacePart", "[", 
   RowBox[{
    RowBox[{"IdentityMatrix", "[", "5", "]"}], ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i_", ",", "i_"}], "}"}], "->", " ", "i"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.4324939075625*^9, 3.432494013296875*^9}, {
  3.432494064734375*^9, 3.43249408515625*^9}},
 CellLabel->"In[94]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0"},
     {"0", "2", "0", "0", "0"},
     {"0", "0", "3", "0", "0"},
     {"0", "0", "0", "4", "0"},
     {"0", "0", "0", "0", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.43249396278125*^9, 3.432494013734375*^9}, {
   3.43249406621875*^9, 3.432494085859375*^9}, 3.433442293953125*^9, 
   3.433446961734375*^9, 3.46568425781*^9, 3.467848132759357*^9, 
   3.468597399373582*^9},
 CellLabel->"Out[94]//MatrixForm="],

Cell["The following use case performs a transpose.", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matrix", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", "10", "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "1", ",", " ", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReplacePart", "[", 
   RowBox[{"matrix", ",", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i_", ",", "j_"}], "}"}], ":>", " ", 
     RowBox[{"matrix", "[", 
      RowBox[{"[", 
       RowBox[{"j", ",", "i"}], "]"}], "]"}]}]}], " ", "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.432494199640625*^9, 3.43249434553125*^9}, {
  3.43249440096875*^9, 3.432494462578125*^9}},
 CellLabel->"In[95]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1"},
     {"2", "2", "2", "2", "2", "2", "2", "2", "2", "2"},
     {"3", "3", "3", "3", "3", "3", "3", "3", "3", "3"},
     {"4", "4", "4", "4", "4", "4", "4", "4", "4", "4"},
     {"5", "5", "5", "5", "5", "5", "5", "5", "5", "5"},
     {"6", "6", "6", "6", "6", "6", "6", "6", "6", "6"},
     {"7", "7", "7", "7", "7", "7", "7", "7", "7", "7"},
     {"8", "8", "8", "8", "8", "8", "8", "8", "8", "8"},
     {"9", "9", "9", "9", "9", "9", "9", "9", "9", "9"},
     {"10", "10", "10", "10", "10", "10", "10", "10", "10", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.465684257856*^9, 3.4678481327928*^9, 3.46859739941136*^9},
 CellLabel->"Out[96]//MatrixForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplacePart", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", "3"}], ")"}], "^", "3"}], "]"}], ",", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "2"}], "}"}], " ", ":>", " ", "z"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.432494481125*^9, 3.432494544140625*^9}, {
   3.43249466375*^9, 3.432494682*^9}, {3.43249473703125*^9, 
   3.432494752703125*^9}, 3.432494796921875*^9, {3.432494851953125*^9, 
   3.4324948734375*^9}},
 CellLabel->"In[97]:="],

Cell[BoxData[
 RowBox[{"27", "+", 
  RowBox[{"27", " ", "x"}], "+", 
  SuperscriptBox["x", "3"], "+", 
  RowBox[{"9", " ", "z"}]}]], "Output",
 CellChangeTimes->{{3.432494665453125*^9, 3.432494683015625*^9}, {
   3.43249473796875*^9, 3.432494753203125*^9}, {3.432494798125*^9, 
   3.43249482365625*^9}, {3.432494853859375*^9, 3.43249487471875*^9}, 
   3.4334422940625*^9, 3.433446961796875*^9, 3.465684257891*^9, 
   3.4678481328257303`*^9, 3.468597399539529*^9},
 CellLabel->"Out[97]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.432493652875*^9, 3.432493655359375*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   ButtonBox[
    RowBox[{"Chapter", " ", "3"}],
    BaseStyle->"Hyperlink",
    ButtonData->{"DataStructures.nb", None}], TraditionalForm]]],
 " covers list manipulation in detail, including the use of ",
 StyleBox["Part", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.43249366771875*^9, 3.432493716046875*^9}, {
  3.4704032433805447`*^9, 3.470403266789608*^9}, {3.471268916456916*^9, 
  3.47126891656421*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Finding the Longest (or Shortest) ",
 " ",
 "Match for a Pattern"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.470403274899507*^9, 3.470482467481729*^9, 
  3.485522099890374*^9},
 CellTags->"UnderstandingWhenToUseLongestShortest"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{
  3.432395680546875*^9, {3.432395745171875*^9, 3.4323957501875*^9}}],

Cell[TextData[{
 "A replacement rule is not working the way you think it should. In \
particular, it seems to work on only part of the expression. Often this is an \
indication that you need greedy matching provided by ",
 StyleBox["Longest", "Literal"],
 "."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.470403285800021*^9, 3.470403322604665*^9}}]
}, Open  ]],

Cell["Solution", "Heading2", "TopOfPage",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.432395856328125*^9, 3.43239585890625*^9}}],

Cell[TextData[{
 StyleBox["By default, sequence patterns like ",
  FontTracking->"Extended"],
 StyleBox["a__", "Literal",
  FontTracking->"Extended"],
 StyleBox[" and ",
  FontTracking->"Extended"],
 StyleBox["a___", "Literal",
  FontTracking->"Extended"],
 StyleBox[" act as if they are surrounded by ",
  FontTracking->"Extended"],
 StyleBox["Shortest", "Literal",
  FontTracking->"Extended"],
 StyleBox[". ",
  FontTracking->"Extended"],
 "This means they match as little as possible to still be consistent with the \
entire pattern. The following repeated replacement seems like it should \
shuffle items in the list until all equal values are adjacent. It almost \
works, but a 3 and a 1 stub",
 StyleBox["bornly remain in place. This happen",
  FontTracking->"Extended"],
 StyleBox["s because on the final pass ",
  FontTracking->"Plain"],
 StyleBox["a___", "Literal",
  FontTracking->"Plain"],
 StyleBox[" matches noth",
  FontTracking->"Plain"],
 StyleBox["ing (which is shortest),",
  FontTracking->"Extended"],
 StyleBox[" ",
  FontTracking->"Plain"],
 StyleBox["b_", "Literal",
  FontTracking->"Plain"],
 StyleBox[" matches 1, ",
  FontTracking->"Plain"],
 StyleBox["c__", "Literal",
  FontTracking->"Plain"],
 StyleBox[" matches 1,",
  FontTracking->"Plain"],
 StyleBox[" b_", "Literal",
  FontTracking->"Plain"],
 StyleBox[" matches the third",
  FontTracking->"Plain"],
 StyleBox[" 1, and ",
  FontTracking->"Extended"],
 StyleBox["d___", "Literal",
  FontTracking->"Extended"],
 StyleBox[" matches the remainder. This results in a null transformation, so ",
  FontTracking->"Extended"],
 StyleBox["Replace\[DiscretionaryHyphen]Repeated", "Literal",
  FontTracking->"Extended"],
 StyleBox[" stops",
  FontTracking->"Extended"],
 "."
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{
  3.470161319450946*^9, {3.470403344332437*^9, 3.470403401228272*^9}, 
   3.471269000781002*^9, {3.471703570369602*^9, 3.471703573421523*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "1", ",", " ", "3", ",", " ", "1", ",", " ", "4", ",", " ", "1", ",", " ", 
    "3", ",", " ", "4", ",", " ", "2", ",", " ", "7", ",", " ", "1", ",", " ",
     "8"}], "}"}], " ", "//.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "a___", ",", " ", "b_", ",", " ", "c__", ",", " ", "b_", ",", " ", 
      "d___"}], "}"}], " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "b", " ", ",", " ", "b", ",", " ", "a", ",", " ", "c", ",", " ", "d"}], 
     "}"}]}], "}"}]}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.43240935140625*^9, 3.4324093640625*^9}},
 CellLabel->"In[98]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "3", ",", "4", ",", "3", ",", "4", ",", "2", 
   ",", "7", ",", "1", ",", "8"}], "}"}]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.432409376875*^9, 3.433442294140625*^9, 
  3.433446961828125*^9, 3.465684257946*^9, 3.467848132859126*^9, 
  3.4685973995740128`*^9},
 CellLabel->"Out[98]="],

Cell[TextData[{
 StyleBox["Contrast this to the same transformation using ",
  FontTracking->"Extended"],
 StyleBox["Longest", "Literal",
  FontTracking->"Extended"],
 StyleBox[". Here we force",
  FontTracking->"Extended"],
 StyleBox[" a___ ", "Literal",
  FontTracking->"Extended"],
 StyleBox["to g",
  FontTracking->"Extended"],
 StyleBox["reedily gobble up as many elements as it can and still keep the \
rest of the pattern matching. ",
  FontTracking->"Plain"]
}], "Text",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4704034169934797`*^9, 3.470403432043332*^9}, {
  3.4704034681842747`*^9, 3.470403469786026*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "1", ",", " ", "3", ",", " ", "1", ",", " ", "4", ",", " ", "1", ",", " ", 
    "3", ",", " ", "4", ",", " ", "2", ",", " ", "7", ",", " ", "1", ",", " ",
     "8"}], "}"}], " ", "//.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Longest", "[", "a___", "]"}], ",", " ", "b_", ",", " ", "c__", 
      ",", " ", "b_", ",", " ", "d___"}], "}"}], " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{
     "b", " ", ",", " ", "b", ",", " ", "a", ",", " ", "c", ",", " ", "d"}], 
     "}"}]}], "}"}]}]], "Input",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.43240935140625*^9, 3.4324093640625*^9}, {
  3.43240981309375*^9, 3.432409821171875*^9}},
 CellLabel->"In[99]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "3", ",", "3", ",", "4", ",", "4", 
   ",", "2", ",", "7", ",", "8"}], "}"}]], "Output",
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{3.432409822640625*^9, 3.4334422941875*^9, 
  3.43344696184375*^9, 3.46568425799*^9, 3.467848132942411*^9, 
  3.468597399610512*^9},
 CellLabel->"Out[99]="],

Cell[TextData[{
 "Forcing ",
 StyleBox["a___", "Literal"],
 " to match as much as it can and yet still satisfy the rest of the pattern \
results in all sequences of identical elements separated by one or more other \
elements (",
 StyleBox["b_, c__, b_", "Literal"],
 ") to be found."
}], "Text",
 CellChangeTimes->{{3.470403500662107*^9, 3.470403516417078*^9}}],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.432410118609375*^9, 3.43241012103125*^9}}],

Cell[TextData[{
 "Readers familiar with regular expression will recognize the solution \
example as illustrating the difference between greedy and nongreedy matching. \
This difference is the source of infinite frustration to pattern writers \
because, depending on your test case, nongreedy patterns can appear to work \
most of the time. Always consider what will happen if patterns like ",
 StyleBox["a__", "Literal"],
 " match only one item and ",
 StyleBox["a___", "Literal"],
 " matches nothing. Often this is what you want, but almost as often it is \
not!"
}], "Text",
 CellChangeTimes->{{3.470403527053196*^9, 3.470403590050939*^9}}],

Cell[TextData[{
 "A reasonable question to ask is why there is a ",
 StyleBox["Shortest", "Literal"],
 " if it is the default. For string patterns (see ",
 ButtonBox["Chapter 5",
  BaseStyle->"Hyperlink",
  ButtonData->{"Chapter 5", None}],
 "), the default is reversed. You may also use ",
 StyleBox["Shortest", "Literal"],
 " to document that it is your intent, but you should probably limit this to \
portions of the pattern that are up front."
}], "Text",
 CellChangeTimes->{{3.470403600620552*^9, 3.470403722864491*^9}}],

Cell[TextData[{
 "Also keep in mind that if multiple ",
 StyleBox["Shortest", "Literal"],
 " or ",
 StyleBox["Longest", "Literal"],
 " directives are used, the ones that appear earlier are given higher \
priority to match the shortest or longest number of elements, respectively. "
}], "Text",
 CellChangeTimes->{{3.432410828875*^9, 3.4324108419375*^9}, {
  3.432412222359375*^9, 3.432412240484375*^9}, {3.4324122869375*^9, 
  3.432412366265625*^9}, {3.470403769156431*^9, 3.4704038022646008`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], " ", "/.", 
  " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Shortest", "[", "a__", "]"}], ",", " ", 
     RowBox[{"Shortest", "[", "b__", "]"}]}], "}"}], " ", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"{", "b", "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.432413068765625*^9, 3.432413153015625*^9}},
 CellLabel->"In[100]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.432413154515625*^9, 3.43344229421875*^9, 
  3.433446961875*^9, 3.4656842580439997`*^9, 3.467848133043334*^9, 
  3.468597399656858*^9},
 CellLabel->"Out[100]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], " ", "/.", 
  " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Longest", "[", "a__", "]"}], ",", " ", 
     RowBox[{"Longest", "[", "b__", "]"}]}], "}"}], " ", "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "a", "}"}], ",", 
     RowBox[{"{", "b", "}"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.432413169390625*^9, 3.4324131786875*^9}},
 CellLabel->"In[101]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", "5", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.432413180484375*^9, 3.433442294265625*^9, 
  3.433446961890625*^9, 3.465684258079*^9, 3.467848133076335*^9, 
  3.468597399694564*^9},
 CellLabel->"Out[101]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.43241325378125*^9, 3.43241326153125*^9}}],

Cell[TextData[{
 StyleBox["Mastering Regular Expressions", "CitationTitle"],
 " by Jeffrey E. F. Friedl (O\[CloseCurlyQuote]Reilly) has an extensive \
discussion of greedy versus lazy matching that is relevant to understanding \
",
 StyleBox["Longest", "Literal"],
 " and ",
 StyleBox["Shortest", "Literal"],
 ". ",
 StyleBox["This book is a good ",
  FontTracking->"Plain"],
 StyleBox["investment if you also make use of Mathematica\[CloseCurlyQuote]s \
regu",
  FontTracking->"Extended"],
 "lar expression syntax for string manipulation."
}], "Text",
 CellChangeTimes->{{3.470403817813218*^9, 3.470403870219719*^9}, {
  3.4755838478390903`*^9, 3.475583856212592*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Implementing Algorithms in Terms of Rules"
}], "Heading1",
 CellChangeTimes->{{3.43292363284375*^9, 3.43292365015625*^9}},
 CellTags->"ImplementingAlgorithmsInTermsOfRules"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.43292365784375*^9, 3.432923660234375*^9}}],

Cell["\<\
You need to implement an algorithm that can be viewed as a transformation \
from a start state to a goal state. \
\>", "Text",
 CellChangeTimes->{3.470161321146575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.432923758*^9, 3.432923760625*^9}}],

Cell["\<\
Many problems are elegantly stated in a few simple transformation rules. Here \
I show some simple examples; the discussion will try a few more ambitious \
tasks. \
\>", "Text",
 CellChangeTimes->{{3.43292377234375*^9, 3.43292386821875*^9}, {
  3.433441644171875*^9, 3.43344168140625*^9}, {3.470403904303475*^9, 
  3.470403955307549*^9}}],

Cell[TextData[{
 "Imagine you have a graph of vertex-to-vertex connection rules. This is the \
notation used by ",
 StyleBox["GraphPlot", "Literal"],
 " and the functions in the ",
 StyleBox["GraphUtilities`", "Literal"],
 " package."
}], "Text",
 CellChangeTimes->{{3.432923880875*^9, 3.43292397284375*^9}, 
   3.433441683953125*^9, {3.47040396876046*^9, 3.470404012396812*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.467848051850135*^9, 3.467848095103245*^9}},
 CellLabel->"In[102]:="],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
    ",", "x", ",", "y", ",", "z"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", " ", "b"}], ",", " ", 
     RowBox[{"b", "\[Rule]", "e"}], ",", " ", 
     RowBox[{"b", "\[Rule]", "f"}], ",", 
     RowBox[{"f", "\[Rule]", "g"}], ",", " ", 
     RowBox[{"a", "\[Rule]", "c"}], ",", " ", 
     RowBox[{"a", "\[Rule]", "d"}], ",", 
     RowBox[{"e", "\[Rule]", "g"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "b"}], ",", " ", 
     RowBox[{"b", "\[Rule]", "c"}], ",", " ", 
     RowBox[{"c", "\[Rule]", "d"}], ",", " ", 
     RowBox[{"d", "\[Rule]", "e"}], ",", 
     RowBox[{"b", "\[Rule]", "h"}], ",", " ", 
     RowBox[{"h", "\[Rule]", "c"}], ",", 
     RowBox[{"c", "\[Rule]", "g"}], ",", 
     RowBox[{"g", "\[Rule]", "d"}], ",", 
     RowBox[{"d", "\[Rule]", "f"}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"f", "\[Rule]", "e"}], ",", 
     RowBox[{"h", "\[Rule]", "i"}], ",", " ", 
     RowBox[{"i", "\[Rule]", "g"}], ",", 
     RowBox[{"i", "\[Rule]", "f"}], ",", 
     RowBox[{"a", "\[Rule]", "x"}], ",", 
     RowBox[{"x", "\[Rule]", "y"}], ",", 
     RowBox[{"x", "\[Rule]", "z"}], ",", 
     RowBox[{"y", "\[Rule]", "z"}], ",", 
     RowBox[{"z", "\[Rule]", "a"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.432924227515625*^9, 3.432924489*^9, {3.4678480975560904`*^9, 
   3.467848099748623*^9}},
 CellLabel->"In[103]:="],

Cell[BoxData[
 RowBox[{"GraphPlot", "[", 
  RowBox[{"graph", ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4329240239375*^9, 3.432924034609375*^9}, {
   3.4329240729375*^9, 3.4329241275*^9}, 3.432924193015625*^9, {
   3.432924261015625*^9, 3.432924265265625*^9}},
 CellTags->"SimpleGraph",
 CellLabel->"In[106]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{0.7556890659666708, 0.6184480033030143}, {
      2.029204623598436, 0.6185236094879456}, {2.945921858393934, 
      1.0543334824707504`}, {2.9455658220785166`, 0.18250511294724076`}, {
      3.66404240611731, 0.6181987375348679}, {0., 1.2365525883311377`}, {
      0.0003864371994444227, 0.}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.02656295572399815, 0.7}}], 
        ArrowBox[{1, 2}], ArrowBox[{1, 6}], ArrowBox[{1, 7}], 
        ArrowBox[{2, 3}], ArrowBox[{2, 4}], ArrowBox[{3, 5}], 
        ArrowBox[{4, 5}]}, {InsetBox[
         FrameBox["a",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["b",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["e",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["f",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["g",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["c",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["d",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{0.7556890659666708, 0.6184480033030143}, {
       2.029204623598436, 0.6185236094879456}, {2.945921858393934, 
       1.0543334824707504`}, {2.9455658220785166`, 0.18250511294724076`}, {
       3.66404240611731, 0.6181987375348679}, {0., 1.2365525883311377`}, {
       0.0003864371994444227, 0.}}]& ],
    AspectRatio->Automatic,
    Background->None,
    FrameTicks->None,
    ImageMargins->0.,
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], {0., 0.}, ImageScaled[{0., 0.}], {200., 73.99730467165548},
   
   ContentSelectable->True],
  AspectRatio->0.3874204433070968,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{191., 73.99730467165548},
  PlotRange->{{8.99999999999999, 200.}, {0., 73.99730467165548}},
  PlotRangePadding->None]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.432924035953125*^9, 3.432924095875*^9, 3.432924127953125*^9, 
   3.432924193796875*^9, 3.432924231984375*^9, {3.432924264125*^9, 
   3.43292426565625*^9}, 3.432930902359375*^9, 3.4334422956875*^9, 
   3.4334469619375*^9, 3.465684258365*^9, 3.4678481334564743`*^9, 
   3.468597399848102*^9, 3.4717036823146267`*^9},
 Magnification->1.06,
 CellTags->"SimpleGraph",
 CellLabel->"Out[106]="],

Cell[TextData[{
 "The idea in this solution is to find a path from the ",
 StyleBox["from", "Literal"],
 " node to some intermediate node ",
 StyleBox["x", "Literal"],
 ", and from ",
 StyleBox["x", "Literal"],
 " to some node ",
 StyleBox["y", "Literal"],
 ", and then add the path ",
 StyleBox["from", "Literal"],
 "\[RightArrow]",
 StyleBox["y", "Literal"],
 " if it does not already exist. Continue this until the graph no longer \
changes (hence ",
 StyleBox["FixedPoint", "Literal"],
 "). Then check if ",
 StyleBox["from", "Literal"],
 "\[RightArrow]",
 StyleBox["to", "Literal"],
 " is present using ",
 StyleBox["MemberQ", "Literal"],
 "."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{
  3.4701613228632402`*^9, {3.470404059941482*^9, 3.47040411061977*^9}, {
   3.470424443309025*^9, 3.470424449895411*^9}, {3.470425663689516*^9, 
   3.470425671416974*^9}, 3.475583951966571*^9, {3.4855221081084957`*^9, 
   3.485522113158807*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hasPath", "[", 
   RowBox[{"graph_", ",", "from_", ",", "from_"}], "]"}], " ", ":=", 
  "True"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hasPath", "[", 
   RowBox[{"graph_", ",", "from_", ",", "to_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"graph2", "=", "graph"}], ",", "pat1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pat1", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a___", ",", " ", 
          RowBox[{"from", " ", "\[Rule]", " ", "x_"}], ",", " ", "b___", ",", 
          " ", 
          RowBox[{"x_", " ", "\[Rule]", " ", "y_"}], ",", " ", "c___"}], 
         "}"}], " ", "/;", " ", 
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"graph2", ",", " ", 
           RowBox[{"from", "\[Rule]", "y"}]}], "]"}]}]}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"from", "\[Rule]", "y"}], ",", 
         RowBox[{"x", "\[Rule]", " ", "y"}], ",", 
         RowBox[{"from", " ", "\[Rule]", "x"}], ",", "a", ",", "b", ",", 
         "c"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"FixedPoint", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"graph2", "=", 
            RowBox[{"ReplaceAll", "[", 
             RowBox[{"#", " ", ",", " ", "pat1"}], "]"}]}], ")"}], "&"}], ",",
          "graph2"}], "]"}], ",", 
       RowBox[{"from", "\[Rule]", "to"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.43292615475*^9, 3.432926268296875*^9}, {
   3.432930869953125*^9, 3.432930883640625*^9}, {3.432930937234375*^9, 
   3.432930938171875*^9}, {3.432931310078125*^9, 3.432931402640625*^9}, 
   3.43293159359375*^9, {3.432931624890625*^9, 3.432931641421875*^9}, {
   3.432934639546875*^9, 3.432934642890625*^9}},
 CellLabel->"In[107]:="],

Cell[TextData[{
 "You can test ",
 StyleBox["hasPath", "Literal"],
 " on the graph in ",
 ButtonBox["Out[106] ",
  BaseStyle->"Hyperlink",
  ButtonData->"SimpleGraph"],
 "on page 161."
}], "Text",
 CellChangeTimes->{{3.432925186390625*^9, 3.432925250375*^9}, {
  3.432941868296875*^9, 3.432941868296875*^9}, {3.47558399182054*^9, 
  3.4755840137385283`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hasPath", "[", 
  RowBox[{"graph", ",", " ", "a", ",", " ", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.432924330875*^9, 3.432924365125*^9}},
 CellLabel->"In[109]:="],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.43292436703125*^9, 3.432930910828125*^9, 
  3.4329346540625*^9, 3.4334422965*^9, 3.43344696196875*^9, 
  3.43344756559375*^9, 3.4656842584309998`*^9, 3.467848133572721*^9, 
  3.468597399907053*^9},
 CellLabel->"Out[109]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hasPath", "[", 
  RowBox[{"graph", ",", " ", "b", ",", " ", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.432924387515625*^9, 3.432924391359375*^9}},
 CellLabel->"In[110]:="],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.43292439190625*^9, 3.432930913171875*^9, 
  3.43293465603125*^9, 3.43344229653125*^9, 3.433446961984375*^9, 
  3.465684258468*^9, 3.467848133606842*^9, 3.468597399944687*^9},
 CellLabel->"Out[110]="]
}, Open  ]],

Cell[TextData[{
 "Here is an exhaustive test of the vertex ",
 StyleBox["c", "Literal"],
 " in the graph in ",
 ButtonBox["Out[113]",
  BaseStyle->"Hyperlink",
  ButtonData->"ComplexGraph"],
 "."
}], "Text",
 CellChangeTimes->{{3.433447281515625*^9, 3.433447309875*^9}, {
  3.43344762465625*^9, 3.4334476658125*^9}, {3.4334477055*^9, 
  3.43344771421875*^9}, {3.475584033587657*^9, 3.475584057836273*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hasPath", "[", 
      RowBox[{"graph2", ",", "c", ",", "#"}], "]"}], ",", "#"}], "}"}], "&"}],
   "  ", "/@", " ", 
  RowBox[{"(", 
   RowBox[{"graph2", " ", "/.", " ", 
    RowBox[{
     RowBox[{"Rule", "[", 
      RowBox[{"v_", ",", " ", "_"}], "]"}], " ", "\[RuleDelayed]", " ", 
     "v"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.432926275125*^9, 3.43292628190625*^9}, {
   3.432926312171875*^9, 3.432926318546875*^9}, {3.432931440578125*^9, 
   3.432931465453125*^9}, {3.432931559015625*^9, 3.43293157375*^9}, {
   3.43293160496875*^9, 3.432931607171875*^9}, {3.432931655328125*^9, 
   3.43293178965625*^9}, 3.433446953453125*^9, 3.433447437265625*^9, {
   3.43344756859375*^9, 3.433447598546875*^9}},
 CellLabel->"In[111]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"False", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "c"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "g"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", "f"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "h"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "i"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "i"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "y"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"False", ",", "z"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4329262829375*^9, 3.432926320265625*^9, {3.432930927484375*^9, 
   3.4329309461875*^9}, {3.432931424375*^9, 3.432931465984375*^9}, {
   3.4329315605*^9, 3.43293160775*^9}, {3.432931653234375*^9, 
   3.432931655765625*^9}, {3.432931718625*^9, 3.43293179046875*^9}, 
   3.43344229659375*^9, 3.433446962015625*^9, 3.43344703078125*^9, 
   3.433447450796875*^9, {3.433447571375*^9, 3.433447599203125*^9}, 
   3.4656842585179996`*^9, 3.4678481336579857`*^9, 3.468597399975574*^9},
 CellLabel->"Out[111]="]
}, Open  ]],

Cell[TextData[{
 "Here is a related function to compute the ",
 StyleBox["transitive closure", "Techical Italic"],
 " of a graph."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"transitiveClosure", "[", "graph_", "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"graph2", "=", "graph"}], ",", "pat1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pat1", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a___", ",", " ", 
          RowBox[{"w_", " ", "\[Rule]", " ", "x_"}], ",", " ", "b___", ",", 
          " ", 
          RowBox[{"x_", " ", "\[Rule]", " ", "y_"}], ",", " ", "c___"}], 
         "}"}], " ", "/;", " ", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"graph2", ",", " ", 
            RowBox[{"w", "\[Rule]", "y"}]}], "]"}]}], " ", "&&", " ", 
         RowBox[{"w", " ", "=!=", " ", "y"}]}]}], " ", "\[RuleDelayed]", " ", 
       
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"w", " ", "\[Rule]", "x"}], ",", "b", ",", " ", 
         RowBox[{"x", "\[Rule]", " ", "y"}], ",", "c", ",", 
         RowBox[{"w", "\[Rule]", "y"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FixedPoint", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"graph2", "=", 
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"#", " ", ",", " ", "pat1"}], "]"}]}], ")"}], "&"}], ",", 
       "graph2"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.432919798*^9, 3.432919989421875*^9}, {
   3.432920022609375*^9, 3.43292010071875*^9}, {3.43292013171875*^9, 
   3.4329201395*^9}, {3.43292016959375*^9, 3.43292020990625*^9}, {
   3.432924581390625*^9, 3.432924591859375*^9}, 3.432924691375*^9},
 CellLabel->"In[112]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot", "[", 
  RowBox[{"graph2", ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{3.432924526578125*^9},
 CellTags->"ComplexGraph",
 CellLabel->"In[113]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[
    TagBox[
     GraphicsComplexBox[{{5.211658838880819, 0.3359859083547017}, {
      3.674054988036415, 0.3687718947116915}, {2.3500554669578753`, 
      0.12103204282853783`}, {1.0019085165440913`, 0.}, {0., 
      0.027478723030214258`}, {2.6617143109660866`, 0.767622190900152}, {
      1.6095346285731895`, 0.1387347739750594}, {0.498975341757943, 
      0.6259591552074472}, {1.5154169407748121`, 0.9142377311882514}, {
      6.2702390906359184`, 0.5810742374106023}, {7.055902426347638, 
      0.30126913421832757`}, {6.260570175775587, 0.051229416448606624`}}, {
       {RGBColor[0.5, 0., 0.], Arrowheads[{{0.01959723169828957, 0.7}}], 
        ArrowBox[{1, 2}], ArrowBox[{1, 10}], ArrowBox[{2, 3}], 
        ArrowBox[{2, 6}], ArrowBox[{3, 4}], ArrowBox[{3, 7}], 
        ArrowBox[{4, 5}], ArrowBox[{4, 8}], ArrowBox[{6, 3}], 
        ArrowBox[{6, 9}], ArrowBox[{7, 4}], ArrowBox[{8, 5}], 
        ArrowBox[{9, 7}], ArrowBox[{9, 8}], ArrowBox[{10, 11}], 
        ArrowBox[{10, 12}], ArrowBox[{11, 12}], ArrowBox[{12, 1}]}, {
        InsetBox[
         FrameBox["a",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 1], InsetBox[
         FrameBox["b",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 2], InsetBox[
         FrameBox["c",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 3], InsetBox[
         FrameBox["d",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 4], InsetBox[
         FrameBox["e",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 5], InsetBox[
         FrameBox["h",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 6], InsetBox[
         FrameBox["g",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 7], InsetBox[
         FrameBox["f",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 8], InsetBox[
         FrameBox["i",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 9], InsetBox[
         FrameBox["x",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 10], InsetBox[
         FrameBox["y",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 11], InsetBox[
         FrameBox["z",
          Background->RGBColor[1, 1, 0.8],
          FrameStyle->RGBColor[0.94, 0.85, 0.36],
          StripOnInput->False], 12]}}],
     Annotation[#, 
      VertexCoordinateRules -> {{5.211658838880819, 0.3359859083547017}, {
       3.674054988036415, 0.3687718947116915}, {2.3500554669578753`, 
       0.12103204282853783`}, {1.0019085165440913`, 0.}, {0., 
       0.027478723030214258`}, {2.6617143109660866`, 0.767622190900152}, {
       1.6095346285731895`, 0.1387347739750594}, {0.498975341757943, 
       0.6259591552074472}, {1.5154169407748121`, 0.9142377311882514}, {
       6.2702390906359184`, 0.5810742374106023}, {7.055902426347638, 
       0.30126913421832757`}, {6.260570175775587, 0.051229416448606624`}}]& ],
    
    AspectRatio->Automatic,
    Background->None,
    FrameTicks->None,
    ImageMargins->0.,
    ImageSize->{305.9999999999997, Automatic},
    PlotRange->All,
    PlotRangePadding->Scaled[0.1]], {0., 0.}, ImageScaled[{0., 0.}], {305.9999999999997, 51.71889052195023},
   
   ContentSelectable->True],
  AspectRatio->0.1814697913050887,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{284.9999999999997, 51.71889052195023},
  PlotRange->{{20.999999999999986`, 305.9999999999997}, {0., 
   51.71889052195023}},
  PlotRangePadding->None]], "Input",
 CellChangeTimes->{{3.471269402553644*^9, 3.47126940387803*^9}},
 Magnification->1.1300000000000001`,
 CellTags->"ComplexGraph",
 CellLabel->"Out[113]="]
}, Open  ]],

Cell[TextData[{
 "Here you compute the transitive closure of ",
 ButtonBox["Out[113]",
  BaseStyle->"Hyperlink",
  ButtonData->"ComplexGraph"],
 "."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.4329252660625*^9, 3.432925308171875*^9}, {
  3.43294190278125*^9, 3.43294190278125*^9}, {3.4755840845330553`*^9, 
  3.475584093933765*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transitiveClosure", "[", "graph2", "]"}]], "Input",
 CellChangeTimes->{3.432925067546875*^9},
 CellLabel->"In[114]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "b"}], ",", 
   RowBox[{"b", "\[Rule]", "c"}], ",", 
   RowBox[{"c", "\[Rule]", "d"}], ",", 
   RowBox[{"d", "\[Rule]", "e"}], ",", 
   RowBox[{"b", "\[Rule]", "h"}], ",", 
   RowBox[{"h", "\[Rule]", "c"}], ",", 
   RowBox[{"c", "\[Rule]", "g"}], ",", 
   RowBox[{"g", "\[Rule]", "d"}], ",", 
   RowBox[{"d", "\[Rule]", "f"}], ",", 
   RowBox[{"f", "\[Rule]", "e"}], ",", 
   RowBox[{"h", "\[Rule]", "i"}], ",", 
   RowBox[{"i", "\[Rule]", "g"}], ",", 
   RowBox[{"i", "\[Rule]", "f"}], ",", 
   RowBox[{"a", "\[Rule]", "x"}], ",", 
   RowBox[{"x", "\[Rule]", "y"}], ",", 
   RowBox[{"x", "\[Rule]", "z"}], ",", 
   RowBox[{"y", "\[Rule]", "z"}], ",", 
   RowBox[{"z", "\[Rule]", "a"}], ",", 
   RowBox[{"a", "\[Rule]", "c"}], ",", 
   RowBox[{"a", "\[Rule]", "h"}], ",", 
   RowBox[{"b", "\[Rule]", "d"}], ",", 
   RowBox[{"a", "\[Rule]", "d"}], ",", 
   RowBox[{"b", "\[Rule]", "g"}], ",", 
   RowBox[{"a", "\[Rule]", "g"}], ",", 
   RowBox[{"c", "\[Rule]", "e"}], ",", 
   RowBox[{"b", "\[Rule]", "e"}], ",", 
   RowBox[{"a", "\[Rule]", "e"}], ",", 
   RowBox[{"c", "\[Rule]", "f"}], ",", 
   RowBox[{"b", "\[Rule]", "f"}], ",", 
   RowBox[{"a", "\[Rule]", "f"}], ",", 
   RowBox[{"b", "\[Rule]", "i"}], ",", 
   RowBox[{"a", "\[Rule]", "i"}], ",", 
   RowBox[{"h", "\[Rule]", "g"}], ",", 
   RowBox[{"h", "\[Rule]", "e"}], ",", 
   RowBox[{"h", "\[Rule]", "f"}], ",", 
   RowBox[{"g", "\[Rule]", "f"}], ",", 
   RowBox[{"a", "\[Rule]", "y"}], ",", 
   RowBox[{"a", "\[Rule]", "z"}], ",", 
   RowBox[{"x", "\[Rule]", "a"}], ",", 
   RowBox[{"y", "\[Rule]", "a"}], ",", 
   RowBox[{"z", "\[Rule]", "c"}], ",", 
   RowBox[{"x", "\[Rule]", "c"}], ",", 
   RowBox[{"y", "\[Rule]", "c"}], ",", 
   RowBox[{"z", "\[Rule]", "h"}], ",", 
   RowBox[{"x", "\[Rule]", "h"}], ",", 
   RowBox[{"y", "\[Rule]", "h"}], ",", 
   RowBox[{"z", "\[Rule]", "d"}], ",", 
   RowBox[{"x", "\[Rule]", "d"}], ",", 
   RowBox[{"y", "\[Rule]", "d"}], ",", 
   RowBox[{"z", "\[Rule]", "g"}], ",", 
   RowBox[{"x", "\[Rule]", "g"}], ",", 
   RowBox[{"y", "\[Rule]", "g"}], ",", 
   RowBox[{"z", "\[Rule]", "e"}], ",", 
   RowBox[{"x", "\[Rule]", "e"}], ",", 
   RowBox[{"y", "\[Rule]", "e"}], ",", 
   RowBox[{"z", "\[Rule]", "f"}], ",", 
   RowBox[{"x", "\[Rule]", "f"}], ",", 
   RowBox[{"y", "\[Rule]", "f"}], ",", 
   RowBox[{"z", "\[Rule]", "i"}], ",", 
   RowBox[{"x", "\[Rule]", "i"}], ",", 
   RowBox[{"y", "\[Rule]", "i"}], ",", 
   RowBox[{"z", "\[Rule]", "y"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4329250686875*^9, 3.43344229690625*^9, 
  3.4334469621875*^9, 3.465684258683*^9, 3.467848133862911*^9, 
  3.468597400092864*^9},
 CellLabel->"Out[114]="]
}, Open  ]],

Cell[TextData[{
 ButtonBox["Out[115]",
  BaseStyle->"Hyperlink",
  ButtonData->"TransClosure"],
 " is the plot of the transitive closure of the simpler graph from ",
 ButtonBox["Out[106] ",
  BaseStyle->"Hyperlink",
  ButtonData->"SimpleGraph"],
 "on page 161."
}], "Text",
 CellChangeTimes->{{3.4329253431875*^9, 3.432925404140625*^9}, {
  3.4329419215625*^9, 3.4329419215625*^9}, {3.433441688125*^9, 
  3.433441689875*^9}, {3.4334477393125*^9, 3.43344777525*^9}, {
  3.470404185629586*^9, 3.470404186880035*^9}, {3.475584109286977*^9, 
  3.4755841516083527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphPlot", "[", 
  RowBox[{
   RowBox[{"transitiveClosure", "[", "graph", "]"}], ",", 
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4329244695*^9, 3.432924472796875*^9}, {
  3.43292499584375*^9, 3.43292503328125*^9}},
 CellTags->"TransClosure",
 CellLabel->"In[115]:="],

Cell[BoxData[
 GraphicsBox[InsetBox[
   GraphicsBox[InsetBox[
     GraphicsBox[InsetBox[
       GraphicsBox[InsetBox[
         GraphicsBox[InsetBox[
           GraphicsBox[
            
            TagBox[GraphicsComplexBox[{{1.0414191705007885`, 
              0.7716072534942107}, {2.2927545377799863`, 
              0.7717958801362168}, {1.867931957441904, 0.}, {
              1.8677018615242935`, 1.5432147508333438`}, {1.7598080432052834`,
               0.7714593930515826}, {0.000385465341675717, 
              1.5277195140065776`}, {0., 0.015681213703911845`}}, {
               {RGBColor[0.5, 0., 0.], 
                Arrowheads[{{0.03219550378843045, 0.7}}], ArrowBox[{1, 2}], 
                ArrowBox[{1, 6}], ArrowBox[{1, 7}], ArrowBox[{1, 3}], 
                ArrowBox[{1, 4}], ArrowBox[{1, 5}], ArrowBox[{2, 3}], 
                ArrowBox[{2, 4}], ArrowBox[{2, 5}], ArrowBox[{3, 5}], 
                ArrowBox[{4, 5}]}, {InsetBox[
                 FrameBox["a",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 1], InsetBox[
                 FrameBox["b",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 2], InsetBox[
                 FrameBox["e",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 3], InsetBox[
                 FrameBox["f",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 4], InsetBox[
                 FrameBox["g",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 5], InsetBox[
                 FrameBox["c",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 6], InsetBox[
                 FrameBox["d",
                  Background->RGBColor[1, 1, 0.8],
                  FrameStyle->RGBColor[0.94, 0.85, 0.36],
                  StripOnInput->False], 7]}}],
             
             Annotation[#, 
              VertexCoordinateRules -> {{1.0414191705007885`, 
               0.7716072534942107}, {2.2927545377799863`, 
               0.7717958801362168}, {1.867931957441904, 0.}, {
               1.8677018615242935`, 1.5432147508333438`}, {
               1.7598080432052834`, 0.7714593930515826}, {
               0.000385465341675717, 1.5277195140065776`}, {0., 
               0.015681213703911845`}}]& ],
            AspectRatio->Automatic,
            Background->None,
            FrameTicks->None,
            ImageMargins->0.,
            ImageSize->{289.3333333333329, Automatic},
            PlotRange->All,
            PlotRangePadding->Scaled[0.1]], {0., 0.}, ImageScaled[{0., 0.}], {288.97049996189827`, 194.50121273282178`},
           
           ContentSelectable->True],
          AspectRatio->0.6719131692192575,
          Background->None,
          ContentSelectable->True,
          ImageMargins->0.,
          ImagePadding->0.,
          ImageSize->{289.83719732096813`, 194.74542980955897`},
          
          PlotRange->{{-0.5032321258746623, 288.97049996189827`}, {0., 
           194.50121273282178`}},
          PlotRangePadding->None], {0., 0.}, ImageScaled[{0., 0.}], {289.25916378870375`, 194.69550752897976`},
         
         ContentSelectable->True],
        AspectRatio->0.672411584771433,
        Background->None,
        ContentSelectable->True,
        ImageMargins->0.,
        ImagePadding->0.,
        ImageSize->{289.62235960844885`, 194.74542980955897`},
        PlotRange->{{-0.28895218428457614`, 289.25916378870375`}, {0., 
         194.69550752897976`}},
        PlotRangePadding->None], {0., 0.}, ImageScaled[{0., 0.}], {289.3333333333329, 194.745429809559},
       
       ContentSelectable->True],
      AspectRatio->0.6729107403075347,
      Background->None,
      ContentSelectable->True,
      ImageMargins->0.,
      ImagePadding->0.,
      ImageSize->{289.4075218959295, 194.745429809559},
      PlotRange->{{-0.07418856259658824, 289.3333333333329}, {0., 
       194.745429809559}},
      PlotRangePadding->None], {0., 0.}, ImageScaled[{0., 0.}], {289.3333333333329, 194.745429809559},
     
     ContentSelectable->True],
    AspectRatio->0.6777683172026425,
    Background->None,
    ContentSelectable->True,
    ImageMargins->0.,
    ImagePadding->0.,
    ImageSize->{287.3333333333329, 194.745429809559},
    PlotRange->{{2.0000000000000044`, 289.3333333333329}, {0., 
     194.745429809559}},
    PlotRangePadding->None], {0., 0.}, ImageScaled[{0., 0.}], {289.3333333333329, 194.745429809559},
   
   ContentSelectable->True],
  AspectRatio->0.6875531780188674,
  Background->None,
  ContentSelectable->True,
  ImageMargins->0.,
  ImagePadding->0.,
  ImageSize->{254.724637681159, 175.1367341573854},
  PlotRange->{{18.60869565217391, 273.3333333333329}, {10.608695652173559`, 
   185.745429809559}},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.432924473625*^9, 3.432924500640625*^9}, 
   3.432924601078125*^9, 3.432924696109375*^9, {3.432925001109375*^9, 
   3.432925033828125*^9}, 3.433442296984375*^9, 3.433446962234375*^9, 
   3.433447042875*^9, 3.465684258936*^9, 3.4678481339088793`*^9, 
   3.468597400127267*^9},
 Magnification->1.1500000000000001`,
 CellTags->"TransClosure",
 CellLabel->"Out[115]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.43292552528125*^9, 3.432925533046875*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["hasPath", "Literal"],
 " and ",
 StyleBox["transitiveClosure", "Literal"],
 " functions share a common property. They are implemented by repeated \
transformation of the input until some goal state is achieved. The search \
terminates when there are no more available transformations, as determined by \
",
 StyleBox["FixedPoint", "Literal"],
 ". ",
 StyleBox["TransitiveClosure", "Literal"],
 " uses the final state as the result, whereas ",
 StyleBox["hasPath", "Literal"],
 " makes one more match using ",
 StyleBox["MemberQ", "Literal"],
 " to see if the goal was reached."
}], "Text",
 CellChangeTimes->{{3.432925547578125*^9, 3.4329258555625*^9}, {
   3.43293472725*^9, 3.432934952265625*^9}, 3.432935020171875*^9, {
   3.432935093*^9, 3.43293516884375*^9}, {3.433441693296875*^9, 
   3.433441695171875*^9}, {3.4704050328353043`*^9, 3.4704051337011967`*^9}}],

Cell[TextData[{
 "Although rule-driven algorithms tend to be small, they are not always the \
most efficient. ",
 StyleBox["HasPath", "Literal"],
 " finds all paths from the start node before making a determination.",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{{3.432935179765625*^9, 3.432935194984375*^9}, {
   3.432935285015625*^9, 3.4329353184375*^9}, {3.432935501640625*^9, 
   3.432935596375*^9}, 3.4334417035*^9, {3.470405153634699*^9, 
   3.470405171547264*^9}, {3.470425871066597*^9, 3.4704258711202*^9}, 
   3.485522122803508*^9}],

Cell[TextData[{
 "The ",
 StyleBox["hasPath2", "Literal"],
 " implementation here uses ",
 StyleBox["Catch", "Literal"],
 "-",
 StyleBox["Throw", "Literal"],
 " ",
 StyleBox["to exit as soon as the solution is",
  FontTracking->"Extended"],
 " found."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.432935179765625*^9, 3.432935194984375*^9}, {
   3.432935285015625*^9, 3.4329353184375*^9}, {3.432935501640625*^9, 
   3.432935596375*^9}, 3.4334417035*^9, {3.470405153634699*^9, 
   3.470405171547264*^9}, {3.470425871066597*^9, 3.470425873243421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"hasPath2", "[", 
   RowBox[{"graph_", ",", " ", "from_", ",", " ", "to_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"graph2", "=", "graph"}], ",", "pat1", ",", " ", "pat2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pat1", " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"___", ",", " ", 
         RowBox[{"from", " ", "\[Rule]", " ", "to"}], ",", " ", "__"}], "}"}],
        " ", "\[RuleDelayed]", " ", 
       RowBox[{"Throw", "[", 
        RowBox[{"from", "\[Rule]", "to"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pat2", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a___", ",", " ", 
          RowBox[{"from", " ", "\[Rule]", " ", "x_"}], ",", " ", "b___", ",", 
          " ", 
          RowBox[{"x_", " ", "\[Rule]", " ", "y_"}], ",", " ", "c___"}], 
         "}"}], " ", "/;", " ", "\[IndentingNewLine]", 
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"graph2", ",", " ", 
           RowBox[{"from", "\[Rule]", "y"}]}], "]"}]}]}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"from", " ", "\[Rule]", "y"}], ",", 
         RowBox[{"from", "\[Rule]", "x"}], ",", " ", 
         RowBox[{"x", "\[Rule]", " ", "y"}], ",", " ", "a", ",", "b", ",", 
         "c"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Catch", "[", 
      RowBox[{"FixedPoint", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"graph2", "=", 
           RowBox[{"ReplaceAll", "[", 
            RowBox[{"#", " ", ",", " ", 
             RowBox[{"{", 
              RowBox[{"pat1", ",", "pat2"}], "}"}]}], "]"}]}], ")"}], "&"}], 
        ",", "graph2"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MemberQ", "[", 
      RowBox[{"graph2", ",", 
       RowBox[{"from", "\[Rule]", "to"}]}], "]"}]}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"monsterGraph", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", " ", "\[Rule]", " ", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "500"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.43293566440625*^9, 3.432935810859375*^9}, {
   3.432935857375*^9, 3.432935903171875*^9}, 3.432936219484375*^9},
 CellLabel->"In[117]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"hasPath", "[", 
   RowBox[{"monsterGraph", ",", "1", ",", " ", "250"}], "]"}], "]"}]], "Input",\

 CellLabel->"In[118]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6.154291999999998`", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.43293591896875*^9, 3.43344231125*^9, 
  3.433446975890625*^9, 3.465684265434*^9, 3.467848145750074*^9, 
  3.468597406332546*^9},
 CellLabel->"Out[118]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"hasPath2", "[", 
   RowBox[{"monsterGraph", ",", "1", ",", " ", "250"}], "]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.4329359189375*^9, 3.432935932609375*^9}},
 CellLabel->"In[119]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5190910000000031`", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.43293594375*^9, 3.432935957890625*^9}, 
   3.432936385859375*^9, 3.43293645053125*^9, 3.433442312390625*^9, 
   3.4334469771875*^9, 3.4656842659300003`*^9, 3.467848146773045*^9, 
   3.4685974069059753`*^9},
 CellLabel->"Out[119]="],

Cell["The main components of this solution are: ", "Text",
 CellChangeTimes->{{3.469883161606997*^9, 3.469883163846716*^9}}],

Cell[TextData[{
 "Localization: ",
 StyleBox["Module", "Literal"],
 StyleBox["[ {rules, start, next, final}, .. ] ", "Literal"]
}], "ListNumber",
 CellChangeTimes->{3.470405228369686*^9, 3.47126963904209*^9, 
  3.471703758430138*^9}],

Cell[TextData[{
 "Rules: Enumeration of the rules with tests against ",
 StyleBox["next", "Literal"],
 " (",
 StyleBox["graph2", "Literal"],
 " plays the role of ",
 StyleBox["next", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" in the examples). An optional ",
  FontTracking->"SemiCondensed"],
 StyleBox["Throw", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" rule detects success ",
  FontTracking->"SemiCondensed"],
 StyleBox["for early termination.",
  FontTracking->"Plain"]
}], "ListNumber",
 CellChangeTimes->{
  3.46988271794318*^9, {3.470405278446056*^9, 3.470405281920574*^9}, 
   3.471269645734997*^9, 3.471703777027665*^9}],

Cell[TextData[{
 "Repetition: ",
 StyleBox["next = ReplaceAll[next, rules] ", "Literal"]
}], "ListNumber",
 CellChangeTimes->{{3.469882734110243*^9, 3.469882760398838*^9}, 
   3.470161331192113*^9, 3.4701614376596193`*^9, 3.470405306857169*^9, 
   3.471269662286126*^9, 3.4755842071223097`*^9}],

Cell[TextData[{
 "Stopping criteria: ",
 StyleBox["final = FixedPoint[ .., start]", "Literal"],
 ". Assignment to ",
 StyleBox["final", "Literal"],
 " allows the result to undergo some post processing. In the examples, ",
 StyleBox["final", "Literal"],
 " was implicit. If a ",
 StyleBox["Throw", "Literal"],
 " rule is used, ",
 StyleBox["FixedPoint", "Literal"],
 " should be wrapped in a ",
 StyleBox["Catch", "Literal"],
 "."
}], "ListNumber",
 CellChangeTimes->{{3.469882861739511*^9, 3.469882875627769*^9}, 
   3.470161333537608*^9, {3.4704053419147997`*^9, 3.4704054158111353`*^9}, 
   3.471269670521062*^9, 3.4712697033111486`*^9, {3.475584201452182*^9, 
   3.4755842173738527`*^9}}],

Cell[TextData[{
 "Postprocessing: Extract results from ",
 StyleBox["final", "Literal"],
 ". Here ",
 StyleBox["MemberQ", "Literal"],
 " is used to test if the path was found. "
}], "ListNumber",
 CellChangeTimes->{{3.469882918437323*^9, 3.469882973423462*^9}, {
   3.469883087547975*^9, 3.4698831064368153`*^9}, 3.471269696935933*^9}],

Cell[TextData[{
 "If you have trouble following one of these solutions, Mathematica will show \
its work if you use ",
 StyleBox["FixedPointList", "Literal"],
 ". For example, here is the expansion of the steps in ",
 StyleBox["hasPath", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.470405454545446*^9, 3.470405517786839*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"explainHasPath", "[", 
   RowBox[{"graph_", ",", "from_", ",", "from_"}], "]"}], " ", ":=", 
  RowBox[{"{", 
   RowBox[{"from", "\[Rule]", "from"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"explainHasPath", "[", 
   RowBox[{"graph_", ",", "from_", ",", "to_"}], "]"}], " ", ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"graph2", "=", "graph"}], ",", "pat1"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pat1", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a___", ",", " ", 
          RowBox[{"from", " ", "\[Rule]", " ", "x_"}], ",", " ", "b___", ",", 
          " ", 
          RowBox[{"x_", " ", "\[Rule]", " ", "y_"}], ",", " ", "c___"}], 
         "}"}], " ", "/;", " ", 
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"graph2", ",", " ", 
           RowBox[{"from", "\[Rule]", "y"}]}], "]"}]}]}], " ", 
       "\[RuleDelayed]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"from", "\[Rule]", "y"}], ",", 
         RowBox[{"x", "\[Rule]", " ", "y"}], ",", 
         RowBox[{"from", " ", "\[Rule]", "x"}], ",", "a", ",", "b", ",", 
         "c"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"FixedPointList", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"graph2", "=", 
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"#", " ", ",", " ", "pat1"}], "]"}]}], ")"}], "&"}], ",", 
       "graph2"}], "]"}]}]}], "]"}]}]}], "Input",
 CellLabel->"In[120]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"explainHasPath", "[", 
   RowBox[{"graph", ",", "a", ",", "g"}], "]"}], "//", "TableForm"}]], "Input",\

 CellLabel->"In[122]:="],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{"a", "\[Rule]", "b"}], 
     RowBox[{"b", "\[Rule]", "e"}], 
     RowBox[{"b", "\[Rule]", "f"}], 
     RowBox[{"f", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "c"}], 
     RowBox[{"a", "\[Rule]", "d"}], 
     RowBox[{"e", "\[Rule]", "g"}], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{"a", "\[Rule]", "e"}], 
     RowBox[{"b", "\[Rule]", "e"}], 
     RowBox[{"a", "\[Rule]", "b"}], 
     RowBox[{"b", "\[Rule]", "f"}], 
     RowBox[{"f", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "c"}], 
     RowBox[{"a", "\[Rule]", "d"}], 
     RowBox[{"e", "\[Rule]", "g"}], "\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{"a", "\[Rule]", "g"}], 
     RowBox[{"e", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "e"}], 
     RowBox[{"b", "\[Rule]", "e"}], 
     RowBox[{"a", "\[Rule]", "b"}], 
     RowBox[{"b", "\[Rule]", "f"}], 
     RowBox[{"f", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "c"}], 
     RowBox[{"a", "\[Rule]", "d"}], "\<\"\"\>"},
    {
     RowBox[{"a", "\[Rule]", "f"}], 
     RowBox[{"b", "\[Rule]", "f"}], 
     RowBox[{"a", "\[Rule]", "b"}], 
     RowBox[{"a", "\[Rule]", "g"}], 
     RowBox[{"e", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "e"}], 
     RowBox[{"b", "\[Rule]", "e"}], 
     RowBox[{"f", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "c"}], 
     RowBox[{"a", "\[Rule]", "d"}]},
    {
     RowBox[{"a", "\[Rule]", "f"}], 
     RowBox[{"b", "\[Rule]", "f"}], 
     RowBox[{"a", "\[Rule]", "b"}], 
     RowBox[{"a", "\[Rule]", "g"}], 
     RowBox[{"e", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "e"}], 
     RowBox[{"b", "\[Rule]", "e"}], 
     RowBox[{"f", "\[Rule]", "g"}], 
     RowBox[{"a", "\[Rule]", "c"}], 
     RowBox[{"a", "\[Rule]", "d"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{$CellContext`a -> $CellContext`b, $CellContext`b -> \
$CellContext`e, $CellContext`b -> $CellContext`f, $CellContext`f -> \
$CellContext`g, $CellContext`a -> $CellContext`c, $CellContext`a -> \
$CellContext`d, $CellContext`e -> $CellContext`g}, {$CellContext`a -> \
$CellContext`e, $CellContext`b -> $CellContext`e, $CellContext`a -> \
$CellContext`b, $CellContext`b -> $CellContext`f, $CellContext`f -> \
$CellContext`g, $CellContext`a -> $CellContext`c, $CellContext`a -> \
$CellContext`d, $CellContext`e -> $CellContext`g}, {$CellContext`a -> \
$CellContext`g, $CellContext`e -> $CellContext`g, $CellContext`a -> \
$CellContext`e, $CellContext`b -> $CellContext`e, $CellContext`a -> \
$CellContext`b, $CellContext`b -> $CellContext`f, $CellContext`f -> \
$CellContext`g, $CellContext`a -> $CellContext`c, $CellContext`a -> \
$CellContext`d}, {$CellContext`a -> $CellContext`f, $CellContext`b -> \
$CellContext`f, $CellContext`a -> $CellContext`b, $CellContext`a -> \
$CellContext`g, $CellContext`e -> $CellContext`g, $CellContext`a -> \
$CellContext`e, $CellContext`b -> $CellContext`e, $CellContext`f -> \
$CellContext`g, $CellContext`a -> $CellContext`c, $CellContext`a -> \
$CellContext`d}, {$CellContext`a -> $CellContext`f, $CellContext`b -> \
$CellContext`f, $CellContext`a -> $CellContext`b, $CellContext`a -> \
$CellContext`g, $CellContext`e -> $CellContext`g, $CellContext`a -> \
$CellContext`e, $CellContext`b -> $CellContext`e, $CellContext`f -> \
$CellContext`g, $CellContext`a -> $CellContext`c, $CellContext`a -> \
$CellContext`d}}]]], "Output",
 CellChangeTimes->{3.4656842659630003`*^9, 3.4678481469295273`*^9, 
  3.4685974069565372`*^9},
 Magnification->0.9299999999999999,
 CellLabel->"Out[122]//TableForm="]
}, Open  ]],

Cell["\<\
This shows each step in the transition from the original graph to the one \
with all intermediate steps filled in. Try to work out how the rule took each \
line to the next line. Only by working through examples like this will you \
begin to master the concepts.\
\>", "Text",
 CellChangeTimes->{{3.470405542365307*^9, 3.47040554302075*^9}}]
}, Open  ]],

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.4329371728125*^9, 3.4329371755*^9}}]
}, Open  ]],

Cell[TextData[{
 StyleBox["FixedPoint", "Literal"],
 " usually finds application in numerical methods that use iteration, such as \
Newton",
 "\[CloseCurlyQuote]",
 "s method (see ",
 ButtonBox["Recipe 2.12",
  BaseStyle->"Hyperlink",
  ButtonData->{
   "FunctionalProgramming.nb", "Building a Function Through Iteration"}],
 "), but any algorithm that computes until an equilibrium state is reached \
can use ",
 StyleBox["FixedPoint", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.470405563247525*^9, 3.4704056272208977`*^9}, 
   3.470405674520981*^9, {3.470405774591618*^9, 3.470405782185948*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Debugging Infinite Loops When Using ",
 "ReplaceRepeated"
}], "Heading1",
 CellChangeTimes->{{3.432413790875*^9, 3.432413902953125*^9}},
 CellTags->"DebuggingInfiniteLoopsWhenUsingReplaceRepeated"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.432413931578125*^9, 3.432413941546875*^9}}],

Cell[TextData[{
 "Mathematica went into an infinite loop when you used ",
 StyleBox["//.", "Literal"],
 " (",
 StyleBox["ReplaceRepeated", "Literal"],
 "), and the reason is not immediately obvious."
}], "Text",
 CellChangeTimes->{
  3.43241394603125*^9, {3.432414389421875*^9, 3.43241449265625*^9}, 
   3.43344171246875*^9, {3.4704058633216677`*^9, 3.470405901183098*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.432413952640625*^9, 3.432413958265625*^9}}],

Cell[TextData[{
 StyleBox["ReplaceRepeated", "Literal"],
 " is often very handy but also dangerous because it only terminates when the \
result stops changing. The simplest thing to do is to test ",
 StyleBox["ReplaceRepeated", "Literal"],
 " with the option ",
 StyleBox["MaxIterations", "Literal"],
 " set to a reasonably small value (the default is 65,536)."
}], "Text",
 CellChangeTimes->{{3.432414500203125*^9, 3.432414537203125*^9}, {
   3.432414768484375*^9, 3.432414810765625*^9}, {3.43241493975*^9, 
   3.432414980015625*^9}, {3.432415089484375*^9, 3.432415171375*^9}, {
   3.433441714*^9, 3.43344171684375*^9}, 3.470405913980481*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceRepeated", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "a", "}"}], ",", 
      RowBox[{"{", "b", "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"MaxIterations", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.432413967921875*^9, 3.432414912140625*^9, {3.43241517859375*^9, 
   3.43241525878125*^9}},
 CellLabel->"In[123]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceRepeated", "::", "\<\"rrlim\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Exiting after \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({1, 2}\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" scanned \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(10\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" times.\\\\\\\"\\\", \\\
\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/rrlim\\\", ButtonNote -> \
\\\"ReplaceRepeated::rrlim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.432415260328125*^9, 3.4334423143125*^9, 
  3.43344697728125*^9, 3.4656842661140003`*^9, 3.4678481470035353`*^9, 
  3.468597406993891*^9},
 CellLabel->"During evaluation of In[123]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"{", "1", "}"}], "}"}], "}"}], "}"}], "}"}], "}"}], "}"}],
       "}"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"{", "2", "}"}], "}"}], "}"}], "}"}], "}"}], "}"}], "}"}],
       "}"}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.432415260328125*^9, 3.43344231440625*^9, 
  3.43344697728125*^9, 3.465684266118*^9, 3.467848147007248*^9, 
  3.468597406997799*^9},
 CellLabel->"Out[123]="]
}, Open  ]],

Cell[TextData[{
 "It should be clear that this will never terminate. Any transformation that \
adds struct",
 StyleBox["ure is doomed. However, sometimes the end result obtained when \
clamping",
  FontTracking->"Extended"],
 " ",
 StyleBox["it",
  FontTracking->"Extended"],
 StyleBox["erations does not immediately reveal the problem. In such cases, \
it helps",
  FontTracking->"Plain"],
 StyleBox[" to see the whole sequence of transformations. You can do that \
using ",
  FontTracking->"Extended"],
 StyleBox["NestList", "Literal",
  FontTracking->"Extended"],
 StyleBox[" and",
  FontTracking->"Extended"],
 " ",
 StyleBox["Re", "Literal",
  FontTracking->"Extended"],
 StyleBox["placeAll", "Literal"],
 " to emulate a ",
 StyleBox["ReplaceRepeated", "Literal"],
 StyleBox[" with a ",
  FontTracking->"Extended"],
 StyleBox["small number of iterations that re",
  FontTracking->"Plain"],
 "turn the result after each iteration."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.432415278875*^9, 3.43241538515625*^9}, {
   3.43241545640625*^9, 3.43241550859375*^9}, {3.43241558859375*^9, 
   3.43241567334375*^9}, 3.432416148421875*^9, {3.432416274484375*^9, 
   3.4324163239375*^9}, {3.433441718203125*^9, 3.43344172121875*^9}, {
   3.4704059503917837`*^9, 3.470405979490293*^9}, {3.471703889708829*^9, 
   3.47170391235324*^9}, {3.4855221273897867`*^9, 3.485522132285767*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ReplaceAll", "[", 
     RowBox[{"#", ",", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"b", ",", "a"}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.432415652125*^9, 3.432415724375*^9}, {
  3.432415891703125*^9, 3.4324159463125*^9}, {3.43241605709375*^9, 
  3.432416118328125*^9}},
 CellLabel->"In[124]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.43241574225*^9, {3.4324159393125*^9, 3.432415947234375*^9}, 
   3.432416121296875*^9, 3.4334423145*^9, 3.4334469773125*^9, 
   3.465684266142*^9, 3.4678481470549507`*^9, 3.468597407038468*^9},
 CellLabel->"Out[124]="]
}, Open  ]],

Cell["\<\
Here the problem is an oscillating transformation that will never settle \
down. You could probably see that by inspection, but seeing each step makes \
it obvious.\
\>", "Text",
 CellChangeTimes->{{3.432416157*^9, 3.432416252796875*^9}, 
   3.433441725296875*^9, 3.43344175653125*^9, 3.43344198778125*^9, {
   3.4704059964978943`*^9, 3.470406006227931*^9}}]
}, Open  ]],

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.432413975140625*^9, 3.43241398125*^9}}],

Cell[TextData[{
 "Sometimes applying the debugging techniques in the solution can still leave \
you stumped. Here is an example that one would expect to terminate based on \
the fact that ",
 StyleBox["NumberQ[Infinity]", "Literal"],
 " is false."
}], "Text",
 CellChangeTimes->{{3.432417865734375*^9, 3.432418013265625*^9}, 
   3.433441759828125*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReplaceRepeated", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "a", ",", "2", ",", "b", ",", " ", "3", ",", " ", "c"}],
     "}"}], " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "NumberQ"}], "\[Rule]", 
     RowBox[{"F", "[", "Infinity", "]"}]}], "}"}], ",", 
   RowBox[{"MaxIterations", "->", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432417111359375*^9, 3.432417213421875*^9}, {
  3.43241735184375*^9, 3.432417409203125*^9}, {3.432417448734375*^9, 
  3.43241745209375*^9}, {3.432417565875*^9, 3.432417575828125*^9}, {
  3.432417636796875*^9, 3.432417674328125*^9}, {3.4324177265625*^9, 
  3.432417737921875*^9}, {3.432417770796875*^9, 3.43241780075*^9}, {
  3.43241783225*^9, 3.432417837640625*^9}},
 CellLabel->"In[125]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplaceRepeated", "::", "\<\"rrlim\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"Exiting after \\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\({1, a, 2, b, 3, c}\\), \\\"MT\
\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" scanned \\\\\\\"\\\", \\\"MT\
\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(10\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" times.\\\\\\\"\\\", \\\
\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceRepeated/rrlim\\\", ButtonNote -> \
\\\"ReplaceRepeated::rrlim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.432417807921875*^9, 3.43241783821875*^9, 
  3.432418028296875*^9, 3.433442314546875*^9, 3.43344697734375*^9, 
  3.465684266166*^9, 3.467848147102229*^9, 3.468597407072549*^9},
 CellLabel->"During evaluation of In[125]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"F", "[", 
    RowBox[{"DirectedInfinity", "[", 
     RowBox[{"F", "[", 
      RowBox[{"DirectedInfinity", "[", 
       RowBox[{"F", "[", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"F", "[", 
          RowBox[{"DirectedInfinity", "[", 
           RowBox[{"F", "[", 
            RowBox[{"DirectedInfinity", "[", 
             RowBox[{"F", "[", 
              RowBox[{"DirectedInfinity", "[", 
               RowBox[{"F", "[", 
                RowBox[{"DirectedInfinity", "[", 
                 RowBox[{"F", "[", 
                  RowBox[{"DirectedInfinity", "[", 
                   RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", "\[Infinity]", "]"}], "]"}], "]"}], 
                   "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", "a", 
   ",", 
   RowBox[{"F", "[", 
    RowBox[{"DirectedInfinity", "[", 
     RowBox[{"F", "[", 
      RowBox[{"DirectedInfinity", "[", 
       RowBox[{"F", "[", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"F", "[", 
          RowBox[{"DirectedInfinity", "[", 
           RowBox[{"F", "[", 
            RowBox[{"DirectedInfinity", "[", 
             RowBox[{"F", "[", 
              RowBox[{"DirectedInfinity", "[", 
               RowBox[{"F", "[", 
                RowBox[{"DirectedInfinity", "[", 
                 RowBox[{"F", "[", 
                  RowBox[{"DirectedInfinity", "[", 
                   RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", "\[Infinity]", "]"}], "]"}], "]"}], 
                   "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", "b", 
   ",", 
   RowBox[{"F", "[", 
    RowBox[{"DirectedInfinity", "[", 
     RowBox[{"F", "[", 
      RowBox[{"DirectedInfinity", "[", 
       RowBox[{"F", "[", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"F", "[", 
          RowBox[{"DirectedInfinity", "[", 
           RowBox[{"F", "[", 
            RowBox[{"DirectedInfinity", "[", 
             RowBox[{"F", "[", 
              RowBox[{"DirectedInfinity", "[", 
               RowBox[{"F", "[", 
                RowBox[{"DirectedInfinity", "[", 
                 RowBox[{"F", "[", 
                  RowBox[{"DirectedInfinity", "[", 
                   RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", "\[Infinity]", "]"}], "]"}], "]"}], 
                   "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
           "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", "c"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.43241767796875*^9, 3.432417739203125*^9, {3.43241779359375*^9, 
   3.432417807921875*^9}, 3.43241783821875*^9, 3.432418028296875*^9, 
   3.433442314578125*^9, 3.433446977359375*^9, 3.465684266171*^9, 
   3.467848147105967*^9, 3.468597407076482*^9},
 CellLabel->"Out[125]="]
}, Open  ]],

Cell[TextData[{
 "In situations like this, you should try applying ",
 StyleBox["FullForm", "Literal"],
 " to the output to see what Mathematica sees rather than what it shows you."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.43241803290625*^9, 3.432418089953125*^9}, 
   3.433441762234375*^9, 3.470406036256893*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.43241705075*^9, 3.432417059140625*^9}, 
   3.43241809296875*^9},
 CellLabel->"In[126]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"DirectedInfinity", "[", 
       RowBox[{"F", "[", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"F", "[", 
          RowBox[{"DirectedInfinity", "[", 
           RowBox[{"F", "[", 
            RowBox[{"DirectedInfinity", "[", 
             RowBox[{"F", "[", 
              RowBox[{"DirectedInfinity", "[", 
               RowBox[{"F", "[", 
                RowBox[{"DirectedInfinity", "[", 
                 RowBox[{"F", "[", 
                  RowBox[{"DirectedInfinity", "[", 
                   RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", "1", "]"}], "]"}], "]"}],
                     "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
              "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     ",", "a", ",", 
     RowBox[{"F", "[", 
      RowBox[{"DirectedInfinity", "[", 
       RowBox[{"F", "[", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"F", "[", 
          RowBox[{"DirectedInfinity", "[", 
           RowBox[{"F", "[", 
            RowBox[{"DirectedInfinity", "[", 
             RowBox[{"F", "[", 
              RowBox[{"DirectedInfinity", "[", 
               RowBox[{"F", "[", 
                RowBox[{"DirectedInfinity", "[", 
                 RowBox[{"F", "[", 
                  RowBox[{"DirectedInfinity", "[", 
                   RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", "1", "]"}], "]"}], "]"}],
                     "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
              "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     ",", "b", ",", 
     RowBox[{"F", "[", 
      RowBox[{"DirectedInfinity", "[", 
       RowBox[{"F", "[", 
        RowBox[{"DirectedInfinity", "[", 
         RowBox[{"F", "[", 
          RowBox[{"DirectedInfinity", "[", 
           RowBox[{"F", "[", 
            RowBox[{"DirectedInfinity", "[", 
             RowBox[{"F", "[", 
              RowBox[{"DirectedInfinity", "[", 
               RowBox[{"F", "[", 
                RowBox[{"DirectedInfinity", "[", 
                 RowBox[{"F", "[", 
                  RowBox[{"DirectedInfinity", "[", 
                   RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", 
                    RowBox[{"F", "[", 
                    RowBox[{"DirectedInfinity", "[", "1", "]"}], "]"}], "]"}],
                     "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
              "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
     ",", "c"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.432417059515625*^9, 3.432418093875*^9, 
  3.433442314609375*^9, 3.433446977390625*^9, 3.4656842661940002`*^9, 
  3.467848147152564*^9, 3.468597407106291*^9},
 CellLabel->"Out[126]//FullForm="]
}, Open  ]],

Cell["\<\
Do you see the problem? It is near the end of the output. If you can\
\[CloseCurlyQuote]t see it, consider this.\
\>", "Text",
 CellChangeTimes->{{3.43241812725*^9, 3.43241817928125*^9}, 
   3.4704060602967367`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "Infinity", "]"}]], "Input",
 CellChangeTimes->{{3.4324170683125*^9, 3.432417075546875*^9}, {
  3.43241815575*^9, 3.4324181584375*^9}},
 CellLabel->"In[127]:="],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"DirectedInfinity", "[", "1", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.432417075890625*^9, 3.4324181815625*^9, 
  3.43344231465625*^9, 3.433446977421875*^9, 3.465684266218*^9, 
  3.467848147204668*^9, 3.46859740713878*^9},
 CellLabel->"Out[127]//FullForm="]
}, Open  ]],

Cell[TextData[{
 StyleBox["The full form of ",
  FontTracking->"SemiCondensed"],
 StyleBox["Infinity", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" contains the integer 1, which is being matched and replaced",
  FontTracking->"SemiCondensed"],
 StyleBox[" with",
  FontTracking->"Plain"],
 StyleBox[" F[DirectedInfinity[1]]", "Literal",
  FontTracking->"Plain"],
 StyleBox[" and so on, ad infinitum. In this simple",
  FontTracking->"Plain"],
 StyleBox[" case, ",
  FontTracking->"Extended"],
 StyleBox["Replace\[DiscretionaryHyphen]Repeated", "Literal",
  FontTracking->"Extended"],
 StyleBox[" was not needed because ",
  FontTracking->"Extended"],
 StyleBox["ReplaceAll", "Literal",
  FontTracking->"Extended"],
 StyleBox[" would do the trick. If ",
  FontTracking->"Extended"],
 StyleBox["Replac", "Literal",
  FontTracking->"Extended"],
 StyleBox["e", "Literal"],
 StyleBox["\[DiscretionaryHyphen]Repeated", "Literal",
  FontTracking->"Extended"],
 StyleBox[" is necessary, break the process into two steps, first using a \
proxy for the con",
  FontTracking->"Extended"],
 "struct that has the hidden representation that is messing you up. Here I \
use ",
 StyleBox["Inf", "Literal"],
 " instead of ",
 StyleBox["Infinity", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.432418245328125*^9, 3.432418536734375*^9}, {
   3.432418645453125*^9, 3.43241867715625*^9}, {3.470406077838582*^9, 
   3.470406159564098*^9}, 3.4717039545139503`*^9, {3.47558434829414*^9, 
   3.475584357998479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "a", ",", "2", ",", "b", ",", " ", "3", ",", " ", "c"}],
     "}"}], " ", "//.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"_", "?", "NumberQ"}], "\[Rule]", 
     RowBox[{"F", "[", "Inf", "]"}]}], "}"}]}], " ", "/.", " ", 
  RowBox[{"Inf", " ", "\[Rule]", " ", "Infinity"}]}]], "Input",
 CellChangeTimes->{{3.4324185669375*^9, 3.432418588375*^9}},
 CellLabel->"In[128]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"F", "[", "\[Infinity]", "]"}], ",", "a", ",", 
   RowBox[{"F", "[", "\[Infinity]", "]"}], ",", "b", ",", 
   RowBox[{"F", "[", "\[Infinity]", "]"}], ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.432418590625*^9, 3.433442314703125*^9, 
  3.4334469774375*^9, 3.465684266241*^9, 3.467848147250372*^9, 
  3.468597407171673*^9},
 CellLabel->"Out[128]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.432413989546875*^9, 3.432413991390625*^9}}],

Cell[TextData[{
 "You can find a realistic example of the ",
 StyleBox["Infinity", "Literal"],
 " problem at the Wolfram MathGroup Archives: ",
 StyleBox[ButtonBox["http://bit.ly/2oRAuZ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/2oRAuZ"], None},
  ButtonNote->"http://bit.ly/2oRAuZ"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.470406178474617*^9, 3.470406185838126*^9}, {
  3.470406224097548*^9, 3.4704062241006317`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Preventing Evaluation ",
 " ",
 "Until Replace Is Complete"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{{3.43241940796875*^9, 3.432419443171875*^9}, {
   3.4704062350421667`*^9, 3.47040624081668*^9}, 3.47048278069214*^9, 
   3.471270407010159*^9, 3.4855221337966337`*^9},
 CellTags->"PreventingEvaluationUntilReplaceIsComplete"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.43241944753125*^9, 3.43241945346875*^9}}],

Cell["\<\
You are trying to transform an expression, but the structure you want to \
transform is disappearing due to evaluation before you can transform it.\
\>", "Text",
 CellChangeTimes->{3.470406257154532*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution ", "Heading2",
 CellChangeTimes->{{3.432419562296875*^9, 3.4324195651875*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["Hold", "Literal"],
 " and ",
 StyleBox["ReleaseHold", "Literal"],
 " with the replacement."
}], "Text",
 CellChangeTimes->{{3.43241957175*^9, 3.43241962334375*^9}}],

Cell[CellGroupData[{

Cell["This does not work the way you probably intended.", "Text",
 CellChangeTimes->{3.470406271542696*^9, 3.470406556644512*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+", 
   " ", "1"}], " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[Rule]", "2"}], ",", " ", 
    RowBox[{"Plus", " ", "->", " ", "Times"}]}], "}"}]}]], "Input",
 CellLabel->"In[129]:="],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.432419725203125*^9, 3.43241974171875*^9}, 
   3.432420035875*^9, 3.432420297578125*^9, 3.4324204763125*^9, 
   3.43344231475*^9, 3.4334469775*^9, 3.465684266264*^9, 3.467848147306519*^9,
    3.468597407208056*^9},
 CellLabel->"Out[129]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
This preserves the structure until the transformation is complete, then \
allows it to evaluate.\
\>", "Text",
 CellChangeTimes->{{3.470407098912339*^9, 3.470407099235656*^9}, 
   3.470407129574646*^9}],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
    "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+",
      " ", "1"}], " ", "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2"}], ",", " ", 
     RowBox[{"Plus", " ", "->", " ", "Times"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[130]:="],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{
  3.4324198535625*^9, 3.432419888921875*^9, {3.432419965890625*^9, 
   3.432420002078125*^9}, {3.432420047734375*^9, 3.4324200585625*^9}, {
   3.432420107*^9, 3.432420134890625*^9}, {3.432420202859375*^9, 
   3.432420277*^9}, 3.433442314765625*^9, 3.43344697753125*^9, 
   3.465684266288*^9, 3.4678481473503723`*^9, 3.468597407254407*^9},
 CellLabel->"Out[130]="]
}, Open  ]],

Cell[TextData[{
 "A related problem is wanting the left side of a replacement rule to remain \
unevaluated. In this case, you need to use ",
 StyleBox["HoldPattern", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.432421038484375*^9, 3.432421105921875*^9}, {
  3.43242153465625*^9, 3.432421549875*^9}, {3.470407142227374*^9, 
  3.4704071723123703`*^9}}],

Cell[TextData[{
 StyleBox["This is equivalent to ",
  FontTracking->"Plain"],
 StyleBox["ReleaseHold[Hold", "Literal",
  FontTracking->"Plain"],
 StyleBox["[1 + 1 + 1 + 1 + 1 ] /. 4 :> 2 + 2 + 2 + 2 ]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[".",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{
  3.470407217406913*^9, {3.475584407370619*^9, 3.475584409018243*^9}}],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{
    "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+",
      " ", "1"}], " ", "]"}], "/.", " ", 
   RowBox[{
    RowBox[{"1", "+", "1", "+", "1", "+", "1"}], " ", ":>", " ", 
    RowBox[{"2", " ", "+", " ", "2", " ", "+", " ", "2", " ", "+", "2"}]}]}], 
  "]"}]], "Input",
 CellLabel->"In[131]:="],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.432421459984375*^9, 3.433442314796875*^9, 
  3.4334469775625*^9, 3.465684266311*^9, 3.467848147406679*^9, 
  3.4685974072928333`*^9},
 CellLabel->"Out[131]="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "works", " ", "as", " ", "intended", " ", "by", " ", 
    "preserving", " ", "the", " ", "structure", " ", "of", " ", "the", " ", 
    RowBox[{"pattern", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ReleaseHold", "[", 
   RowBox[{
    RowBox[{"Hold", "[", 
     RowBox[{
     "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", "+", " ", "1", " ", 
      "+", " ", "1"}], " ", "]"}], "/.", " ", 
    RowBox[{
     RowBox[{"HoldPattern", "[", 
      RowBox[{"1", "+", "1", "+", "1", "+", "1"}], "]"}], " ", ":>", " ", 
     RowBox[{"2", " ", "+", " ", "2", " ", "+", " ", "2", " ", "+", "2"}]}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.43242090725*^9, 3.432420916984375*^9}, {
  3.432421123671875*^9, 3.43242133890625*^9}, {3.4324214825*^9, 
  3.432421502265625*^9}, {3.432421650328125*^9, 3.432421702046875*^9}, {
  3.4704072302731543`*^9, 3.470407239921976*^9}},
 CellLabel->"In[132]:="],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.43242150303125*^9, 3.433442314828125*^9, 
  3.43344697759375*^9, 3.465684266334*^9, 3.467848147450244*^9, 
  3.468597407321136*^9},
 CellLabel->"Out[132]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.43242039665625*^9, 3.432420399078125*^9}}],

Cell[TextData[{
 StyleBox["Keep in mind that ",
  FontTracking->"SemiCondensed"],
 StyleBox["HoldPattern[expr]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" differs from ",
  FontTracking->"SemiCondensed"],
 StyleBox["Hold[expr]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". From a pattern-matching",
  FontTracking->"SemiCondensed"],
 " point of view, ",
 StyleBox["HoldPattern[expr]", "Literal"],
 " ",
 StyleBox["is equivalent to ",
  FontTracking->"Extended"],
 StyleBox["expr", "Literal",
  FontTracking->"Extended"],
 StyleBox[" alone except it pre",
  FontTracking->"Extended"],
 "vents evaluation. ",
 StyleBox["Hold[expr]", "Literal"],
 " includes the ",
 StyleBox["Hold", "Literal"],
 " as part of the pattern."
}], "Text",
 CellChangeTimes->{{3.432420610578125*^9, 3.43242065834375*^9}, 
   3.4324206970625*^9, {3.432421745140625*^9, 3.432421929484375*^9}, {
   3.4324219710625*^9, 3.432422041203125*^9}, 3.432422259296875*^9, 
   3.433441780171875*^9, {3.470407262929237*^9, 3.470407314960835*^9}, 
   3.471270469778977*^9, {3.475584459308876*^9, 3.47558446813428*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GO", " ", "=", " ", "\"\<gone\>\""}], ";"}]], "Input", \
"ProductionPageBreak",
 CellChangeTimes->{{3.432422183609375*^9, 3.432422213765625*^9}},
 CellLabel->"In[133]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hold", "[", 
   RowBox[{"1", " ", "+", " ", "2", " ", "+", " ", "3"}], "]"}], " ", "/.", 
  " ", 
  RowBox[{
   RowBox[{"HoldPattern", "[", 
    RowBox[{"1", " ", "+", " ", "2", " ", "+", " ", "3"}], "]"}], " ", ":>", 
   " ", "GO"}]}]], "Input",
 CellChangeTimes->{{3.432422081296875*^9, 3.432422140328125*^9}, {
  3.432422217734375*^9, 3.432422218625*^9}},
 CellLabel->"In[134]:="],

Cell[BoxData[
 RowBox[{"Hold", "[", "GO", "]"}]], "Output",
 CellChangeTimes->{3.432422147703125*^9, 3.432422225453125*^9, 
  3.433442314859375*^9, 3.433446977625*^9, 3.465684266362*^9, 
  3.467848147533266*^9, 3.4685974073707457`*^9},
 CellLabel->"Out[134]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Hold", "[", 
   RowBox[{"1", " ", "+", " ", "2", " ", "+", " ", "3"}], "]"}], " ", "/.", 
  " ", 
  RowBox[{
   RowBox[{"Hold", "[", 
    RowBox[{"1", " ", "+", " ", "2", " ", "+", " ", "3"}], "]"}], " ", ":>", 
   " ", "GO"}]}]], "Input",
 CellChangeTimes->{
  3.432422167609375*^9, {3.432422231078125*^9, 3.43242223175*^9}},
 CellLabel->"In[135]:="],

Cell[BoxData["\<\"gone\"\>"], "Output",
 CellChangeTimes->{3.432422176203125*^9, 3.432422233421875*^9, 
  3.433442314890625*^9, 3.433446977640625*^9, 3.4656842663859997`*^9, 
  3.46784814758785*^9, 3.4685974074710007`*^9},
 CellLabel->"Out[135]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.4324204035625*^9, 3.432420405765625*^9}}],

Cell[TextData[{
 ButtonBox["Chapter 2",
  BaseStyle->"Hyperlink",
  ButtonData->{"FunctionalProgramming.nb", "IntroductionCh2"}],
 " discusses ",
 StyleBox["Hold", "Literal"],
 " in more detail."
}], "Text",
 CellChangeTimes->{{3.4704821433922157`*^9, 3.470482143943633*^9}, {
  3.471270569936664*^9, 3.4712705705241737`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Manipulating Patterns with Patterns"
}], "Heading1",
 CellChangeTimes->{{3.4328224790625*^9, 3.43282249234375*^9}},
 CellTags->"ManipulatingPatternsWithPatterns"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.432822498015625*^9, 3.432822501203125*^9}}],

Cell["You need to transform a pattern expression using patterns. ", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.432822567453125*^9, 3.4328225705625*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["Verbatim", "Literal"],
 " to allow a pattern to match another ",
 StyleBox["pattern. Here ",
  FontTracking->"Extended"],
 StyleBox["Verbatim", "Literal",
  FontTracking->"Extended"],
 StyleBox[" tells Math",
  FontTracking->"Extended"],
 "ematica to treat the expression literally. "
}], "Text",
 CellChangeTimes->{3.470424763854348*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x_", " ", "\[Rule]", " ", "1"}], "/.", " ", 
  RowBox[{
   RowBox[{"Verbatim", "[", "x_", "]"}], " ", "\[RuleDelayed]", " ", 
   "y_"}]}]], "Input",
 CellChangeTimes->{{3.432823101046875*^9, 3.4328231283125*^9}, {
  3.43282353925*^9, 3.43282354809375*^9}},
 CellLabel->"In[136]:="],

Cell[BoxData[
 RowBox[{"y_", "\[Rule]", "1"}]], "Output",
 CellChangeTimes->{3.432823131859375*^9, 3.43282354878125*^9, 
  3.433442314921875*^9, 3.433446977671875*^9, 3.465684266409*^9, 
  3.467848147622024*^9, 3.468597407505224*^9},
 CellLabel->"Out[136]="]
}, Open  ]],

Cell["\<\
Here we want to split up a pattern variable into the name and the head it \
matches.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x_Integer", " ", "/.", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Verbatim", "[", "Pattern", "]"}], "[", 
    RowBox[{"name_", ",", "head_"}], "]"}], " ", "\[RuleDelayed]", " ", 
   RowBox[{"{", 
    RowBox[{"name", ",", " ", "head"}], "}"}]}]}]], "Input",
 CellLabel->"In[137]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "_Integer"}], "}"}]], "Output",
 CellChangeTimes->{3.432823250390625*^9, 3.43344231496875*^9, 
  3.433446977703125*^9, 3.465684266433*^9, 3.4678481476676273`*^9, 
  3.468597407554859*^9},
 CellLabel->"Out[137]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.43282331596875*^9, 3.432823318265625*^9}}],

Cell[TextData[{
 StyleBox["The key to understanding the solution is to ",
  FontTracking->"SemiCondensed"],
 StyleBox["consider the ",
  FontTracking->"Plain"],
 StyleBox["FullForm", "Literal",
  FontTracking->"Plain"],
 StyleBox[" of pattern variables.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.43282333171875*^9, 3.432823370015625*^9}, 
   3.43344180684375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FullForm", "[", "x_", "]"}], ",", " ", 
   RowBox[{"FullForm", "[", "x__", "]"}], ",", " ", 
   RowBox[{"FullForm", "[", "x___", "]"}], ",", " ", 
   RowBox[{"FullForm", "[", "x_Integer", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.432823375359375*^9, 3.432823453890625*^9}},
 CellLabel->"In[138]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    StyleBox[
     RowBox[{"Pattern", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blank", "[", "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox[
     RowBox[{"Pattern", "[", 
      RowBox[{"x", ",", 
       RowBox[{"BlankSequence", "[", "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox[
     RowBox[{"Pattern", "[", 
      RowBox[{"x", ",", 
       RowBox[{"BlankNullSequence", "[", "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm], ",", 
   TagBox[
    StyleBox[
     RowBox[{"Pattern", "[", 
      RowBox[{"x", ",", 
       RowBox[{"Blank", "[", "Integer", "]"}]}], "]"}],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm]}], "}"}]], "Output",
 CellChangeTimes->{3.432823385296875*^9, 3.43282345503125*^9, 3.433442315*^9, 
  3.433446977734375*^9, 3.465684266457*^9, 3.4678481477231894`*^9, 
  3.4685974075884666`*^9},
 CellLabel->"Out[138]="]
}, Open  ]],

Cell[TextData[{
 "Without ",
 StyleBox["Verbatim", "Literal"],
 ", the first example in the first part of the solution would go wrong."
}], "Text",
 CellChangeTimes->{{3.4328236169375*^9, 3.4328236760625*^9}, {
   3.432823715578125*^9, 3.432823719*^9}, {3.4328237514375*^9, 
   3.432823765484375*^9}, {3.4704073467849693`*^9, 3.470407346850168*^9}, 
   3.470426408874317*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x_", " ", "\[Rule]", " ", "1"}], "/.", " ", 
  RowBox[{"x_", " ", "\[RuleDelayed]", " ", "y_"}]}]], "Input",
 CellChangeTimes->{{3.43282349684375*^9, 3.43282351221875*^9}, {
  3.432823556875*^9, 3.432823559125*^9}},
 CellLabel->"In[139]:="],

Cell[BoxData["y_"], "Output",
 CellChangeTimes->{3.432823512828125*^9, 3.432823559796875*^9, 
  3.43344231503125*^9, 3.433446977765625*^9, 3.465684266507*^9, 
  3.467848147767406*^9, 3.46859740762566*^9},
 CellLabel->"Out[139]="]
}, Open  ]],

Cell["\<\
The second part of the solution would fail because a pattern can\
\[CloseCurlyQuote]t have another pattern as its name.\
\>", "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.432823824125*^9, 3.43282389178125*^9}, 
   3.433441815859375*^9, 3.470407428997263*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x_Integer", " ", "/.", " ", 
  RowBox[{
   RowBox[{"Pattern", "[", 
    RowBox[{"name_", ",", "head_"}], "]"}], " ", "\[RuleDelayed]", " ", 
   RowBox[{"{", 
    RowBox[{"name", ",", " ", "head"}], "}"}]}]}]], "Input",
 CellLabel->"In[140]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Pattern", "::", "\<\"patvar\"\>"}], ":", 
  " ", "\<\"\\!\\(\\*StyleBox[\\\"\\\\\\\"First element in pattern \\\\\\\"\\\
\", \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Pattern[\\(\\(name_, \
head_\\)\\)]\\), \\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" is \
not a valid pattern name.\\\\\\\"\\\", \\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Pattern/patvar\\\", ButtonNote -> \
\\\"Pattern::patvar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.432823805484375*^9, 3.43344231521875*^9, 
  3.43344697778125*^9, 3.465684266602*^9, 3.467848147822844*^9, 
  3.4685974076555147`*^9},
 CellLabel->"During evaluation of In[140]:="],

Cell[BoxData["x_Integer"], "Output",
 CellChangeTimes->{3.432823805515625*^9, 3.433442315234375*^9, 
  3.433446977796875*^9, 3.465684266606*^9, 3.467848147825926*^9, 
  3.4685974076596212`*^9},
 CellLabel->"Out[140]="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Verbatim[expr]", "Literal"],
 " says \[OpenCurlyDoubleQuote]match ",
 StyleBox["expr", "UserInput"],
 " exactly as it appears.\[CloseCurlyDoubleQuote] You will not use ",
 StyleBox["Verbatim", "Literal"],
 " often unless you find yourself writing Mathematica code to transform \
Mathematica code, as you might if you were writing a special interpreter or \
code to rewrite Mathematica code containing patterns in some other form."
}], "Text",
 CellChangeTimes->{{3.432823946578125*^9, 3.432824198625*^9}, {
   3.470408368210643*^9, 3.4704083846495256`*^9}, {3.4712706447655478`*^9, 
   3.4712706459822407`*^9}, 3.4712706768199577`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.432824211734375*^9, 3.432824213828125*^9}}],

Cell[TextData[{
 StyleBox["The Mathematica Programmer II", "CitationTitle",
  FontTracking->"Plain"],
 StyleBox[" by Roman Maeder (Academic P",
  FontTracking->"Plain"],
 StyleBox["ress) uses ",
  FontTracking->"SemiCondensed"],
 StyleBox["Verbatim", "Literal",
  FontTracking->"SemiCondensed"],
 " during the development of an interpreter for a Prolog-like language."
}], "Text",
 CellChangeTimes->{{3.432824222578125*^9, 3.432824261921875*^9}, {
  3.432824324484375*^9, 3.432824393390625*^9}, {3.470408404142934*^9, 
  3.4704084099051247`*^9}, {3.47127068345008*^9, 3.471270685792193*^9}, {
  3.4755845246111403`*^9, 3.4755845264957943`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Optimizing Rules"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.421016991171875*^9, 3.421017017171875*^9}, 
   3.421017061578125*^9},
 CellTags->"OptimizingRules"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, 
   3.421017051359375*^9}],

Cell["\<\
You have a large list of frequently used rules and want to speed up \
processing.\
\>", "Text",
 CellChangeTimes->{{3.4324955338125*^9, 3.43249556265625*^9}, {
  3.470408442660746*^9, 3.470408465327032*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
  3.421017030109375*^9, 3.421017051359375*^9}}],

Cell[TextData[{
 "Use ",
 StyleBox["Dispatch", "Literal"],
 " to create a dispatch table and use that in place of the rules."
}], "Text",
 CellChangeTimes->{{3.432495566921875*^9, 3.4324955746875*^9}, {
  3.4324956079375*^9, 3.4324956231875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rules", " ", "=", " ", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"Inf", "\[Rule]", " ", "Infinity"}], ",", " ", 
    RowBox[{"sin", " ", "\[Rule]", " ", "Sin"}], ",", " ", 
    RowBox[{"cos", " ", "\[Rule]", " ", "Cos"}], ",", " ", 
    RowBox[{"tan", " ", "\[Rule]", " ", "Tan"}], ",", " ", 
    RowBox[{"pi", " ", "\[Rule]", " ", "Pi"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.43249562671875*^9, 3.43249577453125*^9}},
 CellLabel->"In[141]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Inf", "\[Rule]", "\[Infinity]"}], ",", 
   RowBox[{"sin", "\[Rule]", "Sin"}], ",", 
   RowBox[{"cos", "\[Rule]", "Cos"}], ",", 
   RowBox[{"tan", "\[Rule]", "Tan"}], ",", 
   RowBox[{"pi", "\[Rule]", "\[Pi]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.432495782921875*^9, 3.433442315265625*^9, 
  3.4334469778125*^9, 3.46568426663*^9, 3.467848147951231*^9, 
  3.468597407689022*^9},
 CellLabel->"Out[141]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dispatch", " ", "=", " ", 
  RowBox[{"Dispatch", "[", "rules", "]"}]}]], "Input",
 CellChangeTimes->{{3.432495791296875*^9, 3.43249580334375*^9}},
 CellLabel->"In[142]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"Dispatch", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inf", "\[Rule]", "\[Infinity]"}], ",", 
      RowBox[{"sin", "\[Rule]", "Sin"}], ",", 
      RowBox[{"cos", "\[Rule]", "Cos"}], ",", 
      RowBox[{"tan", "\[Rule]", "Tan"}], ",", 
      RowBox[{"pi", "\[Rule]", "\[Pi]"}]}], "}"}], ",", 
    TagBox[
     InterpretationBox[
      RowBox[{"-", "DispatchTables", "-"}],
      1],
     DisplayForm]}], "]"}],
  Function[BoxForm`arg, 
   ReplacePart[
    HoldComplete[
     Dispatch[ProgrammingDump`dumy]], 
    HoldComplete[BoxForm`arg], {1, 1}, {1, 1}], {HoldAllComplete}]]], "Output",\

 CellChangeTimes->{3.432495804484375*^9, 3.433442315375*^9, 3.433446977875*^9,
   3.4656842666549997`*^9, 3.467848148002039*^9, 3.4685974077275677`*^9},
 CellLabel->"Out[142]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"cos", "[", 
    RowBox[{"2", " ", "pi", " ", "\[Theta]"}], "]"}], " ", "+", " ", 
   RowBox[{"sin", "[", 
    RowBox[{"\[Theta]", "^", "2"}], "]"}], " ", "-", " ", 
   RowBox[{"sin", "[", 
    RowBox[{"cos", "[", 
     RowBox[{"3", " ", "z"}], "]"}], "]"}]}], " ", "/.", " ", 
  "dispatch"}]], "Input",
 CellChangeTimes->{{3.432495815375*^9, 3.43249590915625*^9}},
 CellLabel->"In[143]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"2", " ", "\[Pi]", " ", "\[Theta]"}], "]"}], "+", 
  RowBox[{"Sin", "[", 
   SuperscriptBox["\[Theta]", "2"], "]"}], "-", 
  RowBox[{"Sin", "[", 
   RowBox[{"Cos", "[", 
    RowBox[{"3", " ", "z"}], "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.432495912015625*^9, 3.433442315421875*^9, 
  3.43344697790625*^9, 3.465684266679*^9, 3.4678481480338497`*^9, 
  3.468597407754692*^9},
 CellLabel->"Out[143]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2", "ProductionPageBreak",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
  3.421017036734375*^9, 3.421017051359375*^9}}],

Cell[TextData[{
 "If you do a lot of multiple-rule transformations, it is convenient to store \
all the rules in a single variable. This common practice makes maintenance of \
your code simpler since there is only a single definition to maintain for all \
rules. However, the penalty for doing this is that the performance of a \
replace decreases a",
 StyleBox["s the number of rules in",
  FontTracking->"Extended"],
 "creases. This is because each rule must be scanned in turn, even if it ends \
up being inapplicable to a given transformation. Rule dispatch tables \
optimize rule dispatch so it is mostly independent of the number of rules."
}], "Text",
 CellChangeTimes->{{3.432495974171875*^9, 3.432496287328125*^9}, {
   3.433441827875*^9, 3.433441840203125*^9}, 3.470408501234462*^9, {
   3.4704085351861477`*^9, 3.470408540564237*^9}, {3.470408580611039*^9, 
   3.470408666253145*^9}}],

Cell[TextData[{
 "To test this claim, I generate a list of 5,000 rules, ",
 StyleBox["called ",
  FontTracking->"Extended"],
 StyleBox["monsterRuleSet", "Literal",
  FontTracking->"Extended"],
 StyleBox[", and then op",
  FontTracking->"Extended"],
 "timize it to create ",
 StyleBox["monsterDispatch", "Literal"],
 ". The timing on the ",
 StyleBox["monsterRuleSet", "Literal"],
 " is very poor, whereas the dispatched version is lickety-split."
}], "Text",
 CellChangeTimes->{{3.4704086789621468`*^9, 3.470408741330459*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"monsterRuleSet", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", " ", "\[Rule]", " ", 
      RowBox[{"i", "+", "1"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "5000"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"monsterDispatch", " ", "=", " ", 
   RowBox[{"Dispatch", "[", "monsterRuleSet", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.432496303390625*^9, 3.432496370328125*^9}, 
   3.432496446515625*^9, 3.432496499609375*^9, 3.432496553625*^9, {
   3.432496585140625*^9, 3.432496586265625*^9}},
 CellLabel->"In[144]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], " ", "//.", " ", "monsterRuleSet"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.43249645175*^9, 3.4324964696875*^9}, 
   3.432496520796875*^9},
 CellLabel->"In[146]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.291755000000002`", ",", 
   RowBox[{"{", "5001", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.465684269205*^9, 3.467848153778216*^9, 
  3.4685974110751534`*^9},
 CellLabel->"Out[146]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], " ", "//.", " ", "monsterDispatch"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.432496488421875*^9, 3.43249652690625*^9},
 CellLabel->"In[147]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.005827999999993949`", ",", 
   RowBox[{"{", "5001", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.465684269251*^9, 3.4678481538797092`*^9, 
  3.4685974111946697`*^9},
 CellLabel->"Out[147]="]
}, Open  ]],

Cell[TextData[{
 "Peering into the implementation, you can see that the secret to ",
 StyleBox["Dispatch", "Literal"],
 "\[CloseCurlyQuote]",
 "s success is a hash table."
}], "Text",
 CellChangeTimes->{3.470408764776943*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"monsterDispatch", "[", 
   RowBox[{"[", "2", "]"}], "]"}], " ", "//", "Short"}]], "Input",
 CellLabel->"In[148]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"HashTable", "[", 
    RowBox[{"1", ",", "5000", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"10", ",", "2856"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3110", ",", "3440"}], "}"}], ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"{", "1245", "}"}], ",", 
       RowBox[{"\[LeftSkeleton]", "4989", "\[RightSkeleton]"}], ",", 
       RowBox[{"{", "3060", "}"}], ",", 
       RowBox[{"{", "1008", "}"}], ",", 
       RowBox[{"{", "912", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"879", ",", "3696", ",", "4165", ",", "4971"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"545", ",", "676", ",", "4204"}], "}"}]}], "}"}]}], "]"}], 
   "}"}],
  Short]], "Output",
 CellChangeTimes->{3.465684269332*^9, 3.467848154032836*^9, 
  3.4685974112610693`*^9},
 CellLabel->"Out[148]//Short="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language"
}], "Heading1",
 CellChangeTimes->{
  3.421007298609375*^9, {3.421007348203125*^9, 3.421007374703125*^9}, {
   3.4219490760625*^9, 3.4219490845*^9}, {3.4219491246875*^9, 
   3.421949128953125*^9}, 3.475584579514696*^9},
 CellTags->"UsingPatternsAsAQueryLanguage"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, 3.421017209125*^9,
    3.42101726153125*^9}],

Cell["\<\
You want to perform SQL-like queries on data stored in Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.421949205296875*^9, 3.421949228296875*^9}, {
   3.421949275484375*^9, 3.42194930515625*^9}, 3.432750001546875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017030109375*^9, 3.421017051359375*^9}, 3.42101726153125*^9}],

Cell["\<\
Consider data of the sort one might encounter in a relational database but \
encoded in Mathematica form. This example is taken from the classic \
introduction to databases by C. J. Date.\
\>", "Text",
 CellChangeTimes->{{3.421949351140625*^9, 3.42194943159375*^9}, {
   3.4327477375*^9, 3.432747812734375*^9}, 3.470408792655884*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"supplier", "[", " ", 
       RowBox[{
       "\"\<S1\>\"", " ", ",", "\"\<Smith\>\"", ",", " ", "20", ",", 
        "\"\<London\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"supplier", "[", 
       RowBox[{
       "\"\<S2\>\"", ",", "\"\<Jones\>\"", " ", ",", "10", " ", ",", 
        "\"\<Paris\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"supplier", "[", 
       RowBox[{
       "\"\<S3\>\"", ",", "\"\<Blake\>\"", " ", ",", "30", " ", ",", 
        "\"\<Paris\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"supplier", "[", " ", 
       RowBox[{
       "\"\<S4\>\"", ",", "\"\<Clark\>\"", ",", "20", " ", ",", 
        "\"\<London\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"supplier", "[", " ", 
       RowBox[{
       "\"\<S5\>\"", ",", "\"\<Adams\>\"", " ", ",", "30", " ", ",", 
        "\"\<Athens\>\""}], "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"part", "[", 
      RowBox[{
      "\"\<P1\>\"", ",", " ", "\"\<Nut\>\"", " ", ",", "\"\<Red\>\"", ",", 
       " ", "12", ",", " ", "\"\<London\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"part", "[", " ", 
      RowBox[{
      "\"\<P2\>\"", " ", ",", "\"\<Bolt\>\"", " ", ",", "\"\<Green\>\"", ",", 
       " ", "17", ",", "\"\<Paris\>\""}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"part", "[", 
      RowBox[{
      "\"\<P3\>\"", " ", ",", "\"\<Screw\>\"", ",", " ", "\"\<Blue\>\"", ",", 
       " ", "17", ",", " ", "\"\<Rome\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"part", "[", 
      RowBox[{
      "\"\<P4\>\"", " ", ",", "\"\<Screw\>\"", ",", " ", "\"\<Red\>\"", ",", 
       " ", "14", ",", " ", "\"\<London\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"part", "[", " ", 
      RowBox[{
      "\"\<P5\>\"", " ", ",", "\"\<Cam\>\"", ",", " ", "\"\<Blue\>\"", ",", 
       " ", "12", ",", " ", "\"\<Paris\>\""}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"part", "[", " ", 
      RowBox[{
      "\"\<P6\>\"", " ", ",", "\"\<Cog\>\"", ",", " ", "\"\<Red\>\"", " ", 
       ",", "19", ",", " ", "\"\<London\>\""}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"INV", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", " ", 
    RowBox[{
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S1\>\"", " ", ",", "\"\<P1\>\"", " ", ",", "300"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S1\>\"", " ", ",", "\"\<P2\>\"", " ", ",", "200"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S1\>\"", " ", ",", "\"\<P3\>\"", " ", ",", "400"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S1\>\"", " ", ",", "\"\<P4\>\"", " ", ",", "200"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S1\>\"", " ", ",", "\"\<P5\>\"", " ", ",", "100"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S1\>\"", " ", ",", "\"\<P6\>\"", " ", ",", "100"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S2\>\"", " ", ",", "\"\<P1\>\"", " ", ",", "300"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S2\>\"", " ", ",", "\"\<P2\>\"", " ", ",", "400"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S3\>\"", " ", ",", "\"\<P2\>\"", " ", ",", "200"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S4\>\"", " ", ",", "\"\<P2\>\"", " ", ",", "200"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S4\>\"", " ", ",", "\"\<P4\>\"", " ", ",", "300"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"inventory", "[", " ", 
      RowBox[{"\"\<S4\>\"", " ", ",", "\"\<P5\>\"", " ", ",", "400"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.42194950446875*^9, 3.421949586546875*^9}, {
   3.421949649359375*^9, 3.4219496511875*^9}, 3.421950354890625*^9, {
   3.4327313858125*^9, 3.432731400671875*^9}, {3.432731445703125*^9, 
   3.432731448078125*^9}, {3.432731762421875*^9, 3.4327318205625*^9}, {
   3.432734166640625*^9, 3.43273437603125*^9}, {3.432734477875*^9, 
   3.432734619140625*^9}, {3.43273468459375*^9, 3.432734970609375*^9}, {
   3.432735053390625*^9, 3.432735229078125*^9}, 3.432735274078125*^9, {
   3.432735493828125*^9, 3.432735505140625*^9}, {3.432735551265625*^9, 
   3.4327355538125*^9}, {3.43273561634375*^9, 3.432735662828125*^9}, {
   3.432735695921875*^9, 3.4327357014375*^9}, {3.432735740140625*^9, 
   3.4327358166875*^9}, {3.432738900515625*^9, 3.43273890109375*^9}, {
   3.43273908803125*^9, 3.432739088390625*^9}, {3.432746436125*^9, 
   3.432746492328125*^9}, {3.43422378209375*^9, 3.43422378253125*^9}},
 CellLabel->"In[149]:="],

Cell[TextData[{
 "Simple queries can be done using ",
 StyleBox["Cases", "Literal"],
 " alone."
}], "Text",
 CellChangeTimes->{{3.432738445796875*^9, 3.432738479640625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Find", " ", "suppliers", " ", "in", " ", 
    RowBox[{"Paris", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Cases", "[", 
   RowBox[{"S", ",", 
    RowBox[{"supplier", "[", 
     RowBox[{"_", ",", "_", ",", "_", ",", "\"\<Paris\>\""}], "]"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.432738507625*^9, 3.43273863240625*^9}, {
   3.432738665484375*^9, 3.432738665921875*^9}, {3.43273870465625*^9, 
   3.43273879325*^9}, {3.43273883471875*^9, 3.43273885146875*^9}, {
   3.4327390300625*^9, 3.43273903153125*^9}, 3.4704088112773943`*^9},
 CellLabel->"In[152]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"supplier", "[", 
    RowBox[{"\<\"S2\"\>", ",", "\<\"Jones\"\>", ",", "10", 
     ",", "\<\"Paris\"\>"}], "]"}], ",", 
   RowBox[{"supplier", "[", 
    RowBox[{"\<\"S3\"\>", ",", "\<\"Blake\"\>", ",", "30", 
     ",", "\<\"Paris\"\>"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4656842693570004`*^9, 3.4678481542168903`*^9, 
  3.468597411329939*^9},
 CellLabel->"Out[152]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "suppliers", " ", "in", " ", "Paris", " ", "with", " ", 
    "status", " ", "greater", " ", "than", " ", "10."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Cases", "[", 
   RowBox[{"S", ",", 
    RowBox[{"supplier", "[", 
     RowBox[{"_", ",", "_", ",", 
      RowBox[{"status_", "/;", 
       RowBox[{"status", ">", "10"}]}], ",", "\"\<Paris\>\""}], "]"}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.432738507625*^9, 3.43273863240625*^9}, {
   3.432738665484375*^9, 3.432738665921875*^9}, {3.43273870465625*^9, 
   3.43273879325*^9}, {3.43273883471875*^9, 3.43273887946875*^9}, {
   3.432738989390625*^9, 3.43273899434375*^9}, {3.43273902496875*^9, 
   3.43273906665625*^9}, {3.432739127265625*^9, 3.43273914671875*^9}, 
   3.470408828123823*^9},
 CellLabel->"In[153]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"supplier", "[", 
   RowBox[{"\<\"S3\"\>", ",", "\<\"Blake\"\>", ",", "30", 
    ",", "\<\"Paris\"\>"}], "]"}], "}"}]], "Output",
 CellChangeTimes->{3.465684269377*^9, 3.467848154249947*^9, 
  3.468597411364386*^9},
 CellLabel->"Out[153]="]
}, Open  ]],

Cell[TextData[{
 "Queries involving joins can be implemented with the help of ",
 StyleBox["Outer", "Literal"],
 "."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.432739159203125*^9, 3.432739213703125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "suppliers", " ", "and", " ", "parts", " ", "located", " ", 
    "in", " ", "the", " ", "same", " ", 
    RowBox[{"city", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"supplier", "[", 
            RowBox[{"sid_", ",", "__", ",", "city_"}], "]"}], ",", 
           RowBox[{"part", "[", 
            RowBox[{"pid_", ",", "__", ",", "city_"}], "]"}]}], "}"}], " ", 
         "\[RuleDelayed]", " ", 
         RowBox[{"colocated", "[", 
          RowBox[{"sid", ",", "pid", ",", "city"}], "]"}]}]}], "]"}], "&"}], 
     ",", "S", ",", "P"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4327359226875*^9, 3.4327361890625*^9}, {3.4327362225*^9,
    3.43273623015625*^9}, {3.432736300359375*^9, 3.432736308203125*^9}, {
   3.432736358953125*^9, 3.432736385109375*^9}, {3.43273642346875*^9, 
   3.43273644*^9}, {3.432736521890625*^9, 3.43273654746875*^9}, {
   3.432736579453125*^9, 3.432736745796875*^9}, {3.432736797796875*^9, 
   3.43273693353125*^9}, {3.432737023375*^9, 3.4327370259375*^9}, {
   3.43273713171875*^9, 3.432737160453125*^9}, {3.432737250328125*^9, 
   3.432737257984375*^9}, {3.43273730578125*^9, 3.43273731296875*^9}, {
   3.432737376640625*^9, 3.43273743153125*^9}, {3.432737465140625*^9, 
   3.43273770165625*^9}, {3.432737738453125*^9, 3.4327377524375*^9}, {
   3.4327378284375*^9, 3.432737866265625*^9}, {3.432738064609375*^9, 
   3.432738118203125*^9}, {3.432738159046875*^9, 3.432738162203125*^9}, {
   3.4327382173125*^9, 3.432738294546875*^9}, {3.43273922825*^9, 
   3.432739298875*^9}, 3.470408857932816*^9},
 CellLabel->"In[154]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S1\"\>", ",", "\<\"P1\"\>", ",", "\<\"London\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S1\"\>", ",", "\<\"P4\"\>", ",", "\<\"London\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S1\"\>", ",", "\<\"P6\"\>", ",", "\<\"London\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S2\"\>", ",", "\<\"P2\"\>", ",", "\<\"Paris\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S2\"\>", ",", "\<\"P5\"\>", ",", "\<\"Paris\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S3\"\>", ",", "\<\"P2\"\>", ",", "\<\"Paris\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S3\"\>", ",", "\<\"P5\"\>", ",", "\<\"Paris\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S4\"\>", ",", "\<\"P1\"\>", ",", "\<\"London\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S4\"\>", ",", "\<\"P4\"\>", ",", "\<\"London\"\>"}], "]"}], 
   ",", 
   RowBox[{"colocated", "[", 
    RowBox[{"\<\"S4\"\>", ",", "\<\"P6\"\>", ",", "\<\"London\"\>"}], "]"}]}],
   "}"}]], "Output",
 CellChangeTimes->{3.465684269396*^9, 3.467848154285199*^9, 
  3.468597411396027*^9},
 CellLabel->"Out[154]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "suppliers", " ", "who", " ", "have", " ", "the", " ", "same",
     " ", 
    RowBox[{"status", "."}]}], "*)"}], 
  RowBox[{"Flatten", "[", 
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"#1", ",", "#2"}], "}"}], "}"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"supplier", "[", 
             RowBox[{"sid1_", ",", "_", ",", "s_", ",", "_"}], "]"}], ",", 
            RowBox[{"supplier", "[", 
             RowBox[{"sid2_", ",", "_", ",", "s_", ",", "_"}], "]"}]}], "}"}],
           " ", "/;", " ", 
          RowBox[{
           RowBox[{"Order", "[", 
            RowBox[{"sid1", " ", ",", " ", "sid2"}], "]"}], " ", "==", 
           "1"}]}], " ", "\[RuleDelayed]", " ", 
         RowBox[{"same", "[", 
          RowBox[{"sid1", ",", "sid2", ",", "s"}], "]"}]}]}], "]"}], "&"}], 
     ",", "S", ",", "S"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.43273936371875*^9, 3.432739422609375*^9}, {
   3.4327394934375*^9, 3.4327395923125*^9}, {3.43273964346875*^9, 
   3.4327398045625*^9}, {3.43273989396875*^9, 3.432739931359375*^9}, {
   3.432740105625*^9, 3.432740141828125*^9}, {3.432741443203125*^9, 
   3.43274146428125*^9}, 3.432741533921875*^9, 3.470408876485243*^9},
 CellLabel->"In[155]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"same", "[", 
    RowBox[{"\<\"S1\"\>", ",", "\<\"S4\"\>", ",", "20"}], "]"}], ",", 
   RowBox[{"same", "[", 
    RowBox[{"\<\"S3\"\>", ",", "\<\"S5\"\>", ",", "30"}], "]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.465684269416*^9, 3.467848154330043*^9, 
  3.468597411428546*^9},
 CellLabel->"Out[155]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017036734375*^9, 3.421017051359375*^9}, 3.42101726153125*^9}],

Cell["\<\
If the data you need to query resides in a database, it makes more sense to \
let that database do the query work before the data is imported into \
Mathematica. If this is not the case, Mathematica can easily do the job, even \
for rather sophisticated queries. Here are some simple examples with SQL \
equivalents.\
\>", "Text",
 CellChangeTimes->{{3.43223606834375*^9, 3.432236069234375*^9}, {
  3.4327435008125*^9, 3.432743757171875*^9}, {3.432745620859375*^9, 
  3.432745637125*^9}, {3.43282965553125*^9, 3.4328296581875*^9}, {
  3.4704089010176353`*^9, 3.470408937924168*^9}}],

Cell["\<\
Find all pairs of cities where a supplier in the first city has inventory on \
a part in the second city.\
\>", "Text",
 CellChangeTimes->{{3.43274547265625*^9, 3.432745616390625*^9}, {
  3.43274581378125*^9, 3.432745822234375*^9}}],

Cell["\<\
SELECT DISTINCT S.CITY, P.CITY
FROM S, INV, P
WHERE S.SID = INV.SID
AND INV.PID = P.PID;\
\>", "Code",
 CellChangeTimes->{{3.43274565453125*^9, 3.4327457838125*^9}, 
   3.43274917159375*^9, {3.470161344367537*^9, 3.4701613460530653`*^9}, 
   3.470161441188702*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"query", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"supplier", "[", 
       RowBox[{"sid_", ",", "_", ",", "_", ",", "city1_"}], "]"}], ",", 
      RowBox[{"inventory", "[", 
       RowBox[{"sid_", ",", "pid_", ",", "_"}], "]"}], ",", 
      RowBox[{"part", "[", 
       RowBox[{"pid_", ",", "_", ",", "_", ",", "_", ",", "city2_"}], "]"}]}],
      "}"}], " ", "\[RuleDelayed]", " ", 
    RowBox[{"cities", "[", 
     RowBox[{"city1", ",", "city2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Outer", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2", ",", "#3"}], "}"}], "}"}], ",", "query"}],
         "]"}], "&"}], ",", "S", ",", "INV", ",", "P"}], "]"}], "]"}], "]"}], 
  "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.432744909625*^9, 3.432744935796875*^9}, {
  3.43274498421875*^9, 3.43274504971875*^9}, {3.43274508146875*^9, 
  3.432745148375*^9}, {3.432745181140625*^9, 3.4327454174375*^9}},
 CellLabel->"In[156]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"cities", "[", 
       RowBox[{"\<\"London\"\>", ",", "\<\"London\"\>"}], "]"}]},
     {
      RowBox[{"cities", "[", 
       RowBox[{"\<\"London\"\>", ",", "\<\"Paris\"\>"}], "]"}]},
     {
      RowBox[{"cities", "[", 
       RowBox[{"\<\"London\"\>", ",", "\<\"Rome\"\>"}], "]"}]},
     {
      RowBox[{"cities", "[", 
       RowBox[{"\<\"Paris\"\>", ",", "\<\"London\"\>"}], "]"}]},
     {
      RowBox[{"cities", "[", 
       RowBox[{"\<\"Paris\"\>", ",", "\<\"Paris\"\>"}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.465684269436*^9, 3.46784815436723*^9, 
  3.4685974114633827`*^9},
 CellLabel->"Out[157]//TableForm="]
}, Open  ]],

Cell[TextData[{
 "In this case, ",
 StyleBox["ReplaceRepeated", "Literal"],
 " can be used to implement ",
 StyleBox["GROUP BY", "Literal"],
 ". The idea is to continually search for pairs of items that match on the \
grouping criteria and combine them according to some aggregation method, in \
this case the sum of ",
 StyleBox["qty", "Literal"],
 ". Since each replacement removes an inventory item, we are guaranteed to \
terminate when all items are unique. A final ",
 StyleBox["ReplaceAll", "Literal"],
 " is used to extract the relevant information. The use of ",
 StyleBox["Null", "Literal"],
 " in the replacement rule is jus",
 StyleBox["t for aesthetics, conveying that when you ag",
  FontTracking->"Extended"],
 "gregate two inventory records you n",
 StyleBox["o longer have a valid record for a particular",
  FontTracking->"Extended"],
 " supplier."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.470408966822208*^9, 3.470408969075809*^9}, {
  3.4704090039811172`*^9, 3.470409016773868*^9}, {3.470409059886903*^9, 
  3.470409090911372*^9}}],

Cell["\<\
SELECT PID, SUM(QTY)
FROM INV
GROUP BY PID;\
\>", "Code",
 CellChangeTimes->{{3.432746904375*^9, 3.432746984875*^9}, 
   3.432749165171875*^9, {3.4701613507098217`*^9, 3.470161352653461*^9}, {
   3.470161442110354*^9, 3.4701614427335997`*^9}, {3.471271224801819*^9, 
   3.47127124506277*^9}, 3.471271276907769*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"INV", " ", "//.", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Longest", "[", "i1___", "]"}], ",", 
       RowBox[{"inventory", "[", " ", 
        RowBox[{"_", " ", ",", "p_", " ", ",", "q1_"}], "]"}], ",", "i2__", 
       ",", 
       RowBox[{"inventory", "[", 
        RowBox[{"_", ",", "p_", ",", "q2_"}], "]"}], ",", "i3___"}], "}"}], 
     "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{"i1", ",", 
       RowBox[{"inventory", "[", 
        RowBox[{"Null", ",", " ", "p", " ", ",", 
         RowBox[{"q1", "+", "q2"}]}], "]"}], ",", "i2", ",", "i3"}], 
      "}"}]}]}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"inventory", "[", 
     RowBox[{"s_", " ", ",", "p_", " ", ",", "q_"}], "]"}], " ", 
    "\[RuleDelayed]", " ", 
    RowBox[{"totals", "[", 
     RowBox[{"p", ",", "q"}], "]"}]}]}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.432746111046875*^9, 3.43274620475*^9}, {
   3.432746253203125*^9, 3.43274636884375*^9}, 3.4327464093125*^9, {
   3.432746508609375*^9, 3.432746590703125*^9}, {3.432746658671875*^9, 
   3.4327466875625*^9}, {3.432746725984375*^9, 3.432746860515625*^9}, {
   3.43274730503125*^9, 3.432747309015625*^9}, {3.43274741453125*^9, 
   3.432747415890625*^9}, 3.432747447265625*^9},
 CellLabel->"In[158]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"totals", "[", 
       RowBox[{"\<\"P1\"\>", ",", "600"}], "]"}]},
     {
      RowBox[{"totals", "[", 
       RowBox[{"\<\"P2\"\>", ",", "1000"}], "]"}]},
     {
      RowBox[{"totals", "[", 
       RowBox[{"\<\"P3\"\>", ",", "400"}], "]"}]},
     {
      RowBox[{"totals", "[", 
       RowBox[{"\<\"P4\"\>", ",", "500"}], "]"}]},
     {
      RowBox[{"totals", "[", 
       RowBox[{"\<\"P5\"\>", ",", "500"}], "]"}]},
     {
      RowBox[{"totals", "[", 
       RowBox[{"\<\"P6\"\>", ",", "100"}], "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4656842694560003`*^9, 3.467848154414731*^9, 
  3.468597411500334*^9},
 CellLabel->"Out[158]//TableForm="]
}, Open  ]],

Cell[TextData[{
 StyleBox["Suppose you want the names of suppliers who have inventory in the \
part ",
  FontTracking->"Plain"],
 StyleBox["P1", "Literal",
  FontTracking->"Plain"],
 StyleBox[". This in",
  FontTracking->"Plain"],
 StyleBox["v",
  FontTracking->"SemiCondensed"],
 StyleBox["olves integrating information from ",
  FontTracking->"Plain"],
 StyleBox["S", "Literal",
  FontTracking->"Plain"],
 StyleBox[" and ",
  FontTracking->"Plain"],
 StyleBox["INV", "Literal",
  FontTracking->"Plain"],
 StyleBox[". This can be done as a join, but in SQL it can also be done via a \
subquery. ",
  FontTracking->"Plain"],
 StyleBox["You can emulate that using rules. Here ",
  FontTracking->"SemiCondensed"],
 StyleBox["MemberQ", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" implements the semantics of the SQL ",
  FontTracking->"Plain"],
 StyleBox["IN", "Literal",
  FontTracking->"Plain"],
 StyleBox[".",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.432748845875*^9, 3.432749038*^9}, {3.432749794125*^9, 
   3.432749836390625*^9}, 3.43274998846875*^9, 3.46568333745*^9, {
   3.470409158084054*^9, 3.4704091959158163`*^9}}],

Cell["\<\
SELECT NAME
FROM S
WHERE SID IN
\t( \tSELECT SID
\t\tFROM INV
\t\tWHERE PID = 'P2') \
\>", "Code",
 CellChangeTimes->{{3.43274905190625*^9, 3.43274915246875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cases", "[", 
  RowBox[{"S", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"supplier", "[", 
      RowBox[{"sid_", ",", "sname_", ",", "___"}], "]"}], " ", "/;", " ", 
     RowBox[{"MemberQ", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"INV", ",", 
         RowBox[{
          RowBox[{"inventory", "[", 
           RowBox[{"sid1_", ",", "\"\<P2\>\"", ",", "_"}], "]"}], 
          "\[RuleDelayed]", " ", "sid1"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "sid"}], "]"}]}], "\[RuleDelayed]", " ", 
    "sname"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4327492025625*^9, 3.4327492874375*^9}, {
  3.43274933978125*^9, 3.432749480828125*^9}, {3.43274951178125*^9, 
  3.432749530265625*^9}, {3.432749584484375*^9, 3.432749700453125*^9}, {
  3.432749746796875*^9, 3.43274976959375*^9}},
 CellLabel->"In[159]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Smith\"\>", ",", "\<\"Jones\"\>", ",", "\<\"Blake\"\>", 
   ",", "\<\"Clark\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.465684269476*^9, 3.4678481545012503`*^9, 
  3.468597411545706*^9},
 CellLabel->"Out[159]="]
}, Open  ]],

Cell["\<\
In the examples given, I have demonstrated queries for which the data is in \
relational form. One feature of relational form is that it is normalized so \
that each column can hold only atomic data. However, Mathematica is not a \
relational database, so data can appear in just about any form with any level \
of nesting. This is no problem because patterns are much more flexible than \
SQL. Still, I find it easier to put data in a tabular form before trying to \
extract information and relationships with other collections of data. Let\
\[CloseCurlyQuote]s consider an example that is more in the Mathematica \
domain.\
\>", "Text",
 CellChangeTimes->{{3.432750092421875*^9, 3.43275032940625*^9}, {
   3.432758217622248*^9, 3.4327583437709465`*^9}, {3.432826661265625*^9, 
   3.432826881046875*^9}, 3.470161360527529*^9, {3.470409212492831*^9, 
   3.470409257150733*^9}, {3.470409291248315*^9, 3.470409306467799*^9}, {
   3.470426653179688*^9, 3.4704266532204027`*^9}, {3.4855221346996593`*^9, 
   3.48552216081837*^9}}],

Cell[TextData[{
 StyleBox["GraphData", "Literal"],
 " and ",
 StyleBox["PolyhedronData", "Literal"],
 " are two extensive data sources that are bundled with Mathematica 6 and \
later versions. The relationship between these data sources i",
 StyleBox["s that each polyhedron has an associated graph. In ",
  FontTracking->"Plain"],
 StyleBox["PolyhedronData", "Literal",
  FontTracking->"Plain"],
 StyleBox[", the property that ties the two sources together is called ",
  FontTracking->"Plain"],
 StyleBox["SkeletonGraph", "Literal",
  FontTracking->"Plain"],
 StyleBox[". In database jargon, ",
  FontTracking->"Plain"],
 StyleBox["Skele", "Literal",
  FontTracking->"Plain"],
 StyleBox["ton\[DiscretionaryHyphen]G\[DiscretionaryHyphen]raph", "Literal"],
 " is a ",
 StyleBox["foreign key", "Techical Italic"],
 " to ",
 StyleBox["GraphData", "Literal"],
 ", and thus, allows us to investigate relationships between polyhedra and \
their associated graphs. For this example, I want to consider all graphs that \
are both Eulerian and Hamiltonian with their associated polyhedron being \
Archimedean. (An Archimedean solid is a",
 StyleBox[" highly symmetric, semiregular, ",
  FontTracking->"Extended"],
 StyleBox["convex polyhedron composed of two or more types of regular \
polygons meeting in",
  FontTracking->"Plain"],
 StyleBox[" identi",
  FontTracking->"Extended"],
 "cal vertices.)"
}], "Text",
 CellChangeTimes->{{3.432826891390625*^9, 3.43282711665625*^9}, {
   3.432827160921875*^9, 3.43282748853125*^9}, {3.43282756003125*^9, 
   3.432827579921875*^9}, {3.432829568984375*^9, 3.4328296203125*^9}, 
   3.43344186340625*^9, 3.469882631766061*^9, 3.470161361960897*^9, {
   3.470409328607666*^9, 3.4704093336979637`*^9}, {3.4704093643732853`*^9, 
   3.4704094326134167`*^9}, {3.47040950921572*^9, 3.4704095206671867`*^9}, {
   3.4704095522815123`*^9, 3.470409589662697*^9}, {3.4704096366993847`*^9, 
   3.4704096571061077`*^9}, 3.4712713630533524`*^9, {3.471704039351345*^9, 
   3.471704041490979*^9}, {3.475584691820321*^9, 3.475584693660568*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Archimedean", " ", "=", " ", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"PolyhedronData", "[", "#", "]"}], ",", 
         RowBox[{"PolyhedronData", "[", 
          RowBox[{"#", ",", "\"\<SkeletonGraphName\>\""}], "]"}], ",", 
         RowBox[{"PolyhedronData", "[", 
          RowBox[{"#", ",", "\"\<Archimedean\>\""}], "]"}]}], "}"}], "&"}], 
      " ", "/@", " ", 
      RowBox[{"PolyhedronData", "[", "]"}]}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"name_", ",", "image_", ",", "graph_", ",", "True"}], "}"}], 
      "\[RuleDelayed]", " ", 
      RowBox[{"archimedean", "[", 
       RowBox[{"name", ",", "image", ",", "graph"}], "]"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Graphs", " ", "=", " ", 
   RowBox[{"Cases", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ToString", "[", "#", "]"}], ",", 
         RowBox[{"GraphData", "[", "#", "]"}], ",", " ", 
         RowBox[{"GraphData", "[", 
          RowBox[{"#", ",", "\"\<Eulerian\>\""}], "]"}], ",", "  ", 
         RowBox[{"GraphData", "[", 
          RowBox[{"#", ",", "\"\<Hamiltonian\>\""}], "]"}]}], "}"}], "&"}], "/@",
       "  ", 
      RowBox[{"GraphData", "[", "]"}]}], " ", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"name_", ",", "image_", ",", "True", ",", "True"}], "}"}], 
      "  ", "\[RuleDelayed]", " ", 
      RowBox[{"graphEorH", "[", 
       RowBox[{"name", ",", "image"}], "]"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4698825088497868`*^9, 3.469882518633514*^9}},
 CellLabel->"In[160]:="],

Cell["\<\
It\[CloseCurlyQuote]s often a good idea to see how many results you received.\
\
\>", "Text",
 CellChangeTimes->{{3.432828309125*^9, 3.432828354203125*^9}, 
   3.43344186959375*^9, 3.4704097597254457`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Length", "[", "Archimedean", "]"}], ",", 
   RowBox[{"Length", "[", "Graphs", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.43282835784375*^9, 3.43282838325*^9}, 
   3.4698825348970118`*^9},
 CellLabel->"In[162]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"13", ",", "676"}], "}"}]], "Output",
 CellChangeTimes->{3.465684444474*^9, 3.467848290339479*^9, 
  3.468597519255131*^9},
 CellLabel->"Out[162]="]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Outer", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2"}], "}"}], "}"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"archimedean", "[", 
             RowBox[{"pname_", ",", "pimage_", ",", "gname_"}], "]"}], ",", 
            RowBox[{"graphEorH", "[", 
             RowBox[{"gname_", ",", "gimage_"}], "]"}]}], "}"}], "   ", 
          "\[RuleDelayed]", " ", 
          RowBox[{"r", "[", 
           RowBox[{"gname", ",", "pname", ",", "gimage", ",", "pimage"}], 
           "]"}]}]}], "]"}], "&"}], ",", "Archimedean", ",", "Graphs"}], 
     "]"}], "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.43282617996875*^9, 3.4328262386875*^9}, {
   3.43282626903125*^9, 3.432826369484375*^9}, {3.432826399609375*^9, 
   3.432826402921875*^9}, {3.432826556640625*^9, 3.432826563328125*^9}, {
   3.4328277205625*^9, 3.43282778725*^9}, {3.43282782575*^9, 
   3.43282793096875*^9}, {3.432828158546875*^9, 3.432828161859375*^9}, 
   3.469882540379631*^9},
 CellLabel->"In[163]:="],

Cell["\<\
There are exactly 4 cases out of 13 Archimedean polyhedra that meet the \
criteria of having both Eulerian and Hamiltonian graphs. \
\>", "Text",
 CellChangeTimes->{{3.432828201640625*^9, 3.4328282284375*^9}, {
   3.432828398921875*^9, 3.4328285015*^9}, 3.434146781828125*^9, 
   3.4698826411328373`*^9, {3.470409793804984*^9, 3.470409795758319*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"results", " ", "/.", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"r", "[", 
      RowBox[{"gname_", ",", "pname_", ",", "gimage_", ",", "pimage_"}], 
      "]"}], " ", "\[RuleDelayed]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"gname", ",", "gimage"}], "}"}], "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", "a__", "]"}], "\[RuleDelayed]", " ", 
         RowBox[{"Graphics", "[", 
          RowBox[{"a", ",", 
           RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"pname", ",", "pimage"}], "}"}], "/.", 
        RowBox[{
         RowBox[{"Graphics3D", "[", "b__", "]"}], "\[RuleDelayed]", " ", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"b", ",", 
           RowBox[{"ImageSize", "\[Rule]", "100"}]}], "]"}]}]}]}], "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellLabel->"In[164]:="],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {"\<\"CuboctahedralGraph\"\>"},
        {
         GraphicsBox[
          
          TagBox[GraphicsComplexBox[{{-1., 
            0.}, {-0.3694, -0.3694}, {-0.7735, -0.7735}, {-0.3694, 
            0.3694}, {-0.7735, 0.7735}, {0., -1.}, {0., 1.}, {
            0.3694, -0.3694}, {0.7735, -0.7735}, {0.3694, 0.3694}, {0.7735, 
            0.7735}, {1., 0.}}, {
             {RGBColor[0.5, 0., 0.], 
              LineBox[{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 4}, {2, 6}, {2, 
               8}, {3, 5}, {3, 6}, {3, 9}, {4, 7}, {4, 10}, {5, 7}, {5, 11}, {
               6, 8}, {6, 9}, {7, 10}, {7, 11}, {8, 10}, {8, 12}, {9, 11}, {9,
                12}, {10, 12}, {11, 12}}]}, 
             {RGBColor[0, 0, 0.7], 
              PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}]}}],
           
           Annotation[#, 
            VertexCoordinateRules -> {{-1., 
             0.}, {-0.3694, -0.3694}, {-0.7735, -0.7735}, {-0.3694, 
             0.3694}, {-0.7735, 0.7735}, {0., -1.}, {0., 1.}, {
             0.3694, -0.3694}, {0.7735, -0.7735}, {0.3694, 0.3694}, {0.7735, 
             0.7735}, {1., 0.}}]& ],
          AspectRatio->Automatic,
          FrameTicks->None,
          ImageSize->100,
          PlotRange->All,
          PlotRangePadding->Scaled[0.1]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"\<\"Cuboctahedron\"\>"},
        {
         Graphics3DBox[
          GraphicsComplex3DBox[
           NCache[{{-1, 0, 0}, {
             Rational[-1, 2], Rational[-1, 2], -2^Rational[-1, 2]}, {
             Rational[-1, 2], Rational[-1, 2], 2^Rational[-1, 2]}, {
             Rational[-1, 2], Rational[1, 2], -2^Rational[-1, 2]}, {
             Rational[-1, 2], Rational[1, 2], 2^Rational[-1, 2]}, {0, -1, 
             0}, {0, 1, 0}, {
             Rational[1, 2], Rational[-1, 2], -2^Rational[-1, 2]}, {
             Rational[1, 2], Rational[-1, 2], 2^Rational[-1, 2]}, {
             Rational[1, 2], Rational[1, 2], -2^Rational[-1, 2]}, {
             Rational[1, 2], Rational[1, 2], 2^Rational[-1, 2]}, {1, 0, 
             0}}, {{-1, 0, 0}, {-0.5, -0.5, -0.7071067811865475}, {-0.5, -0.5,
              0.7071067811865475}, {-0.5, 0.5, -0.7071067811865475}, {-0.5, 
             0.5, 0.7071067811865475}, {0, -1, 0}, {0, 1, 0}, {
             0.5, -0.5, -0.7071067811865475}, {0.5, -0.5, 
             0.7071067811865475}, {0.5, 0.5, -0.7071067811865475}, {0.5, 0.5, 
             0.7071067811865475}, {1, 0, 0}}], 
           Polygon3DBox[{{4, 10, 8, 2}, {3, 9, 11, 5}, {9, 6, 8, 12}, {3, 1, 
             2, 6}, {5, 7, 4, 1}, {11, 12, 10, 7}, {12, 11, 9}, {3, 5, 1}, {6,
              9, 3}, {5, 11, 7}, {8, 10, 12}, {1, 4, 2}, {2, 8, 6}, {7, 10, 
             4}}]],
          ImageSize->100,
          ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9mltvG0UUxzdrr2+Jr7ET524nTZpAkyZVUVUJkCpEAaFKFd8gqohaJBTU
9oWHvvExeOUj8RUQLzyQL2A8lz27O/7Neq00PNhej8+c/2/OnLnseF9cvn/9
48+X79+8uhx98/byl9dvXr0bPb9+Oy0qLQVB8GH6+nUUqOvJ9NK+fZjc3NxM
fzQfP6iP0uTq6urYFLxUH6EqCOXqvvnphdiW3Z++l4KqLtBW6kp9BkfG6Fup
X9cFZTGyhofG7rk4W8m1+0r8tXRBlLGLxe8Z42fitOsQqm8hlI1NxS9FZXWx
ip+L4hoYlaBsZCo+FcXhYhWfiOIWGJWhbM9UfCyKuwUrGrvgkSiOF6t4LhUP
wCiCsh1T8VRQD8GoAmXbpuKnoni8WMVjUfwEjNx8V99M9E3aa8VTMKpB2aap
eCCKDxerOBbFR2BUh7INU3FXFB8vVnFbFJ+AUQPKTE6b+vqXp2C0DGXrpuK6
KJ5bIzWr5aHmOBuIs4eGR02RpcnfP/0We0WPK1BmBnnQk3adqauy8lNWDh1Q
ypsmlA2M204WNNB+Jy/Pr/Rrel0FDUrqHI1mFj1UvkLlX1/VQYDGaQvK+kZg
WRqRCJREYKWgALXACtSyLbDObJRSbWmDFE1W1BazCpj+SwZ3aPo5FuiBAE3c
bSjrpQSchfREpCq6RUZAZauSWwVRWp/mis4suEcQzUgau651o7SuEPdAq5vW
4kV7XxpaFZlNLVPOyHhW5Q6H0BeQbVGridqOUgvtfDBLX1iPen0Dwpm0c2y7
cbZ7qBtxkNOwGUgjG5A7adF45qPItvyiVNaHyN5LSdmJdlEpCnTPpq4J6rV+
Ta+TND2y+RPrWm2SbvqlafXtgvT0FWePnaH1t2M7VtIQcRCok3NIaGHqZDJL
U2iAa6e7j50+UN9CmD46oLHiR6L1vu1D0uE5AZBSQRCzrmOy0wKt86mSCsbv
7/5N9UmWgZZsmjdzGGid0mWRZoiEIX4plvvAEhVkafhZaCGLt0W+XLFY07xQ
79n8ccew+lYpiFn3Y/pbNR+zdAtMCk8OJiVjvSBmGTAPAJP2c4RZ82PSSlWj
QaCIIuDaB64acFGm53DRPFdNBkaWqwpcY+Ci7SlxmaUDd3t9KIv553VrDTBH
gNkoiFnxYw6grFwQsw6Ye4C5DJg0p+Zg5h16zMNsAKbdkF2p055ZuOTWIqeD
16Es9A2IZWDYUO+6fugLmt3s3KhbP7WT1U2OFfPiNbQd6WyHaUw0AW0gaNGc
tJv885deanRq2xq+xEfSDacssNssF7MFmF3BrANmNb3ptpxJL2lb2n9ZVtpq
pw/CbNbp2zSXtQ2sTWFtelflSEIav+SOgcZL2U+6XXBsdIC0LqRd38bO3qBO
CQvMPvMwabx0gSsSrn7OvrfykagoB1ftopuiEqYh3IgQCy27OSxbBTuyr951
1a3U6FSeFML/CNIVELOJioOVueOO03tqtSCa9467AJqe6cpmjppNr7WZxLbR
s98+DiYle0NCRktV35ltFcddElLi14SQpuEeEJpujdKEMqHRlq3kpyqaeZFA
9gCyLd3bsCFMo90dVShUa75VwQndstO5dxQyNUL1HmcTuBoSrdbd0Kjj02tt
tgvyNQhLOwUSe6abEgvi7JX0Hz6JqNNJxFCREPRSIyv2V1xZDyptSOmxB8pl
aH3PGd2qDcUZkv9HCmTsCJBCQFoFJMqMEJHWUmEpNpLGzuobmFOwNTucU/Oe
2bsUJVkVksoiJPa0enbSpSFAEzHTdISm7puNd806FqjR9sefE6db+oBECzpt
ihKkGctkF0pIW2aWC9Sx9SySmym3R2oIUtuHNBSkZUByx1OyMs4/+2OkqiDF
g2BmvqM9m+7HNhB2gJCOSekPSSYsC+GgIGFXYtgHwjYQ0mE6ES5ZwplbVG1m
5yvPnZUuGgJQC4DoFo9Oli2Q5tm24UqFxyyFsfg2iDdvL+6U6v/RqVtqkjgj
AFkBEDrep7IEJD0nxc9xxPEI9DiPg3EIDA1goDSgAFmG5ImhHZAvi/xxQXka
yZStkgizP+mNTEV5fQCi9duL0tnJponD1OsFiNYK3u7SzGFFKxLo9EZtKqXl
zkGU7tnotF17XlJFS+ZK6/kfOckqPwTlCJTpAD1CZcr4osp02lFcuZEbY9Kj
2zna05RRj/Juw6vM5050NFxCNUo4v1r2CEDv4GarhyjUkjAmo8JN0GAhj9SF
hH6m3u2Wb67vAHuK3J6K26HNHmc51Ltq67SXbb3jSs+DOrZbNjHSrhI0+mNi
CP4OxN/IqZFCohwhZ7vi7J7f2Vpu+zbUuy46ETtbkZ5sTHeTdTOljSlO3Q5z
j6HVNzeLVGZ1xYV9xitxsQkuBtAVgRqeGS/6d3susyWNG3gyIoh32Y4D+yfZ
DmB4b8tCuYsoZZ3Z/+XpCU7vrKednYkL+xzLnjSIKl6IuX3qih79pPnlVCra
ZwD3wYimwROpaB/JPBBAMj8Uc/tcLD0pSgvLWCrah4aPwIjWwh2paJ+ivi+A
ZK6br7PkgTE/8fWPU9YXnQtTkZ5IpW1QRyp+ZiomT8N6b6G0uXk403SdZ6pr
iPEXxvgMRtCVvVXXpc+MXTIcQ/npa/PThfz0nSkIlv4DKEXi/g==\
\>"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"\<\"IcosidodecahedralGraph\"\>"},
        {
         GraphicsBox[
          TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQLX7z3Pfgxz/3M0ABlG8P458H8pbOvrO//9BXjZj+
Q/uhfHsY/xuI/MpygGONTFSK9WsY3wHGz9pTMlmChfXAm8Adcq2veQ5A+Q4w
fnHGxLc19g/3R1huOVG27/l+KN8exoe549Ml3ySBiLf2Lt05z3+vvLg/CKQ9
8AaMbw/jw9RzXV9cYMvFdgAs/fHLfuv7/r3T897th/LtYXyYepF17g+rRO7t
R1Nvj6Yeav6D/WDnzf8B49uj8WHy+9Hk4fYd9zbvdHwg6NA41Rloxc/9i1y3
ff57hRHGt0flv97/Us0QGKSX7KF8exgfYprggXpwwH6D8R1gfABJ4eBJ
            "], {
             {RGBColor[0.5, 0., 0.], 
              LineBox[{{1, 5}, {1, 15}, {1, 18}, {1, 27}, {2, 6}, {2, 16}, {2,
                19}, {2, 28}, {3, 9}, {3, 12}, {3, 17}, {3, 27}, {4, 10}, {4, 
               13}, {4, 17}, {4, 28}, {5, 7}, {5, 15}, {5, 29}, {6, 8}, {6, 
               16}, {6, 30}, {7, 8}, {7, 14}, {7, 29}, {8, 14}, {8, 30}, {9, 
               15}, {9, 17}, {9, 22}, {10, 16}, {10, 17}, {10, 23}, {11, 
               12}, {11, 13}, {11, 20}, {11, 21}, {12, 13}, {12, 27}, {13, 
               28}, {14, 22}, {14, 23}, {15, 22}, {16, 23}, {18, 20}, {18, 
               25}, {18, 27}, {19, 21}, {19, 26}, {19, 28}, {20, 21}, {20, 
               25}, {21, 26}, {22, 23}, {24, 25}, {24, 26}, {24, 29}, {24, 
               30}, {25, 29}, {26, 30}}]}, 
             {RGBColor[0, 0, 0.7], 
              PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30}]}}],
           Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGCQA2IQLX7z3Pfgxz/3M0ABlG8P458H8pbOvrO//9BXjZj+
Q/uhfHsY/xuI/MpygGONTFSK9WsY3wHGz9pTMlmChfXAm8Adcq2veQ5A+Q4w
fnHGxLc19g/3R1huOVG27/l+KN8exoe549Ml3ySBiLf2Lt05z3+vvLg/CKQ9
8AaMbw/jw9RzXV9cYMvFdgAs/fHLfuv7/r3T897th/LtYXyYepF17g+rRO7t
R1Nvj6Yeav6D/WDnzf8B49uj8WHy+9Hk4fYd9zbvdHwg6NA41Rloxc/9i1y3
ff57hRHGt0flv97/Us0QGKSX7KF8exgfYprggXpwwH6D8R1gfABJ4eBJ
             "]]& ],
          AspectRatio->Automatic,
          FrameTicks->None,
          ImageSize->100,
          PlotRange->All,
          PlotRangePadding->Scaled[0.1]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"\<\"Icosidodecahedron\"\>"},
        {
         Graphics3DBox[
          GraphicsComplex3DBox[
           NCache[{{0, Rational[1, 2] (-1 - 5^Rational[1, 2]), 0}, {
             0, Rational[1, 2] (1 + 5^Rational[1, 2]), 
              0}, {(Rational[1, 8] + Rational[-1, 8] 5^Rational[-1, 2])^
              Rational[1, 2], 
              Rational[1, 4] (-1 - 5^
               Rational[1, 2]), -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
               Rational[1, 8] + Rational[-1, 8] 5^Rational[-1, 2])^
              Rational[1, 2], 
              Rational[1, 4] (1 + 
               5^Rational[1, 2]), -(1 + 2 5^Rational[-1, 2])^
               Rational[1, 2]}, {(Rational[1, 8] + 
               Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[1, 4] (-3 - 5^Rational[1, 2]), (
               Rational[1, 10] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 8] + 
               Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[1, 4] (3 + 5^Rational[1, 2]), (
               Rational[1, 10] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[1, 4] + 
               Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[-1, 2], (1 + 2 5^Rational[-1, 2])^
              Rational[1, 2]}, {(Rational[1, 4] + 
               Rational[1, 2] 5^Rational[-1, 2])^Rational[1, 2], Rational[
              1, 2], (1 + 2 5^Rational[-1, 2])^
              Rational[1, 2]}, {(Rational[5, 8] + 
               Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[1, 4] (-1 - 5^Rational[1, 2]), Root[
              1 - 5 #^2 + 5 #^4& , 1, 0]}, {(Rational[5, 8] + 
               Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[1, 4] (1 + 5^Rational[1, 2]), Root[
              1 - 5 #^2 + 5 #^4& , 1, 0]}, {-(1 + 2 5^Rational[-1, 2])^
               Rational[1, 2], 0, Root[1 - 5 #^2 + 5 #^4& , 1, 0]}, {
             Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[-1, 2], -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
             Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2], 
              Rational[
              1, 2], -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(1 + 
               2 5^Rational[-1, 2])^Rational[1, 2], 
              0, (Rational[1, 10] (5 + 5^Rational[1, 2]))^
              Rational[1, 2]}, {(Rational[5, 8] + 
               Rational[1, 8] 5^Rational[1, 2])^Rational[1, 2], 
              Rational[-1, 8] (1 + 5^Rational[1, 2])^2, 
              0}, {(Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])^
              Rational[1, 2], Rational[1, 4] (3 + 5^Rational[1, 2]), 
              0}, {(Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2], 
              0, -(1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
             Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
               Rational[1, 2], Rational[-1, 8] (1 + 5^Rational[1, 2])^2, 0}, {
             Rational[-1, 2] (Rational[1, 2] (5 + 5^Rational[1, 2]))^
               Rational[1, 2], Rational[1, 4] (3 + 5^Rational[1, 2]), 0}, {
             Rational[-1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
              Rational[-1, 2], 0}, {
             Rational[-1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
              Rational[1, 2], 0}, {
             Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2], 
              Rational[-1, 2], 0}, {
             Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2], Rational[
              1, 2], 0}, {
             Root[1 - 5 #^2 + 5 #^4& , 1, 0], 0, (1 + 2 5^Rational[-1, 2])^
              Rational[1, 2]}, {
             Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
              Rational[1, 4] (-1 - 5^Rational[1, 2]), (
               Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
             Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
              Rational[1, 4] (1 + 5^Rational[1, 2]), (
               Rational[1, 10] (5 + 5^Rational[1, 2]))^Rational[1, 2]}, {
             Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
              Rational[1, 4] (-3 - 5^Rational[1, 2]), Root[
              1 - 5 #^2 + 5 #^4& , 1, 0]}, {
             Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
              Rational[1, 4] (3 + 5^Rational[1, 2]), Root[
              1 - 5 #^2 + 5 #^4& , 1, 0]}, {
             Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
              Rational[1, 4] (-1 - 5^Rational[1, 2]), (1 + 
               2 5^Rational[-1, 2])^Rational[1, 2]}, {
             Root[1 - 20 #^2 + 80 #^4& , 2, 0], 
              Rational[1, 4] (1 + 5^Rational[1, 2]), (1 + 
               2 5^Rational[-1, 2])^Rational[1, 2]}}, {{
             0, -1.618033988749895, 0}, {0, 1.618033988749895, 0}, {
             0.2628655560595668, -0.8090169943749475, -1.3763819204711736`}, {
             0.2628655560595668, 0.8090169943749475, -1.3763819204711736`}, {
             0.42532540417601994`, -1.3090169943749475`, 0.85065080835204}, {
             0.42532540417601994`, 1.3090169943749475`, 0.85065080835204}, {
             0.6881909602355868, -0.5, 1.3763819204711736`}, {
             0.6881909602355868, 0.5, 1.3763819204711736`}, {
             1.1135163644116066`, -0.8090169943749475, -0.85065080835204}, {
             1.1135163644116066`, 
             0.8090169943749475, -0.85065080835204}, {-1.3763819204711736`, 
              0, -0.85065080835204}, {-0.6881909602355868, -0.5, \
-1.3763819204711736`}, {-0.6881909602355868, 0.5, -1.3763819204711736`}, {
             1.3763819204711736`, 0, 0.85065080835204}, {
             0.9510565162951535, -1.3090169943749475`, 0}, {
             0.9510565162951535, 1.3090169943749475`, 0}, {
             0.85065080835204, 
              0, -1.3763819204711736`}, {-0.9510565162951535, \
-1.3090169943749475`, 0}, {-0.9510565162951535, 1.3090169943749475`, 
              0}, {-1.5388417685876268`, -0.5, 0}, {-1.5388417685876268`, 0.5,
               0}, {1.5388417685876268`, -0.5, 0}, {
             1.5388417685876268`, 0.5, 0}, {-0.85065080835204, 0, 
              1.3763819204711736`}, {-1.1135163644116068`, \
-0.8090169943749475, 0.85065080835204}, {-1.1135163644116068`, 
             0.8090169943749475, 
             0.85065080835204}, {-0.42532540417601994`, -1.3090169943749475`, \
-0.85065080835204}, {-0.42532540417601994`, 
             1.3090169943749475`, -0.85065080835204}, {-0.2628655560595668, \
-0.8090169943749475, 1.3763819204711736`}, {-0.2628655560595668, 
             0.8090169943749475, 1.3763819204711736`}}], 
           Polygon3DBox[{{30, 24, 29, 7, 8}, {26, 24, 30}, {25, 29, 24}, {5, 
             7, 29}, {14, 8, 7}, {6, 30, 8}, {16, 2, 6}, {19, 21, 26}, {20, 
             18, 25}, {1, 15, 5}, {22, 23, 14}, {2, 19, 26, 30, 6}, {21, 20, 
             25, 24, 26}, {18, 1, 5, 29, 25}, {15, 22, 14, 7, 5}, {23, 16, 6, 
             8, 14}, {12, 13, 4, 17, 3}, {3, 17, 9}, {17, 4, 10}, {4, 13, 
             28}, {13, 12, 11}, {12, 3, 27}, {27, 1, 18}, {9, 22, 15}, {10, 
             16, 23}, {28, 19, 2}, {11, 20, 21}, {27, 3, 9, 15, 1}, {9, 17, 
             10, 23, 22}, {10, 4, 28, 2, 16}, {28, 13, 11, 21, 19}, {11, 12, 
             27, 18, 20}}]],
          ImageSize->100]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"\<\"SmallRhombicosidodecahedralGraph\"\>"},
        {
         GraphicsBox[
          TagBox[GraphicsComplexBox[CompressedData["
1:eJxdk08oBFEcx6cNSRKTSFE4cJCDgzat7ftzkLIHcpKDw7ZKm5CcpL3sQZv2
IAcHOUiRkiQnqfcOQk6cFMVuqeVgrT8XVjJj5+3hOzV9mz7Tm+/v8960hGdG
JnyWZfU6t5vfsejJ/OqVMnke8if6Uk3aJHEQl2DFzdZs8FZ1Hm687pzl1XBy
bdqOP6rsIrrHj0s1cRAXy7v+cSijzHO4erTn6KJBEwdxMb2ov1B/UH+h/qD+
oP6g/oZLe1f5XuPYe7F3JPAwlKyvKfa+br37ikVTqpA5z+Ovl1WaOIjLYKWv
Y6nuQ6UXavcH0ln13OZ+sETbcX252W9p4iAuZi6zD2Yusw/EQRzLU5n87tun
KuSP2l4/bT6Ye1KTKy/Om/fKnT4SsHXO2R1/okwTB3Gh9eDND/ID8gPyA/ID
8iPkB+RHyA/Ij5AfkB8hPyA/ID9CfkB+hPyY9eCdL9D5Kv43f5TP1cs=
            "], {
             {RGBColor[0.5, 0., 0.], 
              LineBox[{{1, 3}, {1, 9}, {1, 13}, {1, 36}, {2, 4}, {2, 10}, {2, 
               14}, {2, 37}, {3, 11}, {3, 15}, {3, 38}, {4, 12}, {4, 16}, {4, 
               39}, {5, 6}, {5, 17}, {5, 23}, {5, 35}, {6, 18}, {6, 24}, {6, 
               35}, {7, 8}, {7, 19}, {7, 25}, {7, 40}, {8, 20}, {8, 26}, {8, 
               40}, {9, 13}, {9, 23}, {9, 41}, {10, 14}, {10, 24}, {10, 42}, {
               11, 15}, {11, 25}, {11, 43}, {12, 16}, {12, 26}, {12, 44}, {13,
                15}, {13, 54}, {14, 16}, {14, 55}, {15, 56}, {16, 57}, {17, 
               18}, {17, 41}, {17, 53}, {18, 42}, {18, 53}, {19, 20}, {19, 
               43}, {19, 58}, {20, 44}, {20, 58}, {21, 31}, {21, 33}, {21, 
               36}, {21, 38}, {22, 32}, {22, 34}, {22, 37}, {22, 39}, {23, 
               27}, {23, 36}, {24, 28}, {24, 37}, {25, 29}, {25, 38}, {26, 
               30}, {26, 39}, {27, 31}, {27, 35}, {27, 36}, {28, 32}, {28, 
               35}, {28, 37}, {29, 33}, {29, 38}, {29, 40}, {30, 34}, {30, 
               39}, {30, 40}, {31, 32}, {31, 33}, {32, 34}, {33, 34}, {41, 
               45}, {41, 54}, {42, 46}, {42, 55}, {43, 47}, {43, 56}, {44, 
               48}, {44, 57}, {45, 49}, {45, 53}, {45, 54}, {46, 50}, {46, 
               53}, {46, 55}, {47, 51}, {47, 56}, {47, 58}, {48, 52}, {48, 
               57}, {48, 58}, {49, 50}, {49, 51}, {49, 59}, {50, 52}, {50, 
               60}, {51, 52}, {51, 59}, {52, 60}, {54, 59}, {55, 60}, {56, 
               59}, {57, 60}}]}, 
             {RGBColor[0, 0, 0.7], 
              PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
               32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
                48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60}]}}],
           Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxdk08oBFEcx6cNSRKTSFE4cJCDgzat7ftzkLIHcpKDw7ZKm5CcpL3sQZv2
IAcHOUiRkiQnqfcOQk6cFMVuqeVgrT8XVjJj5+3hOzV9mz7Tm+/v8960hGdG
JnyWZfU6t5vfsejJ/OqVMnke8if6Uk3aJHEQl2DFzdZs8FZ1Hm687pzl1XBy
bdqOP6rsIrrHj0s1cRAXy7v+cSijzHO4erTn6KJBEwdxMb2ov1B/UH+h/qD+
oP6g/oZLe1f5XuPYe7F3JPAwlKyvKfa+br37ikVTqpA5z+Ovl1WaOIjLYKWv
Y6nuQ6UXavcH0ln13OZ+sETbcX252W9p4iAuZi6zD2Yusw/EQRzLU5n87tun
KuSP2l4/bT6Ye1KTKy/Om/fKnT4SsHXO2R1/okwTB3Gh9eDND/ID8gPyA/ID
8iPkB+RHyA/Ij5AfkB8hPyA/ID9CfkB+hPyY9eCdL9D5Kv43f5TP1cs=
             "]]& ],
          AspectRatio->Automatic,
          FrameTicks->None,
          ImageSize->100,
          PlotRange->All,
          PlotRangePadding->Scaled[0.1]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"\<\"SmallRhombicosidodecahedron\"\>"},
        {
         Graphics3DBox[
          GraphicsComplex3DBox[
           NCache[{{
             Rational[-1, 2], Rational[-1, 2], -1 + 
              Rational[-1, 2] 5^Rational[1, 2]}, {
             Rational[-1, 2], Rational[-1, 2], 
              Rational[1, 2] (2 + 5^Rational[1, 2])}, {
             Rational[-1, 2], Rational[1, 2], -1 + 
              Rational[-1, 2] 5^Rational[1, 2]}, {
             Rational[-1, 2], Rational[1, 2], 
              Rational[1, 2] (2 + 5^Rational[1, 2])}, {
             Rational[-1, 2], -1 + Rational[-1, 2] 5^Rational[1, 2], 
              Rational[-1, 2]}, {
             Rational[-1, 2], -1 + Rational[-1, 2] 5^Rational[1, 2], Rational[
              1, 2]}, {
             Rational[-1, 2], Rational[1, 2] (2 + 5^Rational[1, 2]), 
              Rational[-1, 2]}, {
             Rational[-1, 2], Rational[1, 2] (2 + 5^Rational[1, 2]), Rational[
              1, 2]}, {
             0, (-3 + 5^Rational[1, 2])^(-1), 
              Rational[1, 4] (-5 - 5^Rational[1, 2])}, {
             0, (-3 + 5^Rational[1, 2])^(-1), 
              Rational[1, 4] (5 + 5^Rational[1, 2])}, {
             0, Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (-5 - 5^Rational[1, 2])}, {
             0, Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (5 + 5^Rational[1, 2])}, {
             Rational[1, 2], Rational[-1, 2], -1 + 
              Rational[-1, 2] 5^Rational[1, 2]}, {
             Rational[1, 2], Rational[-1, 2], 
              Rational[1, 2] (2 + 5^Rational[1, 2])}, {
             Rational[1, 2], Rational[1, 2], -1 + 
              Rational[-1, 2] 5^Rational[1, 2]}, {
             Rational[1, 2], Rational[1, 2], 
              Rational[1, 2] (2 + 5^Rational[1, 2])}, {
             Rational[1, 2], -1 + Rational[-1, 2] 5^Rational[1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2], -1 + Rational[-1, 2] 5^Rational[1, 2], Rational[
              1, 2]}, {
             Rational[1, 2], Rational[1, 2] (2 + 5^Rational[1, 2]), 
              Rational[-1, 2]}, {
             Rational[1, 2], Rational[1, 2] (2 + 5^Rational[1, 2]), Rational[
              1, 2]}, {
             Rational[1, 4] (-5 - 5^Rational[1, 2]), 
              0, (-3 + 5^Rational[1, 2])^(-1)}, {
             Rational[1, 4] (-5 - 5^Rational[1, 2]), 0, 
              Rational[1, 4] (3 + 5^Rational[1, 2])}, {
             Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1)}, {
             Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2])}, {
             Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1)}, {
             Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2])}, {
             Rational[1, 2] (-1 - 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1), 
              Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
             Rational[1, 2] (-1 - 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1), 
              Rational[1, 4] (1 + 5^Rational[1, 2])}, {
             Rational[1, 2] (-1 - 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
             Rational[1, 2] (-1 - 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (1 + 5^Rational[1, 2])}, {-1 + 
              Rational[-1, 2] 5^Rational[1, 2], Rational[-1, 2], 
              Rational[-1, 2]}, {-1 + Rational[-1, 2] 5^Rational[1, 2], 
              Rational[-1, 2], Rational[1, 2]}, {-1 + 
              Rational[-1, 2] 5^Rational[1, 2], Rational[1, 2], 
              Rational[-1, 2]}, {-1 + Rational[-1, 2] 5^Rational[1, 2], 
              Rational[1, 2], Rational[1, 2]}, {(-3 + 5^Rational[1, 2])^(-1), 
              Rational[1, 4] (-5 - 5^Rational[1, 2]), 
              0}, {(-3 + 5^Rational[1, 2])^(-1), 
              Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2])}, {(-3 + 
               5^Rational[1, 2])^(-1), Rational[1, 4] (-1 - 5^Rational[1, 2]),
               Rational[1, 2] (1 + 5^Rational[1, 2])}, {(-3 + 
               5^Rational[1, 2])^(-1), Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2])}, {(-3 + 
               5^Rational[1, 2])^(-1), Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2])}, {(-3 + 
               5^Rational[1, 2])^(-1), Rational[1, 4] (5 + 5^Rational[1, 2]), 
              0}, {Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1)}, {
             Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2])}, {
             Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1)}, {
             Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2])}, {
             Rational[1, 2] (1 + 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1), 
              Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
             Rational[1, 2] (1 + 5^Rational[1, 2]), (-3 + 
               5^Rational[1, 2])^(-1), 
              Rational[1, 4] (1 + 5^Rational[1, 2])}, {
             Rational[1, 2] (1 + 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (-1 - 5^Rational[1, 2])}, {
             Rational[1, 2] (1 + 5^Rational[1, 2]), 
              Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (1 + 5^Rational[1, 2])}, {
             Rational[1, 2] (2 + 5^Rational[1, 2]), Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2] (2 + 5^Rational[1, 2]), Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[1, 2] (2 + 5^Rational[1, 2]), Rational[1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2] (2 + 5^Rational[1, 2]), Rational[1, 2], Rational[
              1, 2]}, {
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (-5 - 5^Rational[1, 2]), 0}, {
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2])}, {
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (-1 - 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2])}, {
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (-1 - 5^Rational[1, 2])}, {
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (1 + 5^Rational[1, 2]), 
              Rational[1, 2] (1 + 5^Rational[1, 2])}, {
             Rational[1, 4] (3 + 5^Rational[1, 2]), 
              Rational[1, 4] (5 + 5^Rational[1, 2]), 0}, {
             Rational[1, 4] (5 + 5^Rational[1, 2]), 
              0, (-3 + 5^Rational[1, 2])^(-1)}, {
             Rational[1, 4] (5 + 5^Rational[1, 2]), 0, 
              Rational[1, 4] (3 + 
               5^Rational[
                 1, 2])}}, {{-0.5, -0.5, -2.118033988749895}, {-0.5, -0.5, 
             2.118033988749895}, {-0.5, 0.5, -2.118033988749895}, {-0.5, 0.5, 
             2.118033988749895}, {-0.5, -2.118033988749895, -0.5}, {-0.5, \
-2.118033988749895, 0.5}, {-0.5, 2.118033988749895, -0.5}, {-0.5, 
             2.118033988749895, 0.5}, {
             0, -1.3090169943749477`, -1.8090169943749475`}, {
             0, -1.3090169943749477`, 1.8090169943749475`}, {
             0, 1.3090169943749475`, -1.8090169943749475`}, {
             0, 1.3090169943749475`, 1.8090169943749475`}, {
             0.5, -0.5, -2.118033988749895}, {0.5, -0.5, 2.118033988749895}, {
             0.5, 0.5, -2.118033988749895}, {0.5, 0.5, 2.118033988749895}, {
             0.5, -2.118033988749895, -0.5}, {0.5, -2.118033988749895, 0.5}, {
             0.5, 2.118033988749895, -0.5}, {0.5, 2.118033988749895, 
             0.5}, {-1.8090169943749475`, 
              0, -1.3090169943749477`}, {-1.8090169943749475`, 0, 
              1.3090169943749475`}, {-0.8090169943749475, -1.618033988749895, \
-1.3090169943749477`}, {-0.8090169943749475, -1.618033988749895, 
             1.3090169943749475`}, {-0.8090169943749475, 
             1.618033988749895, -1.3090169943749477`}, {-0.8090169943749475, 
             1.618033988749895, 
             1.3090169943749475`}, {-1.618033988749895, -1.3090169943749477`, \
-0.8090169943749475}, {-1.618033988749895, -1.3090169943749477`, 
             0.8090169943749475}, {-1.618033988749895, 
             1.3090169943749475`, -0.8090169943749475}, {-1.618033988749895, 
             1.3090169943749475`, 
             0.8090169943749475}, {-2.118033988749895, -0.5, -0.5}, \
{-2.118033988749895, -0.5, 0.5}, {-2.118033988749895, 
             0.5, -0.5}, {-2.118033988749895, 0.5, 
             0.5}, {-1.3090169943749477`, -1.8090169943749475`, 
              0}, {-1.3090169943749477`, -0.8090169943749475, \
-1.618033988749895}, {-1.3090169943749477`, -0.8090169943749475, 
             1.618033988749895}, {-1.3090169943749477`, 
             0.8090169943749475, -1.618033988749895}, {-1.3090169943749477`, 
             0.8090169943749475, 
             1.618033988749895}, {-1.3090169943749477`, 1.8090169943749475`, 
              0}, {0.8090169943749475, -1.618033988749895, \
-1.3090169943749477`}, {0.8090169943749475, -1.618033988749895, 
             1.3090169943749475`}, {0.8090169943749475, 
             1.618033988749895, -1.3090169943749477`}, {0.8090169943749475, 
             1.618033988749895, 1.3090169943749475`}, {
             1.618033988749895, -1.3090169943749477`, -0.8090169943749475}, {
             1.618033988749895, -1.3090169943749477`, 0.8090169943749475}, {
             1.618033988749895, 1.3090169943749475`, -0.8090169943749475}, {
             1.618033988749895, 1.3090169943749475`, 0.8090169943749475}, {
             2.118033988749895, -0.5, -0.5}, {2.118033988749895, -0.5, 0.5}, {
             2.118033988749895, 0.5, -0.5}, {2.118033988749895, 0.5, 0.5}, {
             1.3090169943749475`, -1.8090169943749475`, 0}, {
             1.3090169943749475`, -0.8090169943749475, -1.618033988749895}, {
             1.3090169943749475`, -0.8090169943749475, 1.618033988749895}, {
             1.3090169943749475`, 0.8090169943749475, -1.618033988749895}, {
             1.3090169943749475`, 0.8090169943749475, 1.618033988749895}, {
             1.3090169943749475`, 1.8090169943749475`, 0}, {
             1.8090169943749475`, 0, -1.3090169943749477`}, {
             1.8090169943749475`, 0, 1.3090169943749475`}}], 
           Polygon3DBox[{{36, 23, 27}, {37, 28, 24}, {40, 8, 7}, {35, 5, 6}, {
             38, 29, 25}, {39, 26, 30}, {10, 14, 2}, {9, 1, 13}, {12, 4, 
             16}, {11, 15, 3}, {54, 45, 41}, {55, 42, 46}, {58, 19, 20}, {53, 
             18, 17}, {56, 43, 47}, {57, 48, 44}, {34, 32, 22}, {33, 21, 
             31}, {59, 51, 49}, {60, 50, 52}, {27, 31, 21, 36}, {23, 36, 1, 
             9}, {10, 2, 37, 24}, {37, 22, 32, 28}, {8, 40, 30, 26}, {25, 29, 
             40, 7}, {35, 27, 23, 5}, {6, 24, 28, 35}, {3, 38, 25, 11}, {21, 
             33, 29, 38}, {39, 30, 34, 22}, {12, 26, 39, 4}, {55, 14, 10, 
             42}, {41, 9, 13, 54}, {57, 44, 12, 16}, {15, 11, 43, 56}, {45, 
             54, 59, 49}, {50, 60, 55, 46}, {48, 58, 20, 44}, {43, 19, 58, 
             47}, {53, 17, 41, 45}, {46, 42, 18, 53}, {59, 56, 47, 51}, {52, 
             48, 57, 60}, {31, 32, 34, 33}, {17, 18, 6, 5}, {1, 3, 15, 13}, {
             14, 16, 4, 2}, {7, 8, 20, 19}, {51, 52, 50, 49}, {3, 1, 36, 21, 
             38}, {22, 37, 2, 4, 39}, {29, 33, 34, 30, 40}, {27, 35, 28, 32, 
             31}, {42, 10, 24, 6, 18}, {41, 17, 5, 23, 9}, {20, 8, 26, 12, 
             44}, {11, 25, 7, 19, 43}, {56, 59, 54, 13, 15}, {57, 16, 14, 55, 
             60}, {58, 48, 52, 51, 47}, {49, 50, 46, 53, 45}}]],
          ImageSize->100]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column]},
    {
     TagBox[GridBox[{
        {"\<\"SmallRhombicuboctahedralGraph\"\>"},
        {
         GraphicsBox[
          TagBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/a7G3jRu18X9MHpDUcbEtzUsB2A0mrw9mrwDAxjc
2P9NI6b/0Nc3+yH8F/sTnl5Quv3zz340eXs0eXuYuWj2O6DZb49mvwOa/fZo
9tuj2W+PZj9MHk3fDTR3v0Dz1w00c1+gmQvXb4+m3x5NP9wdAJ89r64=
            "], {
             {RGBColor[0.5, 0., 0.], 
              LineBox[{{1, 3}, {1, 5}, {1, 9}, {1, 17}, {2, 4}, {2, 6}, {2, 
               10}, {2, 18}, {3, 7}, {3, 11}, {3, 19}, {4, 8}, {4, 12}, {4, 
               20}, {5, 6}, {5, 13}, {5, 17}, {6, 14}, {6, 18}, {7, 8}, {7, 
               15}, {7, 19}, {8, 16}, {8, 20}, {9, 11}, {9, 13}, {9, 21}, {10,
                12}, {10, 14}, {10, 22}, {11, 15}, {11, 23}, {12, 16}, {12, 
               24}, {13, 14}, {13, 21}, {14, 22}, {15, 16}, {15, 23}, {16, 
               24}, {17, 18}, {17, 19}, {18, 20}, {19, 20}, {21, 22}, {21, 
               23}, {22, 24}, {23, 24}}]}, 
             {RGBColor[0, 0, 0.7], 
              PointBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                17, 18, 19, 20, 21, 22, 23, 24}]}}],
           Annotation[#, VertexCoordinateRules -> CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/a7G3jRu18X9MHpDUcbEtzUsB2A0mrw9mrwDAxjc
2P9NI6b/0Nc3+yH8F/sTnl5Quv3zz340eXs0eXuYuWj2O6DZb49mvwOa/fZo
9tuj2W+PZj9MHk3fDTR3v0Dz1w00c1+gmQvXb4+m3x5NP9wdAJ89r64=
             "]]& ],
          AspectRatio->Automatic,
          FrameTicks->None,
          ImageSize->100,
          PlotRange->All,
          PlotRangePadding->Scaled[0.1]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], 
     TagBox[GridBox[{
        {"\<\"SmallRhombicuboctahedron\"\>"},
        {
         Graphics3DBox[
          GraphicsComplex3DBox[
           NCache[{{
             Rational[-1, 2], Rational[-1, 2], Rational[-1, 2] - 2^
              Rational[-1, 2]}, {
             Rational[-1, 2], Rational[-1, 2], Rational[1, 2] + 
              2^Rational[-1, 2]}, {
             Rational[-1, 2], Rational[1, 2], Rational[-1, 2] - 2^
              Rational[-1, 2]}, {
             Rational[-1, 2], Rational[1, 2], Rational[1, 2] + 
              2^Rational[-1, 2]}, {
             Rational[-1, 2], Rational[-1, 2] - 2^Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[-1, 2], Rational[-1, 2] - 2^Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[-1, 2], Rational[1, 2] + 2^Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[-1, 2], Rational[1, 2] + 2^Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[1, 2], Rational[-1, 2], Rational[-1, 2] - 2^
              Rational[-1, 2]}, {
             Rational[1, 2], Rational[-1, 2], Rational[1, 2] + 
              2^Rational[-1, 2]}, {
             Rational[1, 2], Rational[1, 2], Rational[-1, 2] - 2^
              Rational[-1, 2]}, {
             Rational[1, 2], Rational[1, 2], Rational[1, 2] + 
              2^Rational[-1, 2]}, {
             Rational[1, 2], Rational[-1, 2] - 2^Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2], Rational[-1, 2] - 2^Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[1, 2], Rational[1, 2] + 2^Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2], Rational[1, 2] + 2^Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[-1, 2] - 2^Rational[-1, 2], Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[-1, 2] - 2^Rational[-1, 2], Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[-1, 2] - 2^Rational[-1, 2], Rational[1, 2], 
              Rational[-1, 2]}, {
             Rational[-1, 2] - 2^Rational[-1, 2], Rational[1, 2], Rational[
              1, 2]}, {
             Rational[1, 2] + 2^Rational[-1, 2], Rational[-1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2] + 2^Rational[-1, 2], Rational[-1, 2], Rational[
              1, 2]}, {
             Rational[1, 2] + 2^Rational[-1, 2], Rational[1, 2], 
              Rational[-1, 2]}, {
             Rational[1, 2] + 2^Rational[-1, 2], Rational[1, 2], Rational[
              1, 2]}}, CompressedData["
1:eJxTTMoPSmViYGCQAGJmBhh4sB9GP5trb+wf8Hk/DnF7NHF7HOrt0dUTMBeu
j4B96OLoNLHmwWkc6tHdT8ifhPTjChdc5uIKL1z24fI3LncQik9c4YoRfgAm
/6Qn
            "]], 
           Polygon3DBox[{{3, 11, 9, 1}, {2, 10, 12, 4}, {24, 22, 21, 23}, {19,
              17, 18, 20}, {5, 13, 14, 6}, {8, 16, 15, 7}, {13, 21, 22, 14}, {
             16, 24, 23, 15}, {6, 18, 17, 5}, {7, 19, 20, 8}, {6, 14, 10, 
             2}, {4, 12, 16, 8}, {22, 24, 12, 10}, {2, 4, 20, 18}, {1, 9, 13, 
             5}, {7, 15, 11, 3}, {9, 11, 23, 21}, {17, 19, 3, 1}, {22, 10, 
             14}, {16, 12, 24}, {6, 2, 18}, {20, 4, 8}, {13, 9, 21}, {23, 11, 
             15}, {17, 1, 5}, {7, 3, 19}}]],
          ImageSize->100]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.7]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.4656844446619997`*^9, 3.467848290499318*^9, 
  3.4685975216101513`*^9},
 CellLabel->"Out[164]//TableForm="]
}, Open  ]],

Cell[TextData[{
 "You might find more intuitive ways to solve this problem, but the solution \
given emphasizes pattern matching. You could also use ",
 StyleBox["Intersection", "Literal"],
 " with an appropriate ",
 StyleBox["SameTest", "Literal"],
 ", as shown here. The ",
 StyleBox["r @@@", "Literal"],
 " serves only to put the result in the same form as we used previously and \
is not strictly needed."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{
  3.470161370940682*^9, 3.47040982855446*^9, {3.470409860897422*^9, 
   3.470409902026824*^9}, {3.470409939327325*^9, 3.4704099455745897`*^9}, {
   3.4704100295240498`*^9, 3.470410085986886*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"results", " ", "=", " ", 
   RowBox[{"r", " ", "@@@", " ", 
    RowBox[{"Intersection", "[", 
     RowBox[{"Archimedean", ",", "Graphs", ",", " ", 
      RowBox[{"SameTest", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "==", " ", 
          RowBox[{"#2", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "&"}], ")"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4341469595625*^9, 3.43414696684375*^9}, {
   3.434146998609375*^9, 3.4341470000625*^9}, {3.434147045953125*^9, 
   3.434147053328125*^9}, {3.43414714128125*^9, 3.43414718615625*^9}, {
   3.434147227578125*^9, 3.43414723365625*^9}, {3.434147367296875*^9, 
   3.43414739071875*^9}, {3.434147444875*^9, 3.43414744821875*^9}, {
   3.434147494375*^9, 3.434147524859375*^9}, {3.4341476291875*^9, 
   3.434147675578125*^9}, {3.43414774978125*^9, 3.434147755171875*^9}, {
   3.43414779559375*^9, 3.43414781834375*^9}, {3.4341482656875*^9, 
   3.434148283875*^9}, 3.469882602270976*^9},
 CellLabel->"In[165]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.432747823875*^9, 3.432747825921875*^9}}],

Cell[TextData[{
 "The supplier-parts database is a classic example borrowed from ",
 StyleBox["An Introduction to Database Systems: Volume 1,", "CitationTitle",
  FontFamily->"Birka Italic",
  FontSize->10.199996948242188`,
  FontSlant->"Plain"],
 StyleBox[" ",
  FontFamily->"Times",
  FontSize->10.199996948242188`],
 StyleBox["Fourth Edition, ",
  FontSize->10.199996948242188`],
 "by C. J. Date (Addison-Wesley). "
}], "Text",
 CellChangeTimes->{{3.432747828859375*^9, 3.43274795975*^9}, {
   3.4327590515193644`*^9, 3.4327590515193644`*^9}, {3.43414797865625*^9, 
   3.43414797865625*^9}, {3.470410105549919*^9, 3.470410170992461*^9}, 
   3.470410920136071*^9, 3.470410995588354*^9, {3.475584805086549*^9, 
   3.475584806235237*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Semantic Pattern Matching"
}], "Heading1",
 CellChangeTimes->{{3.42194837909375*^9, 3.42194839615625*^9}},
 CellTags->"SemanticPatternMatching"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.421948402921875*^9, 3.42194840634375*^9}}],

Cell["\<\
You want to work with patterns that reach beyond syntactic (structural) \
relationships to consider semantic relationships.\
\>", "Text",
 CellChangeTimes->{{3.421948409046875*^9, 3.4219485020625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellChangeTimes->{{3.421948506609375*^9, 3.421948521453125*^9}}],

Cell[TextData[{
 "This solution is a simplified adaptation of concepts from \
\[OpenCurlyDoubleQuote]",
 StyleBox["Semantica: Semantic Pattern Matching in Mathematica", 
  "CitationTitle",
  FontSlant->"Plain"],
 "\[CloseCurlyDoubleQuote] by Jason Harris, published in the ",
 StyleBox["Mathematica Journal,",
  FontFamily->"Birka Italic",
  FontSize->10.199996948242188`],
 " Volume 7, Issue 3, 1999. "
}], "Text",
 CellChangeTimes->{{3.4322361016875*^9, 3.4322361024375*^9}, {
   3.432237543171875*^9, 3.432237635328125*^9}, {3.4322376656875*^9, 
   3.432237725265625*^9}, 3.433441893015625*^9, {3.470411038889817*^9, 
   3.470411152948186*^9}}],

Cell[TextData[{
 "Pattern matching in Mathematica is strictly structural. Consider the \
following function ",
 StyleBox["f", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.432238994921875*^9, 3.432239059296875*^9}, {
  3.4322418118125*^9, 3.432241827*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_Integer", "^", "2"}], "]"}], " ", ":=", " ", "1"}]}], "Input",
 CellChangeTimes->{{3.43224124940625*^9, 3.432241310078125*^9}, {
  3.432241655359375*^9, 3.432241664265625*^9}, {3.43224172878125*^9, 
  3.4322417470625*^9}, {3.43224198984375*^9, 3.432241991203125*^9}},
 CellLabel->"In[166]:="],

Cell[TextData[{
 "Clearly, ",
 StyleBox["3^2 ", "Literal"],
 "matches the first version of the function. However, neither ",
 StyleBox["f[9]", "Literal"],
 " nor",
 StyleBox[" f[10]", "Literal"],
 " are in the correct form, so they fail to matc",
 StyleBox["h, even though in the second case ",
  FontTracking->"Extended"],
 StyleBox["9", "Literal",
  FontTracking->"Extended"],
 StyleBox[" == 3^2", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.432241846078125*^9, 3.432241857609375*^9}, {
  3.432241900265625*^9, 3.4322420385625*^9}, {3.470411177366008*^9, 
  3.470411194150326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"3", "^", "2"}], "]"}], ",", " ", 
   RowBox[{"f", "[", "9", "]"}], ",", " ", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.43224132421875*^9, 3.43224132959375*^9}, {
  3.432241699921875*^9, 3.432241705234375*^9}, {3.4322417604375*^9, 
  3.43224177740625*^9}},
 CellLabel->"In[169]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"f", "[", "9", "]"}], ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.43224133153125*^9, 3.432241706296875*^9, {3.432241749609375*^9, 
   3.432241778875*^9}, 3.43224199840625*^9, 3.433442384109375*^9, 
   3.433447030390625*^9, 3.465684444733*^9, 3.467848290606131*^9, 
   3.468597521738474*^9},
 CellLabel->"Out[169]="]
}, Open  ]],

Cell[TextData[{
 "All hope is not lost. By exploiting patterns, you can create a semantic \
match that uses ",
 StyleBox["Condition", "Literal"],
 ", which is commonly abbreviated as ",
 StyleBox["/;", "Literal"],
 "."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.4704112164369698`*^9, 3.4704112511744423`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"f", ",", "HoldFirst"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", "/;", 
    RowBox[{
     RowBox[{"IntegerQ", "[", "x", "]"}], "&&", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Reduce", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"z", "^", "2"}], " ", "\[Equal]", " ", "x"}], ",", 
         RowBox[{"{", "z", "}"}], ",", " ", "Integers"}], "]"}], " ", "=!=", 
       " ", "False"}], ")"}]}]}], "]"}], " ", ":=", " ", "1"}]}], "Input",
 CellChangeTimes->{{3.432240382703125*^9, 3.432240488453125*^9}, {
  3.43224069409375*^9, 3.43224071675*^9}, {3.432240756109375*^9, 
  3.432240766953125*^9}, {3.432240815875*^9, 3.43224085721875*^9}, {
  3.432240893609375*^9, 3.432240912078125*^9}, {3.43224231015625*^9, 
  3.432242391828125*^9}, {3.432242428484375*^9, 3.4322424295625*^9}, {
  3.432242477890625*^9, 3.432242485078125*^9}, {3.4322438290625*^9, 
  3.432243838046875*^9}},
 CellLabel->"In[170]:="],

Cell["Now both the first and second cases match but not the last.", "Text",
 CellChangeTimes->{{3.432242490078125*^9, 3.43224252128125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"3", "^", "2"}], "]"}], ",", " ", 
   RowBox[{"f", "[", "9", "]"}], ",", " ", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Input",
 CellLabel->"In[173]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", 
   RowBox[{"f", "[", "10", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.43224239365625*^9, 3.432242432109375*^9, 
  3.432243013546875*^9, 3.432243855796875*^9, 3.43224389740625*^9, 
  3.43344238428125*^9, 3.433447030421875*^9, 3.465684444842*^9, 
  3.467848290775444*^9, 3.468597521820386*^9},
 CellLabel->"Out[173]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellChangeTimes->{{3.4219489503125*^9, 3.421948953421875*^9}}],

Cell["\<\
Mathematica deals with structural patterns simply because, in general, it is \
impossible to determine if two expressions are semantically equivalent. In \
the 1930s, G\[ODoubleDot]del, Turing, Church, and others performed the \
theoretical work that underlies this unfortunate truth. Still, there are many \
restricted cases for which semantic matching can succeed, as demonstrated in \
the solution. \
\>", "Text",
 CellChangeTimes->{
  3.470161372349403*^9, {3.470411283283848*^9, 3.470411337234357*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Unification Pattern Matching"
}], "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.42030071015625*^9, 3.42030077328125*^9}, 
   3.42101721371875*^9, {3.421849604875*^9, 3.421849612703125*^9}, 
   3.4219483766875*^9, {3.432848090765625*^9, 3.432848107359375*^9}},
 CellTags->"UnificationPatternMatching"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, 3.421017209125*^9,
    3.42101726153125*^9}],

Cell["\<\
You want to emulate unification-based matching, \[AGrave] la Prolog.\
\>", "Text",
 CellChangeTimes->{{3.432236218640625*^9, 3.432236220046875*^9}, {
   3.4322454225*^9, 3.43224545009375*^9}, {3.43273128059375*^9, 
   3.43273130203125*^9}, 3.432848119390625*^9, 3.470161374009951*^9, {
   3.4704113519815397`*^9, 3.47041136310455*^9}, 3.4755848860895576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017030109375*^9, 3.421017051359375*^9}, 3.42101726153125*^9}],

Cell[TextData[{
 "Unification is more powerful than Mathematica pattern matching in that it \
allows pattern variables on both sides of the match. We can",
 "\[CloseCurlyQuote]",
 "t use normal pattern variables for this purpose, so we use the syntax ",
 StyleBox["$[var]", "Literal"],
 " to denote unification variable. "
}], "Text",
 CellChangeTimes->{{3.4322362234375*^9, 3.43223622521875*^9}, {
   3.432848145375*^9, 3.432848165578125*^9}, {3.43284821215625*^9, 
   3.432848336140625*^9}, {3.432848553921875*^9, 3.432848566671875*^9}, 
   3.4704113894612837`*^9}],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "unify", "]"}], "\n", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"$", ",", " ", "HoldAll"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "unify", "]"}], "  ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"bindings", " ", "\[Rule]", " ", 
     RowBox[{"{", "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unify", "[", 
   RowBox[{"x_", ",", "y_", ",", "opt___"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$bindings", "=", 
      RowBox[{
       RowBox[{"bindings", " ", "/.", " ", 
        RowBox[{"{", "opt", "}"}]}], " ", "/.", " ", 
       RowBox[{"Options", "[", "unify", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"unify0", ",", "boundQ", ",", "lookup"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SetAttributes", "[", 
        RowBox[{"unify0", ",", "Orderless"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"boundQ", "[", "x1_", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x1", " ", "/.", " ", "$bindings"}], " ", ")"}], " ", "=!=",
            " ", "x1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"lookup", "[", "x1_", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"x1", " ", "/.", " ", "$bindings"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "both", " ", "variables", " ", "are", " ", "bound"}], ",",
          " ", 
         RowBox[{"then", " ", "match", " ", "if", " ", "values", " ", 
          RowBox[{"match", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"unify0", "[", 
          RowBox[{
           RowBox[{"$", "[", "x1_", "]"}], ",", " ", 
           RowBox[{"$", "[", "y1_", "]"}]}], "]"}], " ", "/;", " ", 
         RowBox[{
          RowBox[{"boundQ", "[", "x1", "]"}], " ", "&&", " ", 
          RowBox[{"boundQ", "[", "y1", "]"}]}]}], ":=", "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{
           RowBox[{"lookup", "[", "x1", "]"}], " ", "===", " ", 
           RowBox[{"lookup", "[", "y1", "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", " ", "one", " ", "variable", " ", "matches"}], ",", 
         " ", 
         RowBox[{
         "then", " ", "bind", " ", "the", " ", "other", " ", "to", " ", "the",
           " ", "same", " ", "value", " ", "and", " ", "unify", " ", 
          RowBox[{"again", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"unify0", "[", 
          RowBox[{
           RowBox[{"$", "[", "x1_", "]"}], ",", " ", 
           RowBox[{"$", "[", "y1_", "]"}]}], "]"}], " ", "/;", " ", 
         RowBox[{"boundQ", "[", "x1", "]"}]}], " ", ":=", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "xval", "}"}], ",", " ", 
          RowBox[{
           RowBox[{"xval", "=", 
            RowBox[{"lookup", "[", "x1", "]"}]}], ";", " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"$bindings", ",", 
             RowBox[{"y1", "\[Rule]", "xval"}]}], "]"}], ";", " ", 
           RowBox[{"unify0", "[", 
            RowBox[{"xval", ",", " ", 
             RowBox[{"$", "[", "y1", "]"}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "neither", " ", "variable", " ", "is", " ", "bound"}], 
         ",", " ", 
         RowBox[{
         "then", " ", "eliminate", " ", "variable", " ", "by", " ", "binding",
           " ", "first", " ", "to", " ", 
          RowBox[{"second", "."}]}]}], "*)"}], "\[IndentingNewLine]", " ", 
       RowBox[{
        RowBox[{"unify0", "[", 
         RowBox[{
          RowBox[{"$", "[", "x1_", "]"}], ",", " ", 
          RowBox[{"$", "[", "y1_", "]"}]}], "]"}], "  ", ":=", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"$bindings", ",", 
             RowBox[{"x1", "\[Rule]", " ", "y1"}]}], "]"}], ";", "True"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Unify", " ", "a", " ", "bound", " ", "variable", " ", "to", " ", 
         "an", " ", "expression", " ", "by", " ", "unifying", " ", "its", " ",
          "value", " ", "to", " ", "the", " ", 
         RowBox[{"expression", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"unify0", "[", 
          RowBox[{
           RowBox[{"$", "[", "x1_", "]"}], ",", " ", "y1_"}], "]"}], " ", "/;", 
         RowBox[{"boundQ", "[", "x1", "]"}]}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "  ", 
          RowBox[{"unify0", "[", 
           RowBox[{
            RowBox[{"lookup", "[", "x1", "]"}], ",", " ", "y1"}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Unify", " ", "an", " ", "unbound", " ", "variable", " ", "to", " ", 
         "an", " ", "expression", " ", "by", " ", "binding", " ", "to", " ", 
         "the", " ", 
         RowBox[{"expression", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"unify0", "[", 
         RowBox[{
          RowBox[{"$", "[", "x1_", "]"}], ",", " ", "y1_"}], "]"}], " ", ":=",
         " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", " ", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"$bindings", ",", 
             RowBox[{"x1", "\[Rule]", " ", "y1"}]}], "]"}], ";", " ", 
           "True"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Atoms", " ", "unify", " ", "if", " ", "they", " ", "are", " ", "the",
          " ", 
         RowBox[{"same", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"unify0", "[", 
         RowBox[{
          RowBox[{"x1_", "?", "AtomQ"}], ",", 
          RowBox[{"y1_", "?", "AtomQ"}]}], "]"}], " ", ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"x1", " ", "===", "y1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compound", " ", "expressions", " ", "unify", " ", "if", " ", "they", 
         " ", "have", " ", "the", " ", "same", " ", "head", " ", "and", " ", 
         "the", " ", "same", " ", "length", " ", "and", " ", "their", " ", 
         "corresponding", " ", "elements", " ", 
         RowBox[{"unify", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"unify0", "[", 
          RowBox[{"x1_", ",", " ", "y1_"}], "]"}], " ", "/;", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Head", "[", "x1", "]"}], " ", "===", " ", 
           RowBox[{"Head", "[", "y1", "]"}]}], "  ", "&&", " ", 
          RowBox[{
           RowBox[{"Length", "[", "x1", "]"}], " ", "\[Equal]", " ", 
           RowBox[{"Length", "[", "y1", "]"}]}]}]}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "u", "}"}], ",", 
          RowBox[{
           RowBox[{"And", " ", "@@", " ", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{"u", "[", 
               RowBox[{"x1", ",", "y1"}], "]"}], ",", 
              RowBox[{"Head", "[", "x1", "]"}]}], "]"}]}], " ", "/.", " ", 
           RowBox[{"u", "\[Rule]", "unify0"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Otherwise", " ", "fail"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"unify0", "[", 
         RowBox[{"x1_", ",", "y1_"}], "]"}], " ", ":=", " ", "False"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"unify0", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"True", ",", 
           RowBox[{"$bindings", " ", "/.", " ", 
            RowBox[{
             RowBox[{"$", "[", "a_", "]"}], " ", "\[RuleDelayed]", "  ", 
             "a"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", 
           RowBox[{"{", "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.432834036078125*^9, 3.432834040921875*^9}, {
   3.432834254546875*^9, 3.43283427678125*^9}, {3.432834506515625*^9, 
   3.432834532140625*^9}, {3.432834563359375*^9, 3.43283456453125*^9}, {
   3.4328346385625*^9, 3.432834693484375*^9}, {3.432834753625*^9, 
   3.432834784046875*^9}, {3.432834939203125*^9, 3.432835005703125*^9}, {
   3.432835460359375*^9, 3.432835495625*^9}, {3.43283568709375*^9, 
   3.432835747296875*^9}, {3.432835783953125*^9, 3.432835829984375*^9}, {
   3.432835921640625*^9, 3.432835937875*^9}, {3.432835972125*^9, 
   3.432835973015625*^9}, {3.4328361588125*^9, 3.432836177359375*^9}, {
   3.43283625209375*^9, 3.4328365659375*^9}, {3.4328366004375*^9, 
   3.4328366766875*^9}, {3.432836740546875*^9, 3.432836814875*^9}, {
   3.43283689184375*^9, 3.432836974234375*^9}, {3.432837059078125*^9, 
   3.43283706325*^9}, {3.432837161796875*^9, 3.432837166703125*^9}, {
   3.43283723021875*^9, 3.43283732034375*^9}, 3.43283739365625*^9, 
   3.43283754528125*^9, {3.43283761046875*^9, 3.432837610859375*^9}, 
   3.432837702609375*^9, {3.432837832515625*^9, 3.432837841046875*^9}, {
   3.43283799053125*^9, 3.432837991859375*^9}, {3.4328383446875*^9, 
   3.432838373515625*^9}, {3.43283870546875*^9, 3.43283870903125*^9}, {
   3.432838783484375*^9, 3.4328387884375*^9}, {3.43283888228125*^9, 
   3.432838917734375*^9}, 3.432838956921875*^9, 3.4328389988125*^9, {
   3.4328391031875*^9, 3.4328391250625*^9}, {3.432839409875*^9, 
   3.432839412578125*^9}, {3.432839475*^9, 3.432839555921875*^9}, {
   3.4328395875*^9, 3.432839666390625*^9}, {3.432839712984375*^9, 
   3.432839715375*^9}, {3.43284021859375*^9, 3.432840329015625*^9}, {
   3.43284035978125*^9, 3.43284036078125*^9}, {3.4328407045*^9, 
   3.43284071753125*^9}, {3.43284078896875*^9, 3.432840794875*^9}, {
   3.43284085278125*^9, 3.43284087740625*^9}, {3.432840907609375*^9, 
   3.432840917578125*^9}, {3.432842291296875*^9, 3.43284229515625*^9}, 
   3.43284253196875*^9, {3.432842594390625*^9, 3.43284277215625*^9}, {
   3.432842946296875*^9, 3.4328429870625*^9}, {3.432848610265625*^9, 
   3.4328486490625*^9}, {3.432848694390625*^9, 3.43284876490625*^9}, {
   3.4328488000625*^9, 3.432849485421875*^9}, {3.432849519796875*^9, 
   3.43284968203125*^9}, {3.432849712265625*^9, 3.43285015040625*^9}, {
   3.432850198375*^9, 3.432850297640625*^9}, {3.432851617296875*^9, 
   3.432851668953125*^9}, {3.43285611746875*^9, 3.432856189546875*^9}, {
   3.432856503375*^9, 3.43285654040625*^9}, {3.43285664278125*^9, 
   3.432856719921875*^9}, {3.4704114173625937`*^9, 3.470411540454734*^9}, {
   3.470411584284624*^9, 3.4704115977714853`*^9}, 3.475584906216744*^9},
 CellLabel->"In[174]:="],

Cell[TextData[{
 "Test ",
 StyleBox["unify", "Literal"],
 " on various expressions:"
}], "Text",
 CellChangeTimes->{{3.432851742859375*^9, 3.432851770171875*^9}, {
  3.4704116174919653`*^9, 3.470411617782497*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.432850333640625*^9, 3.432850340703125*^9}},
 CellLabel->"In[178]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.432850345203125*^9, 3.432850385*^9, 3.432851677359375*^9, 
   3.43285646471875*^9, {3.432856697234375*^9, 3.43285672575*^9}, 
   3.43344238446875*^9, 3.433447030484375*^9, 3.465684444869*^9, 
   3.4678482908402557`*^9, 3.468597521871385*^9},
 CellLabel->"Out[178]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{
   RowBox[{"$", "[", "x", "]"}], ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.4328503521875*^9, 3.43285038803125*^9}},
 CellLabel->"In[179]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.432850389421875*^9, 3.43285167990625*^9, 
  3.432856730234375*^9, 3.4334423845*^9, 3.4334470305*^9, 
  3.4656844448929996`*^9, 3.467848290877912*^9, 3.4685975219110928`*^9},
 CellLabel->"Out[179]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{"1", ",", 
   RowBox[{"$", "[", "x", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432850398359375*^9, 3.43285040253125*^9}},
 CellLabel->"In[180]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4328504035*^9, 3.43285168221875*^9, 3.432856732640625*^9,
   3.43344238453125*^9, 3.43344703053125*^9, 3.46568444492*^9, 
  3.467848290906535*^9, 3.468597521944585*^9},
 CellLabel->"Out[180]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"$", "[", "x", "]"}], ",", "a"}], "]"}], ",", " ", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", " ", 
     RowBox[{"$", "[", "y", "]"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[181]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "b"}], ",", 
     RowBox[{"y", "\[Rule]", "a"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4328504395*^9, 3.43285168478125*^9, 3.433442384546875*^9,
   3.4334470305625*^9, 3.4656844449560003`*^9, 3.467848290944826*^9, 
  3.4685975219722*^9},
 CellLabel->"Out[181]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"$", "[", "x", "]"}], ",", "a"}], "]"}], ",", " ", 
   RowBox[{"f", "[", 
    RowBox[{"b", ",", " ", 
     RowBox[{"$", "[", "x", "]"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[182]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.432850463546875*^9, 3.432851687265625*^9, 
  3.433442384609375*^9, 3.43344703059375*^9, 3.465684444979*^9, 
  3.4678482909804497`*^9, 3.4685975220109797`*^9},
 CellLabel->"Out[182]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"$", "[", "x", "]"}], ",", 
     RowBox[{"g", "[", 
      RowBox[{"$", "[", "y", "]"}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"g", "[", "3", "]"}], ",", " ", 
     RowBox[{"$", "[", "x", "]"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[183]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"g", "[", "3", "]"}]}], ",", 
     RowBox[{"y", "\[Rule]", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.43285048109375*^9, 3.432851689421875*^9, 
  3.433442384625*^9, 3.433447030625*^9, 3.4656844450030003`*^9, 
  3.467848291011405*^9, 3.468597522044285*^9},
 CellLabel->"Out[183]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"g", "[", 
     RowBox[{"$", "[", "y", "]"}], "]"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"$", "[", "x", "]"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[184]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"g", "[", "y", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4328505046875*^9, 3.4328516916875*^9, 
  3.43344238465625*^9, 3.43344703065625*^9, 3.465684445023*^9, 
  3.4678482910401163`*^9, 3.4685975220905647`*^9},
 CellLabel->"Out[184]="]
}, Open  ]],

Cell["\<\
Here you pass in a preexisting binding so the unification fails.\
\>", "Text",
 CellChangeTimes->{{3.43285177728125*^9, 3.432851810671875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unify", "[", 
  RowBox[{"1", ",", 
   RowBox[{"$", "[", "x", "]"}], ",", " ", 
   RowBox[{"bindings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", " ", "2"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432851708453125*^9, 3.4328517124375*^9}, {
  3.432856916921875*^9, 3.432856939453125*^9}},
 CellLabel->"In[185]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.43285171340625*^9, {3.432856928046875*^9, 3.432856939921875*^9}, 
   3.433442384671875*^9, 3.4334470306875*^9, 3.465684445042*^9, 
   3.467848291078348*^9, 3.4685975221282873`*^9},
 CellLabel->"Out[185]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 DefaultNewCellStyle->"Input",
 CellChangeTimes->{{3.4203008435*^9, 3.420300846140625*^9}, {
   3.421017036734375*^9, 3.421017051359375*^9}, 3.42101726153125*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "unifyN", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unifyN", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"unify", "[", 
   RowBox[{"x", ",", "y"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"unifyN", "[", 
   RowBox[{"x_", ",", "y_", ",", "z__"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t", ",", "b2"}], "}"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "b2"}], "}"}], " ", "=", " ", 
      RowBox[{"unifyN", "[", 
       RowBox[{"x", ",", "z"}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{"t", ",", 
       RowBox[{"unify", "[", 
        RowBox[{"x", ",", "y", ",", 
         RowBox[{"bindings", "\[RuleDelayed]", "  ", "b2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "b2"}], "}"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.432855534953125*^9, 3.43285554203125*^9}, {
   3.432855588609375*^9, 3.432855616859375*^9}, {3.432855665703125*^9, 
   3.4328556805*^9}, {3.432855713109375*^9, 3.43285576103125*^9}, {
   3.43285582846875*^9, 3.432855968765625*^9}, {3.43285601346875*^9, 
   3.4328560140625*^9}, {3.432856211703125*^9, 3.4328563049375*^9}, {
   3.432856343828125*^9, 3.432856393296875*^9}, 3.43285686609375*^9, {
   3.43285705690625*^9, 3.43285706896875*^9}, {3.4328571574375*^9, 
   3.43285718921875*^9}, {3.432857237703125*^9, 3.432857273015625*^9}, {
   3.43285730603125*^9, 3.43285730840625*^9}, {3.4328573513125*^9, 
   3.432857415640625*^9}, {3.432857484390625*^9, 3.432857523671875*^9}, {
   3.4328577345*^9, 3.432857763390625*^9}, {3.4328578251875*^9, 
   3.432857890640625*^9}, {3.432857959546875*^9, 3.432857970515625*^9}, {
   3.432858150734375*^9, 3.43285819659375*^9}, {3.432858239546875*^9, 
   3.43285824478125*^9}, 3.432858549328125*^9, 3.432858586125*^9, {
   3.432858634546875*^9, 3.432858649078125*^9}},
 CellLabel->"In[186]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"unifyN", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"$", "[", "w", "]"}], ",", "2", ",", "3", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", 
     RowBox[{"$", "[", "x", "]"}], ",", "3", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"$", "[", "y", "]"}], ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2", ",", "3", ",", 
     RowBox[{"$", "[", "z", "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.432854947109375*^9, 3.43285498446875*^9}, {
  3.43285503440625*^9, 3.43285515221875*^9}, {3.432855231921875*^9, 
  3.43285523325*^9}, {3.432857589296875*^9, 3.432857596125*^9}, {
  3.432857839078125*^9, 3.432857842828125*^9}, {3.432858276421875*^9, 
  3.432858327640625*^9}, {3.43285856734375*^9, 3.432858575359375*^9}},
 CellLabel->"In[189]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"w", "\[Rule]", "1"}], ",", 
     RowBox[{"z", "\[Rule]", "4"}], ",", 
     RowBox[{"y", "\[Rule]", "3"}], ",", 
     RowBox[{"x", "\[Rule]", "2"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.4328578435*^9, 3.43285826028125*^9, 3.432858328796875*^9, {
   3.43285857671875*^9, 3.4328585909375*^9}, {3.432858640609375*^9, 
   3.432858663171875*^9}, 3.43344238471875*^9, 3.43344703071875*^9, 
   3.465684445099*^9, 3.4678482911401377`*^9, 3.4685975221901503`*^9},
 CellLabel->"Out[189]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.432731081640625*^9, 3.432731083890625*^9}}],

Cell[TextData[{
 "Maeder\[CloseCurlyQuote]s ",
 StyleBox["Mathematica Programmer II", "CitationTitle"],
 " goes much further than this recipe by implementing a large subset of \
Prolog. It also allows you to use normal pattern syntax by rewriting the \
variables using techniques discussed in ",
 ButtonBox["Recipe 3.10",
  BaseStyle->"Hyperlink",
  ButtonData->{"DataStructures.nb", "Implementing Bit Vectors"}],
 "."
}], "Text",
 CellChangeTimes->{{3.432731159671875*^9, 3.432731191890625*^9}, {
   3.432731227734375*^9, 3.43273125734375*^9}, {3.432848377140625*^9, 
   3.43284853878125*^9}, {3.433441969109375*^9, 3.433441971515625*^9}, 
   3.470161404386004*^9, {3.470411685560717*^9, 3.470411709835362*^9}, {
   3.4755849378868504`*^9, 3.475584938713245*^9}, {3.4755849798867617`*^9, 
   3.4755850077727213`*^9}}]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{"RulerBar", "EditBar"},
CellGrouping->Manual,
WindowSize->{776, 748},
WindowMargins->{{224, Automatic}, {Automatic, 58}},
PrintingCopies->1,
PrintingStartingPageNumber->145,
PrintingPageRange->{1, Automatic},
PageHeaders->{{None, None, None}, {None, None, None}},
PageFooters->{{
   Cell[
    TextData[{
      CounterBox["Page"], 
      "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]Chapter ", 
      CounterBox["ChapterLabel"], ":\[ThickSpace]\[ThickSpace]", 
      "Patterns and Rule-Based Programming"}], "Footer"], None, None}, {
  None, None, 
   Cell[
    TextData[{
      CounterBox[
      "Page", CounterFunction :> (
        Part[{"", 
          "4.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.0\[ThickSpace]\[ThickSpace]Introduction\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.1\[ThickSpace]\[ThickSpace]Collecting Items That Match \
\[LineSeparator](or Don\[CloseCurlyQuote]t Match) a Pattern\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.1\[ThickSpace]\[ThickSpace]Collecting Items That Match \
\[LineSeparator](or Don\[CloseCurlyQuote]t Match) a Pattern\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.2\[ThickSpace]\[ThickSpace]Excluding Items That Match \
\[LineSeparator](or Don\[CloseCurlyQuote]t Match) a Pattern\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          
          "4.2\[ThickSpace]\[ThickSpace]Excluding Items That Match \
\[LineSeparator](or Don\[CloseCurlyQuote]t Match) a Pattern\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.3\[ThickSpace]\[ThickSpace]Counting Items That Match a Pattern\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.3\[ThickSpace]\[ThickSpace]Counting Items That Match a Pattern\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.4\[ThickSpace]\[ThickSpace]Replacing Parts of an Expression\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.4\[ThickSpace]\[ThickSpace]Replacing Parts of an Expression\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.5\[ThickSpace]\[ThickSpace]Finding the Longest (or Shortest) \
\[LineSeparator]Match for a Pattern\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.5\[ThickSpace]\[ThickSpace]Finding the Longest (or Shortest) \
\[LineSeparator]Match for a Pattern\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.6\[ThickSpace]\[ThickSpace]Implementing Algorithms in Terms of \
Rules\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.6\[ThickSpace]\[ThickSpace]Implementing Algorithms in Terms of \
Rules\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.6\[ThickSpace]\[ThickSpace]Implementing Algorithms in Terms of \
Rules\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.6\[ThickSpace]\[ThickSpace]Implementing Algorithms in Terms of \
Rules\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.7\[ThickSpace]\[ThickSpace]Debugging Infinite Loops When Using \
ReplaceRepeated\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "4.7\[ThickSpace]\[ThickSpace]Debugging Infinite Loops When Using \
ReplaceRepeated\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "4.7\[ThickSpace]\[ThickSpace]Debugging Infinite Loops When Using \
ReplaceRepeated\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "4.8\[ThickSpace]\[ThickSpace]Preventing Evaluation \
\[LineSeparator]Until Replace Is Complete\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.9\[ThickSpace]\[ThickSpace]Manipulating Patterns with Patterns\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.10\[ThickSpace]\[ThickSpace]Optimizing Rules\[ThickSpace]\
\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "4.11\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.11\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.11\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.11\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.11\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.11\[ThickSpace]\[ThickSpace]Using Patterns As a Query Language\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.12\[ThickSpace]\[ThickSpace]Semantic Pattern Matching\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.13\[ThickSpace]\[ThickSpace]Unification Pattern Matching\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.13\[ThickSpace]\[ThickSpace]Unification Pattern Matching\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "4.13\[ThickSpace]\[ThickSpace]Unification Pattern Matching\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"}, # - CurrentValue[
          InputNotebook[], PrintingStartingPageNumber] + 1]& )], 
      CounterBox["Page"]}], "Footer"]}},
PageHeaderLines->{False, False},
PageFooterLines->{True, True},
PrintingOptions->{"CellBackgroundHalftoneAngle"->Automatic,
"CellBackgroundHalftoneDensity"->Automatic,
"FacingPages"->True,
"FirstPageFace"->"Right",
"FirstPageFooter"->True,
"FirstPageHeader"->False,
"GraphicsPrintingFormat"->"Automatic",
"IncludePostScriptResourceDirectives"->True,
"IncludeSpecialFonts"->True,
"Magnification"->1.,
"OpacityRenderingMethod"->Automatic,
"PageFooterMargins"->{24, 24},
"PageHeaderMargins"->{36, 36},
"PageSize"->{504, 661.5},
"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->Automatic,
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->True,
"PrintSelectionHighlighting"->False,
"PrintingMargins"->{{72, 72}, {72, 54}},
"RasterizationResolution"->"Automatic",
"RestPagesFooter"->True,
"RestPagesHeader"->True,
"UnixShellPrintingCommand"->Automatic,
"UsePostScriptOutputFile"->False,
"UseUnixShellPrintingCommand"->False,
"VertexColorRenderingMethod"->Automatic},
CellLabelAutoDelete->False,
Magnification:>FEPrivate`If[
  FEPrivate`Equal[FEPrivate`$VersionNumber, 6.], 1.25, 1.25 Inherited],
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"ora.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "chPatterns"->{
  Cell[545, 20, 188, 7, 63, "ChapterLabel",
   CounterAssignments->{{"ChapterLabel", 4}},
   CellTags->"chPatterns"]},
 "IntroductionCh4"->{
  Cell[1741, 61, 237, 10, 63, "Heading1",
   CellTags->"IntroductionCh4"]},
 "FindingItemsThatMatchAPattern"->{
  Cell[47449, 1372, 412, 12, 63, "Heading1",
   CellTags->"FindingItemsThatMatchAPattern"]},
 "RemovingItemsThatMatch"->{
  Cell[65205, 1944, 449, 13, 63, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"RemovingItemsThatMatch"]},
 "CountingItemsThatMatchAPattern"->{
  Cell[81536, 2473, 341, 10, 46, "Heading1",
   CellTags->"CountingItemsThatMatchAPattern"]},
 "ReplacingPartsOfAnExpression"->{
  Cell[93547, 2869, 284, 10, 31, "Heading1",
   CellTags->"ReplacingPartsOfAnExpression"]},
 "UnderstandingWhenToUseLongestShortest"->{
  Cell[114128, 3502, 427, 14, 63, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
   CellTags->"UnderstandingWhenToUseLongestShortest"]},
 "ImplementingAlgorithmsInTermsOfRules"->{
  Cell[124810, 3828, 286, 10, 63, "Heading1",
   CellTags->"ImplementingAlgorithmsInTermsOfRules"]},
 "SimpleGraph"->{
  Cell[128078, 3925, 420, 9, 51, "Input",
   CellTags->"SimpleGraph"],
  Cell[128501, 3936, 3077, 73, 109, "Output",
   CellTags->"SimpleGraph"]},
 "ComplexGraph"->{
  Cell[140763, 4281, 285, 7, 51, "Input",
   CellTags->"ComplexGraph"],
  Cell[141051, 4290, 4398, 99, 86, "Input",
   CellTags->"ComplexGraph"]},
 "TransClosure"->{
  Cell[149292, 4499, 395, 9, 75, "Input",
   CellTags->"TransClosure"],
  Cell[149690, 4510, 5639, 127, 234, "Output",
   CellTags->"TransClosure"]},
 "DebuggingInfiniteLoopsWhenUsingReplaceRepeated"->{
  Cell[170653, 5066, 305, 10, 63, "Heading1",
   CellTags->"DebuggingInfiniteLoopsWhenUsingReplaceRepeated"]},
 "PreventingEvaluationUntilReplaceIsComplete"->{
  Cell[191072, 5633, 450, 13, 63, "Heading1",
   CellTags->"PreventingEvaluationUntilReplaceIsComplete"]},
 "ManipulatingPatternsWithPatterns"->{
  Cell[199978, 5916, 275, 10, 46, "Heading1",
   CellTags->"ManipulatingPatternsWithPatterns"]},
 "OptimizingRules"->{
  Cell[208432, 6182, 365, 13, 46, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"OptimizingRules"]},
 "UsingPatternsAsAQueryLanguage"->{
  Cell[217500, 6469, 407, 12, 46, "Heading1",
   CellTags->"UsingPatternsAsAQueryLanguage"]},
 "SemanticPatternMatching"->{
  Cell[293323, 8179, 257, 10, 63, "Heading1",
   CellTags->"SemanticPatternMatching"]},
 "UnificationPatternMatching"->{
  Cell[299872, 8377, 498, 14, 63, "Heading1",
   CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
   CellTags->"UnificationPatternMatching"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"chPatterns", 332287, 9185},
 {"IntroductionCh4", 332428, 9189},
 {"FindingItemsThatMatchAPattern", 332540, 9192},
 {"RemovingItemsThatMatch", 332662, 9195},
 {"CountingItemsThatMatchAPattern", 332853, 9199},
 {"ReplacingPartsOfAnExpression", 332982, 9202},
 {"UnderstandingWhenToUseLongestShortest", 333118, 9205},
 {"ImplementingAlgorithmsInTermsOfRules", 333331, 9209},
 {"SimpleGraph", 333450, 9212},
 {"ComplexGraph", 333616, 9217},
 {"TransClosure", 333782, 9222},
 {"DebuggingInfiniteLoopsWhenUsingReplaceRepeated", 333985, 9227},
 {"PreventingEvaluationUntilReplaceIsComplete", 334145, 9230},
 {"ManipulatingPatternsWithPatterns", 334291, 9233},
 {"OptimizingRules", 334410, 9236},
 {"UsingPatternsAsAQueryLanguage", 334594, 9240},
 {"SemanticPatternMatching", 334718, 9243},
 {"UnificationPatternMatching", 334839, 9246}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 188, 7, 63, "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 4}},
 CellTags->"chPatterns"],
Cell[736, 29, 170, 2, 112, "ChapterTitle"],
Cell[909, 33, 472, 17, 227, "Epigraph"],
Cell[1384, 52, 332, 5, 60, "EpigraphAuthor"],
Cell[CellGroupData[{
Cell[1741, 61, 237, 10, 63, "Heading1",
 CellTags->"IntroductionCh4"],
Cell[1981, 73, 1340, 29, 119, "Text"],
Cell[3324, 104, 2495, 66, 123, "Text"],
Cell[5822, 172, 1109, 22, 121, "Text"],
Cell[6934, 196, 719, 16, 84, "Text"],
Cell[7656, 214, 457, 7, 82, "Text"],
Cell[CellGroupData[{
Cell[8138, 225, 92, 1, 75, "Heading2"],
Cell[8233, 228, 1183, 40, 90, "Text"],
Cell[CellGroupData[{
Cell[9441, 272, 147, 4, 49, "Input"],
Cell[9591, 278, 225, 4, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9853, 287, 290, 7, 49, "Input"],
Cell[10146, 296, 362, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10545, 307, 414, 10, 73, "Input"],
Cell[10962, 319, 235, 4, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11234, 328, 357, 8, 49, "Input"],
Cell[11594, 338, 393, 6, 54, "Output"]
}, Open  ]],
Cell[12002, 347, 649, 14, 104, "Text"],
Cell[12654, 363, 1348, 31, 171, "Input"],
Cell[CellGroupData[{
Cell[14027, 398, 287, 7, 49, "Input"],
Cell[14317, 407, 274, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14628, 417, 346, 9, 49, "Input"],
Cell[14977, 428, 281, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15295, 439, 313, 8, 49, "Input"],
Cell[15611, 449, 275, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15923, 460, 313, 8, 49, "Input"],
Cell[16239, 470, 255, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16531, 480, 291, 7, 49, "Input"],
Cell[16825, 489, 249, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17111, 499, 386, 10, 49, "Input"],
Cell[17500, 511, 300, 6, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17849, 523, 445, 7, 75, "Heading2"],
Cell[18297, 532, 519, 11, 46, "Text"],
Cell[CellGroupData[{
Cell[18841, 547, 358, 9, 52, "Input"],
Cell[19202, 558, 269, 6, 54, "Output"]
}, Open  ]],
Cell[19486, 567, 114, 1, 25, "Text"],
Cell[19603, 570, 231, 6, 75, "Input"]
}, Open  ]],
Cell[19849, 579, 390, 10, 49, "Input"],
Cell[20242, 591, 374, 10, 35, "Output"],
Cell[20619, 603, 442, 7, 38, "Heading2"],
Cell[21064, 612, 698, 20, 40, "Text"],
Cell[CellGroupData[{
Cell[21787, 636, 972, 28, 32, "Input"],
Cell[22762, 666, 418, 10, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23217, 681, 967, 27, 32, "Input"],
Cell[24187, 710, 534, 14, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24758, 729, 500, 8, 38, "Heading2"],
Cell[25261, 739, 861, 24, 72, "Text"],
Cell[26125, 765, 317, 9, 32, "Input"],
Cell[CellGroupData[{
Cell[26467, 778, 279, 8, 20, "Input"],
Cell[26749, 788, 167, 4, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26953, 797, 224, 6, 20, "Input"],
Cell[27180, 805, 143, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27360, 813, 315, 9, 20, "Input"],
Cell[27678, 824, 201, 5, 20, "Output"]
}, Open  ]],
Cell[27894, 832, 653, 18, 40, "Text"],
Cell[28550, 852, 637, 12, 78, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29224, 869, 514, 8, 25, "Heading2"],
Cell[29741, 879, 408, 10, 56, "Text"],
Cell[CellGroupData[{
Cell[30174, 893, 395, 11, 20, "Input"],
Cell[30572, 906, 281, 6, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[30902, 918, 509, 8, 38, "Heading2"],
Cell[31414, 928, 598, 10, 72, "Text"],
Cell[CellGroupData[{
Cell[32037, 942, 881, 25, 32, "Input"],
Cell[32921, 969, 528, 14, 20, "Output"]
}, Open  ]],
Cell[33464, 986, 881, 20, 56, "Text"],
Cell[34348, 1008, 808, 21, 20, "Input"],
Cell[35159, 1031, 660, 12, 20, "Output"],
Cell[CellGroupData[{
Cell[35844, 1047, 600, 20, 32, "Input"],
Cell[36447, 1069, 308, 7, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36792, 1081, 237, 7, 65, "NoteWarning"],
Cell[CellGroupData[{
Cell[37054, 1092, 182, 5, 25, "NoteWarningInput"],
Cell[37239, 1099, 202, 5, 18, "NoteWarningOutput"]
}, Open  ]],
Cell[37456, 1107, 181, 5, 25, "NoteWarningInput"],
Cell[37640, 1114, 207, 5, 18, "NoteWarningOutput"],
Cell[37850, 1121, 223, 4, 46, "NoteWarningEnd"]
}, Open  ]]
}, Open  ]],
Cell[38100, 1129, 475, 7, 25, "Heading2"],
Cell[38578, 1138, 1340, 32, 103, "Text"],
Cell[CellGroupData[{
Cell[39943, 1174, 927, 21, 96, "Input"],
Cell[40873, 1197, 321, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41231, 1207, 2079, 48, 121, "Input"],
Cell[43313, 1257, 271, 6, 54, "Output"]
}, Open  ]],
Cell[43599, 1266, 997, 21, 46, "Text"],
Cell[CellGroupData[{
Cell[44621, 1291, 877, 21, 98, "Input"],
Cell[45501, 1314, 285, 6, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45823, 1325, 717, 19, 74, "Input"],
Cell[46543, 1346, 265, 5, 54, "Output"]
}, Open  ]],
Cell[46823, 1354, 28, 0, 75, "Heading2"],
Cell[46854, 1356, 580, 13, 43, "Text"]
}, Open  ]],
Cell[47449, 1372, 412, 12, 63, "Heading1",
 CellTags->"FindingItemsThatMatchAPattern"],
Cell[CellGroupData[{
Cell[47886, 1388, 153, 2, 46, "Heading2WithHeadAbove"],
Cell[48042, 1392, 177, 3, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48256, 1400, 280, 5, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[48539, 1407, 143, 4, 27, "Text"],
Cell[CellGroupData[{
Cell[48707, 1415, 413, 10, 74, "Input"],
Cell[49123, 1427, 187, 5, 54, "Output"]
}, Open  ]],
Cell[49325, 1435, 226, 5, 46, "Text"],
Cell[CellGroupData[{
Cell[49576, 1444, 166, 5, 51, "Input"],
Cell[49745, 1451, 185, 5, 54, "Output"]
}, Open  ]],
Cell[49945, 1459, 166, 5, 27, "Text"],
Cell[CellGroupData[{
Cell[50136, 1468, 363, 9, 51, "Input"],
Cell[50502, 1479, 333, 8, 54, "Output"]
}, Open  ]],
Cell[50850, 1490, 649, 12, 65, "Text"],
Cell[CellGroupData[{
Cell[51524, 1506, 418, 12, 51, "Input"],
Cell[51945, 1520, 219, 6, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[52191, 1530, 282, 5, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[52476, 1537, 225, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[52726, 1546, 556, 13, 20, "Input"],
Cell[53285, 1561, 444, 10, 20, "Output"]
}, Open  ]],
Cell[53744, 1574, 480, 12, 56, "Text"],
Cell[CellGroupData[{
Cell[54249, 1590, 271, 7, 20, "Input"],
Cell[54523, 1599, 702, 21, 33, "Output"]
}, Open  ]],
Cell[55240, 1623, 394, 11, 40, "Text"],
Cell[CellGroupData[{
Cell[55659, 1638, 356, 10, 20, "Input"],
Cell[56018, 1650, 341, 9, 20, "Output"]
}, Open  ]],
Cell[56374, 1662, 187, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[56586, 1670, 390, 10, 20, "Input"],
Cell[56979, 1682, 305, 7, 20, "Output"]
}, Open  ]],
Cell[57299, 1692, 847, 19, 72, "Text"],
Cell[CellGroupData[{
Cell[58171, 1715, 388, 7, 20, "Input"],
Cell[58562, 1724, 345, 8, 20, "Output"]
}, Open  ]],
Cell[58922, 1735, 232, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[59179, 1744, 762, 20, 49, "Input"],
Cell[59944, 1766, 444, 11, 64, "Output"]
}, Open  ]],
Cell[60403, 1780, 662, 20, 48, "Text"],
Cell[CellGroupData[{
Cell[61090, 1804, 483, 15, 49, "Input"],
Cell[61576, 1821, 189, 5, 54, "Output"]
}, Open  ]],
Cell[61780, 1829, 876, 24, 90, "Text"],
Cell[CellGroupData[{
Cell[62681, 1857, 609, 15, 97, "Input"],
Cell[63293, 1874, 183, 5, 54, "Output"]
}, Open  ]],
Cell[63491, 1882, 189, 4, 25, "Text"],
Cell[CellGroupData[{
Cell[63705, 1890, 687, 20, 98, "Input"],
Cell[64395, 1912, 215, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64647, 1922, 28, 0, 75, "Heading2"],
Cell[64678, 1924, 490, 15, 27, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65205, 1944, 449, 13, 63, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"RemovingItemsThatMatch"],
Cell[CellGroupData[{
Cell[65679, 1961, 261, 4, 75, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[65943, 1967, 187, 4, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66167, 1976, 280, 5, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[66450, 1983, 280, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[66755, 1994, 336, 8, 51, "Input"],
Cell[67094, 2004, 333, 8, 54, "Output"]
}, Open  ]],
Cell[67442, 2015, 482, 15, 46, "Text"],
Cell[CellGroupData[{
Cell[67949, 2034, 372, 9, 51, "Input"],
Cell[68324, 2045, 247, 6, 54, "Output"]
}, Open  ]],
Cell[68586, 2054, 942, 27, 46, "Text"],
Cell[CellGroupData[{
Cell[69553, 2085, 599, 16, 75, "Input"],
Cell[70155, 2103, 210, 4, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70414, 2113, 295, 5, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[70712, 2120, 1116, 29, 105, "Text"],
Cell[71831, 2151, 223, 4, 40, "Text"],
Cell[CellGroupData[{
Cell[72079, 2159, 412, 11, 28, "Input"],
Cell[72494, 2172, 818, 27, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73349, 2204, 150, 3, 20, "Input"],
Cell[73502, 2209, 250, 4, 20, "Output"]
}, Open  ]],
Cell[73767, 2216, 166, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[73958, 2222, 356, 8, 20, "Input"],
Cell[74317, 2232, 795, 25, 40, "Output"]
}, Open  ]],
Cell[75127, 2260, 173, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[75325, 2266, 266, 6, 20, "Input"],
Cell[75594, 2274, 607, 20, 40, "Output"]
}, Open  ]],
Cell[76216, 2297, 167, 2, 23, "Text"],
Cell[CellGroupData[{
Cell[76408, 2303, 228, 5, 20, "Input"],
Cell[76639, 2310, 422, 13, 36, "Output"]
}, Open  ]],
Cell[77076, 2326, 1393, 43, 56, "Text"],
Cell[CellGroupData[{
Cell[78494, 2373, 771, 21, 83, "Input"],
Cell[79268, 2396, 569, 17, 33, "Output"]
}, Open  ]],
Cell[79852, 2416, 313, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[80190, 2428, 773, 20, 93, "Input"],
Cell[80966, 2450, 509, 16, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81536, 2473, 341, 10, 46, "Heading1",
 CellTags->"CountingItemsThatMatchAPattern"],
Cell[CellGroupData[{
Cell[81902, 2487, 242, 4, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[82147, 2493, 234, 5, 40, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82418, 2503, 257, 4, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[82678, 2509, 349, 12, 40, "Text"],
Cell[CellGroupData[{
Cell[83052, 2525, 262, 7, 20, "Input"],
Cell[83317, 2534, 205, 4, 20, "Output"]
}, Open  ]],
Cell[83537, 2541, 302, 8, 40, "Text"],
Cell[83842, 2551, 528, 15, 55, "Input"],
Cell[84373, 2568, 183, 5, 20, "Output"],
Cell[84559, 2575, 345, 9, 40, "Text"],
Cell[CellGroupData[{
Cell[84929, 2588, 235, 7, 20, "Input"],
Cell[85167, 2597, 138, 3, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85342, 2605, 273, 8, 20, "Input"],
Cell[85618, 2615, 137, 3, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85804, 2624, 259, 4, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[86066, 2630, 1189, 29, 72, "Text"],
Cell[CellGroupData[{
Cell[87280, 2663, 847, 17, 20, "Input"],
Cell[88130, 2682, 185, 5, 20, "Output"]
}, Open  ]],
Cell[88330, 2690, 327, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[88682, 2702, 693, 17, 35, "Input"],
Cell[89378, 2721, 184, 5, 20, "Output"]
}, Open  ]],
Cell[89577, 2729, 762, 16, 72, "Text"],
Cell[CellGroupData[{
Cell[90364, 2749, 309, 8, 20, "Input"],
Cell[90676, 2759, 401, 13, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91114, 2777, 245, 7, 20, "Input"],
Cell[91362, 2786, 535, 17, 20, "Output"]
}, Open  ]],
Cell[91912, 2806, 148, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[92085, 2814, 357, 11, 20, "Input"],
Cell[92445, 2827, 590, 19, 20, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[93074, 2851, 93, 1, 38, "Heading2"],
Cell[93170, 2854, 352, 11, 23, "Text"],
Cell[CellGroupData[{
Cell[93547, 2869, 284, 10, 31, "Heading1",
 CellTags->"ReplacingPartsOfAnExpression"],
Cell[CellGroupData[{
Cell[93856, 2883, 104, 1, 26, "Heading2WithHeadAbove"],
Cell[93963, 2886, 138, 3, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94138, 2894, 93, 1, 38, "Heading2"],
Cell[94234, 2897, 341, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[94600, 2909, 821, 20, 33, "Input"],
Cell[95424, 2931, 353, 8, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95814, 2944, 116, 3, 20, "Input"],
Cell[95933, 2949, 285, 7, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96255, 2961, 420, 13, 40, "Text"],
Cell[96678, 2976, 341, 11, 20, "Input"],
Cell[97022, 2989, 266, 7, 20, "Output"]
}, Open  ]],
Cell[97303, 2999, 157, 4, 23, "Text"],
Cell[CellGroupData[{
Cell[97485, 3007, 572, 18, 35, "Input"],
Cell[98060, 3027, 411, 13, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98520, 3046, 95, 1, 38, "Heading2"],
Cell[98618, 3049, 432, 10, 23, "Text"],
Cell[CellGroupData[{
Cell[99075, 3063, 546, 15, 47, "Input"],
Cell[99624, 3080, 387, 8, 20, "Output"]
}, Open  ]],
Cell[100026, 3091, 185, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[100236, 3100, 623, 16, 32, "Input"],
Cell[100862, 3118, 371, 8, 20, "Output"]
}, Open  ]],
Cell[101248, 3129, 472, 8, 40, "Text"],
Cell[CellGroupData[{
Cell[101745, 3141, 222, 5, 20, "Input"],
Cell[101970, 3148, 459, 12, 20, "Output"]
}, Open  ]],
Cell[102444, 3163, 272, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[102741, 3173, 260, 7, 20, "Input"],
Cell[103004, 3182, 676, 12, 37, "Message"],
Cell[103683, 3196, 208, 4, 20, "Output"]
}, Open  ]],
Cell[103906, 3203, 503, 10, 56, "Text"],
Cell[CellGroupData[{
Cell[104434, 3217, 267, 7, 20, "Input"],
Cell[104704, 3226, 262, 6, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105003, 3237, 205, 5, 20, "Input"],
Cell[105211, 3244, 855, 15, 37, "Message"],
Cell[106069, 3261, 204, 4, 20, "Output"]
}, Open  ]],
Cell[106288, 3268, 368, 8, 40, "Text"],
Cell[106659, 3278, 210, 5, 20, "Input"],
Cell[CellGroupData[{
Cell[106894, 3287, 496, 14, 20, "Input"],
Cell[107393, 3303, 394, 9, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107824, 3317, 284, 8, 32, "Input"],
Cell[108111, 3327, 365, 8, 20, "Output"]
}, Open  ]],
Cell[108491, 3338, 489, 8, 46, "Text"],
Cell[108983, 3348, 394, 11, 49, "Input"],
Cell[109380, 3361, 975, 25, 138, "Output"],
Cell[110358, 3388, 60, 0, 25, "Text"],
Cell[CellGroupData[{
Cell[110443, 3392, 720, 21, 74, "Input"],
Cell[111166, 3415, 1247, 27, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112450, 3447, 538, 15, 49, "Input"],
Cell[112991, 3464, 487, 10, 57, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113527, 3480, 91, 1, 75, "Heading2"],
Cell[113621, 3483, 458, 13, 27, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114128, 3502, 427, 14, 63, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.},
 CellTags->"UnderstandingWhenToUseLongestShortest"],
Cell[CellGroupData[{
Cell[114580, 3520, 160, 3, 75, "Heading2WithHeadAbove"],
Cell[114743, 3525, 368, 8, 46, "Text"]
}, Open  ]],
Cell[115126, 3536, 137, 2, 75, "Heading2"],
Cell[115266, 3540, 1952, 58, 126, "Text"],
Cell[117221, 3600, 680, 19, 73, "Input"],
Cell[117904, 3621, 379, 9, 54, "Output"],
Cell[118286, 3632, 628, 17, 46, "Text"],
Cell[118917, 3651, 760, 20, 74, "Input"],
Cell[119680, 3673, 376, 9, 54, "Output"],
Cell[120059, 3684, 362, 9, 48, "Text"],
Cell[CellGroupData[{
Cell[120446, 3697, 95, 1, 75, "Heading2"],
Cell[120544, 3700, 642, 12, 105, "Text"],
Cell[121189, 3714, 525, 12, 72, "Text"],
Cell[121717, 3728, 498, 10, 56, "Text"],
Cell[122218, 3740, 505, 15, 20, "Input"],
Cell[122726, 3757, 347, 9, 20, "Output"],
Cell[CellGroupData[{
Cell[123098, 3770, 501, 15, 20, "Input"],
Cell[123602, 3787, 346, 9, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123997, 3802, 92, 1, 75, "Heading2"],
Cell[124092, 3805, 669, 17, 84, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124810, 3828, 286, 10, 63, "Heading1",
 CellTags->"ImplementingAlgorithmsInTermsOfRules"],
Cell[CellGroupData[{
Cell[125121, 3842, 105, 1, 75, "Heading2WithHeadAbove"],
Cell[125229, 3845, 178, 4, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125444, 3854, 85, 1, 75, "Heading2"],
Cell[125532, 3857, 348, 7, 44, "Text"],
Cell[125883, 3866, 379, 9, 48, "Text"],
Cell[126265, 3877, 117, 2, 49, "Input"],
Cell[126385, 3881, 1690, 42, 147, "Input"],
Cell[128078, 3925, 420, 9, 51, "Input",
 CellTags->"SimpleGraph"],
Cell[128501, 3936, 3077, 73, 109, "Output",
 CellTags->"SimpleGraph"],
Cell[131581, 4011, 949, 28, 69, "Text"],
Cell[132533, 4041, 2005, 52, 239, "Input"],
Cell[134541, 4095, 358, 11, 27, "Text"],
Cell[CellGroupData[{
Cell[134924, 4110, 192, 4, 51, "Input"],
Cell[135119, 4116, 275, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135431, 4126, 198, 4, 51, "Input"],
Cell[135632, 4132, 253, 4, 54, "Output"]
}, Open  ]],
Cell[135900, 4139, 405, 11, 27, "Text"],
Cell[CellGroupData[{
Cell[136330, 4154, 814, 20, 51, "Input"],
Cell[137147, 4176, 1706, 47, 102, "Output"]
}, Open  ]],
Cell[138868, 4226, 142, 4, 25, "Text"],
Cell[139013, 4232, 1725, 45, 192, "Input"],
Cell[CellGroupData[{
Cell[140763, 4281, 285, 7, 51, "Input",
 CellTags->"ComplexGraph"],
Cell[141051, 4290, 4398, 99, 86, "Input",
 CellTags->"ComplexGraph"]
}, Open  ]],
Cell[145464, 4392, 345, 9, 25, "Text"],
Cell[CellGroupData[{
Cell[145834, 4405, 142, 3, 51, "Input"],
Cell[145979, 4410, 2708, 68, 176, "Output"]
}, Open  ]],
Cell[148702, 4481, 565, 14, 25, "Text"],
Cell[CellGroupData[{
Cell[149292, 4499, 395, 9, 75, "Input",
 CellTags->"TransClosure"],
Cell[149690, 4510, 5639, 127, 234, "Output",
 CellTags->"TransClosure"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155378, 4643, 95, 1, 75, "Heading2"],
Cell[155476, 4646, 900, 21, 106, "Text"],
Cell[156379, 4669, 579, 13, 46, "Text"],
Cell[156961, 4684, 560, 15, 27, "Text"],
Cell[157524, 4701, 2078, 55, 240, "Input"],
Cell[159605, 4758, 429, 11, 49, "Input"],
Cell[CellGroupData[{
Cell[160059, 4773, 172, 5, 51, "Input"],
Cell[160234, 4780, 268, 6, 54, "Output"]
}, Open  ]],
Cell[160517, 4789, 237, 6, 51, "Input"],
Cell[160757, 4797, 348, 7, 54, "Output"],
Cell[161108, 4806, 124, 1, 25, "Text"],
Cell[161235, 4809, 233, 6, 19, "ListNumber"],
Cell[161471, 4817, 657, 19, 35, "ListNumber"],
Cell[162131, 4838, 294, 6, 19, "ListNumber"],
Cell[162428, 4846, 691, 18, 35, "ListNumber"],
Cell[163122, 4866, 335, 8, 19, "ListNumber"],
Cell[163460, 4876, 332, 8, 46, "Text"],
Cell[163795, 4886, 1629, 45, 101, "Input"],
Cell[CellGroupData[{
Cell[165449, 4935, 164, 5, 51, "Input"],
Cell[165616, 4942, 3924, 88, 105, "Output"]
}, Open  ]],
Cell[169555, 5033, 351, 6, 63, "Text"]
}, Open  ]],
Cell[169921, 5042, 87, 1, 75, "Heading2"]
}, Open  ]],
Cell[170023, 5046, 605, 16, 67, "Text"],
Cell[CellGroupData[{
Cell[170653, 5066, 305, 10, 63, "Heading1",
 CellTags->"DebuggingInfiniteLoopsWhenUsingReplaceRepeated"],
Cell[CellGroupData[{
Cell[170983, 5080, 106, 1, 75, "Heading2WithHeadAbove"],
Cell[171092, 5083, 373, 9, 46, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171502, 5097, 94, 1, 75, "Heading2"],
Cell[171599, 5100, 643, 12, 67, "Text"],
Cell[CellGroupData[{
Cell[172267, 5116, 531, 16, 49, "Input"],
Cell[172801, 5134, 884, 15, 35, "Message"],
Cell[173688, 5151, 835, 28, 54, "Output"]
}, Open  ]],
Cell[174538, 5182, 1392, 36, 102, "Text"],
Cell[CellGroupData[{
Cell[175955, 5222, 562, 16, 49, "Input"],
Cell[176520, 5240, 944, 29, 54, "Output"]
}, Open  ]],
Cell[177479, 5272, 368, 7, 44, "Text"]
}, Open  ]],
Cell[177862, 5282, 92, 1, 75, "Heading2"],
Cell[177957, 5285, 351, 8, 45, "Text"],
Cell[CellGroupData[{
Cell[178333, 5297, 791, 17, 73, "Input"],
Cell[179127, 5316, 934, 15, 35, "Message"],
Cell[180064, 5333, 3116, 74, 308, "Output"]
}, Open  ]],
Cell[183195, 5410, 329, 6, 46, "Text"],
Cell[CellGroupData[{
Cell[183549, 5420, 173, 4, 49, "Input"],
Cell[183725, 5426, 3436, 81, 354, "Output"]
}, Open  ]],
Cell[187176, 5510, 225, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[187426, 5519, 200, 4, 49, "Input"],
Cell[187629, 5525, 401, 11, 54, "Output"]
}, Open  ]],
Cell[188045, 5539, 1508, 41, 108, "Text"],
Cell[CellGroupData[{
Cell[189578, 5584, 453, 12, 49, "Input"],
Cell[190034, 5598, 405, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190476, 5612, 94, 1, 75, "Heading2"],
Cell[190573, 5615, 450, 12, 46, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191072, 5633, 450, 13, 63, "Heading1",
 CellTags->"PreventingEvaluationUntilReplaceIsComplete"],
Cell[CellGroupData[{
Cell[191547, 5650, 104, 1, 75, "Heading2WithHeadAbove"],
Cell[191654, 5653, 213, 4, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191904, 5662, 93, 1, 75, "Heading2"],
Cell[192000, 5665, 200, 7, 27, "Text"],
Cell[CellGroupData[{
Cell[192225, 5676, 129, 1, 25, "Text"],
Cell[192357, 5679, 311, 9, 49, "Input"],
Cell[192671, 5690, 289, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192997, 5700, 212, 5, 25, "Text"],
Cell[193212, 5707, 386, 11, 49, "Input"],
Cell[193601, 5720, 413, 7, 54, "Output"]
}, Open  ]],
Cell[194029, 5730, 356, 8, 46, "Text"],
Cell[194388, 5740, 398, 11, 27, "Text"],
Cell[194789, 5753, 414, 11, 49, "Input"],
Cell[195206, 5766, 208, 4, 54, "Output"],
Cell[CellGroupData[{
Cell[195439, 5774, 969, 22, 120, "Input"],
Cell[196411, 5798, 206, 4, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196666, 5808, 95, 1, 75, "Heading2"],
Cell[196764, 5811, 1108, 30, 69, "Text"],
Cell[197875, 5843, 205, 5, 51, "Input"],
Cell[CellGroupData[{
Cell[198105, 5852, 418, 11, 49, "Input"],
Cell[198526, 5865, 260, 5, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198823, 5875, 386, 11, 49, "Input"],
Cell[199212, 5888, 247, 4, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199508, 5898, 92, 1, 38, "Heading2"],
Cell[199603, 5901, 326, 9, 23, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[199978, 5916, 275, 10, 46, "Heading1",
 CellTags->"ManipulatingPatternsWithPatterns"],
Cell[CellGroupData[{
Cell[200278, 5930, 106, 1, 26, "Heading2WithHeadAbove"],
Cell[200387, 5933, 75, 0, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200499, 5938, 92, 1, 38, "Heading2"],
Cell[200594, 5941, 374, 12, 40, "Text"],
Cell[CellGroupData[{
Cell[200993, 5957, 316, 8, 20, "Input"],
Cell[201312, 5967, 258, 5, 20, "Output"]
}, Open  ]],
Cell[201585, 5975, 108, 3, 23, "Text"],
Cell[CellGroupData[{
Cell[201718, 5982, 304, 8, 20, "Input"],
Cell[202025, 5992, 261, 6, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202335, 6004, 95, 1, 38, "Heading2"],
Cell[202433, 6007, 382, 11, 23, "Text"],
Cell[CellGroupData[{
Cell[202840, 6022, 356, 8, 20, "Input"],
Cell[203199, 6032, 1239, 42, 35, "Output"]
}, Open  ]],
Cell[204453, 6077, 375, 8, 23, "Text"],
Cell[CellGroupData[{
Cell[204853, 6089, 275, 6, 20, "Input"],
Cell[205131, 6097, 229, 4, 20, "Output"]
}, Open  ]],
Cell[205375, 6104, 276, 5, 40, "Text"],
Cell[CellGroupData[{
Cell[205676, 6113, 267, 7, 20, "Input"],
Cell[205946, 6122, 783, 13, 71, "Message"],
Cell[206732, 6137, 218, 4, 20, "Output"]
}, Open  ]],
Cell[206965, 6144, 662, 12, 72, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207664, 6161, 94, 1, 38, "Heading2"],
Cell[207761, 6164, 644, 14, 40, "Text"]
}, Open  ]]
}, Open  ]],
Cell[208432, 6182, 365, 13, 46, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"OptimizingRules"],
Cell[CellGroupData[{
Cell[208822, 6199, 224, 4, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[209049, 6205, 217, 5, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209303, 6215, 235, 4, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[209541, 6221, 246, 6, 23, "Text"],
Cell[CellGroupData[{
Cell[209812, 6231, 477, 10, 20, "Input"],
Cell[210292, 6243, 459, 11, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210788, 6259, 195, 4, 20, "Input"],
Cell[210986, 6265, 823, 24, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211846, 6294, 436, 12, 20, "Input"],
Cell[212285, 6308, 464, 12, 20, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[212798, 6326, 260, 4, 25, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.}],
Cell[213061, 6332, 895, 15, 121, "Text"],
Cell[213959, 6349, 526, 14, 56, "Text"],
Cell[214488, 6365, 607, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[215120, 6384, 245, 7, 20, "Input"],
Cell[215368, 6393, 230, 6, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[215635, 6404, 223, 6, 20, "Input"],
Cell[215861, 6412, 235, 6, 20, "Output"]
}, Open  ]],
Cell[216111, 6421, 225, 6, 40, "Text"],
Cell[CellGroupData[{
Cell[216361, 6431, 150, 4, 20, "Input"],
Cell[216514, 6437, 937, 26, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217500, 6469, 407, 12, 46, "Heading1",
 CellTags->"UsingPatternsAsAQueryLanguage"],
Cell[CellGroupData[{
Cell[217932, 6485, 242, 4, 26, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[218177, 6491, 228, 4, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218442, 6500, 257, 4, 38, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[218702, 6506, 343, 6, 56, "Text"],
Cell[219048, 6514, 5359, 113, 471, "Input"],
Cell[224410, 6629, 173, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[224608, 6638, 629, 14, 32, "Input"],
Cell[225240, 6654, 433, 11, 20, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225710, 6670, 855, 20, 33, "Input"],
Cell[226568, 6692, 279, 7, 20, "Output"]
}, Open  ]],
Cell[226862, 6702, 217, 5, 23, "Text"],
Cell[CellGroupData[{
Cell[227104, 6711, 1928, 41, 67, "Input"],
Cell[229035, 6754, 1329, 35, 147, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230401, 6794, 1450, 37, 165, "Input"],
Cell[231854, 6833, 359, 10, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[232262, 6849, 259, 4, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[232524, 6855, 592, 10, 82, "Text"],
Cell[233119, 6867, 242, 5, 25, "Text"],
Cell[233364, 6874, 274, 8, 109, "Code"],
Cell[CellGroupData[{
Cell[233663, 6886, 1188, 31, 119, "Input"],
Cell[234854, 6919, 1166, 34, 138, "Output"]
}, Open  ]],
Cell[236035, 6956, 1067, 24, 127, "Text"],
Cell[237105, 6982, 324, 8, 93, "Code"],
Cell[CellGroupData[{
Cell[237454, 6994, 1352, 32, 120, "Input"],
Cell[238809, 7028, 1190, 37, 158, "Output"]
}, Open  ]],
Cell[240014, 7068, 1154, 34, 69, "Text"],
Cell[241171, 7104, 172, 8, 142, "Code"],
Cell[CellGroupData[{
Cell[241368, 7116, 879, 21, 96, "Input"],
Cell[242250, 7139, 258, 6, 54, "Output"]
}, Open  ]],
Cell[242523, 7148, 1036, 16, 119, "Text"],
Cell[243562, 7166, 2060, 44, 163, "Text"],
Cell[245625, 7212, 1757, 47, 308, "Input"],
Cell[247385, 7261, 215, 5, 25, "Text"],
Cell[CellGroupData[{
Cell[247625, 7270, 269, 7, 51, "Input"],
Cell[247897, 7279, 187, 5, 54, "Output"]
}, Open  ]],
Cell[248099, 7287, 1232, 30, 214, "Input"],
Cell[249334, 7319, 360, 6, 44, "Text"],
Cell[CellGroupData[{
Cell[249719, 7329, 991, 27, 193, "Input"],
Cell[250713, 7358, 39904, 747, 672, "Output"]
}, Open  ]],
Cell[290632, 8108, 660, 14, 67, "Text"],
Cell[291295, 8124, 1110, 24, 96, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292442, 8153, 91, 1, 75, "Heading2"],
Cell[292536, 8156, 738, 17, 46, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293323, 8179, 257, 10, 63, "Heading1",
 CellTags->"SemanticPatternMatching"],
Cell[CellGroupData[{
Cell[293605, 8193, 105, 1, 75, "Heading2WithHeadAbove"],
Cell[293713, 8196, 211, 4, 44, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293961, 8205, 94, 1, 75, "Heading2"],
Cell[294058, 8208, 647, 15, 45, "Text"],
Cell[294708, 8225, 261, 7, 27, "Text"],
Cell[294972, 8234, 528, 11, 97, "Input"],
Cell[295503, 8247, 590, 17, 48, "Text"],
Cell[CellGroupData[{
Cell[296118, 8268, 389, 10, 49, "Input"],
Cell[296510, 8280, 416, 10, 54, "Output"]
}, Open  ]],
Cell[296941, 8293, 323, 8, 48, "Text"],
Cell[CellGroupData[{
Cell[297289, 8305, 1111, 26, 143, "Input"],
Cell[298403, 8333, 140, 1, 25, "Text"],
Cell[298546, 8336, 230, 7, 49, "Input"],
Cell[298779, 8345, 381, 8, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299209, 8359, 94, 1, 75, "Heading2"],
Cell[299306, 8362, 517, 9, 82, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299872, 8377, 498, 14, 63, "Heading1",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10000.},
 CellTags->"UnificationPatternMatching"],
Cell[CellGroupData[{
Cell[300395, 8395, 242, 4, 75, "Heading2WithHeadAbove",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[300640, 8401, 369, 6, 25, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301046, 8412, 257, 4, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[301306, 8418, 567, 11, 65, "Text"],
Cell[301876, 8431, 11774, 264, 1122, "Input"],
Cell[313653, 8697, 213, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[313891, 8707, 172, 4, 49, "Input"],
Cell[314066, 8713, 386, 9, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314489, 8727, 198, 5, 49, "Input"],
Cell[314690, 8734, 351, 8, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315078, 8747, 200, 5, 49, "Input"],
Cell[315281, 8754, 346, 8, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315664, 8767, 286, 9, 49, "Input"],
Cell[315953, 8778, 386, 10, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316376, 8793, 286, 9, 49, "Input"],
Cell[316665, 8804, 301, 7, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317003, 8816, 380, 12, 51, "Input"],
Cell[317386, 8830, 421, 11, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317844, 8846, 255, 8, 51, "Input"],
Cell[318102, 8856, 362, 9, 56, "Output"]
}, Open  ]],
Cell[318479, 8868, 153, 3, 25, "Text"],
Cell[CellGroupData[{
Cell[318657, 8875, 362, 9, 51, "Input"],
Cell[319022, 8886, 326, 8, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319397, 8900, 259, 4, 75, "Heading2",
 CellGroupingRules->{$CellContext`GroupTogetherGrouping, 10001.}],
Cell[319659, 8906, 2008, 43, 166, "Input"],
Cell[CellGroupData[{
Cell[321692, 8953, 890, 20, 49, "Input"],
Cell[322585, 8975, 591, 14, 54, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[323225, 8995, 94, 1, 75, "Heading2"],
Cell[323322, 8998, 818, 16, 63, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
