(* Content-type: application/mathematica *)(*** Wolfram Notebook File ***)(* http://www.wolfram.com/nb *)(* CreatedBy='Mathematica 7.0' *)(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    420682,       8476]
NotebookOptionsPosition[    399915,       7918]
NotebookOutlinePosition[    407991,       8102]
CellTagsIndexPosition[    407133,       8079]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input", CellChangeTimes->{3.4686949559684267`*^9}],

Cell[TextData[{ "CHAPTER ",  CounterBox["ChapterLabel"]}], "ChapterLabel", CounterAssignments->{{"ChapterLabel", 18}}, CellTags->"chAdvanced"],

Cell["Tricks of the Trade", "ChapterTitle", CellChangeTimes->{{3.448998789328125*^9, 3.448998801359375*^9}, {  3.467896881537154*^9, 3.467896884710162*^9}}],

Cell["\<\Meine tricksDon\[CloseCurlyQuote]t know what I would do withoutTricks yeah yeahGimme tricksIhr wisst ich bin alleine ohne meine meineTricks yeahThat\[CloseCurlyQuote]s the only reason my heart still ticksVishnu, Batu, Fu Manchu tooHu-Hu, Jonny ManushutuDr. Wu, Peggy SueRandy Andy tooOne thing in common when they get up to their tricksThey do it for kicksSo if you ever see me actingLike a kid from outer spaceAnd you think of lending a handBut if you look real closeYou\[CloseCurlyQuote]ll see a smile on my faceThen I\[CloseCurlyQuote]m sure you\[CloseCurlyQuote]ll understand\\>", "Epigraph", CellChangeTimes->{  3.468018794194498*^9, {3.4729056609234*^9, 3.472905726880459*^9}, {   3.472914717355188*^9, 3.472914756320133*^9}, 3.472914886835637*^9}],

Cell["Falco, \[OpenCurlyDoubleQuote]Tricks\[CloseCurlyDoubleQuote]", \"EpigraphAuthor", CellChangeTimes->{{3.468018853051517*^9, 3.468018854058476*^9}, {  3.472905641354303*^9, 3.4729056524694643`*^9}, {3.4729149062737513`*^9,   3.47291493242494*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Introduction"
}], "Heading1",
 CellChangeTimes->{{3.433458481140625*^9, 3.433458487359375*^9}}],

Cell["\<\This chapter\[CloseCurlyQuote]s recipes consist of Mathematica techniques and \capabilities that every serious user should have in their tool box. Unlike \other chapters, the recipes here are not tied together by any one theme. I \include them because each recipe will give you some deeper insight into \details that are unique to the Mathematica architecture. Each recipe has been \a lifesaver to me at various times, and I hope that one or more of them will \be helpful to you. \\>", "Text", CellChangeTimes->{{3.467933643698461*^9, 3.46793372683549*^9}, {   3.4679836934122887`*^9, 3.467983751492667*^9}, {3.467983823521093*^9,    3.467983823735483*^9}, {3.4679840410644093`*^9, 3.467984132763521*^9}, {   3.4679843244294653`*^9, 3.467984375109235*^9}, 3.468012615624456*^9, {   3.468012661472002*^9, 3.468012702776761*^9}, {3.472907186876482*^9,    3.472907192307695*^9}, 3.472914675392734*^9, {3.472914775187166*^9,    3.472914777157524*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{  CounterBox["ChapterLabel"], ".",  CounterBox["Heading1"], "\[ThickSpace]\[ThickSpace]", "Cleaning Up During Incremental Development"}], "Heading1", "ProductionPageBreak", CellChangeTimes->{{3.449148797859375*^9, 3.449148823234375*^9}, {  3.44914895678125*^9, 3.449148989359375*^9}}, CellTags->"Cleaning up"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\You are solving a problem by incremental refinement of a set of functions. As \you proceed to refactor and introduce alternative definitions for symbols, \you find that code that was working before mysteriously breaks.\\>", "Text", CellChangeTimes->{{3.449148827640625*^9, 3.449148915671875*^9}, {   3.44915213796875*^9, 3.449152185703125*^9}, {3.468004300373513*^9,    3.468004316144122*^9}, 3.4729072046293573`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{ "Make judicious use of ", StyleBox["Clear", "Literal"], " before every group of functions that are still undergoing development. \First, I illustrate what can go wrong if you are sloppy. Suppose you define \this function ", StyleBox["f", "Literal"], "."}], "Text", CellChangeTimes->{{3.4491521956875*^9, 3.449152212828125*^9}, {  3.449152336390625*^9, 3.4491523745625*^9}, {3.44915251084375*^9,   3.44915254665625*^9}, {3.44915330478125*^9, 3.4491533281875*^9}, {  3.472907215067984*^9, 3.472907217762528*^9}}],

Cell[BoxData[ RowBox[{  RowBox[{   RowBox[{"f", "[", "x_Integer", "]"}], " ", ":=", " ",    RowBox[{"x", "^", "2"}]}], ";"}]], "Input", CellChangeTimes->{{3.44915237753125*^9, 3.449152461078125*^9}, {  3.449152502578125*^9, 3.449152503890625*^9}, {3.449153278171875*^9,   3.4491532875*^9}, {3.449153335765625*^9, 3.449153362515625*^9}, {  3.449153542734375*^9, 3.449153544203125*^9}}],

Cell[TextData[{ "Later, you decide that you should be more general about the valid types for \argument ", StyleBox["x", "Literal"], " and also realize you really meant to compute ", StyleBox["x^2 +1", "Literal"], ", so you change the line to this (deleting the previous line from the \notebook):"}], "Text", CellChangeTimes->{{3.44915337509375*^9, 3.44915348234375*^9}, {   3.449153575734375*^9, 3.44915364703125*^9}, 3.468004321728714*^9,    3.468004868574051*^9, 3.4686950122730827`*^9, {3.472907226964851*^9,    3.472907241284584*^9}, {3.472907276520487*^9, 3.472907326785994*^9}}],

Cell[BoxData[ RowBox[{  RowBox[{"f", "[",    RowBox[{"x_", "?", "NumericQ"}], "]"}], " ", ":=", " ",   RowBox[{   RowBox[{"x", "^", "2"}], "+", "1"}]}]], "Input", CellChangeTimes->{{3.449153493515625*^9, 3.449153509921875*^9}}],

Cell["\<\Later (possibly after you have forgotten the old version even existed), you \try out your code and are surprised by the result.\\>", "Text", CellChangeTimes->{{3.449153660890625*^9, 3.4491537828125*^9},    3.4680043260250177`*^9, {3.4729073342636223`*^9, 3.4729073386821833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[ RowBox[{"f", "[", "2", "]"}]], "Input", CellChangeTimes->{{3.44915352196875*^9, 3.44915352728125*^9}}],

Cell[BoxData["4"], "Output", CellChangeTimes->{3.449153528109375*^9, 3.449153559546875*^9}]
}, Open  ]],

Cell[TextData[{ "To avoid problems like this, you should clear old definitions before \defining a function. Then you can redefine ", StyleBox["f", "Literal"], " to your heart\[CloseCurlyQuote]s content without worrying that old \definitions will interfere."}], "Text", CellChangeTimes->{{3.44915384053125*^9, 3.4491539041875*^9}, {   3.449153938796875*^9, 3.4491539834375*^9}, 3.468012777763978*^9, {   3.472907345258762*^9, 3.4729073572082577`*^9}, 3.472914783949892*^9}],

Cell[BoxData[{ RowBox[{"Clear", "[", "f", "]"}], "\[IndentingNewLine]",  RowBox[{  RowBox[{"f", "[",    RowBox[{"x_", "?", "NumericQ"}], "]"}], " ", ":=", " ",   RowBox[{   RowBox[{"x", "^", "2"}], "+", "1"}]}]}], "Input", CellChangeTimes->{{3.44915390915625*^9, 3.4491539314375*^9}}]
}, Open  ]],

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "Developers coming from other programming environments easily fall into the \
trap caused by th",
 StyleBox["e fact that the kernel holds all definitions created during a \
session un",
  FontTracking->"Extended"],
 "less they are specifically cleared or exactly redefined. This is not the \
expected behavior of languages that are compiled or interpre",
 StyleBox["ted, since in those environments",
  FontTracking->"SemiCondensed"],
 " old definitions do not persist. The solution shows one way problems can \
arise, but there are others. It is just as likely that conflicts can come \
from other notebooks that are sharing the same kernel instance. Many \
Mathematica veterans begin their notebooks",
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Text",
 CellChangeTimes->{{3.449154821578125*^9, 3.449154898671875*^9}, {
   3.449156176328125*^9, 3.44915632340625*^9}, 3.44915777253125*^9, {
   3.449157802546875*^9, 3.449157824578125*^9}, {3.44915785584375*^9, 
   3.449157967796875*^9}, {3.449159045828125*^9, 3.449159060375*^9}, {
   3.44915913021875*^9, 3.449159160875*^9}, {3.468004329698161*^9, 
   3.468004368868061*^9}, {3.468012811029335*^9, 3.468012811861268*^9}, {
   3.468012848086972*^9, 3.468012895288385*^9}, {3.472907361820838*^9, 
   3.472907389839127*^9}, {3.472907974995489*^9, 3.472907989268114*^9}, {
   3.474221269716496*^9, 3.47422130065073*^9}, {3.476461359103031*^9, 
   3.476461359442911*^9}, 3.485529673321862*^9}],

Cell[TextData[{
 "with an expression to clear every symbol in the global context (a context \
is similar to what other languages call ",
 StyleBox["namespaces", "Emphasis"],
 "). "
}], "Text",
 CellChangeTimes->{{3.449154821578125*^9, 3.449154898671875*^9}, {
   3.449156176328125*^9, 3.44915632340625*^9}, 3.44915777253125*^9, {
   3.449157802546875*^9, 3.449157824578125*^9}, {3.44915785584375*^9, 
   3.449157967796875*^9}, {3.449159045828125*^9, 3.449159060375*^9}, {
   3.44915913021875*^9, 3.449159160875*^9}, {3.468004329698161*^9, 
   3.468004368868061*^9}, {3.468012811029335*^9, 3.468012811861268*^9}, {
   3.468012848086972*^9, 3.468012895288385*^9}, {3.472907361820838*^9, 
   3.472907389839127*^9}, {3.472907974995489*^9, 3.472907989268114*^9}, {
   3.474221269716496*^9, 3.474221306797596*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.449157971109375*^9, 3.44915798309375*^9}}],

Cell[TextData[{
 "The ",
 StyleBox["Global`", "Literal"],
 " ",
 "context is the default context in which new symbols are defined. "
}], "Text",
 CellChangeTimes->{{3.449158889015625*^9, 3.449158913078125*^9}, {
  3.44915906490625*^9, 3.4491590913125*^9}}],

Cell["\<\
You can also clear the command history. This is useful for freeing memory. \
Consider the following example.\
\>", "Text",
 CellChangeTimes->{{3.4679024879618177`*^9, 3.467902490296391*^9}, {
   3.4679028889773703`*^9, 3.467902908216611*^9}, {3.467902965634935*^9, 
   3.4679029974840813`*^9}, {3.467903038909593*^9, 3.467903046765952*^9}, 
   3.4680043816664953`*^9, {3.47290800219694*^9, 3.472908006469228*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemoryInUse", "[", "]"}]], "Input",
 CellChangeTimes->{{3.467903110974098*^9, 3.4679031184064837`*^9}},
 CellLabel->"In[192]:="],

Cell[BoxData["132430904"], "Output",
 CellChangeTimes->{3.467903122029129*^9},
 CellLabel->"Out[192]="]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s use a lot of memory.", "Text",
 CellChangeTimes->{{3.4679033547634068`*^9, 3.4679033694426727`*^9}, {
   3.472908011133212*^9, 3.4729080113007803`*^9}, 3.47291478997388*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", " ", "=", " ", 
   RowBox[{"Array", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"1000", ",", "1000"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MemoryInUse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.467903050878666*^9, 3.467903052807732*^9}, {
  3.467903128380314*^9, 3.467903130186664*^9}, {3.467903169478155*^9, 
  3.467903223868122*^9}},
 CellLabel->"In[193]:="],

Cell[BoxData["188470896"], "Output",
 CellChangeTimes->{3.467903225658524*^9},
 CellLabel->"Out[194]="]
}, Open  ]],

Cell[TextData[{
 "Simply clearing ",
 StyleBox["x", "Literal"],
 " does not get the memory back because it is cached in the history."
}], "Text",
 CellChangeTimes->{{3.467903373482574*^9, 3.46790341990055*^9}, {
  3.472908016141659*^9, 3.472908016461681*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MemoryInUse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.46790323327462*^9, 3.467903253064*^9}},
 CellLabel->"In[196]:="],

Cell[BoxData["188473032"], "Output",
 CellChangeTimes->{3.467903253901979*^9},
 CellLabel->"Out[197]="]
}, Open  ]],

Cell[TextData[{
 "However, you can clear the ",
 StyleBox["In", "Literal"],
 " and ",
 StyleBox["Out", "Literal"],
 " history by unprotecting, clearing, and reprotecting ",
 StyleBox["In", "Literal"],
 " and ",
 StyleBox["Out", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.467903438437216*^9, 3.467903480214952*^9}, 
   3.468004397027413*^9, {3.472908020383553*^9, 3.472908031022572*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", 
   RowBox[{"In", ",", " ", "Out"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"In", ",", "Out"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", 
   RowBox[{"In", ",", "Out"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MemoryInUse", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.4679030245260572`*^9, 3.467903030550785*^9}, {
  3.4679032596479387`*^9, 3.467903326755146*^9}},
 CellLabel->"In[198]:="],

Cell[BoxData["132287208"], "Output",
 CellChangeTimes->{3.467903327678359*^9},
 CellLabel->"Out[201]="]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 "Problems with name conflicts can also b",
 StyleBox["e mitiga",
  FontTracking->"Plain"],
 StyleBox["ted by use of packages. See ",
  FontTracking->"SemiCondensed"],
 StyleBox[ButtonBox["Recipe 18.4",
  BaseStyle->"Hyperlink",
  ButtonData->"Packages"],
  FontTracking->"SemiCondensed"],
 StyleBox[".",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{
  3.44915927490625*^9, {3.449159323875*^9, 3.449159357390625*^9}, {
   3.4491594110625*^9, 3.449159414515625*^9}, {3.467903517344613*^9, 
   3.467903521816494*^9}, {3.467903653683415*^9, 3.467903653684073*^9}, 
   3.468004401035512*^9, {3.472908036511509*^9, 3.472908052657317*^9}}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Modifying Built-in Functions and Constants"
}], "Heading1",
 CellChangeTimes->{
  3.43958844859375*^9, 3.449145792390625*^9, {3.449163654125*^9, 
   3.449163664625*^9}},
 CellTags->"Modifying Built-in Functions and Constants"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 "You want to extend or alter the meaning of intrinsic functions that are \
built in to Mathematica. Perhaps you want to introduce a mathematical object \
that has its own natural definitions for the standard operations ",
 StyleBox["Plus", "Literal"],
 ", ",
 StyleBox["Times", "Literal"],
 ", etc. "
}], "Text",
 CellChangeTimes->{{3.4490006724375*^9, 3.449000741953125*^9}, {
  3.449000907328125*^9, 3.449000961796875*^9}, {3.449001013390625*^9, 
  3.449001075875*^9}, {3.4729080729761963`*^9, 3.472908093232932*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2", "TopOfPage"],

Cell["\<\
The most straightforward way to modify Mathematica operations is to unprotect \
them, augment their meaning, and protect them again. However, the easiest way \
is frequently not the best or safest way, so be sure not to skip the \
\[OpenCurlyDoubleQuote]Discussion\[CloseCurlyDoubleQuote] section.\
\>", "Text",
 CellChangeTimes->{{3.449001176640625*^9, 3.449001311609375*^9}, {
   3.4490046018125*^9, 3.449004606953125*^9}, {3.468012932634413*^9, 
   3.468012933369863*^9}, 3.472908120915765*^9, {3.472908185220254*^9, 
   3.4729082119820747`*^9}, {3.472914942708549*^9, 3.472914945718906*^9}, {
   3.474221347130319*^9, 3.474221352328673*^9}}],

Cell[TextData[{
 "It is common in certain applications to consider 0^0 to be defined as 1; \
however, Mathematica considers this expression to be indeterminate and will \
issue a warning when it evaluates it (hence, the use of ",
 StyleBox["Quiet", "Literal"],
 " here)."
}], "Text",
 CellChangeTimes->{{3.44900348984375*^9, 3.449003558984375*^9}, {
   3.449003590296875*^9, 3.449003665875*^9}, 3.4680044109562893`*^9, {
   3.472908218646677*^9, 3.4729082400875874`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"0", "^", "0"}], " ", "//", " ", "Quiet"}]], "Input",
 CellChangeTimes->{{3.449003458421875*^9, 3.4490034704375*^9}, {
  3.449003563578125*^9, 3.44900358421875*^9}}],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.449003471125*^9, 3.449003585015625*^9}]
}, Open  ]],

Cell["You can change this behavior quite easily.", "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.4490036765*^9, 3.4490037359375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{"0", "^", "0"}]}], "Input",
 CellChangeTimes->{{3.449003745546875*^9, 3.449003759296875*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.44900374965625*^9}]
}, Open  ]],

Cell[TextData[{
 "This new behavior will persist only within the Mathematica kernel session \
and will be known to all notebooks associated with the notebook\
\[CloseCurlyQuote]s kernel. See ",
 ButtonBox["Recipe 18.9",
  BaseStyle->"Hyperlink",
  ButtonData->"Initializing and Cleaning Up Automatically"],
 " for a way to make such changes automatically active each time you use \
Mathematica."
}], "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.449003770015625*^9, 3.449003990625*^9}, 
   3.468004413964319*^9, {3.468012971939177*^9, 3.468013047824189*^9}, {
   3.4729082580491467`*^9, 3.47290826680077*^9}, 3.472914793479638*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2",
 CellMargins->{{0, 36}, {0, 11}}],

Cell[TextData[{
 "The solution shows a reasonable change to the meaning of an intrinsic \
function. It is reasonable because it is unlikely to change the behavior of \
Mathematica in a detrimental way since you are simply supplying meaning to an \
expression that had no meaning. Technically speaking, it is possible that \
third-party code you are also using depended on ",
 StyleBox["Power[0,0]", "Literal"],
 " evaluating to indeterminate; however, this possibility is far-fetched. \
This is not the case for other seemingly reasonable changes. For example, you \
might be irked by the following result:"
}], "Text",
 CellChangeTimes->{{3.4490046168125*^9, 3.44900480371875*^9}, {
   3.449004882921875*^9, 3.449005024265625*^9}, {3.449005165515625*^9, 
   3.449005184640625*^9}, 3.4491594284375*^9, 3.449163497546875*^9, {
   3.468004418389463*^9, 3.468004442094288*^9}, 3.468013637867386*^9, 
   3.46858387856835*^9, {3.472908278937889*^9, 3.472908293426152*^9}, {
   3.472908344470654*^9, 3.4729083918296432`*^9}, {3.4764613922139597`*^9, 
   3.476461403300728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "^", 
   RowBox[{"(", 
    RowBox[{"1", "/", "3"}], ")"}]}], " ", "//", "N"}]], "Input",
 CellChangeTimes->{
  3.449003996921875*^9, {3.449005187484375*^9, 3.449005224125*^9}}],

Cell[BoxData[
 RowBox[{"0.5000000000000001`", "\[InvisibleSpace]", "+", 
  RowBox[{"0.8660254037844386`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.4490051965*^9, 3.449005224703125*^9}}]
}, Open  ]],

Cell["\<\
Clearly, an equally valid answer is -1. In fact, there are three valid \
answers. This is a question of which branch Mathematica takes by default. \
\>", "Text",
 CellChangeTimes->{{3.449005242046875*^9, 3.449005251*^9}, {
  3.449005531921875*^9, 3.449005589234375*^9}, {3.449005640828125*^9, 
  3.449005678484375*^9}, {3.472908396976427*^9, 3.472908406110721*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", "^", " ", "3"}], " ", "\[Equal]", " ", 
     RowBox[{"-", "1"}]}], ",", "x"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.449005599203125*^9, 3.449005629328125*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.5000000000000001`", "\[InvisibleSpace]", "+", 
      RowBox[{"0.8660254037844386`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.4999999999999998`", "\[InvisibleSpace]", "-", 
      RowBox[{"0.8660254037844388`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.4490056210625*^9, 3.4490056299375*^9}}]
}, Open  ]],

Cell[TextData[{
 "To remedy this choice, you might decide to take matters into your own hands \
and force Mathematica to take a different branch ",
 StyleBox["whenever it needs to evaluate a rational",
  FontTracking->"SemiCondensed"],
 " power of a negative number."
}], "Text",
 CellChangeTimes->{{3.449005709421875*^9, 3.4490057403125*^9}, {
   3.449006515640625*^9, 3.44900653821875*^9}, {3.449006610828125*^9, 
   3.449006646234375*^9}, {3.468004445685419*^9, 3.468004448213581*^9}, 
   3.472908411169341*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{
     RowBox[{"a_", "?", "Negative"}], ",", "n_Rational"}], "]"}], "=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"n", " ", 
      RowBox[{"Log", "[", "a", "]"}]}], "+", 
     RowBox[{"n", " ", "2", " ", "Pi", " ", "I"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "Power", "]"}], ";"}]}], "Input", \
"ProductionPageBreak",
 CellChangeTimes->{{3.449005949984375*^9, 3.4490059899375*^9}, {
  3.449006503734375*^9, 3.449006511453125*^9}, {3.449006557828125*^9, 
  3.44900657934375*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "^", 
   RowBox[{"(", 
    RowBox[{"1", "/", "3"}], ")"}]}], " ", "//", "N"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.449006683140625*^9, 3.474221594803856*^9}],

Cell[TextData[{
 "This has an unfortunate consequence if you want ",
 StyleBox["Solve", "Literal"],
 " to work as before!"
}], "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.44900671015625*^9, 3.449006795265625*^9}, 
   3.468004451269121*^9, {3.472908424056004*^9, 3.472908435280457*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", "^", " ", "3"}], " ", "\[Equal]", " ", 
     RowBox[{"-", "1"}]}], ",", "x"}], "]"}], "//", "N"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4490066996875*^9}]
}, Open  ]],

Cell["Quitting the kernel will revert to the old behavior.", "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.449006804515625*^9, 3.449006840375*^9}, 
   3.4742214358718147`*^9}],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.449006744703125*^9, 3.449006751*^9}, {3.44900685475*^9, 
  3.449006886703125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", " ", "^", " ", "3"}], " ", "\[Equal]", " ", 
     RowBox[{"-", "1"}]}], ",", "x"}], "]"}], "//", "N"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.5000000000000001`", "\[InvisibleSpace]", "+", 
      RowBox[{"0.8660254037844386`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"0.4999999999999998`", "\[InvisibleSpace]", "-", 
      RowBox[{"0.8660254037844388`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4490068910625*^9}]
}, Open  ]],

Cell[TextData[{
 "Sometimes you want to temporarily change the meaning of a symbol. In that \
case, use of ",
 StyleBox["Unprotect", "Literal"],
 " is overkill, and it is better to introduce the new value within a ",
 StyleBox["Block", "Literal"],
 ". For example, ",
 StyleBox["E", "Literal"],
 " is the built-in symbol for the base of the natural logarithm, but in this \
block we use ",
 StyleBox["E", "Literal"],
 " as hex digit 14."
}], "Text",
 CellMargins->{{0, 0}, {2, 1}},
 CellChangeTimes->{{3.449159439296875*^9, 3.44915957090625*^9}, {
   3.449161683109375*^9, 3.4491616849375*^9}, {3.449162200375*^9, 
   3.449162207390625*^9}, {3.449163472953125*^9, 3.44916348503125*^9}, {
   3.4491635865625*^9, 3.449163588953125*^9}, 3.44916364403125*^9, {
   3.449163689390625*^9, 3.44916379434375*^9}, {3.449163883578125*^9, 
   3.449163892828125*^9}, {3.472908840429603*^9, 3.472908850370483*^9}, {
   3.472909675743717*^9, 3.472909720355513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"A", "=", "10"}], ",", 
     RowBox[{"B", "=", "11"}], ",", 
     RowBox[{"C", "=", "12"}], ",", 
     RowBox[{"D", "=", "13"}], ",", 
     RowBox[{"E", "=", "14"}], ",", 
     RowBox[{"F", "=", "15"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"A", "*", "16"}], " ", "+", " ", "E"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.449162887140625*^9, 3.449162923078125*^9}, {
  3.44916296978125*^9, 3.449162981890625*^9}, {3.44916306703125*^9, 
  3.4491632563125*^9}, {3.449163844421875*^9, 3.449163871296875*^9}}],

Cell[BoxData["174"], "Output",
 CellChangeTimes->{{3.449162908171875*^9, 3.4491629250625*^9}, {
  3.449162970609375*^9, 3.449162983953125*^9}, {3.449163078328125*^9, 
  3.44916311328125*^9}, {3.4491632318125*^9, 3.449163257296875*^9}, {
  3.4491638545*^9, 3.449163871734375*^9}}]
}, Open  ]],

Cell[TextData[{
 "This technique is often used to temporarily change special global variables \
like ",
 StyleBox["$RecursionLimit", "Literal"],
 ". The following is a recursive implem",
 StyleBox["entation of the Ackermann func",
  FontTracking->"SemiCondensed"],
 "tion that would easily overflow the default stack limit of 256. This is for \
illustration purposes and not a good way to implement Ackermann."
}], "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.449163927953125*^9, 3.449164001484375*^9}, {
   3.449165711671875*^9, 3.4491657193125*^9}, {3.449264405265625*^9, 
   3.449264457859375*^9}, {3.449264491203125*^9, 3.449264575694719*^9}, 
   3.4680044589747267`*^9, {3.4729097280338593`*^9, 3.472909734312544*^9}, {
   3.472909913912575*^9, 3.472909927308073*^9}, {3.472910142663053*^9, 
   3.472910143571775*^9}, 3.4742214433634567`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Ackermann", " ", "function"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"$RecursionLimit", "=", "100000"}], ",", "A"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"0", ",", "n_"}], "]"}], " ", ":=", " ", 
      RowBox[{"n", "+", "1"}]}], ";", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"m_", ",", "0"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"m", ",", "0"}], "]"}], "=", 
       RowBox[{"A", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", "1"}], "]"}]}]}], ";", 
     RowBox[{
      RowBox[{"A", "[", 
       RowBox[{"m_", ",", "n_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"m", ",", "n"}], "]"}], "=", 
       RowBox[{"A", "[", 
        RowBox[{
         RowBox[{"m", "-", "1"}], ",", 
         RowBox[{"A", "[", 
          RowBox[{"m", ",", 
           RowBox[{"n", "-", "1"}]}], "]"}]}], "]"}]}]}], ";", 
     RowBox[{"A", "[", 
      RowBox[{"4", ",", "1"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.44916559546875*^9, 3.449165604796875*^9}, 
   3.44916566775*^9, {3.44916574225*^9, 3.449165760921875*^9}, {
   3.472910150800539*^9, 3.472910154370729*^9}}],

Cell[BoxData["65533"], "Output",
 CellChangeTimes->{3.449165674140625*^9, 3.44916576728125*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Locating Undocumented Functions"
}], "Heading1",
 CellMargins->{{0, 72}, {2, 7}},
 CellChangeTimes->{{3.467931485617859*^9, 3.4679314981243668`*^9}, 
   3.468004461821353*^9},
 CellTags->"Locating UnDocumented Functions"],

Cell["Problem", "Heading2WithHeadAbove",
 CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}],

Cell["\<\
You are wondering what undocumented functions might be hiding in your current \
version of Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.467931581904004*^9, 3.467931629113708*^9}}],

Cell["Solution", "Heading2",
 CellMargins->{{0, 36}, {0, 9}},
 CellChangeTimes->{{3.467931535827546*^9, 3.4679315577428513`*^9}}],

Cell[TextData[{
 "Inspect the ",
 StyleBox["Developer`", "Literal"],
 " and ",
 StyleBox["Experimental`", "Literal"],
 " contexts for hidden treasures. Here, ",
 StyleBox["//Short", "Literal"],
 " is used only to reduce clutter, so remove that before evaluating."
}], "Text",
 CellChangeTimes->{{3.4679316375220747`*^9, 3.4679316715794907`*^9}, {
  3.468013916640291*^9, 3.4680139748988323`*^9}, {3.468584024979455*^9, 
  3.4685840319718027`*^9}, {3.468591664647276*^9, 3.4685916660828342`*^9}, {
  3.4729114484927*^9, 3.472911453935824*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Names", "[", "\"\<Developer`*\>\"", "]"}], Cell["", "Heading2",
    CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}]}], "//", 
  " ", "Short"}]], "Input", "ProductionPageBreak",
 CellMargins->{{Inherited, Inherited}, {Inherited, -1}},
 CellChangeTimes->{{3.467931687765642*^9, 3.467931727266005*^9}, {
  3.4680138092495613`*^9, 3.468013876969864*^9}},
 CellLabel->"In[891]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"Developer`BesselSimplify\"\>", " ", 
     InterpretationBox[Cell["", "Heading2",
       CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}],
      TextCell[
      "", "Heading2", 
       CellChangeTimes -> {{3.467931535827546*^9, 3.467931543598238*^9}}]]}], 
    ",", 
    RowBox[{"\[LeftSkeleton]", "69", "\[RightSkeleton]"}], ",", 
    RowBox[{"\<\"Developer`$SymbolSystemShadowing\"\>", " ", 
     InterpretationBox[Cell["", "Heading2",
       CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}],
      TextCell[
      "", "Heading2", 
       CellChangeTimes -> {{3.467931535827546*^9, 
        3.467931543598238*^9}}]]}]}], "}"}],
  Short]], "Output",
 CellMargins->{{53, 0}, {4, 0}},
 CellChangeTimes->{{3.4679317233161097`*^9, 3.467931728317539*^9}, 
   3.468013815078413*^9},
 CellLabel->"Out[891]//Short="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Names", "[", "\"\<Experimental`*\>\"", "]"}], Cell[
   "", "Heading2",
    CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}]}], "//", 
  "Short"}]], "Input",
 CellMargins->{{53, 0}, {0, 0}},
 CellChangeTimes->{{3.467931744250535*^9, 3.4679317477289867`*^9}, {
  3.4680138247470617`*^9, 3.468013826975408*^9}},
 CellLabel->"In[892]:="],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"Experimental`AngleRange\"\>", " ", 
     InterpretationBox[Cell["", "Heading2",
       CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}],
      TextCell[
      "", "Heading2", 
       CellChangeTimes -> {{3.467931535827546*^9, 3.467931543598238*^9}}]]}], 
    ",", 
    RowBox[{"\[LeftSkeleton]", "47", "\[RightSkeleton]"}], ",", 
    RowBox[{"\<\"Experimental`Wait\"\>", " ", 
     InterpretationBox[Cell["", "Heading2",
       CellChangeTimes->{{3.467931535827546*^9, 3.467931543598238*^9}}],
      TextCell[
      "", "Heading2", 
       CellChangeTimes -> {{3.467931535827546*^9, 
        3.467931543598238*^9}}]]}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{3.4679317486653*^9, 3.468013827910431*^9},
 CellLabel->"Out[892]//Short="]
}, Open  ]],

Cell["Discussion", "Heading2",
 CellMargins->{{0, 36}, {0, 5}},
 CellChangeTimes->{{3.467931535827546*^9, 3.467931563262978*^9}}],

Cell[TextData[{
 "Strictly speaking, the ",
 StyleBox["Developer`", "Literal"],
 " context is not entirely undocumented, but rather consists of low-level \
access to underlying algorithms that are typically used in the implementation \
of higher-level, built-in functions. Here is an example of such a function \
and its documentation. However, you can see that the documentation is much \
more sparse than that of a function available in standard ",
 StyleBox["System`", "Literal"],
 " context."
}], "Text",
 CellChangeTimes->{{3.467931839507193*^9, 3.467931860826623*^9}, {
  3.467931937759385*^9, 3.4679319553504066`*^9}, {3.467931990345467*^9, 
  3.467932206160589*^9}, {3.468004490257278*^9, 3.4680044986241693`*^9}, {
  3.468014029285798*^9, 3.468014031956997*^9}, {3.472911425975162*^9, 
  3.472911439703608*^9}, {3.47422170418985*^9, 3.474221709350799*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Developer`PartitionMap"}]], "Input",
 CellMargins->{{53, 0}, {0, 2}},
 CellChangeTimes->{{3.46793187545784*^9, 3.467931876085005*^9}, 
   3.467931927537601*^9},
 CellLabel->"In[550]:="],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PartitionMap\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"LiteralItalic\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"LiteralItalic\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"LiteralItalic\\\"]\\) to \\!\\(\\*StyleBox[\\\"list\\\", \
\\\"LiteralItalic\\\"]\\) after partitioning into non\[Hyphen]overlapping \
sublists of length \\!\\(\\*StyleBox[\\\"n\\\", \\\"LiteralItalic\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"PartitionMap\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\
\", \\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"list\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"d\\\", \
\\\"LiteralItalic\\\"]}], \\\"]\\\"}]\\) applies \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"LiteralItalic\\\"]\\) to sublists obtained by partitioning with offset \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"LiteralItalic\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"PartitionMap\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\
\", \\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"list\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"LiteralItalic\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \
\\\"LiteralItalic\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"LiteralItalic\\\"]\\) after \
partitioning a nested list into blocks of size \\!\\(\\*RowBox[{SubscriptBox[\
\\\"n\\\", \\\"1\\\"], \\\"\[Cross]\\\", SubscriptBox[\\\"n\\\", \\\"2\\\"], \
\\\"\[Cross]\\\", RowBox[{\\\"\[Ellipsis]\\\", \\\" \\\"}]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"PartitionMap\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\
\", \\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"list\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \\\"LiteralItalic\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \
\\\"LiteralItalic\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"d\\\", \\\"LiteralItalic\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"d\\\", \
\\\"LiteralItalic\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
applies \\!\\(\\*StyleBox[\\\"f\\\", \\\"LiteralItalic\\\"]\\) after \
partitioning using offset \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \
\\\"LiteralItalic\\\"], StyleBox[\\\"i\\\", \\\"LiteralItalic\\\"]]\\) at \
level \\!\\(\\*StyleBox[\\\"i\\\", \\\"LiteralItalic\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"PartitionMap\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\\\
\", \\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"list\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"d\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"LiteralItalic\\\"], \
StyleBox[\\\"L\\\", \\\"LiteralItalic\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"k\\\", \\\"LiteralItalic\\\"], StyleBox[\\\"R\\\", \
\\\"LiteralItalic\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies where \
sublists should begin and end. \\n\\!\\(\\*RowBox[{\\\"PartitionMap\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"f\\\", \\\"LiteralItalic\\\"], \\\",\\\", \
StyleBox[\\\"list\\\", \\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", StyleBox[\\\"d\\\", \
\\\"LiteralItalic\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"LiteralItalic\\\"], \
StyleBox[\\\"L\\\", \\\"LiteralItalic\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"k\\\", \\\"LiteralItalic\\\"], StyleBox[\\\"R\\\", \
\\\"LiteralItalic\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"padding\\\", \
\\\"LiteralItalic\\\"]}], \\\"]\\\"}]\\) specifies what padding should be \
used. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:Developer/ref/PartitionMap"]}]], "Print", "PrintUsage",
 
 Editable->True,
 CellChangeTimes->{3.4679319286492987`*^9},
 CellTags->"Info3467913928-2917574"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Developer`PartitionMap", "]"}], "=", 
      RowBox[{"{", "Protected", "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Developer`PartitionMap],
  Editable->False]], "Print",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{3.467931929110908*^9},
 CellTags->"Info3467913928-2917574"]
}, Open  ]],

Cell[TextData[{
 "In contrast, expect to find little information about functions in the ",
 StyleBox["Experimental`", "Literal"],
 " context. "
}], "Text",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{{3.467932225896937*^9, 3.4679322610182323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "Experimental`ShortestSupersequence"}]], "Input",
 CellMargins->{{53, 0}, {0, 2}},
 CellChangeTimes->{{3.467932283385049*^9, 3.467932293061358*^9}, {
  3.467932356232188*^9, 3.467932425202952*^9}},
 CellLabel->"In[558]:="],

Cell["Experimental`ShortestSupersequence", "Print", "PrintUsage",
 Editable->True,
 CellChangeTimes->{3.467932426008432*^9},
 FontFamily->"WriTheSansMonoCond",
 CellTags->"Info3467914425-5986742"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "Experimental`ShortestSupersequence", "]"}], 
      "=", 
      RowBox[{"{", "Protected", "}"}]}]},
    {" "},
    {GridBox[{
       {
        RowBox[{
         RowBox[{"Options", "[", "Experimental`ShortestSupersequence", "]"}], 
         "=", 
         RowBox[{"{", 
          RowBox[{"IgnoreCase", "\[Rule]", "False"}], "}"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[Experimental`ShortestSupersequence],
  Editable->False]], "Print",
 CellMargins->{{0, 0}, {2, 2}},
 CellChangeTimes->{3.4679324260617867`*^9},
 CellTags->"Info3467914425-5986742"],

Cell[TextData[{
 "Even if you manage to figure out how these functions work, there is no \
guarantee the functions won\[CloseCurlyQuote]t change or be removed in a \
future version, so use them with caution. Sometimes an experimental function \
will tell you",
 StyleBox[" it has been deprecated and di",
  FontTracking->"Extended"],
 "rect you to an alternative."
}], "Text", "ProductionPageBreak",
 CellChangeTimes->{{3.467932308213594*^9, 3.467932339901155*^9}, {
   3.46793243350671*^9, 3.4679324902912693`*^9}, {3.467933042948958*^9, 
   3.46793304370511*^9}, {3.467933096948412*^9, 3.467933148788871*^9}, {
   3.4680045039441833`*^9, 3.468004531272374*^9}, 3.4680048885910482`*^9, {
   3.472911481136097*^9, 3.472911485852021*^9}, 3.472914799824959*^9, {
   3.474221764478649*^9, 3.474221765041334*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Experimental`FileBrowse", "[", "]"}]], "Input",
 InitializationCell->False,
 CellChangeTimes->{{3.467933073845251*^9, 3.4679330740835037`*^9}},
 CellLabel->"In[559]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"Experimental`FileBrowse", "::", "\<\"obs\"\>"}], ":", 
  " ", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(Experimental`FileBrowse\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" has been superseded by \
\\\\\\\"\\\", \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\!\\(SystemDialogInput\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\", and is now obsolete. \
It will not be included in Mathematica version \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\(8\\), \
\\\"MT\\\"]\\)\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\".\\\\\\\"\\\", \\\"MT\\\
\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4679330747916327`*^9}]
}, Open  ]],

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.468591410498107*^9, 3.468591413728663*^9}}],

Cell[TextData[{
 StyleBox["PartitionMap", "Literal"],
 " was used in ",
 ButtonBox["Recipe 2.6",
  BaseStyle->"Hyperlink",
  ButtonData->{"FunctionalProgramming.nb", "Mapping over a Moving Sublist"}],
 ". "
}], "Text",
 CellChangeTimes->{{3.468591418592721*^9, 3.46859144652214*^9}, {
  3.4685914796569366`*^9, 3.46859147965769*^9}, {3.4729115207054768`*^9, 
  3.4729115254171*^9}}],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Packaging Your Mathematica Solutions",
 " ",
 " into Libraries for Others to Use"
}], "Heading1",
 CellMargins->{{0, 72}, {2, 11}},
 CellChangeTimes->{{3.4489998233125*^9, 3.448999882140625*^9}, 
   3.449006954765625*^9, 3.476461641878558*^9, 3.485529679173835*^9},
 CellTags->"Packages"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You have a nice collection of functions that are of general use within your \
organization or perhaps as a library that you want to distribute to others.\
\>", "Text",
 CellChangeTimes->{{3.448999890671875*^9, 3.44899994915625*^9}, 
   3.472911530527961*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellMargins->{{0, 36}, {0, 13}}],

Cell["\<\
Mathematica provides a facility for defining custom packages that place \
functions in a unique namespace and also allow you to selectively expose some \
functions while leaving other low-level details hidden. \
\>", "Text",
 CellChangeTimes->{{3.449006967734375*^9, 3.44900710040625*^9}, 
   3.4492647854603434`*^9, 3.4680048909831877`*^9, 3.4729115508345127`*^9}],

Cell[TextData[{
 "BeginPackage[\"CoolStuff`\"]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->7,
  FontWeight->"Plain"],
 "Unique`::usage = \"Unique[list] removes duplicates from a list (similar to \
\nUnion) but does not reorder elements of the list.\"\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->7,
  FontWeight->"Plain"],
 "Begin[\"`Private`\"]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->7,
  FontWeight->"Plain"],
 "Unique[list_List] := Module[{once}, \n\tonce[x_] := once[x] = Sequence[];x\n\
\tonce /@ list]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->7,
  FontWeight->"Plain"],
 "End[]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->7,
  FontWeight->"Plain"],
 "EndPackage[]"
}], "Code",
 CellChangeTimes->{
  3.4492647088665934`*^9, {3.449264907538469*^9, 3.449264932850969*^9}, {
   3.449265013007219*^9, 3.4492652822415934`*^9}, {3.449265313194719*^9, 
   3.4492653306478434`*^9}, {3.4492657092415934`*^9, 
   3.4492657135540934`*^9}, {3.4685848023543787`*^9, 3.468584823786174*^9}, {
   3.4729116005299*^9, 3.4729116097797937`*^9}}]
}, Open  ]],

Cell["Discussion", "Heading2", "ProductionPageBreak",
 CellMargins->{{0, 36}, {0, 2}}],

Cell[TextData[{
 "The solution follows a standard convention where actual definitions are \
placed in a ",
 StyleBox["Private", "Literal"],
 " context (",
 StyleBox["Begin[\"`Private`\"] ... End[]", "Literal"],
 ") while the function is exposed by defining its usage string (",
 StyleBox["Unique`::usage", "Literal"],
 ") in the public part of the package. Having the definition of ",
 StyleBox["Unique", "Literal"],
 " inside ",
 StyleBox["Private", "Literal"],
 " does not mean you can\[CloseCurlyQuote]t access it. What it does mean is \
that any symbols introduced inside the definition of ",
 StyleBox["Unique", "Literal"],
 " will not be exported when the package is read in. The context ",
 StyleBox["Private`", "Literal"],
 " does not have any special semantics, but it is a convention used by most \
Mathematica package authors, and it would be wise to follow suit."
}], "Text",
 CellChangeTimes->{{3.4680151388012457`*^9, 3.468015254220351*^9}, {
   3.468015373011071*^9, 3.4680155195506353`*^9}, {3.468015564625626*^9, 
   3.468015656204311*^9}, {3.46801569012568*^9, 3.468015771168798*^9}, {
   3.472911640186521*^9, 3.472911644411272*^9}, 3.47291480652846*^9, 
   3.4742218317116423`*^9}],

Cell[TextData[{
 "If a package depends on other packages, you can list",
 StyleBox[" the dependents as a second argu",
  FontTracking->"SemiCondensed"],
 "ment to ",
 StyleBox["BeginPackage", "Literal"],
 ". Here, ",
 StyleBox["CoolStuff`", "Literal"],
 " needs ",
 StyleBox["SuperCool`", "Literal"],
 " and ",
 StyleBox["Essential`", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.468014875944592*^9, 3.4680149306717453`*^9}, {
   3.468015014451208*^9, 3.468015062461034*^9}, {3.472911688701132*^9, 
   3.472911689152062*^9}, 3.474221837709114*^9}],

Cell["BeginPackage[\"CoolStuff`\", {\"SuperCool`\", \"Essential`\"}]", "Code",
 CellMargins->{{53, 0}, {2, 3}},
 CellChangeTimes->{{3.468014968635515*^9, 3.468015009562956*^9}}],

Cell[TextData[{
 "You can defer loading ",
 StyleBox["other packages until you know they are needed by using ",
  FontTracking->"Extended"],
 StyleBox["DeclarePackage", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". The syntax is ",
  FontTracking->"SemiCondensed"],
 StyleBox["DeclarePackage[\"context`\", {\"name1\", \"name2\", ...}]", 
  "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". Here you are telling Mathematica to execute ",
  FontTracking->"SemiCondensed"],
 StyleBox["Needs[\"context`\"]", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" contingent on ",
  FontTracking->"SemiCondensed"],
 StyleBox["the use of one of the symbols ",
  FontTracking->"Plain"],
 StyleBox["name1", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", ",
  FontTracking->"SemiCondensed"],
 StyleBox["name2", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", and so on (typically functions or constants).",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellMargins->{{0, 0}, {2, 1}},
 CellChangeTimes->{{3.468016176762102*^9, 3.4680162220983543`*^9}, 
   3.4680177358385077`*^9, 3.468584229322988*^9, {3.468584298438916*^9, 
   3.468584311365851*^9}, {3.468584357753202*^9, 3.4685845721444674`*^9}, 
   3.468695037780596*^9, {3.472911707757712*^9, 3.4729117421766453`*^9}}],

Cell[TextData[{
 "BeginPackage[\"CoolStuff`\"]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->6,
  FontWeight->"Plain"],
 "Cool`::usage = \"Cool[list] does something cool.\"\nCooler`::usage = \
\"Cooler[list] does something even cooler.\"\nReallyRadCool`::usag",
 StyleBox["e = \"ReallyRadCool[list] does something too cool for words.\"",
  FontTracking->"SemiCondensed"],
 "\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->6,
  FontWeight->"Plain",
  FontTracking->"Extended"],
 StyleBox["(*If functions Cooler or ReallyRadCool are used, then execute \n\
Needs[\"SuperCool`\"].*)", "CodeEmphasis",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontWeight->"Bold",
  FontSlant->"Italic",
  FontTracking->"Extended"],
 StyleBox["\n", "CodeEmphasis"],
 StyleBox["\n", "CodeEmphasis",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->6,
  FontWeight->"Plain"],
 StyleBox["DeclarePackage[\"SuperCool`\", {\"Cooler\", \"ReallyRadCool\"}]", 
  "CodeEmphasis"],
 "\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->6,
  FontWeight->"Plain"],
 "Begin[\"`Private`\"]\[LineSeparator]",
 StyleBox["\[InvisibleSpace]",
  FontSize->0]
}], "Code",
 CellMargins->{{53, 0}, {2, 3}},
 CellChangeTimes->{
  3.4492647088665934`*^9, {3.449264907538469*^9, 3.449264932850969*^9}, {
   3.449265013007219*^9, 3.4492652822415934`*^9}, {3.449265313194719*^9, 
   3.4492653306478434`*^9}, {3.4492657092415934`*^9, 
   3.4492657135540934`*^9}, {3.4680162821024437`*^9, 3.46801638370487*^9}, {
   3.468016476636647*^9, 3.4680168362108*^9}, {3.468584597185412*^9, 
   3.468584643572934*^9}, {3.4685846816043997`*^9, 3.468584736766375*^9}, {
   3.472911763851966*^9, 3.47291181004816*^9}, {3.4742218756760597`*^9, 
   3.474221878053823*^9}, 3.4742219525329113`*^9, {3.4742221555564528`*^9, 
   3.474222185741252*^9}, {3.474222238528536*^9, 3.474222270208346*^9}}],

Cell[TextData[{
 "Cool[list_List] := Module[{},\n\t(*...*) \n\t]\n",
 StyleBox["\[LineSeparator]",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->5,
  FontWeight->"Plain"],
 "Cooler[list_List] := Module[{x,y},\n\t(*... uses something in ",
 StyleBox["SuperCool`", "CodeEmphasis",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " context.*) \n\t]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->5,
  FontWeight->"Plain"],
 "ReallyRadCool[list_List] := Module[{elvis, jamesdean},\n\t(*... uses \
something in ",
 StyleBox["SuperCool`", "CodeEmphasis",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " context ...\n\t  If I show you, I'd have to kill you.*) \n\t]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->5,
  FontWeight->"Plain"],
 "End[]\n",
 StyleBox["\n",
  FontFamily->"WriTheSansMonoCond BoldItalic",
  FontSize->5,
  FontWeight->"Plain"],
 "EndPackage[]"
}], "Code",
 CellChangeTimes->{
  3.4492647088665934`*^9, {3.449264907538469*^9, 3.449264932850969*^9}, {
   3.449265013007219*^9, 3.4492652822415934`*^9}, {3.449265313194719*^9, 
   3.4492653306478434`*^9}, {3.4492657092415934`*^9, 
   3.4492657135540934`*^9}, {3.4680162821024437`*^9, 3.46801638370487*^9}, {
   3.468016476636647*^9, 3.4680168362108*^9}, {3.468584597185412*^9, 
   3.468584643572934*^9}, {3.4685846816043997`*^9, 3.468584736766375*^9}, {
   3.472911763851966*^9, 3.47291181004816*^9}, {3.4742218756760597`*^9, 
   3.474221878053823*^9}, 3.4742219525329113`*^9, {3.4742221555564528`*^9, 
   3.474222185741252*^9}, {3.474222238528536*^9, 3.474222270208346*^9}, 
   3.474222381890222*^9}],

Cell[CellGroupData[{

Cell["See Also", "Heading2", "ProductionPageBreak",
 CellMargins->{{0, 36}, {0, 4}}],

Cell[TextData[{
 "See the tutorial for setting up Mathematica packages: ",
 StyleBox[ButtonBox["http://bit.ly/8Q9WIq",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/8Q9WIq"], None},
  ButtonNote->"http://bit.ly/8Q9WIq"], "URL"],
 StyleBox[".", "URL"]
}], "Text",
 CellChangeTimes->{{3.468017298334556*^9, 3.46801731833531*^9}, {
  3.472911822331367*^9, 3.472911854507214*^9}}],

Cell[TextData[{
 "Some good advice regarding the ",
 StyleBox["creation of packages can be found here in the Wol",
  FontTracking->"SemiCondensed"],
 "fram Research MathGroup Archive: ",
 StyleBox[ButtonBox["http://bit.ly/7rZ60P",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/7rZ60P"], None},
  ButtonNote->"http://bit.ly/7rZ60P"], "URL"],
 "."
}], "Text",
 CellChangeTimes->{{3.468017580409223*^9, 3.468017610802392*^9}, {
  3.472911874391115*^9, 3.472911943539719*^9}}],

Cell[TextData[{
 StyleBox["It is also worth reading Michael A. Morrison\[CloseCurlyQuote]s \
\[OpenCurlyDoubleQuote]Mathematica Tips, Tricks, and Techniques\
\[CloseCurlyDoubleQuote] (",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["http://bit.ly/5Z5dI9",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://bit.ly/5Z5dI9"], None},
  ButtonNote->"http://bit.ly/5Z5dI9"], "URL",
  FontTracking->"Plain"],
 StyleBox["),",
  FontTracking->"Plain"],
 StyleBox[" although this is less about creating packages and more about \
using them.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.468017319245672*^9, 3.468017434425969*^9}, {
   3.472911957994843*^9, 3.472912034700172*^9}, 3.4729148173287373`*^9, {
   3.472914980883855*^9, 3.472914984896714*^9}, {3.474222418940531*^9, 
   3.474222436975114*^9}}]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 StyleBox["C",
  FontTracking->"SemiCondensed"],
 StyleBox["ompiling Functions to Improve Performance",
  FontTracking->"Plain"]
}], "Heading1",
 CellChangeTimes->{{3.44899997390625*^9, 3.448999990578125*^9}, {
  3.474222449631679*^9, 3.474222451041664*^9}},
 CellTags->"Compiling"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 "You have a function that is ca",
 StyleBox["lled frequently",
  FontTracking->"Plain"],
 StyleBox[" and you want to optimize its performance. ",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.44914586371875*^9, 3.449145930921875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "In many cases, you can remove a significant amount of overhead from your \
functions by compiling them.",
 StyleBox[" You can compile functions that take ",
  FontTracking->"SemiCondensed"],
 StyleBox["Integer", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", ",
  FontTracking->"SemiCondensed"],
 StyleBox["Real", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", ",
  FontTracking->"SemiCondensed"],
 StyleBox["Complex", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[",",
  FontTracking->"SemiCondensed"],
 " Boolean arguments (",
 StyleBox["True | False", "Literal"],
 "), or uniform vectors and tensors of these types."
}], "Text",
 CellChangeTimes->{{3.4491459494375*^9, 3.44914596559375*^9}, {
   3.449146005390625*^9, 3.449146042734375*^9}, {3.449166442859375*^9, 
   3.44916659546875*^9}, {3.449167853125*^9, 3.449167873453125*^9}, {
   3.44916795753125*^9, 3.449167994234375*^9}, {3.468004894855278*^9, 
   3.468004905655591*^9}, {3.4680140707267017`*^9, 3.468014096863524*^9}, {
   3.472912052806731*^9, 3.472912090744132*^9}, 3.472914685318275*^9, {
   3.474222480476207*^9, 3.474222480776738*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"magnitude1", "[", 
    RowBox[{"vector", ":", 
     RowBox[{"{", "__Real", "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Plus", " ", "@@", " ", "vector"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"magnitude2", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"vector", ",", "_Real", ",", "1"}], "}"}], "}"}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"Plus", " ", "@@", " ", "vector"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.44916589803125*^9, 3.449166095109375*^9}, {
  3.449166156671875*^9, 3.44916618028125*^9}, {3.449166213984375*^9, 
  3.44916624384375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vec", "=", " ", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "10"}], "}"}], ",", "1000000"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{"magnitude1", "[", "vec", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.4491661035625*^9, 3.44916614575*^9}, {
  3.4491662694375*^9, 3.449166308984375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.48500000000000004`", ",", "2236.0059387127626`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.449166146640625*^9, 3.449166187734375*^9, 3.44916624734375*^9, {
   3.449166290625*^9, 3.449166338875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"magnitude2", "[", "vec", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.449166325125*^9, 3.449166325375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.18700000000000036`", ",", "2236.0059387127735`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.449166326890625*^9, 3.4491663415625*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "The syntax of ",
 StyleBox["Compile", "Literal"],
 " can be a bit confusing at first because",
 StyleBox[" it does",
  FontTracking->"Plain"],
 StyleBox[" not follow the tra",
  FontTracking->"SemiCondensed"],
 "ditional pattern-based syntax of an uncom",
 StyleBox["piled function. This is partly due to the fact that ",
  FontTracking->"Extended"],
 StyleBox["Compile", "Literal",
  FontTracking->"Extended"],
 StyleBox[" is far less flexible",
  FontTracking->"Extended"],
 StyleBox[",", "URL",
  FontTracking->"Extended"],
 StyleBox[" and each argument must be entirely unambiguous in regard to its \
type. First note that ",
  FontTracking->"Extended"],
 StyleBox["Compile", "Literal",
  FontTracking->"Extended"],
 StyleBox[" takes a list of argument ",
  FontTracking->"Extended"],
 StyleBox["specifications and that each argument specification is ",
  FontTracking->"Plain"],
 StyleBox["itself a list. The argument speci",
  FontTracking->"Extended"],
 StyleBox["ficati",
  FontTracking->"Plain"],
 StyleBox["ons ",
  FontTracking->"Extended"],
 "must at minimum specify the argument name, but can also specify the type \
and the rank\[LongDash]if the argument is a vector (rank = 1), matrix (rank = \
2), or tensor (rank > 2)."
}], "Text",
 CellChangeTimes->{{3.4491666239375*^9, 3.449166898578125*^9}, 
   3.449166946359375*^9, {3.4491670334375*^9, 3.449167189140625*^9}, {
   3.449167403484375*^9, 3.44916741921875*^9}, {3.44916772665625*^9, 
   3.44916772665625*^9}, 3.468004923521524*^9, 3.472912102021264*^9, {
   3.4729121606687117`*^9, 3.4729122087817173`*^9}}],

Cell["Example argument specifications for compile", "TableTitle", "TopOfPage",
 CellMargins->{{0, 0}, {0, 6}},
 CellChangeTimes->{{3.44916767728125*^9, 3.449167702453125*^9}, 
   3.468004926487865*^9}],

Cell[BoxData[GridBox[{
   {"", 
    RowBox[{"Argument", " ", "specification"}], "Description", ""},
   {"", "", "", ""},
   {"", 
    RowBox[{"{", "x", "}"}], 
    RowBox[{"x", " ", "is", " ", "some", " ", "numeric", " ", "type"}], ""},
   {"", 
    RowBox[{"{", 
     RowBox[{"x", ",", "_Integer"}], "}"}], 
    RowBox[{"x", " ", "is", " ", "an", " ", "Integer"}], ""},
   {"", 
    RowBox[{"{", 
     RowBox[{"x", ",", "_Real"}], "}"}], 
    RowBox[{"x", " ", "is", " ", "a", " ", "Real"}], ""},
   {"", 
    RowBox[{"{", 
     RowBox[{"x", ",", "_Integer", ",", "1"}], "}"}], 
    RowBox[{
    "x", " ", "is", " ", "a", " ", "vector", " ", "of", " ", "Integers"}], ""},
   {"", 
    RowBox[{"{", 
     RowBox[{"x", ",", "_Complex", ",", "2"}], "}"}], 
    RowBox[{
    "x", " ", "is", " ", "a", " ", "matrix", " ", "of", " ", "Complex"}], 
    ""},
   {"", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "_Real", ",", " ", "5"}], "}"}], 
    RowBox[{
    "x", " ", "is", " ", "a", " ", "rank", " ", "5", " ", "tensor", " ", "of",
      " ", "Reals"}], ""},
   {"", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"True", "|", "False"}], ",", "1"}], "}"}], 
    RowBox[{
    "x", " ", "is", " ", "a", " ", "vector", " ", "of", " ", "logical", " ", 
     "values"}], ""}
  }]], "Table",
 CellChangeTimes->{{3.4764617005969*^9, 3.4764617008436832`*^9}}],

Cell[TextData[{
 "Note that functions that take strings or general symbolic arguments cannot \
be compiled. Also, if you specify a rank of two or higher, you must pass \
uniform arrays of the appropriate rank rather than jagged arrays (like ",
 StyleBox["{{1,2},{3}}", "Literal"],
 "), and you can\[CloseCurlyQuote]t mix types in vectors or higher-ranked \
tensors. If you violate these constraints, the function may still work, but \
Mathematica will use an uncompiled form, which defeats the advantage of \
compilation."
}], "Text",
 CellMargins->{{0, 0}, {2, 0}},
 CellChangeTimes->{{3.44916807409375*^9, 3.449168127328125*^9}, {
   3.44916816046875*^9, 3.4491683869375*^9}, 3.468004930698078*^9, {
   3.472912248576315*^9, 3.472912329434371*^9}, 3.4729148221297913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Automating and Standardizing the Appearance of Notebooks Using Stylesheets"
}], "Heading1",
 CellMargins->{{0, 72}, {2, 12}},
 CellChangeTimes->{{3.44900040334375*^9, 3.44900043746875*^9}, {
  3.4623833962408037`*^9, 3.4623834128006077`*^9}, {3.4624549453553267`*^9, 
  3.462454954451692*^9}, {3.467933344830567*^9, 3.467933371061822*^9}},
 CellTags->"Stylesheets"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You find yourself frequently needing to tweak formatting in your notebook or \
you find formatting tedious. You may be frustrated that your notebooks do not \
have the professional appearance of your peers\[CloseCurlyQuote] or of \
notebooks you see at conferences or download from the Web.\
\>", "Text",
 CellChangeTimes->{{3.4624549369170523`*^9, 3.462454939090974*^9}, {
  3.462456682314193*^9, 3.46245688478459*^9}, {3.467933388727686*^9, 
  3.4679334006802197`*^9}, {3.472912344199107*^9, 3.472912358573441*^9}, {
  3.474223941505076*^9, 3.474223942668709*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellMargins->{{0, 36}, {0, 11}}],

Cell[TextData[{
 "Creating a basic stylesheet or modifying an existing stylesheet is easier \
than you might think, although there are some aspects that are tricky (or \
nearly impossible to figure out without help). The easiest way to proceed is \
to start with a built-in style. Starting with a new notebook, select Format, \
Stylesheet and select a style from one of the submenus. ",
 ButtonBox["Figure 18-1",
  BaseStyle->"Hyperlink",
  ButtonData->"fStylesheet1"],
 " shows a notebook configured with the ",
 StyleBox["NaturalColor", "Literal"],
 " stylesheet, which is under the Creative submenu in Stylesheets. "
}], "Text",
 CellChangeTimes->{{3.4624568974407387`*^9, 3.462457065391643*^9}, {
   3.462458872930224*^9, 3.462458939090087*^9}, 3.462461596558567*^9, {
   3.4624616397191153`*^9, 3.462461646719076*^9}, {3.462461678360239*^9, 
   3.462461742425454*^9}, {3.462461898992362*^9, 3.462461900824423*^9}, {
   3.467933404944846*^9, 3.467933443106456*^9}, {3.468014136605792*^9, 
   3.468014155113936*^9}, {3.4729123659246397`*^9, 3.472912449920725*^9}, 
   3.472912975678104*^9, 3.474223955697771*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdYVMf6h3Nv/slNr6b3do0xUVPMTaImRpNYYroxRjH2buzYjQ1EVFBR
7L3SpFhBFLGgFLGhgoBSBEWUVWOMsYT8v+XDcTxtz1KExd/3vA/P2TlzZs+e
Bd755pT5vle7l9rddtttt99227++vu22fy+zLu/bt2/v3r3xCAQCgUAgKmKQ
5ceMGUO6j0MgEDc3NtsTZb2zCATC4SMsLGzXrl2xWhETExMVFRURERHi6+/R
pcuQup8416xJ0AK9pEJaRRWomvHma/x9F3XtPKNenRkfvGulXh16SYUmNw8I
9u0/vvMP/es26f3+l71qft//k/7unanQeHMEopzHqoLIy8v7S46LF/OvxWWK
v/6iBdJ9We8sAoFw+CDXR+vEtm3bNmzYMGf0mN5Vqw5/990pjRou7tBuccf2
Xo0bDX/vPSqkVVSBqhls7uM6asZ7ry+sVzPY6ZvwAb9uHNgzuNW3i+q/T4W0
yubm42eOrtulypcD3mvj2aj/gtZ95jm1mvB5o/41PulShVYZbI5AlOeYNWvW
uHHj8k6dYt2fj90jdH9x7Pi/zp+/zHFN9zdtx3bs2LF9+3bz9anyzp07S29/
EAhECcYOndi4cePsMWP6vvKaZ7VqIQ0aHPCY8PvR5PPpqQe9Jq1q1NizWvW+
r71GFaia3uY+Y0fNfveFwMZvxDo3SA+c8EfO4QsnUzNCJsUNaBT45Ru0iioY
bO4+fVTtdq989VuN7guaLNs+Jf10YmJ2/IzwER1m1/tyeLVa7V6hCnqbIxDl
PER2T4bfFrr68qiRFy9c+Htd9NVa7f86d+7C2bMJfr4XsrKuXr1KuldsO3r0
6EWLFomXQUFBo0aNMv/W1ODAgQPDwsLUq/r16/fiiy+ab+pf//rXlClTDCos
W7asV69eP/zww4ABA/z9/c23jEDc4hEZGRkaGjp58uQePXp07ty5q2FQBapG
lWkT2lCvze06EejjM+CtalOrVI2oXiOh7ieZPXtaAvzPBAVk9umd8Gm9iOrv
0CqqQNU0Nw/xWTGv9qurv3tl/4BqKRM+z/Lrf2Zv0Jl9IVkBg1InfrF/QA1a
RRWomubmvitX1Gv/RpNh1TosqDVg5bcztw6NOByw/sASj42/9vFr1H7BR7SK
KlA1vf1HIMptUHbv7u5O2X12VtaFgoi7/42/eyy/MHrHhZ9WH+8+59A7Hxyb
M4/SfUrxyc6KzZ955hn6AxcvJ06c+OSTTxq/Y2BgYEBAAC+vW7fuqaee8in4
y922bRv1HDZs2MCrqBvwyiuvmP8gpPtp06YZVOjTp0+zZs1GjhzZuHHju+66
a/369eYbRyBu5aA/liFDhvz666/0B5uSkpKZmZmVlZWdnX38+PETBXG8IKjw
2LFjVIGqUWXaxOCvbItOTO7R3aVK1a3VqidVr5H57nthH3ww5f2axPoPP6CX
idVr0CqqQNU0N1/at73vly8njnrvqGftY7Mb5Pg6nd4w5PSGoSf8Wh2b05AK
aRVVoGqamzuP7f55t7d6+NQbsKbRsPBv3be2mRU3cHpMP9fIlkM3fO28phGt
ogpUTW//EYjyHJTaUz88NzycOL4uNPzR/x1oOiFh1u6Y7isnvdBnxxMd/g6N
Jt1funSJdK/Y9tlnn6WevHjp4eHx9NNPG7/dRx999NNPP/Hy1q1bDx06xH/7
JPrbbrtt5syZvIpycNK9+U9Buvfy8jKoEBcXt2fPntjYWPr5+OOPU3fCfOMI
xK0ckyZN6tSpU3R0dHJycmpqalpaWkZGRlZBZBcEL1MhraIKVI0q0ya0oV6b
ehcDT23QKKBajaS338l5992N1aqNqVx5TJUqVipX3litOhXSKqpA1TQ3D2z7
wY4+NTKm1zux9KvTQT+eWe/0+6YOv29qTwv0kgppFVUIbPuh5uatf2vS3qv+
yM1N3Xb8PDHWaXL8L1N3d5iyu/2kXb9MiGnpFtV8ZETTdl71qZpdVzgjEOUh
KLsnS1J2fzkr63Lvvhee6XS4xoBtzzgtaOg9+a0uHi9+s63L9sudVlwdO+Pv
+UvVm5Puu3fvLl5Sdk/ZOi9//vnn1MNv164dubVq1arTp0+nwvbt29999933
338/bejq6ko9DVpYutTa8ltvvUW6f+KJJ6hk48aNzs7OL7/8MjcVFBRUp06d
++6777nnnvP09OTCiIiItm3bPvroo7RJly5daNspU6aY+cgrVqy4/fbb6Wcx
DhsCcQtFt27d6O93165d8fHxu3fv3rt37759+xISEg5KceDAgf3799Mq6k5T
Hao5Y8YM2lCvzU06Mb/m/7a++97xj2r9/sknU996s9D1BdBLKjz+0Udb33mP
qmluvqFz9QPjP8nx/c4S2vL8lnZ/Rnf5M67bxbhutHB+aztLqBOtogpUTXNz
J9fPBq38YfKudt77Os4+0Hnewa6LkrovTOw292DXWQmdp+3rOGlXG6rg5PKZ
3v4jEOU5yLnU2baeuz+dd7mdb0ZT/209tkwbFTW6y9L5jV2PTN5zrsWaq/2m
X0xMVP+RkprpL1q8nDBhAumel999911y8Y8//hgcHFy/fn3yNRVSCyK7p+XA
wEDS9MKFC2lVeHi4yO7pZf/+/Un33NQ777zz3XffxcTEDBs2TBRShUceeWT2
7Nn0X6hXr160LaUSxp905MiRX3/9NfUreByg+IcOgbgVYuDAgfTnSQn7Tik0
L8AT5fTXSp122lCvzQ06sbTWxzG165xp2PDi199MfbuGS9WqAnp58euvzjRo
QBWW1qqjuXl4r5pJMxtbwlr9saPzxT09Lx/se/nwAOLSob4X9/akQkvYL1SB
qmlu3nHC16PXOs050H1h0q/LU3qvPOK8Jn3wmvRBK4/0X5bce0HSr3MOdBu1
1qnD+CZ6+49AlNug7J464ZTd/5GdfWHKnKvVe16o5bHZ4+DmVUdmj4ue//m4
qBFrL/bedjn1yMWLF0nQis1J95RZi5fu7u6ke14m3Tdq1Ij+6ikNJ01TDk6F
9E/j448/btGiBf0roJcBAQGk6fnz59PyunXraJl2hlf169ePzE4LixYtovLx
48fPnTuXav773//28fGh8jfeeIPcTdamNncUXKpHiT+V+/v7T7sxQkJCeJcG
DBjw2Wef0T5TJyQoKKiUDy0CUUFi0KBBUVFRCXYGbUIb6rUZqhO+zVtsrVf/
fNMfL7VqtbVxI5dq1QSbGza85OREq7bW+5SqaW8/vMmB2d/+HtX54r4+ZPkr
aUOvZI2wkjaMXl7c34dWHZjzLVXT3HronE4jVrZaktTH74jz6vQhG7NGbT/h
tu2EW/ixkSFpg31T+y9O6v3bylZD5nTU238EojwHZffRkVvWdOh04LtvLr78
3uVqY444R22cnrKh99aw59qGVGqQ+2r3q7+5/3XkCOlese3zzz/fvn178XLs
2LHPPPMML5PuO3TowMuk+8cff5yXKc1v3rw5L/v5+ZHK582bR8urV6+mZW9v
b17Vp08f0j0tTJgwgcpJ7lUL4u233yatU/lDDz3Ut29f8dak+4kTJ9KCi4vL
OzfGzJkzuc62bdtiY2Opb3D//fe3bdu2xI4gAlGhgzrb9DPdzhAbasY6nVjl
4hpYr/6ZNm0ude12qXefyGbNptaqNfWjWluaNfurd+9LXbqebd2GKlA17e2n
Do6a9PX5uJ6XDg8kxV/JHnU11+VqruuV46OvpA+nwvO7ekZN+oqqaW49K8Cj
7+wfVyQ5r0oftjFr9M6cCfGnJhM7csaHHxsVkjZ0eWL/PjObzvKfqLf/CES5
DcruKWWm7D7nxIk/zp8/tX1HWtWh52pM++sD96Ptlyd1C9lac+B2D6+IWbPS
VwaQ7hWb16xZ84MPPhAvnZ2dq1evzsuke1IqLw8ZMoR0z8u1a9cm3fMy5emk
8jlz5tAy5eC07OXlxatI9y+99BItLFmyhMopSd91LSj9p3LyOCXp4q2pDnUM
aCEiIkLxCC9K/+V9Xr9+fcOGDWn3SuL4IRAVP4KDg+kPMCcn54LpoMq0CW2o
1+Zqndi0dq1/s2axrVr91d/58vDhV8a4XHEbZ2WMy+Vhw/7q3z/OqZVfs2ZU
TXvz0LUbx3+TvLrjpSOU14+6etLl6mm3q6fcrMbPGn3p6LDkNR03TfiGqmlu
HroxdNhCpylhndelj9x6fNyu3Mn786bvy/OOy/Xcku22Nm3EpPWdhsx3omp6
+49AlOeg7D4sLCwvL4/+SHNjYg6/9smR95yuvNjw985rLv+y8upXA88U/Jnn
nT5Nulds27Vr17vvvpvSbVpevHhxjRo1WrduzatIx23atOHlwYMHk+55mVxP
GTovL1++nDRNXQ5++cQTT/To0YOXe/XqRbqnBbLz+++/T72IefPm0Ut/f39f
X19a6N69+zPPPDN16lTqDzRo0IDacXd3N/iYixYtoh4FLSxcuPCee+5p0aJF
MY8bAnGLBHWh6c+H9B0TE5OVlXXSMKgCVaPKtAltqNdmsE7Qv6ONi5cEt2q1
r2+/P0nx4ydc9vS47OFBC3+OHkOFQU6tNi5eTNX0Nt/gO2vLjGYZ23tfzhp9
9eTYa7ofeylrdEZUn60zm1MFg81Xhi0fvcxpSVT/zZluMScm7c6dRkSf8NyU
MXbRtr4jlrSkCnqbIxDlOUR2z33ytODgM8eO5cbtynmuxt8zfS+eOHXVyzt3
wwZeS7pXbB4aGvr555/zFfX//ve/KdkXf8jkdFI/Lw8cOJB0z8sLFix49tln
K1WqNHLkSM7cZ8yYIarde++9L7zwAi337NmTdM/la9as+fDDD6n9J5988sEH
H3R1daXCgICAypUr0+b33Xefi4vLv/71Lzc3N4NPWrt2bWr8tddee/jhh7/9
9lvqRZTMEUQgboHYvn07/WlPmTJlgomgalSZNjFoMEgnVq5cGR4evmnJkpBO
nbYMGJg4esyxceMIWqCXIR070SqqQNUMNg/3n7t5dutD4T1PJgw9nzbqfNro
3IPDEjf2ipzbmlbZ3Dxwwwp3v47zwnsFxf+2IdF1wyGXwPjhczf0HOvTgVYZ
bI5AlPOgnuq2bds4u+c4n5d3sGfPvxITafliXt7ZlJQL58+z7hXb8v8BKqfU
nh+ORxk0r9q5c6eov2HDhri4OF4md8fGxq5bt27t2rVUec+ePVTCqzZu3BgV
FUWVeZlyBLGHVM6P+9i1axdty4XR0dH0p0fV6K2pHVpr8DFpc2p56dKlVH/r
1q0G/3AQCIQcbLdNmzbFx8cfOnQoKSkpUSdoFVWgalRZbKjXpmYEFAT9qcZu
3x7qOWmt84DQfv0J64LnpNiCv2KuY7x5TNTWtQtcNs7tFuvXNc6v26b53dcu
cKVCk5vviIlatHrq1MD+01f39F7V02tl/wWrplKh8eYIRHkOvjL/3NlzZs7H
kb41G6E/Xk7qzb+vXuXAwEC9fwW0Sr2VvW9qHaxDIBB2BgtOyNpmzi420Qt/
/fD19aWf1Nrmgik49xZEXMHcnVQoKpTPzRGI8hx2PXCjrHcWgUBUhPA1DB8f
H15QbyJWldvNEQgEAoFAcPggEAgEAoGo6PEdAoFAIBCIih6DPriX6FfjDoZf
CobXu0NmXIM7PBr935j6VmhZAa2SmfLVXcuc7lrZ5m41AS3vIvxb3iFY3OzO
qU0KW1aj2A0qmfndf3x+us7y5ncS1IiASxjaE0WD7p9fR+w8/6SWqb76s0z+
VgN6o1Wd7jYJHw3NVdbylvfJLPv+rmn17vSoe5/Apfa9CugL4p+0dkHDe5m5
n90n4/3FQ1M/vU+GNpGbtfkW/C5iWY1cudvb93SudhdDywZYN6z7AO2eAeJD
8ctFXz+qYHlTXegY8i+bf6dKgpCuj6mh8sC+jxFrBthGVAseeh0qlF8Klvap
pFmuxt/5CapMP81ANWd0rUQ/1czv/bga715PurZ82CSTOj+2uP9Tywc9KVg6
9Bn5JUN1CO8+z811fo4WFgx6nqBlA2g3uL5gRv8X9Zjc+4VhrZ9wbv64gq5N
n1Us88+xXZ717P2yGcZ2f21Up1fUhZpQzT6tXunc9EUBvZ1ALudVisrGDG3/
imuPN0zSr+1/1S10+vFlTYZ0fH1M77dMMqxL5e4/v9LeHH3bV+nRtrLZyp0r
21WZMKjg9POrgratK3do97pcokezn15t5WSt3PznyrSsx7dNC+H64qVNWrV9
s32X6n361OjWtRB6qQdV5vpquAX6KRAvnQe9KzNsSA1i1LB3GddR7xED+1fv
3PEN+pgyVKJA1r3mP3M93auNb173bHxZ9yRlA90L44uXCt2z8TV1T8tmdC/2
n1pWfJCboHsrtnSvqePS1r3oVOgZX1HTLt3TO9rUPTndLt3ToeMF7kGRyoXx
NV0vdC+r3Fj3ZGfWvSjUk7gduh/2lHndEwrds3wJhehFoRnRj2lbiVDrXg+h
e3a9wLzuDaSvqXvheln0Qve0iUndK/oGE3pou17oXpa7nutvgu7J4xVY91Sz
NHQv6hu4vpi6F6I3o3tFCW8iW17Q+9c3bbq+OLrnf8IGumfxkRnN6J68SbYl
ldvUPVUju8396j8kXwPjC7hx2kSR3auNzwu8z3KHQU/3bHD6aUb31n0wNviN
+bvo/NhM8Fd+f+/yL++d2eA/ZGcDHQvb0ioyuxndi0aKkN3r6V5O/1nlZlzP
2T3tkk3ji2W7sntWv6x7TeNzucnsnuqQW4XrTSbsJrN7krLJ1J6ze6pvrHu2
NheSxCe0MaV7apkUbFb3ZPBeT4rsXjY+7w93BtjpHt2fpcp6nQHZ9dQroMpj
2j+lzu417U8dA/PZPRmcIJUL1xvonowsdK9A7XqSJlWmn2ZcT9XI4KRaM66n
amRwdcuarqdqVJm2MuN6btyklLubyMEF3Vq9zpU7tHy9RCrL+iaX9ej6JnnZ
pOvJdJzpG7ueaP5zZZIy/TTjeq4srK3GILsXdRSWZ61r6p5dr9Y9/STd0wGx
qXv+z8//qzUTfGFJlizZkPNflr6m7qkCQ5YUTlQjXM8j+bQh/SQMpE/vwnW4
Mu8P6V62vAzvhthnzeyeEbvNHucFPeNzm/y56KdN6dNasTN6lYXu6eNQT4aM
T5Ds5BxfrWMqJGOS1tnmCtcrdM8tyO0Y617oW2F2te4V2B7Gv/bWZHybOb51
RKLuA7SJ2+cPqqWvUDyV0Dc1vtED1t5m00etvcpOldj7Ct3LfQAhfWPXkwoJ
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
9DJ3vaReszJf3m+ysk13K9J8k/XZ+OqBfU1I8VzZ5BX4LE1N0SuMTwusVwPR
y7B5TVamHgI511j0BLuYR+/5SgNN0cuQ8dWX5OnB7SvO3WvqngqF7uUT94wQ
PV9jz1e/m9e9Iq9n0Wsan4fZi6x7tevlHF/O69XGl6VPXi5B3Ssu77dX97yg
p3tFgl983WtK38j1WrrXOzuvhgRtUveE7HqbCb6x7hXGN9C95ti7ySvweRhf
cbLewPjcuPEV9bL3xQl02fUK3Yvr6nkQQK17RX1j3aulTy+psuKMv1GOr3+5
vuaovvHd+jJC9wID45Pg+Dz++B6v26t7Y+zSPdXUa0czEzeve3srm9c9Yf7W
P6vu21cxc7m+yPGpctuCcfgb0nlVCQ/UU2Wbum/xvVX3PPhv0uBU03gQQHEW
wGZeL3RPP/kiATO658F5TvZtwjm++lI9M7oXN77JeT2PXdure83sXj6JL84m
FFP3esbnCw41da9pfNa9+Xvu1LrXQ6F79Xi+bHwD3asTfB4e5/Hz4uteIX35
5jszujef3ZvXPcvdpu6F8YXujQfzjXWvd6q9BHVPurSpezmplxdk3QvXm9e9
vIm8rU3dy8bn7F6he4MEn7xsrHvZ+Ma6V+T7su5Z9PJPhe6td/OVD93r3cp3
i+te9rvipUL3eiP5hXx/g+75pZnsvvR0z08Bsul6WfdmjM+X6xctu1frXlxj
X4K6l43Pui/ZwXz5OkNu2Vj34n78m6Z7gwS/XOnexll7rezejPGLmd0bJPiL
vi68L09T9zazez5ZX6q6F+oskexebW31YL58e52e7nlbm7q/fqF+e+vjd9S6
1zS+mexeNr4Z3QvU2b1Bgl9+snvoXq17WmDFyyjUTwa3rfvvX9XUvR6y7s0P
Bdile0IxmC9fV2Cge5vG19S9nN0L47Pure64ibpXG9+m7mXjm8/uZd2rja/W
vfyEwFLP7gsSfCF9vlxfvkTfpu7Z+Ma6VxvfvO6v31JnWvec3Zet7o2zezOD
+Xr5eInoXqFOA93LGb28zKPoZnQvLtG3mdoLzOiejW+ge03jm9S9eFZPMXWv
KX2Cr89n3ds0/qhO0H2p6549Ll+fr9a9/FLWvbbxb1S5Gd0rKpvUPb0XudWu
wXyF7vUo2exeGF/ono1PNhHGLxHdi5cK3SuG9Etc9+rs3qbuiZuse3FgWffW
Q31N9/RFOKLub2Z2rza+yO4NHqirML69g/kmL9XjzLqYutdTv7HuFcaXdW+c
2tuleyuGulcbX1zDXxq613tKD+ueF9TZvYHuea3QvU3XQ/c2dS98rXa9rHt1
dq/Gjuz++1f5HIFdujcz7G9e9+IWPPlGe5O6N3Punq/kt6l7fvAOp/mlrXtZ
+upx9ZLVveJxux46z9kz1r2Ze/GKm913Uuqe9px1T9+FGNi3OZ5vU/ey9EtG
91rylbN7m8YvDd2LG/ANpssxo3uD7J7sWRzd66lTrXu91J4fMSeuzC953fd5
TtPsVlSFpNoi6N6m8UtQ9+rb8OVz93rGF6tY92ZcD93bq3uFweVz9zbp1sr2
pXpF033hiIG5E/12Zfc3X/dq4yt0L4yvp3uTrvfQmYNGU/d8673HtcfoFU33
euP5JnXPL0tP94RBO2L2QPFwXc7uTepe3Odestm9fKmeSd3LbyTuly++7rl9
sWCse+uhvvY03aLp3vjcfeCQ5wnhU5a7sLx83lzWvXGmLOveele7KrVXPFHW
fHbPz/mxS/euBU/NNeJaB8BY9wrvU8tmZtgp2cF8xZC+OrtX6F4UFk33xo/J
vaWuzCf0dK9JOdF94eUBJap7MRWOvbo3eVm+XbrnUX2D8Xz1s3BtQt7UrKyp
e+4bGDxFXzErrkej6w/UNZgPlxEP01MbX6F70az8BOCS0r3eA3UVuucEn7N7
fqK+pu6F8eUb8fR0Lxtf7xk7pZHds+71pG/vlfnWBF/rfdW613ygrp7u+Uk4
JrN7vu9eoXs9xH33bgX3rBnD993LF+9pXpMvBvP5yTl8z7uZ7J77BjZ1TxXI
nqR7NWrpk2R5MJ83NIYftqN4II+e7gsfy9Pnhpvx5QqiBZPZvbP0TF1+xo5C
65qIJ+2Ycb1dU+HIj7wzo3t+GI5Jg1NN8qzxM3YE/Cw+8wl7Ee6710vnZdoX
PNaPK5uB+gZc2cyleqR7a9/AnO7lyiV+3z0/7NeM7vl0vPm78HimPLXuWQ0s
enGDlTC+3ng+e1Ng/LAduaZ6SF99kZ549h29u3pIXz0zL7cg5s0xmBJX9Dfk
kwWauufdEBsqnvyvFrSYMUc8Kt9gGN9ma8L47HqeI49+6rlefni+4un6BrpX
PO7e2Pjq5+ga34LHDQ764Iar9TRdLx6cK3J2Y9fzc3Tlp+rp6Z4fjcgJvp7x
he552jt+SQs283rxvHp+qh5LX6BOqNng4mm0BqLnVJ27B3wVnOZ4Puf14ko5
3lDT4IrdmHBtkh3jS/VYoIVqLniwnp70aYHvqhPKNpA+S5mfjiseoa9nfHFj
HU9+p3jkvtxVUNyAzw/bMT6DLx6eLybLMxC9qCMeqGuc1/MzadmeNvN6vuBf
PCPXQPfiwbnqR+VruluubJzji5Z5Zj1jifOz8fmpd/zUPpuVC6fCufaMXAPR
86N06ad4qp7RWfuCh+1TZa4vLt7T1L0YB2Bs5PjXOgaFxm/2mnFeT76WJ/Gx
KX0x8C5yfE3R82Nz+DE7vGDsevGYffEUPvncvYf0yHSeD5f/sfNa8TA3edpZ
xcP0aFk8n1ZP9ELx4uG0at3LE9aINF8xWZ4iqWdlC/WLp/XKF+YpHvKveFQv
l8i6F0m94vmBXKLQtObUeFyiKX11Uq82vnA97zbZyuPaFHIedXUfpVvoTdW8
dWrpe+jMksOb6Ile0TdQGl8SrqIdOSXXE73mQL26nA6F940T5WhKX0yUw5fq
iWv2yN0sfYXr+cG57Hp1mq+Z1JOLr5vd+Qm2M9lTIX3x3FpO6gneXFP6rtce
gC9PNSsepas+d8+jBIo0n59rp777nie4oaZ4N+SJ8NTGZynLAwWc5pNt1cbn
h+OJykLoisfriaSeXMxz34jb91jiat2rJ8ph6YuuheJKABY9NyWexaeYZ4d0
xu2IWXLkzF1T+sL1ZtJ8WZpyiZ70FUm9pvTVOpZLNKWvXmVX5fbXJu/TfQx+
wXDB9Sfgta9iVLlzZR7GV9hc7XHxzHzO/eXK6tEAFr2oLEoKPX6j69tec3db
lfo1pC9GAKS79eklGVktfb6cT5HUs3w1LS+e89/858r8EGDxxDy16MU19nLm
rvfMfKpMiue5cRmSPj8z30WaEVUWvdC9SPPZL5zgU7qtl8iLCWflaWo1L8+T
uwGKEg+tB+DIybim6OUZ7UVirha9qCMQ3Qn5ZD1vqHhcsPAvrRK6N54DV0yU
o0jqDQbw5S4EXwZZeFqh7n20t+JsOM+DI7wvknrdjPjaVnJSr74BX0hfdr3B
pfg3SF9L9Mp2CnosYkhfDALonZoXDbrozIGrmChHuJ77EvIceQL6Isjgwvgi
2VfcjifPbiM/+VbMX6PQujC73A1QG1ahWp5JViT1It1WzDwrz2fnfG1yHLcC
V6rzVipk/6rHFvgj8A6IRqhcLWvNMwK8lk/la4peUZNzcyF9NjJn3GpE5s7G
F+m/3ox4cg9BJPWiDyCMLw8OKEQvZr1XnJqXx/aNE38xQ66sdb3EXz22r5j2
TrPPwN0AuQ9gnJV3kh6qb1BZXsuVSXx6leXMnUXPlTVnt5Glr5hJR87fC+e/
k4brOTfXHMAXT9EXq8Tmmok/NyWkz/ULh/q1xuoLz/vfKHrNyjwvj3yhPj+S
l3N5trZC63Kaz0/6JctzJ4R1L+a/k6UvRC+XKO6zU8yIR6InuQvRC3hiHf6P
rbC8pvHFg3f4ifqyhRUIxZsZ4VdX1nzSnTzILxpkd6tReFzc6a9ZR4zkC+mr
k3r11YksYpK+cL3BCX1R3+QkO9wmjwyQm3i0gYRFO3n9bPiN0+BqJvUy6hlt
NEV/3fg3Wlj3trsbjW8genWaL7+FKDeQPutb7XrFNLiseFn0at2LNJ+lL1yv
OIMvz2cnpqDlR82rRS8jz0WrKXoBK560JbJsHofnZ9nJCb4Y2BcNKpJ6tfG5
Tb3Z91j3itMHYuje+Mo9HuTnWexpwbgmS1+hbwM4czc5372YMYfP6SsG9oXu
GR7b52fjiynzeL57vVze5gg/QdbmsX0xWm7z4j2e/87m6QB5KN7moL2iss0L
8+yqzB5nd8tjCwrEs3FEZSF6vdvuuGVO5/VSeHUur9crUEufPa6bwksX4wnF
2z6tf62OmJJPkbzrSV880p87CQrdi/nvFIP2Bjfai0lvCZ4vT+16gYHoZd0z
PLCveSm7XuZu/nJ9UVnzjjz54bqcuSuSej2Vc6qurqx57R+f+lcn9ZrG50vy
5BJjj5t/6j5X5gPCYpKPicL4hDhTb3CyW/5CXQpmnDfWvfq0vp7ozZ/3Vw8X
8IKB6xVn6vVg3Qvp81Q7ejfgq9N8xZC+WvfqSWyNdc+QZI1Ff8O96qppZRjZ
9WIaelKzzYvQ+IS+67UBBPXJCM094fP+Nl0vjG+yMhtfL6nXND7PeGvzY3Ka
r7i838D41DcgufNpfdn4sr6phH+y9M1cv8epOknc5OX6nDJ3ujZtvZnKJq+y
43Pu5ivb1bLeCIBa+jy2z6m3ehBA1r3I3PXydE2Jm6/MPQQbJ+gl6euNAGhL
v2Csnu0soyl9dr0Y/Gfd8y1+6vnvOG1XjOobn6k3EH0RdE//n626qX2v5qNp
NNN2k7qXK9vUPWfieq5X21yvslr31DLthoHrFdJXXGtn84p9u3RPJpIvbBDZ
vRjP19S9cYIvrscoKd0rjG+X7hV5vVGCX/te87onyONmdE+5Lef46pP4svFJ
3LLuTbreWPc33LoueVbteln3YkZ70rfBjeSK6/cUuuf7+wx0b9L1LHHzlUn3
rgW9FDPwtX/ipc2OjZ7u5ev3RIJPcucFdYIvsn4hfbt0TzY0qXtOrsWymcpm
jMyYv1yfWzape87xzVRmj4vz77LuDQwuLrEzY3Dzl+vbZXBu3OTl+nwWQGTi
fLG9+ClcLxZIzS2kc/1C95rX5KvP4xtcm0fvaJzXm9S9bHxxol/vdvUS0b3m
iXt7da8Y0rdL98bZvax7+Qy+TeMXQffWy/MKEnzuArHxDXSv53oxQ71J3Zux
vNL1Bbtkr+5LI7uXdW9T+nJ2r3HlXsEYvnhArsjuTeqeHGRD99ekpjetjGZq
T5Cs9W4ok42v0D0n+6x7vTsCyqfubQ7pG+hecTO+pu65UKT5Rc7uS1v3nXVm
wr1puqfKZrJ7hnWvp2CqUD51T5Xt0j37fWj3qrygyPGtdx0WGL+Yuje+7c6k
7r26/A8AAAAAFRvLyW0AAAAAcDg2bdoUGhoaHR0dGRm5ceNGerl9+/aYmJj4
+Pj9+/cnJiampKQcPXqUfh44cKDM9xYAAAAARYAsT07//fff//jjjzNnzmRn
Zx85ciQtLS0rK+vkyZMWi+X8+fMXLlygn7m5uWW+twAAAAAoAhSHDx8m11+6
Fnl5eceOHcvJyTl16tS5c+f+/PNPKqSfVF7mewsAAACAIrBz586UlBTK38np
ly9fpp+U4584cYLkTin/X3/9dfXq1b///vvKlSv0ssz3FgAAAABFQNY9yZ0s
n5mZmZ2dTan92bNnKakn3efn50P3AAAAgOOyY8eO5ORkPjuflpZ2oCCohE/f
U6Z/8eJFMj50DwAAADgu0dHRJHeLxbJ///4VK1ZMnjx51KhRzs7Ow4YN8/T0
DAoKOnr06B9//EGJ/7lz58p8bwEAAABQBCi7T0xMjIqKch036/sOc2q2CqzS
aWv1Xjtq9wlu0nN6664D3N3dY2JiqD9AmX6Z7y0AAAAAigCJftu2bcNGLarT
PODVn6Mqd417e+DeumMOfumR+INX0vcjVzn9OtrFxYWMn5OTU+Z7CwAAAIAi
QLr39vap23TlK99ue61D7Jv99tYafbCxZ3Lz6Wlt56V3WpDeynVNux4DZ86c
mZKSUuZ7CwAAAIAiEBER0am730ufhr/abPvr3ePfG7T/M7fkH73TOyw43tPn
1IDAvAEBJ50Gzxg2bNiWLVvKfG8BAAAAUARCQ0M/bRz46ldbnaYkd1uU1sz7
yJeT0lrNy+nhd2bwmgsum/LdIv7+dfr2Xr16BQcHl/neAgAAAKAIrF27tsr7
Ic3HJMwIPz5900m3tTnfTcvosDjXedUFl8h8j+h8r135o9ef6dChg5+fX5nv
LQAAAACKAOn+xbfXj1yctmBr7qzIXM8NJ5tOz+qyIm/oukvjtuVP25M/MyHf
Kya/VatWvr6+Zb63AAAAACgC69evf/GttRP90xdvy50dmTt1Y+5PM491W5E3
bP2l8dvyZ+zPn5+UP2NXfsuWLf39/ct8bwEAAABQBKy6r7puol/G4qjcmZtz
p27KbTbrWFefM0PXX3KPyp+RkL8gJX/GvnwnJycM5gMAAAAOCun+hSprJvql
L9piHcz32njyh+nHOq2wDF53aVyUdTB/XrI1x2/VqlVAQECZ7y0AAAAAigDp
/uXGm6eEZvvG5PnEWBZGWX71OTk69ILXjvxFB/MDM/LXnv6HfkL3AAAAgONS
qPt1pPtTy3acWhBl6bY057e1v0/alj9/X77v0fy1p/4JTLfqfuXKlWW+twAA
AAAoAqx7j1XW7H7Zzrz5UZauy04OWX1uwpb8OfvyfY7mB5/4x+cIdA8AAAA4
MKz7iSGZPtGnFu/Inb/tVMdFxweFnBu/JX9GfP7SlPyAbKv0oXsAAADAcSnM
7oMzl+08tTjq1MzIvHYLjjsHn3OLzPeOy190ON8/O39ZCnQPAAAAODCFug/M
XBqVO29L7vSI3FZzs3r7W8aEX/GKzZ9/MN8nI3/BIegeAAAAcGBY95MDMxds
y5231fqYnRZzs3v6nx2x4W+P6PxZ+/OXpOXPOwjdAwAAAA4M697TP33RtoL7
7sNPNpuV3dXHMnT9pfE7rXfcLzhSeN89dA8AAAA4KIWD+SszF0Xlzt+W6x1x
quXc7F/9zozYcGVSdP7sQ/nLMvPnH4buAQAAAAdGPne/YGvuzMhTreZl9Vt5
xmXj31Nj8ucfsp67X5IM3QMAAAAOTOFgfkjWsp2nFlmvzD/VbnGOc8g5t81/
e+/KX5hUcGV+KnQPAAAAODCFul+VtXxn7uIdp2Zvyeu4OGdQyLlxm/+euccq
+sDjeMwOAAAAUL7IzghNTw1hcrI2GhQyhbpfne0bfWrZTsu8bZYuS3KGrvl9
YsFT9Zan5ofk/OOXBt0DAAAA5YjV6wZPmtGEcJtcj34aFDKF5+7XZPnF5a2I
tk6R021pzvA15zy3/j1/f75fev7ak4VT5FRg3Z/MDM8+sk6Qe2zTrfDW5RYc
EwAAsMnpE1vSj6wiDiQsmTitkWItlXtO/1IuKdT9umz/uDy/OMviHZaePrkj
1/8+JSp/0aH8gHTrjHhBmaWl+83Lh49o+GyRCfLoQI0EeXYc3/wtQcyaifbu
xvKRPzl/eL9g9dRuN+37KsO3Lp/fZokck+BJneSWNy4cVOYHBwAASpbMtDWc
yHtMb+zi+YlirZ7uJ67L9o3L843JW7LT0sf/lGvYhWk785cczA/KyA8788+q
4/+Uku7DFwyQ/7Hbi69LS2pk8ZBv5cItPiPt3Q3ovvx8m2aOSXSI+44gN4F6
T/zGtpJbWD+rd5kfHAAAKCXUZtcsND/fPXRfGkD3RdD94E8qyRXUewLdAwBu
HezTfRnNdw/dQ/fQPQAAFAe7dF9W893HrZ80p08DNWO+eln+dz2s/hOa1TYv
G24pCd3vCHLzd/tFEB825aZ9TWX41uXz2zRzTKB7AAAQ2KX78jbf/aLBNxh8
ws/VDCoXX/egVLHr2zQDdA8AAAL7svtyNt99iej+6P6A7QEufmOdAsa3pYWU
+OV5OVs1W8hMCknetUyQlbJG7732R86KWDKUGpzXr9GSYd8HT+oUsWQIvVGR
P2kZvvX1fUgM2bPRe9OiwWRJyqbXz+4TtdL12OHVZfJtmjkmJaj7E2lh+yNn
hi8YuGxksyXDfwjy7BgVODYnI7ykPjsAAJQ29um+nM13X0zdpx8M8u7ysfrs
sHfnOlkpa9UtmDmBfmjnQq8OH2qfd/7ogVm/1t+3eWYRPmkZvjWRusfH85d3
NVseUOvBGd3qxq2fdJO/TYNjsmTo97RXhHpXmYxDQVzTjO5PH49c5dVV3Rox
+JNHfVxaQPoAAIfALt2Xt/nui6P70Dl9Xb99TVuOH94/5utXEncuVLRg07mb
lw4jseq1yQys8/Du8Kn2ftIyfOuIJUOH1K1k3DLZsPgnR0pK94p21JjXfcru
FZ6t3jFuzeWbV4/s8yvtX3UAACgmdum+vM13XxzdD/n0MeN/4x5ObytaMHZu
UsziQR8/YtwmM/TTx5N3LbPrk5bVW+/Z6G2mWSsfPbB30/Sb9m0aHJOS0v2J
9LCRjZ8389nH/fjG8aOhN+3XHgAAioB9g/nlbL774uie+e2LZ2b3/sLX1Wla
p9rqAVvF6Lexc6e0/0BeS81SKp0Sv3xfxIy1039VnEdeOaGdXZ+0rN56ctv3
5W0pzac9IS2SKKd2rDWwzsPy2sCJ7W/at2lwTLb4jFgxujmh+EK5kDh+ZD3X
NNZ9wPi2it8H+iVZOaGtr0vL8c3fUqyy9wsFAICbTBHO3Zef+e6LqXuvDh9m
JV+/vmub/xhFhSDPjnILBs49lb15UJ3r+TVlhSczbziluzPEXd52Yssadn3S
MnlrylhvOCAfPaAYGYhcMeIGG3aufdO+TeNjwhTnUr3UPT6Kzgx9WLE278QW
+t2Q145u8iIVFufjAwBAqWLfYH45m+++OLonRWYkBivqjP2+slxn2chm8loD
vxzauVBeRaZI2b1C3pakPN/5S3Hz+Ny+DXOzIsx/0jJ5670R0+WWZ/aop6hA
TpQrUE/jpn2bxseEKY7ufVxa3LAzLaorts3L2aoYVInf4FWcjw8AAKWKfbov
Z/PdF0f3ZEB1nYUDv5Lr0CbyWgO/HNnnd0MiXOA+sknc+kk56RuK/0nL5K1P
H4/MyQgXULdBXnsyM3zJ0O/l9x3R8Nmb9m0aHxOmOLpX3LKxadFg9eYb5jnL
dRYO+rr4XzQAAJQS9um+nM13Xxzdh0zpoq6zxruHXGfBwK/ktQZ+yTuxZWi9
xxXaZQbUenBiyxq+Li13h08lgRbtk5bhWwvSEgKiQ9zprZcM/8HD6Z2BtR9S
vF1F0r3LN6/KqwLcW9MvjALFDtMmxTzCAABQeth37r6czXdfHN1vXjpMXWfd
jJ436H5AE3mtsV82Lhyk6dwbhfhcyOTOp+wZxi/zt85KXhM8qdPoJi+aeIsK
ons6SjbvalQz9NPHS/bXGwAAShD7dF9G893rUeIP0S2O7om103sqFKOJ+09v
2nundlm9dWZSiNsPr+u1prhPrcLoXn1+xAyD6jxS4r/hAABQUtj3zPwymu9e
j/KmeyLtwMpAjw4GimQmtX7PrtH1MnlryuvH/fiGYvNh9Z+Y3vXjwInt49ZP
Sj8QWCF1n5MRLpcPrP3QhBbVbeLZ6p3S+CUHAIASwSHmu9ejHOpecDh2Sdjc
fnN6fzHssyc1tbszeJz5T1omb624FG34Z09Fr54g325WUXVPjP7qJVE+oNaD
ucc2FeejAQBAmeMQ893rUX50n5kUQsm1QL7TjVLp/ZEzl4+6YVuCMnHzn7RM
3po+vrxVVOBYRYX4DV4VVffenevIqxK2zin+rysAAJQhDjHfvR7lR/czutWV
V1E76sZn/VpfrrNi9M/mP2mZvLXi6vQje5Un/ddM615RdU+HSF5F76XePHLF
CPqlEmxaPKQ4Hx8AAEoVzHcvU2TdB3l0kFe5N6uqfpSNr6uTXGfzsuHmP2mZ
vPXY7/4rbxU2t5+8NnnXMsXUOb81eOamfZvGx4RR6F49Q66B7vdsnCavIsIX
DJRnRt4XMUNxK6JdXygAANxkMN+9TJF1rxjWJly/fY30sTPEffeGqRvmOSse
4EPYNVVNmbz1nN5fyFuN+foVymczEoMP7VwYMqWL+sIAKrlp36bxMWGGf/aU
XGFS6/d8XVoGuLcR09kYPzN/xejmig84ouFzi4d+R280t29DxZ16rt+9ViLP
UwIAgFLiVp7vXl2nOJfqLRn+g8IOBvi4tLDrk5bJW29ePty4KUpv5Qx3YJ2H
FU/eK71v0+YxISa2qK652+kHTc2Il5MRThI3c0jpgydsw8l9AEC55pad777E
dX8yc6PNudGZKe3+Z68Wy+qtZ/Wsr9cUpbr7Ns90b1ZVLtwdPvXmfJs2jwmx
Yb6z5p6b1L2l4B4Hz1/eNT6k435849DOhaX6ew4AAMXnlp3vvjRuxMs7sWWr
7yiDlHDs95XpfYvwPNuyeusTaWHkRPXzcqd3/ZhnjVcMLAyr/8TN+TZNHZOc
rVv9Rrt+qzwm5nXPjWxePpz6NhpH9aMHlo/6ifpaJfgrDQAApYRDz3dfPqH0
ef+W2dv8x6yd/ispiVjj3YO8Q7lw8R9cXyZvfXS/PzUS5NkxwL1N+IIBihn3
yjnk66yUNcm7lu2LmEHH4dCOBUU445CbFUEpPHWoVk5oS50E6gAcjJoP0QMA
HAiHnu8eAAAAAGZw6PnuAQAAAGAGh57vHgAAAABmcOj57gEAAABgBoee7x4A
AAAAZnDo+e4BAAAAYAaHnu8eAAAAAGZw6PnuAQAAAGAGh57vHgAAAABmcOj5
7gEAAABgBoee7x4AAAAAZnDo+e4BAAAAYAaHnu8eAAAAAGZw6PnuAQAAAGAG
h57vHgAAAABmwHz3AAAAQIUH890DAAAAFR7Mdw8AAABUeBxuvvuTyStTV/VN
XNJi/9T6CdMbJq1om77ZJe9EZJEbpG2z4qYzpzLWF62RnESftPARVjaOtFk5
O37WsWgv4mRyQFl97wAAAG4pHGi++9PZEYd928c4Px7d9xEF8aPfyNg6vmjN
nsoME+0ci5lqs372nnnZu+cSp9LXicK0DcOvNfKoKMxNDeaaJxKWyC3sGvU6
V04N6V3mvwAAAABuBRxovvukpU5q0V+nX6VjO6cUoVl7dS/6GxlbxolCTd2n
hvTiwt1jq8stQPcAAABuMo4y333WrplCyrvd3k7265S5YxJJ9tCCH8mwXB47
+NkijMaXiO6PRXsleH9RQANRCN0DAAAoJzjKfPfJK7sVjtuPqXo6e5O8Ki18
hPA19QHsbVlT93k5WwnN+pq616TIus87HnE6a2MZ/lYAAACoYDjKfPcHZjVh
RSbMaKRYRXKMd3lr18jXiSNrnbnwaOiQvRM/JBT1M6M8uHyvx0dcotD9sZ1T
DsxoHDvk+djBz+6b/En6ZhexbUpg9wOzvxaDCdQCveQeQub2iXKzJw4uo1W7
3d4uHHYY9Ay9TFz8M7ejp3vqxhz262jdqv9j0f0q0cKhhc1yDvuX+S8JAAAA
R8dR5rs/vKItKzJm4NPHdky2Xd+3A9ffNeK/cnnaht+E3LlE1v2hhT+RZxVX
BSQtb8M1902qo75m4GjoUIvq3H1W3HR1zbjhL3M7mrrPSfTZ7VpNY6thLx3f
t7DMf08AAAA4NI4y331GpJssQTJm4qLmlHqfTAnSrF803Rf2KJyfIOQSvgjw
sE+7/VPri+x+j9s79DJzh6dFpfsTCUtoVfyYqte6KE/Ry4NzvuF31NT9Ps/a
1z/dyNf3uNe8vj+DnsEtewAAAIqDo8x3n5ezJWF6Q81r8uNHVUla1vr4vgVy
/SLrniqczt5EHA0bJgr3jH9ftFAaV+bLnZm0jSPpw1Lh8f0LxXulBHYv818V
AAAAjosDzXd/+lh40lKnmAFPakqfSFzcQlQumu4TFzWXKx+a31SsOpUZyoWl
oftD838orOl6Q82Dc78t7NKMfqPMf1UAAAA4Lg433z1pN2OrO3k53uUttfFT
V/XlakXTfXrEmBsqS9f8ixPopaH7vR4fRV+77+DArK8Ee8a/f72/IT3VBwAA
ALALh57v/lT62oxItwTvL66f9R7xGq8qmu6z98yVK2fHzxar+By9pXR0Hzf8
Zb0hC4HeVQoAAACATRxlvvuMreNJr8SJg8vUa/d71bueBaettdyg+9fkmkdW
9zPK7qXb7qzHIWLM9ex+fylm97tdq3PJvkl1Dvu014T6NmX+2wIAAMBBcZT5
7sVNavsmf6Jee2TdIOkke5il4B756GuX2fOVb8yhhc0MdH9owY9yswWP7LvW
7LXn9ZWG7g/MaFy4AwublfmvBAAAgIqHo8x3f3De9+pxdSY3bY24bS3e5S0u
PLr+egfg+N75XHgyJTBu2EsGuo8b/nLu0dWF5Rnr4357lcv3uL0j3k7oXj7R
b6x7xYV2at0n+3cu3IGhL8qD9sn+XSjfJ8RNfAAAAEARcJT57knZ8lx4ZMDE
JS2TVrRNmNEodsgLovxo6BBRX5Z40vI2iYt/3nVN33q6tw7+j6x82Kd9ckBX
cde8NZGPHCv2JHbQM1y43+vTtI2jchJ9LDq6P7Kmvyg8snaAGA1Q6556LCT6
wh0Y9TpZPi38t4Rpn4sdSPbrWOa/KgAAABwXB5rvXr7KTpODc78TlfNythY8
EkdZZ69nLQPd7x5bQ73Jfq968ukAMfAudzA0dX8iYYlcM27YS1yu+ZidjK3j
xQN8FFDf5nR2RJn/qgAAAHBcHGi+e0vBk2c0H7Zjne8+0k0xqc3prI1UWYwJ
xAx65si6QVmx3ga6z46fdXDe9zEDny4s6f9Y4qLmecc337APe+fLvQID3RNJ
y1tH93/cjO655b0TP7jho/V/LCWoR96JyDL/PQEAAODQONB894Lco6uzd89J
3+x6NHTosWivnCQ/AyHmHY8gjVKibX6OOWote8/c7PjZiqn3ZE5lrM9J9M1J
9DldcGWgUWvHI06mBp84uPxksqkjczI5IDPKMz1iDPVtDHYAAAAAMI+jzHcP
AAAAgCLjKPPdAwAAAKDIOMp89wAAAAAoMo4y3z0AAAAA7CU7IzQ9NYRITV7p
7vW5Ym05nO8eAAAAAPayet3gSTOaEKT1FQHdFGuPpgZPnNZILinz+e4BAAAA
ULKkHl45YWoDuaQ8zHcPAAAAgBIk/cgqSvzlkvIz3z0AAAAASgQ93Ze3+e4B
AAAAUGT0dF+G890DAAAAoGTRHcwvu/nuAQAAAFCyGJ+7L5P57gEAAABQsugO
5pfdfPcAAAAAKFl0dV+m890DAAAAoATR1X1Zz3cPAAAAgJJC99x9+ZjvHgAA
AADFR1f3mO8eAAAAqCjo6R7z3QMAAAAVBj3dY757AAAAoMKgq3vMdw8AAABU
FHTP3WO+ewAAAKCioHvuHvPdAwAAABUF3ewe890DAAAAFQXMdw8AAABUeDDf
PQAAAFDhwXz3AAAAQIUH890DAAAAFR7Mdw8AAABUeDDfPQAAAFDhwXz3AAAA
QIUH890DAAAAFR7Mdw8AAABUeDDfPQAAAFDh0dT9S7XCJq+2PkR3YZT13H37
RTn9g86Mi8yfHm+9Jt8/O385zt0DAAAAjoO27muHTwzOWl7wzPzZkac6LDg+
IPh3t4i/WfcB2fnLcCMeAAAA4Djo6X5CcOaKa7pvPz/bOfCM26bL0+PyFybm
+2XmLy14zE5gYGCZ7z8AAAAAbKJ97v7TTS4Bmct25i2KyiXdt56X2S/QMibs
wtTo/PkJ1nvxFhzIb9u2bXBwcJnvPwAAAABsotZ9WFjYG1+E/jIlcbGYEW9O
Rk+fk8PXnJsQeWXGrvz5B/I9I85269Zt7dq1Zb7/AAAAALCJWvcbNmz47Ic1
r7fY0Xn+kUF+GZ0WpH87JbXtvHQy/rA151w3XiTp95+zc8iQIREREWW+/wAA
AMCtRnZGaHpqCJOTtdGgUKDWPUn8174hL30S/mrzqCo94t8dtK++66GmXilt
56Z3W5LV3//kgICT7UbMmzZt2q5du0r8Izh/eD8AAAAAZBSuXL1uMLmbcJtc
T0hcs9BA91u2bFm+LPTzH4Jf/iLyVafo13vEvzdkf/2xh76dnPyzd2rr2Uec
3NYPGj1x7dq1qamp0D0AAABQ2ihcefrEFtI3cSBhycRpjdRm95z+pU3dc0yd
tu6zn0JebhL5aqsdlbvHvTtob53R+79wP/jNiDV9XWetXLny4MGDOTk50D0A
AABQ2ihcmZm2hhN5j+mNXTw/KZruo6KioqOjd+7c6ecf0X3Qqk9+Wf1Gq8gq
XbZ+3Hd9i9983b0Xb9iwISkp6eTJk2fOnClx3Uf3fQQAAAAAMnrS1DO7Sd3H
xsbu2bNn//798fHx9HLTpk2hoaHh4eE7duygpP748eNnz549f/78uXPnoHsA
AACgtCkl3cfFxZHrDx8+fOTIkYyMjMzMTFJ8bm6uxWL5448//iqIP//88/ff
f4fuAQAAgNKmVHWfkpJCoreeoLdYyOzk98uXL1+5cuXvv/+mBegeAAAAuDnc
BN3zOXpO6sn1V69evfm6j3F+ct+E2ofnOyXN+WmvW81SPaRxQ17cNfzVuMEv
lPmXCwAAADC3gu5Tlna+dDb7Hyl+PxqdMOmzEjmA8SOqJEyqT4iS85m76S3O
pmwt7e8ucfaP5zPiT+3yLfPfIgAAAOWcCq/7w/NbCctfuWD5++rlwuU/z+0d
90HxD2Dm2jHcoCi5ObrfNfy1PzL30Bv9kbW/zH+LAAAAlHMqvO4vZB8gJ17+
/eQ+9w+jraP6T6Qs6Zh/9QoVnooPKP4BVOueehEJnp+W3imDjNUjLAfWX/3r
PL8vdA8AAMAmFVz3/R5ls5+MXiyXn4xe8sexvXkJa0XJfo+6eftWXTydduFE
Ym7M0v0T6sj140dUObljIWXTf+VlUNqeuqJHdP/HqDxz/djzGfGsXaqQvKgt
FR7fPI1aztowQWy+67fK1OaF44eu/vUHdT+o5q5hr4i12RFTT+8NPurX5+DU
xrmxy//MOZyzfd6h6d/ofWXnUrfLJyagewAAADap4Lrv+8jF0+nkxL8vX0xd
0V2WrAxpWgzyFw71Xzx30PsrXrtvfK3L50//c2PkbJ9Lq/7ITpALj2/2jlYN
5u9z//DSuRzF5n9Zju1xfYcrcCO0Fe2kXIc7D2p2DX9t96g3ifPpcdA9AAAA
M1R43R8LcxcCzf/7b0quT2yddWBqI1EhdvDzl38/SWsp+05e2CZlaWfK8dnI
XOFsUoR126tXMlYNT13WldJ/bm2PSw1SOWXi/DJhUv3do9+MVun+TNIma3/j
yqWcHQsOzfg2N24FDzjk7VvFFUSf4VR8QOLMHyjBz8/Pp5eWg2HG39251Cjo
HgAAgBkqvO6J7E2Tr166oMiv/zi2jy/OpySaS0i1XP+Iz69ccnBak92j3yrM
3LdM57UJnp+S0InEWU2jbV2qt9etJq8liV8/5gfWc2H8yDeir+n+0rkcPkEQ
fe16A+pXGH930D0AAACT3Aq6J2IHPpM056fjm735anaOS2ezYwc9J3xN3qQ+
ACHy97SgwYemf8PLKUs6arZsrPvD850KN1/aWVSgZrmQkv3oa7o/e3izqHDm
UDiVXMxNNf7uoHsAAAAmqeC67/dozICnCFoQhXtc3zl3ZMe1/P3L7Agv61h9
fv7F0+kKjgb0u577F+Tyaox1n7qsi2LogEhZ0oELD89vFX1N93n7V4sK0D0A
AICSpWLrfs/Y91isWeEecrmQeNLc5kf9evNy3NCX1MfnwOQveO3RgP5cEj+y
6rHQcQTf2Wese7F59sZJosLJHQu5kFuA7gEAAJQ2FVv3xJULZ/6x3nefS4k8
l+we9ea5lG2c0VufiedZr7BLcO3WubSVAy6cSLxw/NAel7fjBr9w9a8/+Fw/
jxJkR0z9p+DSu13DX42WdB876FneXNY9bXLp7HGru0+nHZjyBZUc8v760rkT
1pJTR/lkPXQPAACgtKnwuheJPMXVSxeu/HlWvMzaMJHr5MYs5ZK/LFlkYV4W
d+VnhXtwyZWL59jdFOLRtanLu3HJxdPpaYGDolVX5qeu6C7e8a8zWWI5eWEb
rgDdAwAAKG0qvO6jC56jS6n6P1JcPn86LWhwdL9KXIESc8rZ5VvvT0YviR30
HK+N6f94doQX3xzHYwK0Nsb5CV4bN/RlSvx51fFIjfvuo60P7e9EXQXR+JUL
Zw4v+EWshe4BAACUNreC7pndo986OK1J4uwf9477n5C1TNzgFw5M+eKAV8O4
IRqT2VHhAa8GB72/0ltL7ccOfl73UPd/bO+4DxJnN9vr9r7oZgAAAAA3h1tH
9wAAAMAtC3QPAAAAVHigewAAAKDCA90DAAAAFR7oHgAAAKjwQPcAAABAhQe6
BwAAACo8CldmZ4Smp4YQqckr3b0+d0TdO394PwAAAABkFK5cvW4wuZsgra8I
6OaIugcAAABAcYDuAQAAgAoPdA8AAABUeKB7AAAAoMID3QMAAAAVHugeAAAA
qPBA9wAAAECFB7oHAAAAKjxHU4MnTmukLvTwbiyXQPcAAACA45J6eOWEqQ0U
hYcOLHP1/EQuge4BAAAAx0U9bq9ZCN0DAAAAjgt0DwAAAFR4oHsAAACgwgPd
AwAAABUe6B4AAABwLMTU9kRO1kaDQgF0r8fhhOVx2732xc5O3LcEAAAAKG3I
OOQdso+Bm44kBwatdvYP6sVT27tNrid8Lea7lwuhe5vQMY8MGwMAAADcTMg+
xnpK2L9ovNcX9NOi/6w8Mw/Qg+6ZvbGz6bDH75iRciAAAAAAKG3IOOQdso9N
QwnjQ/fF59DexXTY6fhfPHsIAAAAKG3IOOQdso8ZSbHxo6OnQffQPQAAAAfC
Lt2z8d29PlM/Ghe6h+4BAACUW+zVPZF4cIW71+fQPXQPAADAUSiC7nHuHroH
AADgWED30D0AAIAKD3QP3QMAAKjwQPcOp/s/8hLK/NemIoHjCQC4FYDuHUv3
2Wk7/vOfO6Mi/eXC9OStZ0/uFS9PpEe3bP41odfIPffcTY107vCzXBjsP7PW
h+9OcBtUgr9dK32mO/fpOGeGm02lhgTMopqzprnQznNJ7PYg78mjmNnerrnH
4rg8bPXCN6v+t2j7mZGyjQ4UHUPj42mA5qErPtsifEcO77UpdKkomT5lNL0R
QcfB4OOcyoo7k7PnXO7eor1vyX4ck5/CzEcDAJQ40H051P2LLz573333DOjb
iZYXzBn/0EMPPPF4pbio4IsFKm/4xceH9obJ9Z9//ukRw3qKlyczYz94v8a/
//1vvS+dVqUd3qJwxOuVX/FbNvX86f0l9as1dFD3O+64o0b1KvRZvvqyvkFN
csQDD9xX95MPnnyi0tNPPZ53PJ4Ke3ZvTZtXe+t1onq1Kju3FB6rP88c3L9r
XaVHH5atbZPliya/U6PqCy888/hjj1KzSfvCuVzzeBqgeeiKyYrFU6q+8drt
t98+fMivopC+CDoOL734XPTWlepNqB/13LNP3XnnHQ8+eD8dNPnbt4sS/Djm
P4XxRwMAlBLQvQYZYZb1YzTKl/9qWf2bdSFrk2XnDEtmuHU5eIjFt0/J6n7+
bHfS3+nsXU2/a5QQv65Orff69Gx3sSCxfe3VF19+6fmlCz25JuWqrqP63X33
XR998A7pdfLE4Vw+ZmTff/3rXz982/CRhx/s3qWVon36Jy+SZc3CvYc3tJ7V
o9XMbnGH1nee14cWNu+1LxE7khhJDVLCfrFABLfddluw/0zdX8KDEVlHre6m
7J5qRoavuFigezLa+pD5mjngKy+/YF4W5PT777+XjgbvWK0P301P3qp5PClf
fuvNynVq1/y52Vd06Lp2almCR4m+iOPpO/XWPvzQg78N/VVRqPkxoyL9/+//
/q9T++aU2v9+ah99hMHOXfjjvPv2m5SwU8nMqWO4MvVkGjX45N5773nqycce
q/TIrh0hpfel2/Up7PoGAQDFB7rXICnQMvR9jfLB71kOB1rS11sXFne1jPrY
EjfXWnlIzZLVPf3fJlkvWzjprrv+Q//JKbcdP9Y6dk05KXmfhDhpwjCuSakZ
ZUlUmf7JP/F4pTer/veC5cDFAt1TNcpb27dpRgt7YlbL7WvqnhoRhceyo0f4
j67v3jzm4NpvJ7d1Xj40OW2Lon6Prq3IIwL1R6D3XTRvIi1Tj4WW3cY4G/8q
Utr+cZ33SbJ8YqJvr/a3XQv6IIrKdsnij7yERx95iNqp+W41OpLUj+Jy9fE8
k7Pn8/q1qeSLz+q0bP41LdDO6x06M0dJhlRIHRuDtSZFObBfZ9qxiLBl/DIu
Kjhx74b9u9b95z93vvrKC/TVf/i/t6kC9bJoLfVY6JBShYVzJ9SoXsXgN8He
j1PMTwHdA3CTge6NdD/2c8uUHyzDPrCEj7O+HP6h9ad/f4tfP8uR1Vbvp4Rc
Lw8abAkbWyK6p3/d9O+aEkzKjv9XszoJffH8ibyKsjlaJbJ4ptKjD3MeLWDd
Uw5LfqEFyprltQrdUw+BrPdOjapyHZLvcL9RjT1a9Vw84HetM+9zZri5jOwr
UKylrJzel3f74J5QWlbXUUDpKnU5Vq2czS93R6+iDk9ORszwIb/S5mIwn2nc
sG6zHxpzkm6G7Zv96n/6EXceKMkVG6qP59jR/amE+lGphzbTwrxZ4wwOnc2j
xMyd6eY6qh913gb07UQLmnXMi5K7cMkHNsmFI4b1pMKN65dcLBjNuOOOO75u
Yj2BQm1SeZXXX23V8jv6Org3WLSPw59CUMxPAd0DcJOB7o103/UF63LmBotz
9etan9HCms671rcMqGFdK8qTQ6x9AOoMUNbPjK5bNN1T+kn/ouk/57EjUc89
+9S9994Tvm4xr9LUPfmrV482cgnpns/dky6p/vQpo+W1in/y53L30rtQ70Kx
G7M2TPt8/M89Fw04p3VCP35nyNZNPgLF2gO719P7DupvHWT2Xeol1M/si1ur
uHivf+8Ot99++/zZ7gofEXtj19Dm3pNHyYXurgMpaVWM89ObipPyihaofVog
gzf/sQm1Nm3ySL3jybqnhVNZcTYPnc2jxHTr7NTg84//7//+7+M679OCZh3z
oiTV0o4tmDNeLuSUn76UiwWneO6//97P6tWiZdpb+gj16n54zz13UwXK8Yv8
cfhTCIr5KaB7AG4y0L2R7knoXDJA0v3k7yx+fa0LlMsv6Xa9nMmOsJ7TFxRJ
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
2t13352YmEgH8NlnnxVn6idOnPj888+//fbbjzzyCGf3Z8+e/d///kdHlXVP
h1RuJyEh4csvvxw+fDi/JNfXr1+fNqHuQefOneWa0D0CgUA4XED3hcx0sqwd
df1l2FjLjBZWm68ZYX3p19eyfsz17J61ThUonXetbxlQw5rac3naOmuyL1g3
umi6/+mnn/gCufj4+FdffVVedeHCBfnl9u3b69aty8u1atXauXOnWEWHjo7q
Qw89dOnSJXpJmT71HKhL8Nhjj91zzz2jR49WvGlqauorr7zCy7169fL29qaF
48eP0yZyNegegUAgHC6g+0ICB1nPyIuXi7tYRS90v6KXhu4nf2ftBnDfYEm3
wvKcrdZT+YLjm4um+/nz57dt2/afguS9e/fuonzlypW333770KFDRQkdmeee
e+7ixYu0QF4+f/68WEWH8auvvhJaz8/Pzy2IkJCQ5s2bi+yejj8vL168uGXL
llxIdX755RdaCAsL++677+R9g+4RCATC4QK6L+RwkPXc/ZE11uXsCGvCfmS1
tQ8QNNhaMrGJhu6X9bAEOBfq3qd3YfnRdZah/7sOX9Fnv+7pw1LO/tlnn1Wt
WpWOiSgn3d95552//fabXHns2LFk/LfeekuY/dixY9RJeOmll/r370/HUK4c
ExPz4osvUsq/evVqLhk0aFClSpXeeeed999/f8+ePVxIx79OnTrvvfceNcun
Ff4pOLNQs2bNp59++pFHHqlevXpiYmKxfwERCAQCcTMCur8O6bvtYxa3L6yu
DxlqLTngaxlRyzKyjvWSPNL9QT/rJXx7Fhfqnszu3tDaExjX4IZz98cjr8NX
8tuve4709HT1XfMKfXNYLJZz586Jl3TokpKSFGfnDeLixYtZWVnq8oyMDDr4
JhtBIBAIRLkN6P4GsjdZDvpaNS1KcrZajm28oQIZXL4kLz30+nLJXaqHQCAQ
CEQJBnRfFFzrF56sl1nQwZrsQ/cIBAKBKH8B3ZcJ0D0CgUAgbmZA99A9AoFA
ICp8lB/d79u3Lzk5OT09PScnJy8vj8zON5ddKYhLly5duHDh3LlzZW5q6B6B
QCAQDhflR/d79+49fPgw6f7EiROkezI7+Z0sz65n3Z89e7bMTQ3dIxAIBMLh
opzoPjY2lnT//+2d209TWx7HX/wP1P9BHzQ+EEh802TCCPOgRoIYL/ESoz4Y
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
4ln+SfNA//RP//SfbP8i7tGfmZkJBAIzMgVkkm8ishH3ou/3+7OyslCDo9/e
3n7ixAnMrK6uvnTpkjjIvn37jEZjbm4uJhw6dEiv1+/fv98flvzgQtnZ2YWF
hXa7XTLg8/lgz0+pWsvHvTzrlzmZL3/ZKy0NJa1m2Sp9CzeeY9I//dM//a+b
fxH3yFalb+hFf5VuYmICcS/6OMiWLVtEH7G+bds2dK5cuXLnzh3xKHwAQO3/
5MmTM2fO3Lp1q6CgwGAwxPx6Hjb/HNbhw4e1Wq0YhDHYm6dUrWXiHrukrJeu
3cdcSqtZMqsZj2dpxzOf/umf/ul/Tf1LcY933YWIpPfhhVhyu92IeNFH9Y2+
mGwymbZv344O4v7u3btiAuK+oqJCHKq0tPTevXvI/VOnTn38+FH+RGLCvohy
c3PxqQAjSHzYW6RULaW4Hxsbk2e9dO0+1it6yes70ir/oCaeZZiolJfnf1up
Q//0T//0v87+Rdyjsg6GFQpLJHVQQR6PBxEvZmIzKysLoY+ORqM5efIkOrW1
tYWFhWJCTk6OxWLB4OjoaH5+/qtXrx4+fIiZN2/ejD6yyPojR4709vYKAzAG
e6n+9T+1tooZ9/Kst9vtP712L1eiyyqecaXjx7NUV3N8+qd/+qf/pPgXcY9s
jb8W84ZP4EubFy9erK6uRgcJjvdkdFD+Z2RkIOsxc+fOnRhBPy8vD+/qVVVV
ZWVlSPMbN25EHxlZX1RUNDk5KY3AGOx9o1St6LhXyvolca+k1SzhZM1J9K2A
/umf/ul/Tf1Lcf9bLInMlY8grFHOb9q0affu3XV1dRhB2Y5wR+W+Z88eHFBM
u3btWnZ2dmZmZnl5OTbv379fWVkpPiqcPn36/Pnzer0++ukeP34sfzop7v9N
qVpL4t5qtcbMevR/V76rXrKWreIS80ba+E7QKSken/RP//RP/0n3L91EV/yr
8Zih/0WmmIPIZZvNJu0Vgy6Xy+fziZGRkZEljxJncWMeU/7U4ia6XyhVSx73
S/J9Sf9/38xf9bJVWmKrWZKKS/WHB0da+qd/+qf/dfS/fHWfconqXulbBJQ6
JMX98lk/Hbl2T1EURa1A6/Av7VapZe63T6lACd0z/z+MjcAW
    "], {{0, 334}, {677, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 120.94335302806468`},
  ImageSizeRaw->{677, 334},
  PlotRange->{{0, 677}, {0, 334}}]], "Figure",
 Editable->True,
 CellFrame->True,
 CellMargins->{{0, 0}, {0, 4}},
 CellChangeTimes->{3.462459114231451*^9, 3.4729175392608643`*^9},
 Magnification->1.],

Cell["A notebook using the built-in Mathematica 7 stylesheet", "Figure Title",
 CellChangeTimes->{{3.462459247928555*^9, 3.462459323699892*^9}, {
  3.47291246512862*^9, 3.472912468816712*^9}},
 CellTags->"fStylesheet1"],

Cell[TextData[{
 "Once you have a stylesheet selected that is close to how you want your \
notebook to look, you can customize it by selecting the Format, Edit \
Stylesheet menu. This will launch a special stylesheet notebook, shown in ",
 ButtonBox["Figure 18-2",
  BaseStyle->"Hyperlink",
  ButtonData->"fstylesheetEdit1"],
 ". To modify an existing style, use the \[OpenCurlyDoubleQuote]Choose a \
style\[CloseCurlyDoubleQuote] drop-down menu. This will add a cell to the \
notebook t",
 StyleBox["hat is styled in the selected style. By altering the style \
elements of this cell (using the Format menu), you update the stylesheet so \
this style now is associated with the style of the cell. Think of this as \
styling by example, which is a bit different than how stylesheets work in \
most word processors and certainly different than Cascading Style Sheets (",
  FontTracking->"Plain"],
 StyleBox["CSS", "Techical Italic",
  FontTracking->"Plain"],
 StyleBox[") used in web pages, but simple enough. You can also add a new \
style. In ",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["Figure 18-2",
  BaseStyle->"Hyperlink",
  ButtonData->"fstylesheetEdit1"],
  FontTracking->"Plain"],
 StyleBox[", I add a style called ",
  FontTracking->"Plain"],
 StyleBox["Warning", "Literal",
  FontTracking->"Plain"],
 StyleBox[" and give it a red font with gray background. New styles are added \
by typing their names in the \[OpenCurlyDoubleQuote]Enter a style\
\[CloseCurlyDoubleQuote] edit box and hitting Enter. ",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.46246176538731*^9, 3.4624618900315123`*^9}, {
   3.462462001282968*^9, 3.462462088983368*^9}, {3.462463572412158*^9, 
   3.462463862654076*^9}, {3.462463919864539*^9, 3.462463969674736*^9}, 
   3.462464014836524*^9, {3.467933445724277*^9, 3.467933461748909*^9}, {
   3.468014208943479*^9, 3.468014230724728*^9}, {3.4729124911911793`*^9, 
   3.472912658141473*^9}, {3.4729129630624523`*^9, 3.472912968149036*^9}, {
   3.4764617876951733`*^9, 3.476461809173373*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8Ttcbx9v/v1P3/Hei1b21qlpUKUqtUtrae++t9h6xNyEiCBkSYktC
RDZiBAkiYiQSiSQiiBHx/+Y9cnrdd3gjbwQ9z+f3yefcc88ez+957j33Tb3u
rd5p9dBDD/33oYce/uKhh/7zQk44KnJ3ZGTkvn379ihRokSJEiW3CuwAR0RH
R0dFRcXFxe3duzdciRIlSpQoMS8wBZRx6NChnUoeRPHLixR2Y5UoUXIfyP79
+/E4dpiSsLCwoKCgrVu3rnZ3t+vQoe9PP/UsUwb0rfATl0RyiwQks5x9nbur
U8f2cyuVn1vmmxxUKs8lkVZmX7natY9d+9/7/FSzR+ka3b+t16dCnwntibSc
XQmyxiApKSmXtZKZmZ0rV5HLlwlAGYXdWCVKlNwHsmvXLnyNUFMSEBDg7e09
f+Sozp9+1v+77+xq1bbv0MG+fQe7mrX6fftd508/5RYJSGYhu8uYEXNLfbS4
0rerm9Tx6dfVt3+31U1/c/q5NJHcum12u3kjf+rwcY1+pVpMqd7HsXlPhyZN
J1ap3uerCh0+5paF7Ermz58/fvz4lORkQRkZO/ZIysgca3c5I+OqkFzKsEml
wcHBgYGBNinKsnh6em7fvv0uVJQf8ff39/LyCgkJKeyG6IU5YqasTEz7786c
KrlfZM+ePcGmxNfXd/6oUV3f/2Dcl1971qp1cNbsC8ePZ8TEHJg23aN6jXFf
luQWCUhmLrvL2BH23xTz/PWTHX1/Oe458ULi4Ytnjp7wmrqzX3XPGp9wiwQW
sk+YM6JcqxK1hn7V2bGmc+D042ejouLD5/oMa2NfqcaQL8q2KkECc9mVINLL
gCUCNq29OmJ45sWL1zeEZpVtfTk9/eK5c/vdXC/GxWVlZUEZurwo5MmTJzdo
0KBjx46zZs2yssbevXsXL17cysTMXf9cGTNmzOLFi42bYSz29vbFihUrUaLE
559/vmTJEmjRcvqJEyc6Ojoax1MX9W7evNnK1uZVOnXq9OqrrzIaHTp0uIPs
CxcuHDdunDZm0KBB69evt74EZ2fn0aNHm7xVsmTJVq1aWVkOU/PMM89YTsMg
t2nT5s8//6TNGHLWN1JJQcu2bds2bdo0bdq0Ll26tG/fvqNFIQHJSEwWMpor
E0cj0JR4urj0/vzLqZ9+6lOyVMTPVU707J3i5p7i4nq8W/eIipV9Sn7DLRKQ
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
eP7Vcdjo0aNhjcTERBt6GcWKvxMReVgXyc4t+fU31heyws2DTZrXqrt277lu
o7c25tK1bAuXxiBBqzbtAkJ26OIXLl7i4LTUmjag4ky6IdajWYtW0cdP5XMW
RE8xfdu062B8F835+RdfWsgIp1hJGQcPH4UOtDF9+g3YvGUbCjz5XEbRYsXl
Yjh6Im72PPvbttlCs80Ba2Gc3SQC1X6tUbRoMYiGsJPzCtqmK9ma2dEuku9/
KAv7BO8If+/9DzD+RaSzi/uuvft1ufr/Pch15aq8ThON0VGGHL18LgAFBcsw
SRmzZ62oUM313Upb3vsj6IMOu77qt6/8qMgaU6MbzIppNC+m/vA1Lbr0mzdv
XnR0tA0po/g77+6POhIYurP0d2UmT5vxxZdfYaJDGR98+BHeB5v6wKFokrl7
eo0eN2HQ0OFCP/To1efjTz7d4L0Faw0LE1O/Y+euew8eatehk5vHal1pZEeB
z5m/gO0mdIUAlEH6suXKE+DS02sdu5taDh87QQMmTZ0+dcYsyEhbu8yL2qEN
FPvJp59RHYqCemkD6dF19Rv8CZXgK02bObvfgIGoXKxNakG9s8fJLuKp6I03
3pwyfebhmOM0A911Nv0CdENRw0aOTruQSZvr/l5/4OChdJBcqFMM185du0uO
CArbhTK3mzyVvsthOZWYrC2ETtEeHAFYmObRZaqWHdH2FM2PCiUjBdb+rS5D
jTrC5peUse/gIWzjRo2b7o44qMtYo1btnr37/tWwMbm0o0Eu320B+AtY3dzC
kv+5SlVGRjaAKhgx1gDW8relv9OuDWaW8hs3aVbx58oY2NpZ0E6WbPYW/0DW
Aw1r0rS5oDCq27F7n7bZRJKSSAJ0k+lgjaH2aaqYd8r3Wrdx+qw5cnaOnYx/
/4MPmZoZs+fiDMacjGeyGE+8VG0zMnMpg4no3be/7AWFQx/4lavWrKdG+pup
oQxtvLZkkVe3kqEM5peFxCW3tKNX6CpF4cGGMWVs3bq1XXuXd8puKlFv+/vt
d3zRZ2+5UVF1psc2dYjr4JzU3e1sD5fExgPmDB482N/f3+aUQeCtt95mw85b
4MBuJfBuiffYa6ga9mPorj2oTTQGVigbZ/CwEWwx8YgYjU1eVCWbN9OgIpa7
rtSVRsryFX4iEr29fpOPrJqtt8zF7dzFy+zKvQei0M+nk1PZnlSKcv6p0s+U
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
WPSOKQ8Pj/8HZ1M6+g==
    "], {{0, 302}, {529, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 164.88051039697183`},
  ImageSizeRaw->{529, 302},
  PlotRange->{{0, 529}, {0, 302}}]], "Figure",
 Editable->True,
 CellFrame->True,
 CellChangeTimes->{3.4624597706049023`*^9, 3.4624598295918617`*^9},
 Magnification->0.8400000000000001],

Cell["\<\
Editing a stylesheet to modify existing styles or add new styles\
\>", "Figure Title",
 CellChangeTimes->{{3.462459720287792*^9, 3.462459720794026*^9}, {
  3.4624599388919783`*^9, 3.462459964666959*^9}, {3.472912690091818*^9, 
  3.472912691426427*^9}},
 CellTags->"fstylesheetEdit1"],

Cell["Discussion", "Heading2", "TopOfPage"],

Cell[TextData[{
 StyleBox["Often when creating a new style you want to base it on an existing \
style. This inheritance of style attributes is a powerful capab",
  FontTracking->"Plain"],
 StyleBox["i",
  FontTracking->"SemiCondensed"],
 StyleBox["lity because it reduces the effort ",
  FontTracking->"Plain"],
 StyleBox["for speci",
  FontTracking->"SemiCondensed"],
 StyleBox["fying a style and allows changes to the base s",
  FontTracking->"Plain"],
 StyleBox["tyle to automatically propagate to the de",
  FontTracking->"Extended"],
 StyleBox["rived. Creating derived styles involves getting your hands a bit \
dirty since you need to drill down into the underlying syntax of the \
stylesheet cells. As an example, imagine you want to create a base style ",
  FontTracking->"Plain"],
 StyleBox["called ",
  FontTracking->"SemiCondensed"],
 StyleBox["Note", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" and a derived style called ",
  FontTracking->"SemiCondensed"],
 StyleBox["Warn", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox["ing", "Literal",
  FontTracking->"Plain"],
 StyleBox[". The intent is to use ",
  FontTracking->"Plain"],
 StyleBox["Note", "Literal",
  FontTracking->"Plain"],
 StyleBox[" to provide some extra parenthetical information. ",
  FontTracking->"Plain"],
 StyleBox["Warning", "Literal",
  FontTracking->"Plain"],
 StyleBox[" should derive from ",
  FontTracking->"Plain"],
 StyleBox["Note", "Literal",
  FontTracking->"Plain"],
 StyleBox[", but have a red font to emphasize that the extra information is \
cautionary.",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{
  3.462464073462531*^9, {3.4624830132367773`*^9, 3.462483148712812*^9}, {
   3.462483244270236*^9, 3.462483484174346*^9}, {3.4679334641481247`*^9, 
   3.467933494173438*^9}, {3.4680142529260283`*^9, 3.4680142999354973`*^9}, {
   3.4729128072411203`*^9, 3.472912851066511*^9}, {3.472923259977865*^9, 
   3.472923260188321*^9}, {3.472923679156692*^9, 3.472923682474887*^9}, {
   3.472924313215838*^9, 3.472924316806229*^9}}],

Cell[TextData[{
 "When you select a cell (or cells) in a stylesheet and use Ctrl-Shift-E (or \
Command-Shift-E on Mac) you convert the cell to expression form, as shown in ",
 ButtonBox["Figure 18-3",
  BaseStyle->"Hyperlink",
  ButtonData->"fStyleshhetEdit2"],
 ". Here I show two cells that have been changed to expression form. The \
first cell defines the general properties I want to have for a note, \
including a special margin, bold font, and gray background. I\
\[CloseCurlyQuote]ll discuss ",
 StyleBox["MenuPosition", "Literal"],
 " later."
}], "Text",
 CellChangeTimes->{{3.462483918072939*^9, 3.462484042260578*^9}, {
   3.4624841787156353`*^9, 3.462484382138254*^9}, {3.462867441698*^9, 
   3.462867442005*^9}, {3.4679335017251263`*^9, 3.467933505708941*^9}, {
   3.472912862721231*^9, 3.472912909198782*^9}, {3.472912940428508*^9, 
   3.472912953860276*^9}, {3.472912999797913*^9, 3.4729130061576777`*^9}, 
   3.472914826306869*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
hnKXLl2Ky4RBIsxh5syZYH+hBuwPi05erWDAcN+fFYpo7F4Ibxy70ajP3Llz
ETA0NERyGACenp5DhgyZPXs2KwuVHDBgANt6d9CgQWB/2T2sXlCBRYsWIQc0
O0wjxZFJSJpd1q9fj77qJVmkykXmWj6u9/b2ZkuP5OVpK5ILg4Z4DR6SP2ZM
+eTJd6ZPr5w/v3LlisqVKysXLbozc2b5X3/mjx/vPeSXCz/9Ik4LsVvRN+rU
b3k200s8FpQHLq8MX10ZvQ64E7G6PGg5lHk2MxAB0WQmn7d//A6radphS85F
LbsYs9I0bq1l4kbLxA2mccoGt1bqRi3TDlusajVtrvpYmclJnh0BU8Cyhe9f
kppaeli7uufy0oEHHQ+GO16N09rrdXbEXvftVuUrXStj48rLyx0l/rtQ8HQc
PXr0XYkcOnQIGjxcYHx4gnhkcLh//34QB7xFhL/99tt169YhwBiH5QDPFFwM
HgRJgU3AcVJFXLx4ERQJi12ohMv5888/y0uOOnTu3Hnt2rXs7zPgOIP9WUIw
6ejRo/FEgwe3bNkC75vrwf4IgGFRHNqE1Z/NbyB/hL/44ouxY8e6uLggfzc3
N7D/ggUL2OXAoXaUzEvYSl4cHD58GAFYC3D81dTUEJ/lJiWM/dE4iMDeAsBV
Z38FgsbEob6+Pqvb5MmTYUJAL5XDjBkzvvzyS6EG7I/KK6jV1q1bcdXsX0WE
90LqxgnbBL8dOnQ4f/78mTNn4Lb37NkTStQNecIWcpD8ZYm6ujrYH/obN24c
e1DYVUBgSs2aNQu3CUYghlNxg5CQtKhs2LDB3d09tJGCJEgoL09rkRhNn+ky
fGTxtOl3Fi6sXLu2aufOKg2NWuzZU7lhw50lS4pnznL9dZTxjFnitLWydWyY
1u9F7gvKg1eB9KsSNlelbK9FwhYcloeswqkw7d8RTWbqzdrzt5tOvxC1yjhu
7bXETfYpqm7paq7panbJKhYJG41ilc9HrdxmOn2T9jzZpZM8SwJP08vJ2XLu
/LCJE8o/7VP57c64te72J2JsV7rYfDzb4r1fs7otqd62ryIuDlQiTg5ycXV1
hTf30ksvgcigQfjvv/9mZ0ENMAxAGfCmYQaAW6GEww7GYRHgsMNP7y4R0AqI
Rip/AwMDsMzx48eFyi5dukyfPl1B8k6dOoHXWBj+Js6yMBgN/iwLg/3hBXO9
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
nnl4lrm7O2dmd+eds2UOqT8lSpQoUaJUcNK/d/7d4hz9kvdmvfOfPMYh0dot
bfn5zC3XtHvC+Xf+I0j9KVGiRIkSpYKT/lX/43EH/DQOV5JtfVJ+dkic45a2
4nzm9uAs3XdJoNl+KFGiRIkSpQKV/lX/E/GH/JMd/VLtfFMn7Euc5/50DT/X
34EIrVsi5xxF6k+JEiVKlCgVnPTvc3/3OOfAlIP+WVF+Ju1PXOCetvZipv1N
rXO01iOJovxQokSJEiVKBSr9q/4n4w8HpjgHpjpcSZ3mpPn91NMNl7V7b2mP
RGfF+Dv2gNSfEiVKlChRes+SMNcfUtqLf8Q//TvP/8n4Q4EphwJS9vmlzjic
vOx0+mY/7b4w7bEY7enH3PEETqr+BEEQBEHkT5hSC3P9rdsYuE02wq9nVow/
p4CsO/9TnZIWe6ZvvKLdG6Z1icny/WXv/BMEQRAEkT9hSp3+tzYp9SXS/QdP
N2+/LqP+8P0Dkh2vJO/mn/sv9Hi6zldr/5f2UKTWI5lziSb1JwiCIIj3BqbU
yU9eMd9/y47ra9Zflaq/zfEs39/RL8X+cupEx6TfTqSt5t/5d4rUuj6U/+KP
IAiCIIj8ic4LAEoRfte4PXDyT3a4orH3Tf55b8Ict7RVPtptQdr997RH4rPG
AKT+BEEQBPG+oFL9bVwfOPolO2TN9ZcyZneCtWva8gvaLYHavXf4uf7ukfoT
BEEQxHuDWvXn5/m389FsPacZuStu+uHUJV6vN17V2odlzfO/+xapP0EQBEG8
N6hU//UuD3b7auwuajZ5a4btip92+MmiM5k2/todN7X7orR2YaT+BEEQBPHe
oFL91x6O3uur2XFBs9EradCO+IlOqfNOvVrlp912U7v7ftZfUv+85/Xr18Lf
glQWQRAE8bZRe+f/6IO9lzX2vpot55KH74qf6vx40ZnX6/y1tre0jg+09ndy
ov6pqanPnz/XarV61rlz5465ufnAgQO9vb31Z+onKSkpIyMjPT1dyPn777/V
bJiDslSi0gA9fPHFFykpKVWqVIGRb9sAI8siCIIg8hUGPffffVGz/ULySLs4
y6OPl3pnbgrQ2t/Keu6/765h6u/r62tmZta5c+fWrVtXqFABRSitCWczPDx8
xowZmzZt0p/JqF+/PnZ7/vx5IefixYtDhgzp378/yipVqhTL/Oeffxo0aKCm
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
Z8+epaen469Go3nn1lKiRIkSJUqUjE9nz5719PT09/fHMMDb2xv/Xrp0KSAg
ICgo6ObNmxgY3Lt3LzIyEn9DQ0NvEQRBELnBlnzPZaJAE20IKTyPHj1if4WF
lH9/ePP3kehfw1Hcv4HrGLx/sp/sJ/vJ/jyxn6l/RkbG63wJDIN5gUSBBprO
qUb92S6+OsSIt/3vOilv/rKfDLkqRVc9vwuZdQy9Wsl+sp/sJ/vfnv1M/Z88
efKM5ynPszc8FfHsvzyVQ3YFPevrWYHlwDCYd5Mo0Bik/vqvLKWrTA1qrm5D
11F31ZP9ZD/ZT/bntf1M/WNjY+Pi4vA3/r/EKXD37l3xv1gzJCREWD+WJzw8
PDIyUnZX9+7dw/psQ2kp4syYmBiYd48o0KhUf5xUgvobejWpuYqV8g3dNrcg
+8l+sp/sf3v2M/V/+PBhkjp2797drFmzsmXLCjlBQUHI+fHHHzt27Ai5Z5mz
Z8/Gv999952trS3+RRETJkz47bff2K8WFhaXL19WUxwMw7YPiAKNGvWH9O/Y
sUO48/9I4S6ZoVdEbvUAhl6tZD/ZT/aT/e/Wfqb+0FlhZT37B6GhoXD8S5cu
LeRPmjTJwcEBP82fP3/Tpk1YiIqKatSoERbQsTdo0ADr9OjRA3/79+8Pp37v
3r3Lli2T2glgSXJysrhQjUbDzCMKMNmqP04kSD/OB9k7/0pXjdI6its+evP3
v8/O1FxNuWYD2U/2k/1kf57Yz9QfC2lpaU+ePEkT8USE+F8oONSfLT9+/LhF
ixbw0LHs4+MzatQorOni4jJ9+nS2k+7du4eHh/fs2RMrDBw4MCQkpF+/fo95
xDtndO3a1crKKiYmRjAgNTUV5j0mCjT61V8s/bJ3/sVnuNKVooQxV5DS+71q
9kn2k/1kP9n/bu1n6g+pVXrZT/pWXkJCAtSfLWPPZcqUYctQ+dq1a2Nh7ty5
y5cvZ1thPODg4GBvbz9u3LglS5YMHTo0NDRU9k0//NuNZ8iQIX5+fiwThsG8
50SBRo/64ydB+tlzf+lZbcwVZEy+mitdzfpkP9lP9pP9eW+/oP7ohNPfIHTL
6XIkJSVB8dkyfHMss5Xv3LlTp04dLED9V65cyVaA+u/bt4/tytbWds2aNRgG
jBkzJiwsTFwQW6H7G3r27IlBAnIwAIB5L4kCjZL6R0VFiaWfPfeXnuH/Pd3f
/FX+8kXNVWkoylfrv3+FBbKf7Cf7yf78YD9Tf/jdL3gyeJhwv1BAo9FA8dma
+LdFixYYA2Dh0qVLo0ePxoKbm5uVlRVboUePHhEREci8e/fu4MGDjx49un37
dqz5+++/S/fMpH/YsGFXr15lBsAwmPeuZx0g3i6y6i+W/piYGD3P/cUYepWp
yVfav5or15j9k/1kP9lP9r89+5n6Q2rVe2qP+Lv9wr/Tpk1zcXHBAgQdXTQW
kpKSmjVrBunHmg0bNkQOls3NzdHJOzs779y5E+K+cOFC6Z4h/bNnz05MTBRy
YBjM+4co0EjVX0n6s/X9jbkicmsdQ3sGsp/sJ/vJ/ry3X1D/V3IwCRbnQLvh
7BcuXLh169bu7u7IgVMPrYdf36FDB+ycrTZv3ryuXbt+9913Dg4O+HfDhg37
9+9nI4exY8dOnDgxJCREWpydnZ24OEH9M4kCjY76379/X1b6sWzQc39Dr2LF
K+7Rm7/q7uYpocZOsp/sJ/vJ/ryxX5jpl4VWlx0D/C1CNhMyHRkZKfzKMuPj
41NTU1nO7du3dbZit3xl9ykums30+zdRoBGrv47c6yxn+f5GXwVKV4QxV6ji
lfufjd/8JfvJfrKf7H/X9uv3/d85zPdXegOBKBgI6q9f+tnyuwiERRAEUQDJ
gyB9RqInRgBRADBonn8MA7Zt24azYtOmTevXr7exsVm9evWqVatWrFjx559/
Ll26dPHixX/88cfvv/++gGf+/Pnz5s377bff5vLM4ZlNEARRcLGc9Z809Ver
Lt1Gi3PMzc179OgxZcoUKx5LS8uJEydOmzZt+vTp+FfYT7169fr37/9VzSaj
R48eafFToYqmDb7vNnCYRaHKTWq07IKVZ8yYMWD46ELffPd9z0GzZs2aOOXX
Qt+2qNay+5RfZ3xUpWWzHwZYz5r1WY02Ndv0xN7a9xmGX4f+9AuWTTv0+1+V
lpZW1j8OH4vMOma9B4wYi610KvLTz5Pwa6n67fG3dY9BLPOXydPwb5seg3oO
GoWFzv2HI7PvsDFYbvrDAP07FBg/aRpbDctjJ0zBslmvIbIWol5YYcZMq5/G
Typdv8OXddqJbZg+wxILjTv1V9pnbh7Xt894ZfRsZWltjTTDyupXS6tpM62m
zLCcPH3mJD5NxvIMyynInGk11dJ6mtWsX61nT581B2nm3HmWv823mrdg1oJF
cxb98dsfS+YtXrZgyZ+Lli3/Y8XqpavX/mmzfsW6jSs3bF6zaeu6rTv+D/kU
42Q=
    "], {{0, 368}, {682, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 182.5117302052767},
  ImageSizeRaw->{682, 368},
  PlotRange->{{0, 682}, {0, 368}}]], "Figure",
 Editable->True,
 CellFrame->True],

Cell["Editing style option in expression form", "Figure Title",
 CellChangeTimes->{{3.462867763144*^9, 3.462867803591*^9}, {
  3.472913016132793*^9, 3.472913022402274*^9}},
 CellTags->"fStyleshhetEdit2"],

Cell[TextData[{
 StyleBox["For now, consider the second style cell. Note in particular the \
expression for ",
  FontTracking->"Plain"],
 StyleBox["StyleData", "Literal",
  FontTracking->"Plain"],
 StyleBox[". Here, in addition to the style\[CloseCurlyQuote]s name, there is \
a rule ",
  FontTracking->"Plain"],
 StyleBox["StyleDefinitions", "Literal",
  FontTracking->"Plain"],
 StyleBox[", which in",
  FontTracking->"SemiCondensed"],
 StyleBox["dicates the base style is ",
  FontTracking->"Plain"],
 StyleBox["\"Note\"", "Literal",
  FontTracking->"Plain"],
 StyleBox[". This is what you must type by hand to link a new style to its \
base since there is presently no other way to establish this relationship. \
Once the relationship is established, the ",
  FontTracking->"Plain"],
 StyleBox["Warning", "Literal",
  FontTracking->"Plain"],
 StyleBox[" style will inherit all the attributes of ",
  FontTracking->"Plain"],
 StyleBox["Note", "Literal",
  FontTracking->"Plain"],
 StyleBox[" but will be able to override or augment them. Here you can see \
that I augment ",
  FontTracking->"Plain"],
 StyleBox["Warning", "Literal",
  FontTracking->"Plain"],
 StyleBox[" to use a red font. Once the inheritance is defined, you can \
revert the style cells back to their normal form (Ctrl-Shift-E again) since \
most other changes can be affected using the ",
  FontTracking->"Plain"],
 StyleBox["Format", "Literal",
  FontTracking->"Plain"],
 StyleBox[". ",
  FontTracking->"Plain"]
}], "Text",
 CellMargins->{{0, 0}, {2, -1}},
 CellChangeTimes->{{3.462484387769947*^9, 3.4624845636733503`*^9}, {
   3.462866785303*^9, 3.462866825197*^9}, {3.462867154656*^9, 
   3.462867415835*^9}, {3.462867459398*^9, 3.4628674722530003`*^9}, {
   3.467933508686329*^9, 3.467933512525872*^9}, {3.472913030368845*^9, 
   3.472913035536209*^9}, {3.472913075457671*^9, 3.472913117163924*^9}, 
   3.472914837757766*^9}],

Cell[TextData[{
 "When you create new styles, they are integrated into the frontend menus \
(Format, Style) as well as the window\[CloseCurlyQuote]s toolbar (assuming \
you show the toolbar; see Window, Show Toolbar). The position of the style \
within the choices is governed by the ",
 StyleBox["Menu\[DiscretionaryHyphen]Position", "Literal"],
 " option in the stylesheet cell (",
 ButtonBox["Figure 18-3",
  BaseStyle->"Hyperlink",
  ButtonData->"fStyleshhetEdit2"],
 "). You can set this value to whatever number you want, but a sensi",
 StyleBox["ble scheme is to use either 1 or 10000 (the default). If",
  FontTracking->"SemiCondensed"],
 " you choose 1, the style will sort alphabetically within all styles that \
have the value 1. If you choose 10000, the style will appear after all styles \
with position 1, but again, sorted alphabetically. This sets up two groups",
 StyleBox[", one for native styles (",
  FontTracking->"SemiCondensed"],
 StyleBox["MenuPosition", "Literal",
  FontTracking->"SemiCondensed"],
 "\[RightArrow]",
 StyleBox["1", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[")",
  FontTracking->"SemiCondensed"],
 " and the other for custom styles (",
 StyleBox["MenuPosition", "Literal"],
 "\[RightArrow]",
 StyleBox["10000", "Literal"],
 "). If you would like multiple groupings, use an intermediate value (like \
5000), but don\[CloseCurlyQuote]t attempt to assign a unique value to every \
style because this is ",
 StyleBox["not the intention of the option and will create",
  FontTracking->"SemiCondensed"],
 " maintenance headaches for your stylesheet."
}], "Text",
 CellChangeTimes->{{3.462867499322*^9, 3.4628677254300003`*^9}, {
   3.462868652811*^9, 3.462868652814*^9}, {3.4628687074230003`*^9, 
   3.462868948024*^9}, {3.462869126973*^9, 3.462869272775*^9}, {
   3.462869313317*^9, 3.462869316663*^9}, 3.468014375756236*^9, {
   3.4729131316788588`*^9, 3.472913189145362*^9}, 3.4729132417245703`*^9, {
   3.47291328062457*^9, 3.472913381322575*^9}, 3.472914686925497*^9, {
   3.472914841705283*^9, 3.472914845832919*^9}, {3.474387667395885*^9, 
   3.47438766880274*^9}}],

Cell[TextData[{
 "There are a few style settings that are tricky to set up. One in particular \
is a num",
 StyleBox["bered style for a heading. Here you typically desire a series of \
headings and subheadings with a hierarchical numbering system. The ",
  FontTracking->"Plain"],
 StyleBox["NaturalColor", "Literal",
  FontTracking->"Plain"],
 StyleBox[" stylesheet has styles called ",
  FontTracking->"Plain"],
 StyleBox["ItemNumbered", "Literal",
  FontTracking->"Plain"],
 StyleBox[" and ",
  FontTracking->"Plain"],
 StyleBox["SubitemNumbered", "Literal",
  FontTracking->"Plain"],
 StyleBox[", so let\[CloseCurlyQuote]s look at these styles in expression \
form (",
  FontTracking->"Plain"],
 StyleBox[ButtonBox["Figure 18-4",
  BaseStyle->"Hyperlink",
  ButtonData->"fNumberedStyle"],
  FontTracking->"Plain"],
 StyleBox[").",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.4630681110504*^9, 3.4630682584704*^9}, {
   3.4630759513634*^9, 3.4630759885864*^9}, {3.4630761558554*^9, 
   3.4630762651884003`*^9}, {3.4630884886284*^9, 3.4630884940304003`*^9}, 
   3.4630892007854*^9, {3.4630964508764*^9, 3.4630964508764*^9}, {
   3.4679335167091503`*^9, 3.467933519173332*^9}, {3.472913387979067*^9, 
   3.472913432059758*^9}, 3.4729146880017633`*^9, 3.4729148492999153`*^9, {
   3.474224201631568*^9, 3.474224203484941*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JP82LpNhkalIJeIeba/wFRpnszAeCQQCQRAEQaNWY/eZqObJF+ksDHsgqoFA
8vLyQCAQBEEQNFIauwTC5lwOHjz43HPPnbCYhbF6KjsIBIIgCIJGUGOXQMKK
JxAKIQYCYRACAoEgCIIgyC3ZEMj27dt5Alm9enVNTc2sEVW6qrS0NJ/Pl5SU
lJiYmJCQMM2oy6dPn5aQMJ0cSZw5PSlpenLyDF9KAnGqLyEtdSYMw2PO5I/X
50tISZmRnDRtZsJlCTMumz79B5df/m+XX/Zvl6m+XPH3p027jPzhJyTMSEyc
mZKc7POlpKWl0vuGk7sLubekpRKRG4wvhSiZWFFSUrKmJGU7SarERPl+7eSU
ZKNS6L+UFPMhNcmkZIuUuJhpMD1CKh9Vil4KtsfnS1WllVIoqVY6aYQpfBaT
aCWIuVBzKsstrS5TbOZo7VMXipHKlyKNFYOVNiVUsSlaRXPn0zNpW2vtrZ3L
IjH+ymU3heVVaF0aOY06LRR9KG925Q5Frl9zYgBZvRkumdD1Kb8kbGS+NtLS
0539ybig5ubmjRs31nJiBPLSSy/l6SIEsmLFCgIhHSZtjkTtMWiTrg0bNqxf
v/6FF154/vnn165dS3K1RtPa51W9+OIL69e/SIJs2PDipo0vtrev29y+vmPz
+s6ODZ2dcm/p3HgxvGVT1yiwk6xKaqnD6I4OpVZlJhUuNWkLzpvMfkHqTRuj
8PMbiTc49NoNBq/nvSbkDWtJ5KQspIqUyuxq7+bdTb25J+SOnp6OXt69nX0G
9zFvoe43uktmErKzt6eTpEKSJvkhNa/UMKmuKGtMbqtGCWdT42qNzhrUadNQ
04ZYt27Niy88t3bNs2tW//fq555Z9exTxM9S//fTxKtWPbNmzao1a54j9wb1
PrCO3C7ILY7cNxzcXDZu3LBxgypyh1m/TtOLJpGd69etVwNuZJGTu5v0pkdu
kaa7ZqdEphtrJPdWIRFZ7Lq2aFI2+XRNt2i9RvQKWSeI1AGtCVodL8pqSQ+w
jlZYOGkxr+eCbpBro1rras0rla9ubdBbjjUfPZ1uhGLS2ou02CbW6FoEYhJy
rd9gzK+WXSFuerGx2CWxhKKRFVPLuWarrFhXIl+H6w2nqD/5k7lCqwVQW3+z
ej1pl0yXom5VPRbqtVBfOJEU/+M//sNMIAsXLlz53AvLHmrjIcRKOTItstZC
W2XLlJWVtUBVZmbmvHnz5syZ87Of/ewnP/nJ7Nmzr7nmmmuvvfa66667/vrZ
N9zwY+KbbvrZnDk33zrnxnlzb86cf3N21i9yFt6au+jW/NzbCvPnqp5ndlHB
7ZG6uHB+pPYXZY4GFxNb5LCIuOD2wgJJFRXkzy3II76N1KTuW/NyiOfkLjL4
lpyFxL9YlG32zxdmEd+cvcDsm7IyVS9QnXkj9YL5xD+TOvN2K/90PvE8s3/C
+3biuZrn3XaD7h/PvVXwbbfOvm2OYrJNQpKskrKTuiopXlBSnBXwKw6WZAdL
FhKXBhaWBheVKc4pLyXOLS/LrVCcV1GeV1meT1xVUaC4sqC6slBxleKaqiLF
1cXEtQbXFNfV+A0m+0l4EltpYBFpU9I0pNpJxao1Jq+u6Mwawt6k+ThL2pfk
TW13pWW1NhKbQ+Ybbp+rWGmFObNv+cV1N9949Y+vv+L6a2dd86O0H16Z/MMr
kq9QfeUVKVf8u++qq9Kvv+6q2bN/9NOf/vjnN980Z84v5s2bO3/+fHLryLKR
fnMhIeffrmgu1W2qbr3t1luVn/q2skXuQiQYuR1lZWeRu11uXi65Sebn5xcU
FhYUkB+CihQV03/FViripZ1YEEYkhDQpLULlhyEVvyZlUwulpcQSY3d7cq8m
915SMUqtkHrU60PdoNtz6e+36YdMoiG16pw7bx6tN03zLMWCzJ/P2kTbzlS0
wCiyizafHl7fUn7Rd9MTaZNnay2vxCaeooZjCWXqYnHPN2ae5o1FTmLWO60s
rc/KFPNmKLqhsJyELPGRhCLSopNUpyFaoeb1PIROUoMp1zPJvdoRkwuAXAnk
uiCXUElJSSAQCAaDparKdJVzquBUqatKVLVJNZwIfjT+7g+EQEjPrlx15TW/
Xv3inXfeGRZC3CUQKYRYEcj111//ox/9iEHI7NnXmwkkSyGQOSKBSCAkCgIp
KiS+1AhE4xC1gA4IRIMQE4HMoQRihpCFOoFYQsgCHULEDs6KQ2wgJNMBhMyf
JyMQKwi5VYEQEjkpCCl7EYWQEIFkawQSWMRBSK4OIQqBUAjRCMQSQoocEUiN
n7AKiYHEH/Bnk6uRtAXJGKlDdwnEOYSQhrPhENboWTqEOCEQCiHeEgh3e8nU
b9fz5s6bK9VtygFynEZL7lfkdkfxo9AIGP5Ql6+qxCg//ec3y0wlEklRRhKZ
X0ylhNtmGFLEUQzhkHwVRUjR6A2ZVIxVv2no1MKGsehtQ31tqMcVen9tW22o
rAWmtjPwCPdLaFODD71PyeZO5rGG7jZfIVksRp4HWK5CcbMU9BO5PEpYIpMv
mjTjwrlswyxpHRqubYZYRtbRA5NCcFd1Ab2qeQgJSyA8hBg4xIZAHnzwwWuf
702oaL7hhhtaW1u/+93vNv3+v+783e8ZhEREIDYQEgWBMAjhCYTkkxDI1Vdf
zSDk+usVCLnxxp/ecsuNcxiBLCAd35ycRXPI/ZkjECmERM4hhZGPhIw0fkRA
IKaREB1C5uZzHCIdBslxMAyi9EcmDsliIyGZNzkhkDAjIU4IRIOQG2whRBsG
IZ439waSGVI6Ug/+ogUEQoRhkIAAIdowSKk4DFIRghCeQBiEGAlEgRAjgfDD
ICQhkg3SQKTmSfW6DiGOCcQwEiJCSNbNHHmSHN6oN1A4ApknEsjsK66/TkYg
VxACmRUdgWSJ93nD3VnoMPVfaJzkhkbugaTLJkBAO/eAoGBQuW1HLnJmIGAi
FoO0NMIFE0ML0knIJDoQQ7CK3uHJbZndgfXeztxDGntGcwCHsmkoq97BWXhJ
L2MInSWG1s6xSVQWuV13xl9xIupIi2avMFe18dLWq9ei1Vg2SLbVC1tFEPXa
jgVCbEZCePwofvIZ3x9f/Pa3v02SfuCBB0i6iT/9eeH/W1O2tqPswYfdnYtx
kUCuuuoqBiHXXadACDnyi1/8jECIQCAL5+SFI5DCi0Qgo2YkxIZAbCDETCCR
z8XYjoTwBGKYi4kUQiKdizFByG3yuRgSgOSNlFEZ12JzMdowSHaQEkgglrmY
ItlcjBxCyLkkWgI/xaNuLkYyHcPPxagNFzGB3DD7itkyArkyFgKxvl3b9JL0
o6Iy+lFYSG/RhvtzjCp1rKgoh+cdCZpQDlHGQ1QOoZMyNr1eFB2ojcJ+UHUu
6w5IKxAtlClpm4H8KOVFumGLH7aqDY3IMkEnYujlzQDbMBdTLsrJMIgZQqp/
9+R1a7sJfnznxzeSnp1E/uijj95zzz0k9e985zvXVDb6Hn925u6/wzAMwzAM
u+jpT7XPLK399re/feONNxLIaW5u/tOf/tTW1nbvvffW1dWRnd/97nf/6Z/+
6R//8R//14jqH3TFx8dPUTV58uSJJk2aNHHypEnkyJTJk6ZMmTR1KvHkeOL4
yf8Aw/AYNPnjJX/Cyt/ylImTJ0+YPGnCpEnfmjjxWxMnfGuC6onUE8khEoD8
4ZPAU+Ljp5K7Bb1pjOy9C4Igs+jfJmGPG264YdGiRWVlZQQ/CHj8f7Kp13g=

    "], {{0, 225}, {726, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 131.6136363636304},
  ImageSizeRaw->{726, 225},
  PlotRange->{{0, 726}, {0, 225}}]], "Figure",
 Editable->True,
 CellFrame->True],

Cell["\<\
Expression form for numbered styles does not reveal the numbering options\
\>", "Figure Title",
 CellChangeTimes->{{3.4630880509314003`*^9, 3.4630881235924*^9}, 
   3.472913439051518*^9, {3.4764622653648043`*^9, 3.476462266299881*^9}},
 CellTags->"fNumberedStyle"],

Cell[TextData[{
 StyleBox["Do you see anything that would indicate that these styles have \
some auto-num",
  FontTracking->"Wide"],
 StyleBox["ber",
  FontTracking->"Extended"],
 "ing capability? No? Me either. These settings are magical. You need to \
select the cell and invoke the options inspector. Let\[CloseCurlyQuote]s \
revert to normal cell form (important!) and use Ctrl-Shift-O to inspect \
options for ",
 StyleBox["ItemNumbered", "Literal"],
 ". ",
 ButtonBox["Figure 18-5",
  BaseStyle->"Hyperlink",
  ButtonData->"fNumberedOptions1"],
 " shows how the item counters are maintained and ",
 ButtonBox["Figure 18-6",
  BaseStyle->"Hyperlink",
  ButtonData->"fNumberedOptions2"],
 " shows how the displayed output is generated. These options are not visible \
in the stylesheet because they are inherited from the ",
 StyleBox["Default", "Literal"],
 " style",
 StyleBox["sheet. You can learn a great deal about",
  FontTracking->"SemiCondensed"],
 " ",
 StyleBox["Mathematica\[CloseCurlyQuote]s stylesheet capabilities by studying \
the ",
  FontTracking->"SemiCondensed"],
 StyleBox["Default", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" stylesheet, which is located",
  FontTracking->"SemiCondensed"],
 " in ",
 StyleBox["$InstallationDirectory <> \"/SystemFiles/FrontEnd/", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox["StyleSheets/Default.nb\"", "Literal",
  FontTracking->"Plain"],
 StyleBox[". ",
  FontTracking->"Plain"],
 StyleBox["De", "Literal",
  FontTracking->"Plain"],
 StyleBox["fault", "Literal"],
 " itself inherits from ",
 StyleBox["Core", "Literal"],
 ", so you should in",
 StyleBox["spect that as well. You should avoid chang",
  FontTracking->"SemiCondensed"],
 "ing ",
 StyleBox["either ",
  FontTracking->"Extended"],
 StyleBox["Core", "Literal",
  FontTracking->"Extended"],
 StyleBox[" or ",
  FontTracking->"Extended"],
 StyleBox["Default", "Literal",
  FontTracking->"Extended"],
 StyleBox["; rather, customize your own stylesheet based on these, as ex",
  FontTracking->"Extended"],
 "plained in the \[OpenCurlyDoubleQuote]Solution\[CloseCurlyDoubleQuote] \
section on page 728."
}], "Text",
 CellMargins->{{0, 0}, {2, 0}},
 CellChangeTimes->{{3.4630892103564*^9, 3.4630893275524*^9}, {
   3.4630896063724003`*^9, 3.4630896799114*^9}, {3.4630910134354*^9, 
   3.4630910765964003`*^9}, {3.4630965470524*^9, 3.4630967884304*^9}, {
   3.4630969740304003`*^9, 3.4630970515474*^9}, {3.4630970822813997`*^9, 
   3.4630971802194*^9}, 3.4630972186443996`*^9, 3.467933525463422*^9, {
   3.472913641677075*^9, 3.47291366210192*^9}, {3.472913695770794*^9, 
   3.472913761162574*^9}, {3.472914852554769*^9, 3.472914856076635*^9}, {
   3.472914995034667*^9, 3.4729149975320597`*^9}, {3.4729182259545727`*^9, 
   3.47291824149072*^9}, {3.4742242434076777`*^9, 3.474224260277026*^9}, {
   3.476462284896879*^9, 3.476462288283057*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd8FPeZ/6/8bP+Tu9frdxf77hJjO5e4G4O75dgEEEgI9d577733hlDv
Wq0qICEhEJIQkgAJJHoRVaJXO3H7JZfk7nc9ySXx/fJ/yndmZ1crIdsCfGQf
Poy+OzM7Ozu7O/Oe5/k+z9c5IfjZYCMjo0eMjL4VD3/yua1lz/zgB08//cxT
Tz+95Kmn5hIsffqZZ1iwPugHf//3f//DH4J++KMf4f9nnwU9+9xzrOeef/7h
kWTPztJzC3in8sp8iPBw/ehHfOjgGPLBlI/t/J+C0BKF7rrylxVudsmTs0R2
D15O56WfujdvyiCDDPrGiOxpvKY8TReUZ37Ap0FoPC3raZw+oyNcR9jTcxhv
Hc5W3//+97/3ve/9Hdnf/M3fPPHEE4+TfVcyaMNMWAQrwJqw/pNkS+a3J7Xs
LivPvY2v9sSvvwXe7e9r21d+L0/qty+9ka/w0ou7hUXZzmIcjIfkaMBzARJD
Q0Pj4+Pz8/NrampaW1uH9+4rr6oOj4yysbHp7e39/e9//1/fTPv9N8W+/lv5
nY5+B7of9lul7oH9Rq/ukd2LN3Dv7b4eIoP9j7YH/V29f7aAE9ddVliYLeLh
v0ef+aLb1/5sHpgt/Lr29a/Ii2JffPFFSEjIF4tkzc3Ni7WplvjwxdrUVzBf
y3Uw7d83HhQbB7eBCQkJKSkpJSUl6ta2sIjIzMzMn//851euXBkf39/QqGpU
NTXiVFeqpiaQ3GhSq0FgTc3NanWzupmtpaW1FdTa1tba1t7W3tHeQdq0STQ6
Otok0Tpa4uc2s1pALdBoa2/ftGXLlq6urq1bu7Z2b+3u3orTHlZ3D2hbz7be
bWC9vazubTBnWzcJFvX0CsGi3u3btbRjBwoatGhbL0uzHdg4vVA3vDrsxebN
m+EtwI7Be29obKyrb6ipq6uprYNpbX09CObUNShEM1F1ddW1tdU1NZXV1RWV
VRWVlWUVFWXl5aVlZRtLQaXFG0uKNhSTNhQUFRUUFuYVFOTlF+Tk5Wfn5GTl
5GRmZ2dmZWVkZqanp6elp6empaWkglKTQSkkbNPMtDRo06K0pJSUxKTk+MSk
2PiE2Pj42Li4mDiexsXExkaDYmKiQNHREVHR4RERYeERoWHhQSEhgUFBfgEB
vv7+Pr6+3r6+Xj6+1PDz9vPz9fOH+TDFOT4+sMjTy9vT28fDy9vD2xunJE9v
b08vLw+Qp6e7p6ebu7uru7uLm5uLm6uzq6ujszPI3tHJzsERprYODjb29rb2
DtY2tihbWytrGytqWNvawSJ7B0dHZxd4OmwKtgy7hPtwf+Xj5/el5esry1uv
fHzgKOHx8fCAd+fk4uLg5GTv4GCHR+Oryw62sHiyd3Q0SI/udtzu+gHBRuDj
hh8CfO7w6cMPBL4J8JPx8vGBL4wv/Nb8/eFnKMsfFBjICggKYsFPNTA4mAW/
XFnBoaGyQkBhYaxQUHg4KwwEv3pJ4ZGRsiKiomRFsqKjZcEZI4pPHQrBySSa
zyqxsTFK8QlnlmLj4uMTEkAJSUmJyclwskpGpSalpCYkpsSDEoQSEpJRiajE
xOSkZJgmxsfHx8XFRcOewL7BPofDCSyCp2ChZMHBwQFwHoMfmpcXnDngMNuT
WVtbW1hYWFpawtTGhk4wDg6urq4eHnj4+QTjB8efDD4NmMNTL9oOmIdk7pK5
wdmJpq5kLpI5kzk5OckNR/jcFWYvmZ2dndywVZiNZPJDa30Gi+CJsHF4FdgT
fi/8RgLIAiWDwwLTIMmCyYCdeMoGR085VVoYWThZmMLCtS2SDD6LSMmiFBZN
FiNZLHxPaBpHFk8GXw34oJOS4AOHrwZc01IzMjKysrKys7Nzc3Pz8/MLCuBq
ibZhw4Ziso2SlZCVzbJyySokqySrqqriKVu1ZDVktbW1PJWtTmG3b99esWLF
xx9/fG5eO3/+/DyL2D766KO8vLx/+Id/OD/LLpDNnj+XwaaaIgM+OXPyWs8m
0M1tm26RPty26SOY9rT/rLsN9El322egba3/Z1vrz7c1/0Nvy1z6RW/Lz3vb
Pgf1tH/W0/5pT/vHsJGe9g9RHbd7Om6SbvR0XO3u+OmRSa91JnBkhvcfODRz
qbZnx8tvGcPnDp9mbn4BfId/8YtfHJiYAI4C7GwA7AQ1kVQaqZrUrCZ1cxNz
JmBhS2tLS4vEmW2AiDhBvNzUsWnTJqC0LZ1bOrsAGnHa2akULILFm7ewpIeo
zfDEDlAHwipvpxOoExCzp2cbAWIvYuF2bBA3bt/Rt72vb0ffzr6dO3f0odHD
vu24aAfMF9qJgnV29vdraScI58uS19xBG4St0avsQJrt6QEEhZ0EcoY3DseB
jpW6kY8PcbiQmoV83kTEDke4HmC1oYEptAootKqqvBJUCb+GktKy4pKSDRs3
gjTwmZ+fm5cHv7FsIs8sIs80QZ7pMnbCGTspGQU/TcZOFqzA5Akn9riExLgE
gk8SnPYJO2OjomMio2MQOyOj4MQB2AlnGTgVBRB5+vghMsF10Jux05doCrET
r4nePgBOvsCcnl4a4AS5ezFzensweRJZwXnQleHT1RUQEk6ODnT5BvIE2do7
2tjZg4AzgTxt7OzgJMtzbPEaDRdoZ2e6MMjYqbz4Lppgm3PL/8tKwQxzioCW
2B7Q3UvmTzw+Tk5wiBwITr6OHIltvr5grwxS6i5HbCEfDR1V+GLDhw4fPd5V
MXbS7wu+P7PZUomXWmwpgaVgSwkvlWwZPj9b6qPKaL08qUWPJOnEwopjJSTI
iterxERkzqRkPH0RdqakpAryTJLIM56mBKIJKA15ApbI5MnMqTQGJA15wo0w
kSeQHuAZXPisrKyA1mAKD2EmACHQmsycMqdBgz8KfzIljrJ5S+Yl2WwudZMM
2nq5VIZSBlRHbXPQNvs5jFeGp/Nr8T06nSkRMpVIyQdnNkbqmJLkZYaUpwz8
SlNSpXIqQ6YOasYpTEZNtkQyZk4wYM60NLjupWdmZjJ2Ap4xdgJzMmqWKkwv
ZFZKNhsvZcLUwUsdwqxXWIPClOQ5Pw3ORscL2sbk+ctf/vKCPpuenla22eZa
86c//akqzO+TqePXOltYNzpbbnWBmj/sav6oq+mnnaqPSZ91qj4n/XzrXfS5
tOZn9MSfdapgIx92qm53qm92qm9sab6+pfkq6cPJcXdTkzt37qjIBg4eye8d
WLJkCXwhASQA6i5fuYIuu7p6OK61dQ0ar109uuxY9Q2NhKaNjcLh2axuaVE3
M3eiXxKYs4N8mwCKmwAmO8G6urq60UuJRr5KdlduxZnowOzuZgFV0pQednXB
M7cAsm7ZsmnzFvR24oa2MnfuQJLs20F/sEVI2Qfo2D+wc4AkYHInLKKl/biU
V+gf6O8fGBgYHBgUNjAo2tyAhbBC/wCtKeaIKaq/HzdIDlLYF9gl2LOOTZtb
29uBuptb2lpa21oQxYXbtkUIZ6pbkFFVEn/WoZuUybMasBN+FaXl5ej2LAbm
LBbMmZeXA8yZkwO3d5lZ2ejqzMiE2z349ZGHE3gyKT4xKT4hMR6RMjEunk7v
dBqH3yv8guPphE++zTjmTPZt4sUlKhrOGuERkXg9ErQZFhQSGgjAGRAEJyo4
9fqA0J/p44WuS5AP+jBR2OCZcEvtgc5MgCUPVzd3lKubswuApZuzqxtcTHkq
Gi6uTs4ujgRC9o588re1srKxtLKxsraxsLReb2VtYW2z3tLKgrydMBMpFFaz
Q18o+zydJZ+nD10bFh8+F5c8FwafvhJ8wvuCd8dwjmDz9YBz0eHTyQCfOrrr
QVsgeUoOT4BPD8mlr/MN13JsSvAZrIDPEG34DFGSpwSfuuSpgE+lV3O2P1OG
T72ezK9Ontoura9DnoA9Mj4xL8nkCdwFxxLJE27riDwB0myJPNl5KPsJ4fDD
arCyTGuyMYKyMX/KCCpTqA6Ceko2F4W6SuaiMB0KZXPUZw6zTF7fWdymezBI
s5MTTMdpqeOrlOk9Ypbp4KU8VT6c7c9U0qYOc8qmA5/8jVCSJ1gKGcAnkKde
n2dxcTF7OO8Kn/Pz51eGz9k+z7vy51wGuAhvUIc8ASNLyupc3MPnEawwrW2w
qcYgr5+dPHqpvR50tb3+Wnv9jY76mx31tzrqP+yo/2hT/U876j4mfdZR93lH
XW1KmrzBupS0n3fU1inmwNLPac1P6Sk/66j7kHSnve5me92N9rrrbXVX2+qu
tNVdbKv78MAetzU/AfJskqz99IxNXDJ8M+0djf/whz9gvJiZk4ATIZM5s6Gx
Hh82YAgeo+yMnOjtBOwk2mwHQ9/m5i2CEIE1wXoo8r19O3kd+9gPqXEqClzU
L+DJ7RQHhw30cKwctoVbApzcCRy4a9cQ/Iep0G624d3DwzTFB0O7xVRayqvA
0hHQyMjoyOgoTlEjw5JoKW1kNzwcHR7dMwyrje6BlXEFXITbHCRGhd1hLygA
c2fX1k506iIzd5I7V8vBizH6LcCo7e0d1KOgRa1GH2kD+T9ryP8Jv4Gyykr4
qWDMvbi4sBDhMze/IDsnNzMb4TMjMysD6JMcnujYTE2BkzWe0uPiMYwel0Ax
dP7dIo5COy4OT/jwy9bE1uEsjdcR9nMCfyJ8wlkGLk8hYeFwWgoA8gwMgvOu
Dzkz8eSJ/kwvOH95+vh4UmAdhIEn8nO6A3l6eBB5AnMieeIFFF127sii7oij
bpKrU/J2usI5FSjSzt7extbW2trG0hrJ09LK1gLbthZWiJ02wJy2drb2jnBJ
sEO/n5MDnkzdXeHC7AW75utH7qAguoHXueB+dSk8SIsmRfRTKaULiwWXOnIy
+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
1ehpILSzZ89tT/22kVF8z1kuZnX+LE2R6zDHi2oC9KU9ZpTYe464TjKpn+wZ
IEGcwp8ztL2z56TssGllbQFhMzPwH/9AY2amL9XIyFw1MXNxBgV2EWyG18Ep
rUcNqXkRV7l0+dLlK5evgF29clUYNOAxzAaD5Zcu4abg5WFXYJdg75hggYtP
kCFaHz8+VL76UfPqoSNHDx48BFA+vn//3r17h0dGB3cNwZ0J3B11dnW1t3cA
fMJnU4Zuz2KMtmdlp6ZnwJk2mdI8uXcLhbmSE5g84+PhagLXHQyyh8OtPfxA
4URB+emBQVj1yC+A6AXIk/yfgQyfePfpGxAEt7ne3kA1vp7knHF2cXdycoHb
YqBNB6pxZOfg5OCE1IfZQ+hp9OSkCWe6y4f7dTiPElJiWjoIXZ0WVhZWVust
Ldevt0T/p7WtFQCnLSanW9ni+RZIFVnUGk6vFmtNzeBEudpkzarVa1aZQMPU
xNTcdJ2FuYW1pQ3nFtEOOHMuhpwmQztDl2nRG0vyC+lcmu+P8/Mexdz5DkKO
ueu4Pe8pfC4ieT7c8LmI5Dnb8ynDp/T1pnur+Tp8Rs3u8KlDnnN2+NSNuSfq
aM4On7Ni7nOS56yw+/xuz/nIE3t7os+THZ5K8gQUkclTJ9rO/TwFeVKPHzhh
maOD0IxxzpzIk7p6IjfCR0C3tRhFJmrC8nLweQKtubli2JxC5OTBxK3Z2VIB
DqmmEXZJlxPbiVSdgDsplI6hICv0QRKrUk4QnBhtra1xh8ibuc4M6JGJ0xSA
cg3CI0Cm2VqkUTPTtQScSJbAlSarV682IVu1ejXcwqOtWrXqJyvRfvIT1MqV
sNKaNabrTNdZWlraWFmjTwFP7g5wEsdyFc4urtTBAJ2f8r28lKsVHCTzpj80
OJ+fEqzwPz4gV7K39GblpCqiUEwZYF+oH16HhEndS6krSZhOplIYgWcIS9l9
VO5RyhlkYfQfPmXqBxoPXzvs9pmRgZyWnZNHaUfAnyj4TwagmY/zcA7PQx7F
dXJZeXmULA8iV+kGjstT7J3/y2H6YmFF7EXdsGHDtWvX3jM23rlzJ6VEcUo+
umOV6Tl6DVbgDH5KosJndW3dCrcKk5MHU+QfDkY7MdPnM7LZ+CrPT0tLB1FG
SBaQb+/2HZnP/OWUqqrT+KXOd1/qeveFHuMXtr/3Qt97Lwy898Lu95/b88Fz
4yuem1jx3KEVzx1Z8dzRD5499v4PC60t5W3KBnNg/rEPfnj0/R8dev9HB9//
0cT7Pxp7/0d7fvzD4fd+uMv4RzuNn+t997lt7zy/9d3nO995fvM7L0zmpLz/
V/8fkid1l+W0rLcO33j88e/+LZDnf/0X+jkJOysqq2TyZIenkeTknA2fTJ79
/QPDwyP79u07cODAoUOHjx07Buh1eqzB+jGjuJ6zjHkXgdEuHW6xedSscfLi
ZcY2NmA4QrsrVy/vynrMKGUnLRBId5FBcUYmRmZCeZNXJLtKQKiBQ8GJ18iu
70o3MkofgsY1beN1rmrZNXoSrHn9+g2wmzdu3rp56/atW7fZbt2Ch7fgSN4A
3bgBtzmwLr867DbsFaDrhfMXzgl+Zp3ZW7P2UYuGvVNTJ0+eOnr02OEjRyYm
J8fGx0f37Nk1tLuvv7+nZ9vmzs6W1rZ6dHtWwh0U/GqQPNPS4UybRPmh8QlJ
sp8hEb+leEWIjomLiKQenkieYcEYagdiEYFajNkFQMMfzidUgzqQ+ZPK+ATA
KcHLC5AGKyORz9MNzpn29s62dtjnCE9OcF51dnHEDpaY2uOKyUQYaodzFYaH
8ESK50/MEqL8IAtLK/R8wtTCYt16S3NRHIno1NYeGrZ29nTWtUY3qcV6OIvC
rTycFFeuWrN6jamJCUbbTc0tYVOwvg0V8HR0dnVyVSYFu7tQ7SY3dwpneWly
jRY91ehLhN3vBXwGYyV/eGvs9vQiziFWuR8dPtFRYyDPBenuR2Dh8Kn0fM6O
uQdz/jGHH2eRJ8KnMuweHa2/w6eO51Pq7XmXDp9Sb8+EOcnzLvD5ZcgzbR7y
FBlGEnnKPk82OUVamXMkkyeHyl2IPLGruaWlOboR18nkCffLcI4CEnN3B3Dy
xeIZwejoCxABZB/u3OlG3Y0cETkx25xjP1gADiPajo7Icm44HgBiGGchubu5
4Pq2WMoDDe6+AVSJPG1FRhE83wrOmOst168zB7o0MUEP5pq1TJUmgJkMn4Sd
RJ1gJqtWrgTMXLUaBdT5EwGcK36yAuwnKz74ABo/obmwBmzC3BxOr3Bjb4Vn
ZBsbez7XY2DLGXZY6sIUKPkiyecZGBhM6MnJ/uzhhDaSp7e3n5zYL3VqZfD0
QKcxhqWAQDGWD/+w9DPeUAnyJMcpFW3AcvMUTOf4viiEJXqIcidSRYhfKmfC
ftBQrClKyUnwHU1JTs1IT80Cy8wC/iTGzM3LRa8gp8ADU+bm5kEb5tO8HFwj
OxuVg7wKU4RPJNOCgkIOvYu4e0kJ+jk3St1Ei4Shz5S7lQI3GBsb9+8cTEyA
n0AaKCU1Iy0tC4Dto3kNVkhJSQfRs6CR0d29zdzC8tDhI+npWaC0tMz0tIy0
1IyFbCojIxtdv1m52Tn5OTn5O3bszPjhX51uretc9drW1a/1rH5t26rl21cv
71+9bMhk2W6TZXtMlo2bLp9Yu2zSdNkR01ePmi4ttLdRvpBOG5YeXfvKobWv
TK5ZemDN0nGTpXtNlo6sWrpr1dKBVUv7Vi3tXbVs60rQ8q5Vyw9tyHz/8b8Q
5FnNTs/614/eevy73/27v/sekGdlVU1ldU0V5xbV1Mi5RQI7JcjUgU+euWto
aM/effsPHCBv57GTp06dPXv2ws6MvzRK6L90lSkOMe/atd3Z3zFa13T46rE2
20fXpaVbPcph+HXqI9evj+R8RwrLm6uPHGm1fsRcfQiJ9HCzlTy4/DrVIYTV
K4PpjxilpqeL+elDBIk3dmeJGRatxwkagQ5v3tydKcf7LduO3zreZik/tmo7
gatdH0o3eiQjM8PI6Fs4B590i2xEPPURu82nP/rwzlS7BT9+LHfPndt3bg9n
SIs3wXZuwNsEBL24M9noO6mpibzo2+k7Z6anL+yvN33UIjlhrXi6Vf3eo8eO
w+EaG98/Ojo6BPC5c2d3T0/H5s1NTeqamtqy8nL4TsNvIzMzS3MSThIVSJLx
9J6Kt0hJybHxiXD5iI6OiYyKiWBYCosQdeCpkmQQdekMCKQCgMGinyfNDCY6
9ffyZqrxdnWHc7IbnDMdHCnA7czeTim6TdXgqWYOV+zEe2VHHMMFiyPBaQxD
6jbY4dOa7ui5MhKejKkaJw3mIvp5Uv6RjSVmGFmYrTNfa7ZuLSIoNMyJV20s
YVP2jvaOGuwUlUIVkh1EXnKukVae+6Lw5/0jz9B589zhaiDF3Ofu8Lmo5Om+
iAH3hx0+vz55yncTss/Zk67aypi7Bj7ndnvqht214DNmfrenTofP+Dli7gmz
Y+76U42+ZofP9OS5yTOectvp7luQp2xK8oyOjmY3GhALcI6vr6+GPAk9McmR
+lBKoXbMM4IzlSsWYPeCIy9qYIYEU8gd2VP08nTD2sRwBqTRpxydREo6Dnfh
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
kafgxT3Z6Ay17Dh1B8lRstFsJE9lg20k0+iRnD13bou/2oZ4+SHAJoXTt5z+
COETWBQD7uj7pHVuj5C31H7LFKMsvNNrQ6lG38nZfe3alatXL/UnG30na/Dy
pYlGs0dtWg5R/9WZmQM1azDgDqB+8OChcam3544+IM/u9o4OFeUZlVdUbCwt
hd8A/GxycjHbKD0zE0X15NPSMxBB6fxMNZdoZPZEvkYk4BWEismzaNDM2Gge
u4ScotIARnRyDo+Q3WtwbvAnzmHU4VFUlIM84ojtvjjCjhhSk+RBXd1wWHZP
voDiyVhOBeKkeGkYIx7tyI3HbXeSxxYUnlLhIHUUyexUgp76ds5DnnLM/Z51
+HzA5T2DNB0+H0jMfXHg8yGPuS/wOMx/tOeuLe8zl9tTX4fPSN0iSzFfOeau
E3afJ+aeqDfmrs/5ucDa8slSPU9t8kzGwvIJSVzuice3iYtXMif5PLGTZzRn
tUsllTQ+TyBAHiXIHm57rajEm2L0TDjyWBFEhJsjtPofhobII2j6+YksG/b4
SUMW8dhuvnyvoBnqHU6b3iIt3pW8ojQRQxq5iyLzLpy3JCXL6zUsvIRoamMr
15CnEp/WllZc4NOS63miG5frMXFJJnSWYh0mqhFqycVCba2t7G1t7DG5Hrum
urpzsTrZ4ylqveOoWQTwQJ2hRIxBUs9PrYFFJZNnyN0zOSuIS4JqcoUIKBXj
GyF5KoPudOi1Bu7krLEoqREt1fmMxaH74qXanuk4sCb6POHKyelCeZzbzint
YLgoj1PGs8khioDKEXZgTipBL4/DySMfyaNuVkjjcMpF6DHtiFsnT56EXYLv
IcBec2tXfUNbbV1rfUN7fWNHg6qjUbVJBWpCNeLD9obG9oaGtnodNeL8feOT
Hh6+585fpDUVwqW4GqzDc+RtNqk3K6Vu3qJu6QQdmDhc8M5Ll3b37U0IGUsM
GU8MHk8ImkgInEwOPJISeDQ18GRq4FR64JmMwHOZgRcyA0AXM/0vZviBZtJ9
9eocyu9Mut/pdP+pNP/jyagjyf6HkvwnEv0PJASMp4RMZsdPtdR1lJdk2luJ
MYxoFKOmpqalU58ReT79m9/8pkndom6WsLO5WS2JE9sZO4kz/wSS4VNE24dH
9o2NT0xOHj5y5Dj5PM+dOzc9PT2Q9ZdGRqaqQ+ya5Ag7RdXJ5ym1b2AHT3OA
TEW0XePzvD4ErMlez2vXjrRZP8JtyeeJRhS6+4YcXkfPJwXUNT5MiraPIpyi
09Moa4Qo9WSHBbk6b98aYZ/nbclHKk0RX2G9NotHbDdPIWgSbQ5nGD2WO8rr
wIscb13/qP2mE8dbzB+17zhx89ouJM8hIM8rVy4ieWYOXro40WBmZPTtjP7p
8+cvnOqOMXrMqmYEo+2cZzQyOjowuGv79u1burra2tvhswHyrKisLCktKyza
kF9QCOSZnZOTkZWVkYFDtxN/YqnPtIwMKfKeSqf65IQkUeozjjLfBYLGiUHb
edx2OC3jOHoxsZF0MYKbxjAqL4+QA/wZTKM6BgXD6Qc7iALz0ODjmuHFyf+J
jlCETx+mUA2CkkdUGmeQG0ikUhsvrGJESBrDHQt1kgcA+VMHO3moRymlSD95
asfcdfLcF8vteT87fM4Bn18qz90An99U+PwSMXf9AxtRQUS8t+IMkIXF3Ocg
zwWmGsUvKNVo4R0+Z6ca6Y25w2ktUT95JmuTZ7zs7VTWVgKgodwi7PEOFMTj
qnsRIgLpiWHU7DHlh4cucnCgsXnd3IAd4SgHY/fDcOIiGpScIAiOt8i0lgqn
k0/P31/y8vmRm5MH3uSRgQR5+mMNeg7Uc4V5rmRERUU8yHuKYxyJop8uYrx2
R0euOk8NaY6jgxisnUfKxKR42n+OGSmGNmLG5AL0VrLxQlgRM5uQOe2dcYRN
F7l/AHInn0ClcTA52Rwdv2JYotAQuecl+S3lcYuUo3EGUx4Qx8zDlMMeycNz
MlJymXipGgHXVtI75qY8tpFcvkAecxM+dxpbMxm+VRk0qhHAJ/XYzOOSSiJ0
Tt0yNxQV0ZwCTm/n2kqUIlTM2UTaY24ydFaSKior9JkEpj3d3UBEq1atgj3f
f2DizNnpk6fOnDx19tQU6NzU6fNTp8+dPnMe+AgaU1M8X1dTvPT0ucCg0M8/
//npM+fkORpNye3zuEF9OnP2gqzyFct/du70pb6uK31dV/s6r5Fu9Hfe7O+8
NYD6aHAL6GeDWz4mfTJE2rX5Yx0NbhKNgc0/G9j804HNH5LuDGy+2b/l5s4t
N3ZuuQraseXqQM+Rni0tRfm2y146ceLE4OCgGHm9qUmtVr9y5udPPIHk+Z//
+Z/q5tbm5pamZuDPVnVLa7MkZT1PwE/q7amBTybPwcGh4ZHRvWNj+ycmDh7C
ipvwWqemps6cOTPeaK2p52lavx+rH81MT082WT9qum6dSDAySth+HisaXZie
UFk+wisegJZp/RjWXNrfaCFnGJnWjlEtpt7k/2WUuI0KM53bnvK/jJJ2wDYt
viXWStl58dIlyqYHwyT6/lQjo7SBS+hyvHywab28RxbNh2id/hSjR9IGcE2F
DqrMxWqPZQzCZnYmi4ePWOHTJlXr5MUDly7NTDSaPmqtPnjx/PYEo2+n7ziP
ZaOmumONvp3SM3VqpNLk0bWmq8UT/iJ+06EDk5Pj+/eP7t27e3h4YHCwd/uO
rd3dHZs2Nbe0NDQ2VtfUlFcAeeIwmvDLyclD8szMzgb4hN9VBjo/s9DzifyJ
8feUNB7pOBVTkHisZPkCkZTEYyvHyTiKRBqnIVICUcGfOHo7j3CEA45rhhen
bjksf/Z/+vsDhVK9JpIUjtdE5FF0OZZwVHKK0o2/YkhreVDyWaWTJM1NnpqY
uzyYO7Knwu25SPy54Jj710410tfhU9MjV1Pec56Y+2KTpyHmvjAtgttTf215
Gsp9dp77rG/4XUfVnK+8p+6oRvrz3OXC8vO6Pe9SWz55ATF3Jk9UooI8E2Ty
TKAQT4LU1VPwZ0xMHHMMXP2BcMjhicWNKSGbR7z0hvMPj1/piIOv2fEQ5zTE
jxvQF6yJQEXuOM3w4tKoOkxi8sg+TFwShwqXn9IXKLsDpTC9L32WPuIz9RGD
v3uJod495TGPJEco9yZ1UQzs7kx1kAhOuYepo0BUri3qKI3vrjWSO4/8bi/m
24uqno7wfFcaWJPKb/pwDS/u4qkoshkuF9qUB2jnBJ9wbVM+jlAM8q4cW0qu
w0nDZmJvEEX9VZ3R3TFnPVprDM1Yvrvg/hV010HfTqpGlJKSgplp6elZmvE0
8+ROmwI7qXT8hiLgzELOSxf15Kl0Jw9eVF4uezkrKyu0x3OfNbA7mzSWZk1X
V+fp06dhf4D8P0BbIdtPdGyFVH9A39KVK1dSQtnCZS632c+tVOCLSxyeE3J8
fonjC085v/C084vPuLz0jOvLP3Bd+kO3pc+6v/qs+7LnPJc/57X8ea/XXiC9
6P3ai16yXhcNT5L7ay+4LX/BddnzLq8+57z0Waelzzq+/EOHl/7e7sUf2L7w
NCjkzRcrXK0B0Pr6+hg5ATqbyV45+6snnngCyPM//uM/mprbmppbZaklsatT
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
p6Mjwqcz5RlhcUsMu7tLSTvYoOGJOCKOR91HuDoJF13dXJy4NqgTl8ekXqM0
miaNKexKHTEpE8iLt4FOTh9BwVy5k3KdpOHfHRxpoCJbWzsbK0tLGr/ddO3q
VatXrgTsXLlihcnKVSarTVavXLVmzRpTUy7faAEQiuO5m5mZIpfiMO6wjpkp
MOj69RZW2OXT1t4JyNPewc3ODoHT0srdytrdysrd2trDxsbTysrL1sbX3t7f
wSHI2TnE1TXM0zPc2zvC2ysCEBTk7RXp5RXp6Rnp5Rnh4REJoofEkwyWNPXy
wYYHQaaHR5Sba5SHK07d3HDq6oozYQUgUkBW/wBE0ICA6AB/FPpIfaN9AWV9
Ynx9o318Yvz8YmDq4x3r6xsLUx/vOGj4+sb5+sX5B8QHBcUHhySQCzQhNCQh
JCQxOBiUFBqaFBqWHB6eEhkF/JkRF5cZn5CdmJibnJKfmlqYkbEhI6M4M3Nj
dnZpTk5pTnZpdnZZVlZZTk55Tm55bh7wZ0Uh8OeGyqKiysLCqvyCqoKCalB+
AcFnMTo/y8qqy8rQg1leWkajuRdjgfpCqg9aWMQqKpJqOHEePQ73ToVDN6Df
qRgQtIzT6OtqausAngjhmqurmisrmysqYNpSUdkCU0BQ8hO21pEjFPizrq61
rqaVZ9ZWt9bWtNXUtNXWohhBG1XIn4COKFU74ygDJ8An8WS7qrG9vr6joQHV
2CikUjFz4sz6+vaGBpaYD09XqZqxn2VNU3U1qqoKpNaoUl0JqgJyFqqswPcC
KgeVw7SlAvXqpd8DeX7/yad+/otf1DeoqQ8nciYQ5smpM9Mzl0AzFxWaEZqe
uTg9ffEC6AJpWgjnX7zIK1+8KNdy17KLSuFqc9oMjXKurZlpFtkFWRdYGpuG
XYGtX7p8+fKVy1euiOkVtMsKXdE3U2v+Zd1FOOeyoqEwrlRPkt4pHgo4LDOw
Q+cvXDh37tzZs+ewLujp06dOTZHQTrI09U411U2Pi7qmorSpqG6KBU5RWM70
qEZYD0q7JJQo+nQYhUWfZB1CHaQaUKiDrIM8nTyIJbCwBumBCZIwqcLVAam2
ldDY7JT/sbF9X1b7FiK0vQsQVjgAG5dKe2HNLbCD0ntcFC3UJr++JnUF74c/
Gnh3WL9rXDrmeo/bV/g45tWi2vhDrbvbQn8aWkd+XHy39/NPkyvXSV9w5bf0
kEZk4revPBvw+UFIUSnuLlXpJJEd05Wm2LJsxzU6riW9dgxLIpOOyjpGLwdT
0ZALTSvK38G7oOp2fBKbEKev/VyLj09N+/btkWx0dFRu792LwnPHvr30wdBx
V35NNaVQpHPRHq7YMipJ3hSa3Ni7d5+8JdoN6aPnjUgr78FtiAIvIyPDuzFf
dXDX4OBAP+YeYPpBX59o7Nw50D8wKGwXiay/f3AAbFAspaovw7Q52PjekdF9
IyP7hof37d69b/cwaniYH46NDI+PjOwfHTmwZ8/E3j2T+/YdHBvT1r5D+1AH
QXupPTaG2seS5oj22CFYZ+8eoT2S9u7FRbDa+Pih8f043b8fdHg/Ng6Pjx8e
Hzs8Jmsc51D7iJiOHxkn7d9/5MAB0sSRCdCBowckTUwcA01OHj94CHX48Ikj
R04eOXLq6LFTx45NHT9++sSJMydOnD15knXu5AkSNE6eP3nq/KlT56emzp8+
DbowBZrS6PSZC2fPos6dg+l5HNLmLBlc0aeonjdNptBEYXG5RDiudOY01wGn
KuJAAufPM6tMzyA8TV8CXbhw+fx5LcGcC9OXpy9gY3r68swMTqcvXJmevgLT
Cxek6bTQzMUrF0lajUugq5cuXQHBnEu8aAamVy/OXMXpxaszigYKNjUjxPNp
a7AzsJO6On9+tqS3cO7ssWPNZWXNJaUwbSEtv/LFE3/1V08ueeqzzz9vpBpK
jSqEz6nTZzeWlLzx5ttvvPXOm2+985ZCbwq9jUu1xYveevvdt9959+13333n
XeN3QcYGGWSQQQYZ9CX1rvE7cB15By8o4rLyNjTekQT2ztuSvYWG0zffBL35
xhtvvP7668uXv7Zs2bJXX3116dJXXyF7meyll1564YUXwV544YXnn38eJiB4
8NKLOBeWwhqwKuqVl5e+8spSsmWv4rZgg8uWL+fN4pZxo2LTtD4arAxLYBX8
y09Ztvw12KE30N5UGM95XbLXwGjjbLAdsemXXnzpxRdhr17mKeziizAVLwcv
KHbxlaXi9Unyy8Ixeestuja/9ZYx6M03jV9/3fiNN43feIOm/BDarxu//hq2
Zb0mPVy+3Hj5MuNlpFdfNX51qWiLOZKWKRu02quvGC8FSQ1ctBy3Blt+7XXU
6/Siry1XvMSrKHi65uVe1bwob1zeyPLXaLpcszI3xEu8Jt7Fa6/reV/KJ8qS
9+112r3lr0laLo4SHD0koTffeQu+avDh4We2THwVtIw+EfxIXsUvBDVfptmv
LgPBtwg+mzdefwO+r8BP7+Lxf0OxS9KO8RuU3wsK9nAZHTHlnksHRHyUb9Ca
b5Bex30Weoseyivc7bOe60i+Jn1VYDf4s1umfSTx8xKfXWlBwdmjR5uLNzZv
LGkuLW0pKV1+9f8BeS5Z8vQnn3xKNeSxmDxML166DIf2Xw1mMIMZzGAGM5jB
DGawr2Rw33H57NnmDcUInyUlLSUlSJ7/+6+eevrpTz79VN3SKuvS5Stwg/mg
99dgBjOYwQxmMIMZzGD/U8341VeRPNnnWaLxeT719DOffvqpyIghGcjTYAYz
mMEMZjCDGcxgX8eMly27dO4c9/OkPKNyJs+nn0HybJXKHLW0tV2+cuXdd40f
9P4azGAGM5jBDGYwgxnsf6oZL1sO5KkuLcMM94pKEJLnX//1M8/84NNPP+Ma
mzzy0hUgT2MDeRrMYAYzmMEMZjCDGewrmvHrr1+6cEFdQQWXqLanhjw/+4xL
UxrI84HbjZu3Jw8dH9i1x6D7LDjscPB1Po76+vqMjIxEg90Xg0MNB/xB/OwM
ZjCDGcxgi2/Gb7xxaXpaXV2jrhGV55E8v/tdJk9RF91Ang/aPvv817/6p3/9
k8Huu8Fh//DjXyg/i7Ly8oaGhl/+8pdfGOy+GBxqOOBw2O/6M+k6fM29bmJl
wcjDIXgv8I7u2UnFYAYzmMEejBm/9RaSJzJnHQ+yyeT5NGUYiU6eNPjO5ctX
3nnXkGH0YAzI80Ej2J+v6ZBnWlrar3/96z/84Q//brD7YnCo4YDDYZ//N7Ll
4NU3Gk68OPWfb1z708MhfC8NJ+B93ctTi8EMZjCD3W8zfvvtSzMz6oYGdWMj
SYXk+fjjS5566pNPPlGrm9U8cmWT+tKlS2+99faD3t8/UzOQ5wM0HfJMTEz8
4osvHjSO/XkZHHA47PP/RlxqD7x0+jcxn/w/1T/898MheC/wjuB93cMzi8EM
ZjCD3XczfuedSxcvCuxUqdRNTTrk2WQgz2+AGcjzAdps8vzjH//4bwa7jwYH
/K7kubJg5I1rf2r8xX//42+/eDgE7wXeEbyve3hmMZjBDGaw+27G774LSAnA
KQvJ84knlixZAuTZJJmqqenipUtvvvXW3bc4U/bee2Uz937P74d9Y96LgTwf
oOklzwf1TfjztC9Fnr/+7RcPhwzkaTCDGeyhNGNjYyRPhTF5Pvnkkx9//HFD
YyOrvqFx5uLF1994Q88mAM+MhCGm3U9ak1/rHr3oN5k8P6xfIR328DG9wFS/
YkX9h/cezB5600ue/0JmbFw68y8Gu+f2pcjzV7/94uGQgTwNZjCDPZQ2L3l+
0tj0/7d35vFRFHn/nz8fbxCUQ5/X7/X81kVCgJwoRDlyH5MDCBAIkAQSRvFc
2WU99tBdXXUBNR6r4rGHz+4icicQroDizX0jhyAInhyu67G7gL/8qrv6qO6q
7umezExPOp/3q16hp6a7urp7pufNt7qqnnlKDng+9fTT27dvT00VxDzrApqc
LairW+CNeXbQ8h3DmWdLKKBqpaSgIvd0bp7ampBVEbx5nj179rTMoEG/23I6
emz5XZQL9AvkhDs0zyc//eHz78/HO+1+PHPw4+9Hu9gnYZ4AAD9CzfOZZ54R
m+fTxDmfeVr+S8wzJTWVL6EuQHSTQba1R+qUcJzynh4XlTPYWKWyClniyjFv
UldnzlJjreQdvUDzjsyV0cvXMhbQozCFb5V6sv5pqDmzpiAjmpjN04kiRmCe
QITQPE/JDBr00KZT0WPTQ1Eu0C84NM+Be9oaP/nh02/Pty8d+M3gQGDw4+84
32SXZJ4u1neWyLEMhHkCAHyHZp4U3jyflmOeT1ub54I6o9XJBqa8WkADotIq
ml/KS7rp1dXVyW8tqDMIG7eJ9I+6hvamubVduJWpMoZ96G8ZtVfJsTRPZgNt
Hb0wU1lRgIt5SoFOsy3q7e/yO2wkk82XaAnpLfXq2+RNwSZyNFXObwyxWf4h
IIJdQWieJ2UGDaqpGUS3GPTQRpKx8aFBgZpX6Zuv1iiZGiRHgawjrRowb6u/
Nr46aXif30Le50ZJXB+q0Yu3rknCIbwK2ruuzPOTb8+3K+18PGPwtEmDhzyw
09Umknm2d9fGBPMEAPgSk3k+o/YwMpvnM5bmqUAF1NTaLjQ3RT2pwNUtoMFO
U8iT38TQ8K1KpMk87bfim85Vf9Stlwl6BrQChUdk+IUkpWjHHxNEPYw0O+Ra
yumiksHlG5rn5Vb7FlNru76CsiTvStnEjwFSG+1sE5nn999/f1gmPZD+q/XS
wvpfqYsvTwhMePkwu6AgrWLI0NDWJKso5TEbK5kkR83icpSipX+YXVjWJEEx
XQX2LXLCHZrnEyd+OPHN+fakt38/JOP3B/53aoD8lXKIVV43baL6hZ+42Crn
8be/OfDAdfJLqZzlEwOSu7anJuRYYJ4AAP9BzJMoJW+eV1555ZEjHz3x5JNP
ND75+BNPkLR167b+AwbYFiabnDPzlE2TGp+yaG4Kj4N5Kr6riicbVmULtD8i
8xmIiX/a9W2nj3wyHY4UHW1R/VOYb1Aro3mybmmVEz3rSxCstLPNwjwPyaSl
/aKVLrX+Ii0w/iVp6aXx8oLyjwZZQVtZ30SFvqWtw74lMf4ldnO6bMoxrWNT
kwRGO2BTvkPzTNr1w/1Hzm364mw70r4ZmUNmvH92098bApmPLSY57z82ICDn
fCFnBhqeFObQlcnLmqZN7EI7EjkWckQwTwCAz6Dm+bSMwTx79Dgi921vlOSz
kaSt27YNGDCQL+E6tp3dsm3a1NouLdVdp2mj1OTOhSO5dnOmJ1PA9JioTWu7
nXkqzf36k5ps7JM1T/Z5VeOOtILqDM7q5ho4wHZUJaKetM3c2AyuSaMwX5jT
ic2zTZZPYb7QPA/KENNbS5fWEvereklefKmKLMl/DjKs/YW+srK++lp7i1/Q
IOWx+yLL7Dp079xW4pokNuQq8JkOzbPvzh9+ffjc+5/9J/L03pwBmXMWSMvL
RgUG3/Uem6Nm/s0mh7ysf+Kz/zwxOTDqb+2ohpzIsZAjgnkCAHyGpXleeeVH
H31EtFM3z63bkvsLYp7G9mkuXCns+CPBPHbJPYH5D34TQwO3Ln00yGjfw8jG
PI39jNRnVrUC1U20UkU7CmguypyFKGMyT4NOKt3cmTy6yLetM23nrlvbO4F5
WsGb53fffbdfJi3tvtXywur7iPq9QDPlFwH1HQ3DKtIrdlu6rK/yQlWAWVnJ
YTaQFvV1lO2YMm1r0vEgJ9yhef7yw3PvfPqfiNN8qXORTv/f7H3nnTn9M+fM
V1ZYVhEYfOdf7XIemxSo+CvJrH+sHdWgiRwLzBMA4D+sehh1737FkSNHHnvi
iccef/yxxx6bPXvO5i1bkpL6eVbRhBngyBP4mKfeR8jgoGqTOtvDyJRv3Fre
mL7UZNXuGVKYJzXPfTJMc/m9q/ZprLo3zfBaz1ZXHzd339xx6qbjxmmr00zp
FbOyUri2gZajr0PKE+7WoiYdDYfmee3OH+49dPbNE/+ONO25PSNQ9or68pX6
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
4c077vrp7XfNuENO1DyvuvpqYp6/J+Y5a9ajJP3+95s3b8nIzPTJ7JkwT9C5
iaJ5/vDDDyc++ZTfdqopssTLQIzMkw1qmQq02RGS55dSL0r2TOG7rsyTjani
WiMhRTtZ3THCJmKe695445Y77rzljjtuuV1K1Dyvvvq/Dx85MnvOY7Nnz5kl
JSnmmTlokHPz1PuwAwASDLF5nj333ff/dpvO//DD8ROf8tvumkUEcM4u5aWk
E4Nn7f1utyQASubSemUFkhmoX0IXpBzaSKoWMnWZYSt22fSSLjM5Sh20HPOC
vqPv2AJJTXe7Pg8+SJ5fyqmkWGl576zB5BJYXR25fH5fgpJlH95t3Fcnvr5I
SNFNVneMsEkyz9ffmH77ndMl7bydJN08Dx+hzjlLanB3bZ4AgIQlDub5HZUN
FUUhdrNNqKpCfP/vJXKca/DUekYPmHVcmadaml6gpXka69PpzcTjS/n9sqna
paAKyl8drXx5BcO+hCUvrQ+YSujE1xcJKbqp3eZ5x/Tbb59+220333ab0Twl
55Qa3H8/a/NmxDwB8AlC8/zP2XPffvcvt+n8+R+OfXzC6ba7Zl83ePYu93tB
ikPy86VcUk+M2ftqICH5KLm7YzCJmufNt91OnPPmW281mudhTTtl89yMmCcA
/kBonv/+z9lvvv3ebSI3n6PHjjvddtes666btdP9XpDikPx3KRdrUdTA1MVe
VwYJyWfJ3R2DScQ8W19//abbbr9JNs+bbr3VaJ6Kdj766O83uTRPxDwBSFg8
M0+kBE64lEhISM5Te83z1ttCRDtvucVknpp2PkLMc1MMYp7M/OnKS7ddziPr
pR52K34IUAB8hNg8/332n9985zadP3/+o6MfR7YtUkIlXEokJCTnKeI7hmSe
618PyeYZIuZ5yy2aeX5IzFN2Tik98qgT83Q9nicdit1iVkrDalYCGAvzFE57
ZFMIxmgCHQ2hef7r3//5+p/fuk3nzp8/8tGxyLZFSqiES4mEhOQ8RXzHoOY5
7ZZbp91yy7Sbp4emT9fN88PD1DkfltIjGzdtCmueRDLPi7Ccw0h2tsYQM5Ol
9+ZpMdV7tHYNQAIA80TiEy4lEhKS89Qe81y7bn3D9Fsapk8n5tlw880G81S1
83cPuzbPpJwZDs3zEB881CfFVOZr19u99bfUCSyzQqEsbWW12IBtji6N6mTx
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
37Ju6GEEwgPzBAAA4AnUPEtl8ywoKMjJyY2WecZlPE9/gSAliBcwTwAAAJ6Q
np4uj6pUWiLNYZQ/IifH0Noum2dt7GOeQALmCeIFzBMAAIAnUPMMBoPFxcV5
eXnDR2QLzFNOmLcdAN8A8wQAAOAJxDyXLVtWLD/kmZubO3z4cEvzXIWYJwA+
AeYJAADAE6h5FhUVFRQUZGdn3zhsWLTMEzFPABIWmCcAAABP0MxTeshzxIgb
hg5FzBMA3wPzBAAA4AnUPAsLC6WHPIcPz7rhRsY8t9ROHomYJwD+A+YJAADA
E6h5FhQU5ObmDhs2LCsrSzPPHdu31EwaqclnYsU8zdNWJt5sPcYaos86SChg
ngAAADxBi3kS8xw6dOiQIQbznDyxQpbPmMc8XY/nGc8BiCLbVyxqaJ7SCAMx
gQiBeQIAAPAEzTxzcnKGDRs2eMgQzTy3b988qbq8ZlJFHGKeRDLPi7Ccwyjx
jSs+5glARMA8AQAAeAJrnkOHDjWZ58QJZZMnltM295jGPFnzTMqZEYF50gky
tfklQ41khVAoi2mKP6Tl0LnZDc3g/KSU+kt+5kq9QGVKTvGsnCY5FGyu1lBd
yGpsaczSq6FPsMlWWt9KnRReWBO2uR+aCozAPAEAAHiCnXlu21w9Pjipumzy
pIoa9+bpCmKYZ8+do4mYp7ZsZ57cY57E06i5SS+kFRirJFl6DiOF+tTqqg1K
C8aXyjrKe8YCGc2z9ExaPeHm2jzr3AJfmuaZbVzwU1ATfXcIkAIemCcAAABP
MJvn4MHavO3bt22aUFVSPaF0khT2rIh1zJN4ZrB+Hps086RFGQoU25QcI9T0
TlvBIJC8tarqpocGjS9N1meTw9bFlGOzuf2CqZpW5umqbqDTA/MEAADgCebn
PGXzvFA2z21bN40fVzyhKjhxQtmk6vLVq5piGvM8ffoUTUk5M7Rld895Uk/j
n4TkTc+iKzxjrsxLz8xTDuIecrAJzBO4BOYJAADAE7SR5IXmOW5MkSafq1a6
M0+3Mc/jKsQ8tWU35qm3lPOtzUrrtrH5XV80NcS3cC+tWtudm6fN5nbmqWow
PSrn5onWdmALzBMAAIAnaOZJx/O8fvAQzTy3bt04trJAls+S6vGlbs3TFax5
sjh+zpPtWiN3NgqFsgimXkO6gGl9dyLqYWQVVjXV0OrJTyeN7NqDn4ZeQrTa
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
D/x/YgqUbg==
    "], {{0, 366}, {894, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  AspectRatio->0.4306647901986646,
  BaseStyle->"ImageGraphics",
  ImageSize->{498.75, 222.4064429530082},
  ImageSizeRaw->{894, 366},
  PlotRange->{{0., 849.848904135314}, {0., 366.}},
  PlotRangePadding->None]], "Figure",
 Editable->True,
 CellFrame->True,
 CellChangeTimes->{3.4630908160984*^9, 3.47291854377687*^9}],

Cell[TextData[{
 "Options inspector for ",
 StyleBox["ItemNumbered", "Literal"],
 " reveals numbering settings"
}], "Figure Title",
 CellChangeTimes->{{3.4630897827734003`*^9, 3.4630898021454*^9}, {
  3.4630906474884*^9, 3.4630906937064*^9}, {3.4729137676055927`*^9, 
  3.47291380203857*^9}},
 CellTags->"fNumberedOptions1"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXd8VUX+/38/P/Xx3e/+8d1VQWm6a9tVBAQRxLKrUpTeO0hvFqSlQCCk
95DeG0kIKaQXEiBAGukNkhBSSAhNqrpKUYH9+HvPzClzyr25gZtCmJcvjnPn
zDn3tHvOM++ZMzN706pXVmk0mqfgXyH8rx9KD9FoPrc86BsQuGvjxD59R73w
Yr++fV/o0/eF55/v+3wf5D59+pKcvi9wfrEfqD9y//79BwwAgwYNHDjopZfA
L7308ssv/w39+/vf/4b1d5Tg0i9jw8eXkUmaK4Uzcem/v/L3V1555dXXXn31
tVdeRYJPeCV/I2uGr+C/Ba8QJVEC5cFcUuBlFb308stCGX5ZforW8Tdl0Zfw
HvHlYdNeRRv22muvvf4G+HXk1+HTq2hr0XYS/R1vMBHZd7K13NpeennQoJfA
AwcNGjBwIBw9OJJwTF988cUXeL9IPuIUSaB8TjiBivV7EZ8MtDheQz9+KThl
2Oj0IfOJ50F9BKEz25db1Yv42/txG4C/Ap93vBRasA9nvGAffsEXyQbi732R
Wwnaur7c4i/0FYwzuT0ilxDaZriGZBsPxbgN5hfEe4rKw6EaOGDgIDhuwsX2
0suimZiYmJiYOk/woIEn/vqvvt5qZGxtZ+/l6xcWEfnmm+uMXVzXbfhq4qRJ
UVFRv//++29MWvX7b7+rS/div3at7t4FG0B39JKexfTVbRXduY3yVb/8SdEd
fU+HAXXXML7bq93+Eej4Ycdr7jT9KvGvyEydrN/4KfZvEnebtDzLiB48eLBm
zZoHBpK/v7/BVvXdOkOt6iG0dOJ4mCYdzl67eevLL/9tm7GJ6Q4zJ9c9r746
f8H6DaamppcuXaqurk5NTXNwcHRwcLKzd7J3cAQ7ODo5ODqDHZ2cnZxdnF1c
Xd3c4J/rHjc3d5AH/HNzc/Pw8HD39PT08vL28fH28QX7+vn5+PrB/3z9/H2x
fCDf24cYynl6envAAl5ensjeXt7eHl5eYJjlBYujBf3IgrBOyIavgK/cgwUJ
WAR9iX+Av39gQEBgYFAQTDkHBoFBgXgqKDAoOCg4ODgkJDgkNDgUFBYCDgGH
olyYhoQEoRLBuDhKBKKlUDooGOaGhe2NCI/YFxEJyBm9LyomKjo6av/+yMjI
sLAwKOLn7w875+npscfd3QXL2dkFHUB7Bzs7OxsbO2trGysrG0tLK0tLSwtL
y13mu8127tqxY4ep6XbT7duNTUzgvBgZm2wzMsY22gb/jE2Ae7ds3QrevHnT
d99t2rhpM0w3b966acvWzZC7bdtWo20whfSWLVs2bdny7cZNX3397Vdff7Nh
w1fr1m1Yt2792rXrV69Zs3LV6mXLV4BXrFz55bJlS5ctX7ZixZfLl0PO8pXL
l6P0iiVLly1Z+uWixV8uWrR44cJFc+YumD1n3qxZc2fMnD1r1qzpM2fPmDVn
1uy5s+fOmzt/wbwFC+cvRJ63YMHcefNmz54D/82cOWPq9BlTp02bNHnqxMlT
J0+eMmnSlImTJ4O/mDh5EkpMnTx1+tRpM6bNmDkZptOmT5s2bfLUaVOmTJ44
ceK48RPGjhv3yaef/euTz/796dhPPh336bgJ48ZPHDdh0heTp06B8jNnzZg9
d9Yc2ID58xcsXLRkyZIvv1y2YuWKVatXr1m7FnZ23fp16zcYxnht7XrN2nWP
aNhymVetXrNy5arlK+BMLcdnZAnsK+zvPDjsvOfTXgBeaCgvAC9cZCgvhGup
l1qP3W//aEvOKT7ysGY444uXLIVTDxcAXAYr0eW9Bi4VuMTpK3z9hq8Eb/gK
/DX4K+KvvwF/Df7mW9rffAveSPwteON34I3g78CbiOEGI/OmzVvAm2nj+8+W
LVvJ3WnL1m3EcEvaus1I6W3E3M0N2chYm02ITUy3CzbdvoN4+w4zwTvMOJuZ
7dxhttNsJ/IOLr1L8M5d2Duxd5njHHOcCVPzXfyUs/lubkob55jvRmlzPtPc
3Fz4yM3ajT7yaQvwbguL3SSB0pYWFpZoakmmVhboWYCMElZga8FW1tZWaGpj
jY0SNmBbYhuwrR1K2KKErR2xvS1K29sRw3PH3sHeHh7pICcnZ3gc4ee2B3rw
ogexD3ooI/vyD2vyvPbza2pu/vjjj9va2ioqKpErK7kEcgU/pRNI5fy0vBxP
sc+ePQsH6sqVK+VIFeVSlSldpvjIu7n5rM+G5eeKC2ojQ8D1USEN2M1RIWex
z+9Hvrg/5PL+0MuxIVdjQ67FBl3XbpgLZb4HR4dejg69FB16ITr0fHRoK3LY
2eiwJuzG6LD6/WFt+ccXTfi0tbX1cF5+QV29V0z8WyPHwOPY2HT7oEET4dF2
+fLlgwcz4SA7ObsCLzk6Ots7OAFNAQM4IiOOAohCHOWKOcrNHU4GnA4PzE5E
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
RI2NJwK/eGpaaBGZBetINdU8syudb4veWBD4xdPTQ0/kB34O/ytsrE82BnZK
Q63NG+uTjHE8qj7Hd4JG8yezpJrq6pMlURs1z0x2Ty/My8+H40WCUUnJybFx
cRGR+0JCQ/1QL1JecEXDpQ0XOVzzqHEUDkapQxS+eyghiiYosSmUFogSTO6o
cL8ld2PZo5yLRynCUCov6OkDUYqnvz5RqQ7W7i1bJn93r5eNu6feDQIbd68n
WK/j0M7RZuPutcNR2ptLqaGUKY1S8oTQoTHdnko6+oykeZWK6YiWJLq1YzuF
Ujs6iFI7tY0vIx1ZRoZSwjt9cpSS1fHZ8d2cc/0goAHgYmJjCwoKPv3002++
+ebwkeyy8uqi4vKiEs7F/FSwLJMuBl6xcs3FS9+jdLGqy6gEciG2MgF2/HBI
S2lRdczeUzF7a2LCarFPx4XVx4WdOYDcHB8KbokPbU0IO5cQ1pbEO3nvedHh
51OQL4CTws8nhbclhbditySFNyVGNCVENCZE1IMPRNQnRedHRwTZWk0b8s/i
4pKDmZlhe0WOeqvk8nPPPfdivwG3b9/m6vVw4yg3d9F0/1EAU7iVlIhShKPi
4hISElOTUzMyMrKysrIPHzl+7FheTm5BfkFRuqT/KI+sCtJNQbbv5KfHTpjA
NTPXbIrm830monDSOI/DhyE1DspXVlQe8Z4otDMf65GFeogqj9n2/2m27CeD
IUZDenNU2SHPz/+HK7UZ5lRUVlZVV3N9KBwwAoI7gHtXOHnU53Nhi77wPYYy
qw9s0zxlHI/7XsBdMZxC06PeE7hiz5gmwJy4rdzHpyb5wWLZ3uOp2Serj3iN
e3oKzKiM3az50/Z43FdDZcxmzf8xjauqzHIf+/T48Z9yC/zfTWE52UePHjqE
Oj1ISU1LSEyEizYSQ5S/P+o/Ci5lZxyMgovcAnXCaUFaRqlCFOnTQEcYiopB
aYUo7uaJ/yAld1cSj1ojfTtPqNRThShJ23IddXkqf4wvmN8JKLVQZdy9ru8G
oUvG3VvCxt3rkdbvCLR3wNVDUt067l57KNXJ4+7pRimKpkw5mhJboXNTYhNT
FZSS50iASo5GEnySTeUdLyhaufM9AFAjKUs6p6K6+pQ3RJeglAXpb0qBUlT3
CKqjyRCUsrWzwz1KOWCSctnDBaU8I/ftKy0t3bZt29Rp0z786CNiNX3MTz9W
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
HNXa6uzqilDKxRUSFRUV7747UvfD8Uj2UU81Qb76Aohw1mXSH4F0DMtR9FfA
XG0oJSyoz7f0djGOYjKg2KlkYmLqehmEo0gM6tatW/C4+/HHn27e/KGlpa2x
8Wz9mcba2vqS0oq8vELEUaVlQFDYCKUIRw0cOKi1tXWPmxvYFbuisnLke+/p
fjgCMj1QE+SrFdeCLIbkKMUygFUUuHVs5U+MGEcxGVDsVDIxMXW9DMVRt2/f
hgcdgahr1240Np09fbrh1Km6yspTxcXlubknOI6yswfb2qGoFOGoQYNeaj13
zt3dww3ZHVxZWQWF9eeot8ZubYej2uUlFD4iwuiD8tet+5DKkdYKoizZOtEa
pNhEcuSr4r+JjoapfLuHxzo6SyzSyxBMG0cBk/Nk3ukcBWsw0N4wdbPYqWRi
Yup6PcqdB5bVxlHnL1y8dOn75uYWGUfZEoiys4OpyFGt5whE7XFDrqys1Iej
7t2/TwwcJaTb5yiBh0SSERmIS2FqkeQo16bkKDni4IAUVcEnrlxSr6fr2/ky
fGxLZWseb6lyFPASXFFDhw6lUYpxFFO7YqeSiYmp69UZHAXTK1euTZgw4cKF
Sw0NzRRHlSKOsrUjKCXlKAJRqHavQm+OmrI6hrbAUZaWlsIUSQk5NAvRc1Vz
RIbRKBiMWqHWeJR0VTKOavfbedbqfcGoP9Q4ikDUyy+/PGrUqCVLlggo1Xkc
BV+qmi874VqXZw3eeox6+qlU+Wmzy4aJ6bGXtjuPnssqOYo88UaOHDl9+nQT
E5Nz5y7U1tZTHGWHbCuLR7USiHLdg6wnR/3ww03it8ZuFdL6to/qEEdxESE+
SzUepa19lI6Vd+DbxVVqenU8ikDUK6+8MmnSpB07dri6utrb2xOUapej7t9/
8Otv9zrqBw/+e+XqdeWyda4faMbsqeM+pq3WaMa41quv5PSeMWJJ5m7zY3Aq
6fWzy4aZuVdY251H/2VlHAWCR97777+/Zs0aLy+vyMjI0NDQ5ubWysqThKNs
bG1tbO3AgFJSjuIgytV1T0WFXhx1kRdwlJDWwlGy9/Uwj7RTrydWrOEk1Wpc
27t+qu/rKVelT72ekqza6anhcZWMo+BCmjdvnqmpKVw2SUlJWVlZOTk5mZmZ
kN+ZHHVNuexqzQcup6kc8tRD0zWrx3CRjdWpMKvehf84ZvUa7skIxbi8NSn8
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
5MnTrx89fu78+ULmqIceeggya/v27Tt37gSUKiqOYiYtVc6VarlKjo6jDCsk
ynOcKgOX10NEVNAJEweFQiWpXI2PIv6ov6x94q/WPfvlp19v2vvmlsPjjD8q
nqPAeuL8UQsWLOjo6Oju7jZw1Pj49TfeePPMmXPHj59Kzi5dukzwSdgAjoKN
RC8NdvToidHRI3CPhcxRs2fP3rZt2+joaBH6o5gRTeJ6N+Ee1gWUJUfJgZtP
QY5yEiYOCoVKUjkcZ05Q6kv//Vp731u7zky8Nv5x98U7ZHxU9hxFx0f96Ec/
GhgYMHDUtWvj589fOHHi9JEjx5KzixffeqKzs6+vT9h49dVXYSPRS4P9bvT1
11773enTZwqZo1KpFORUMY6PEj1FPMaE1GNcP9rMUUK/niJwCeSU/XrIUTaS
EXR644NCoUpLuf1eD1AK8Ol7A5fgb8/lj+g4c+CoOXPnZclR1CvV1dVl4Kh3
3rl25sz5118/fujQ4eTswoWLL+3adejQIWHj2LFjsJHopcEAokZGXj158nQh
c1RHR0dxfq+n4ih2tUI68JsdP+7GUVxHHrTrisDD4M3jzJGjzBJXukSOQqFQ
OdXmOLlyFBjgE4Eo8r3elt++nUOOum4xf9Tbl68cOXLswIHfAmkkZ8BpZ8+O
gSk3Er002P79BwcGho+fOFmwHFW880dlIjo4HIVCoVAzSWUW0p1LOeri7U9P
TfzhxM3fEwN2orb16PWfH7xIOYqiVDYcZdCEz1EXLlwcHBzp7x/q7RssTesd
7OkZ2Lev/9ix4wXLUaxKlaMYdxRSFAqFQqHcFHDUZ+mT73507NrU61fvEPvF
ocvEtvz2bYCoJwfPshxFUMqGo961Fl2IBNrrHTt2HDr0u6NHTxw+fHR09Ehp
28GDrz377LPvFbxYiColjkKhUCgUKmORdYov37w99cGHt27dmXzvFrGxN94U
TOAoMMpRhw8fZjlq166X1jY1wfFoaGhoaGhoaGhgdfX1z7/wgoKjvvCFkZER
lqM6On4MKNXT2wsWp77cWF9iZhuHSD2y9Xi2r6cnsn2e7d23T7S91BTaQ22P
wrr37OGsm9lQWVd3t8m6dCZqN7XdnL2yezdrsAdOh3jC7UOK9fX1e9YfWH//
gGcDgYUaDGzQM19DgQ155mt/YPsVphMcD4HABeDSkGVeXuwN01CTXBnaHitT
ZmhkUaaHGWedO9rMsrTdlubplTjzjvRi0d3t3TMk+T5Iee/pyGWF4CDFo+pk
PaL5j/Y+8qjCLfo5ZUzGDHLEaDmVoZgVu1nJ9umIUt6rOUnZ3kOqbFLAo/Kt
aLB89Qv1oV8lhrUiXzcy1aNUT4ZVpaLCZKrNsObk609NFWqoRSUN25m+WqYW
xSqMc3QX4Q2yd+0rSiI/xYKU9BOWac2ZB59tl/dJjTLfEEstr9C8KptORVl6
4YXtjz/+fZmj5lXM/6//2/XDnz7FopRgK1I1sqXAalbmympWrkrI7ONA7ou/
9xVgy5YHVr1seWjLqquXLa1etmRptWRLq5YsXVy1RGmLFleBLVy0WLYFCxex
Vrlgob+xEDaUNr9ygcEq5lfqDHJcsLnzKoixxYP9JIEYHAAhw91BUkDCrlxV
u4pYbV1tHVg9WF19A1g9WMNqsIbVjcRWN64BawRbsxZszVqwJrC1TcSawZrA
mltYa24Ba5UNfoLjIUC4FsQEcgryApIXklGXXJmZkCkGU+YpayTfSc7qMkjO
GtHmVcwLM8vK5s6by+ep3uZ6xue4bHAkRMArBwsXwR1BgYeUh/IQ1Am5qAqU
tY3KtPWVvdFHmxp5qGlZIpkiPBpzBXPKEaN5+RtbBuzMUAOUgFmkQPyTEmWo
n+wQLJTrygULyOMMxRvKt1e8ly0njWCqJirhbBMDNSExWh96VWJtUCWyFWNQ
PTYE1aNfQxLj6klqUYVJLKw2mZrTVH/qatGWVp2tszPurDBY9qLNJErE/Ah7
8Sf3Et1geNcNJDWYJCKJBskYpG3UlHNtNNsuLxVa5CVeQ1ylb3xpOxuYpvWU
W0m25FT/x4+Box75+je86nHV6o5dr3z/Bz/QcpRXikSayi1HJYdSGdXhHEct
V3CUh1Iajqom2VelgSgdRwkoxTbluUUpZeusQSmxGYUDID5w4yS/VrL1hgql
aC0R1QxctcDVA0FtwNYAxBQo5f0KzyaEDFeEmEDuQMpD2hqSK1GO8urehfEc
RVpnt9yRGohp5ChSBirmz6ckBcleHTU0OakK8sdRMkqRChkeYVqW5ld6mZIf
jkKUcrH4FIhN7ShDOZRaSAo3FO8ApZavEEq4kaOCKnGViFIRTTFvmhxH+VVl
o5ajFG+gpvozqkV5lMqao9apOEpAqZYmjqM8lGoMUEriKD8RIDXqeJQiaein
LSRy1JoLKMVylG8MRzE+Ddr+LhJbW2eOIiVn3br1f/9c19/Wtn7tka+va2u/
7/77m7f8evOWrXEopfJKFTxHuaFUeF8cR6lRis811qQcZMyIUlLT7D3RxoY+
M5dURaYuqTm+T2rx4ipICkiuqPZg3r9odRFUFKFXitQPXM1AKgTBK2VRDwTP
rP+EQshwdYgNZAqkOfX55AylFrigVB5cUk4c5VmOOYq+v1d6L+6EpNiGJid1
giVK1bhSk41LCu6GvA2R/Kr0c8rkksopR83NHUeVPEplz1Fz2QzVoJTuTYFH
qVWyS8rAURxKNQguqUalS0r2Sq2New/lq1DeJaWlKXeU4nsKZI6CGAYotcaE
UiQ1ZJcUcClJWy+po2Za4ZKqDlGK82kskVwZUoMb1vbK1lNdnACi5jzxP7P+
96V77rkXDnv833+4cHHVw998dMmzO2tf6qn/yZNOHJW7mjNJlMqgAue79tgO
PtYrpUMpPUeZuvaUvXuxlv/ePbgovKVB4vgo5XulDC4pylG0d2+N1Lu31ti7
p/NK+b17EA5cC6JBevdy7pJyckzFcpQNSsmUmy1KOXqlLFEKoloZkdRy0ruX
w9ogbx18Ikr5zzXp3Vu0GDLLy6l5Uu/enORcUrnjqFJHKYsUsHNJ0bcDFqWg
cMsuKUpTNRqv1ErGJVXL1IpC7x7bwSf17vEotUaPUna9ewqXVG69UmqXFNu7
1yT07jWGdydwFKRJmD71+t69lWwb7T+2fIvMN8SyV0pscFWNqbKtJGWm6j87
/+G53QBRf/HIt7/xzW8tT9V0/vTJx763qXLhovvuu++f6ppn/fyFL534HA0N
DQ0NDQ0NTbC/+U3Xl2oa77nn3m9+69tLly1vamn9xa+2dvyk87FNmxsa18DO
+++//+67/+yuu+/+07vuQkNDQ0NDQ0ND88zXPffe+7VHvl4xv3JFzUqAKMCn
/wdG9AHg
    "], {{0, 197}, {792, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->{Automatic, 126.97050505050262`},
  ImageSizeRaw->{792, 197},
  PlotRange->{{0, 792}, {0, 197}}]], "Input"]], "Figure",
 Editable->True,
 CellFrame->True,
 CellChangeTimes->{3.4630908191703997`*^9, 3.472918634862335*^9}],

Cell["\<\
The CellDingbat option controls how the number is generated into the output\
\>", "Figure Title",
 CellChangeTimes->{{3.4630908984594*^9, 3.4630909767774*^9}, 
   3.472913803732312*^9},
 CellTags->"fNumberedOptions2"],

Cell["\<\
Armed with this information, you can create your own numbered styles. \
\>", "Text",
 CellChangeTimes->{
  3.4631291917959623`*^9, {3.463129231001962*^9, 3.463129261581962*^9}, {
   3.4631293149279623`*^9, 3.4631293256049623`*^9}, 3.472913808871698*^9}],

Cell[TextData[{
 StyleBox["1-       ",
  FontFamily->"Birka Bold"],
 StyleBox["This is h1 style.",
  FontFamily->"Birka"]
}], "h1",
 CellChangeTimes->{{3.463130914259962*^9, 3.463130928716962*^9}, 
   3.472913813278216*^9, {3.4742244124759912`*^9, 3.474224459110227*^9}, {
   3.474224518913886*^9, 3.474224520769493*^9}, 3.474224578621119*^9}],

Cell[TextData[{
 StyleBox["1-1.   ",
  FontFamily->"Birka Bold"],
 StyleBox["This is h2 style.",
  FontFamily->"Birka"]
}], "h2",
 CellChangeTimes->{{3.4631309375649624`*^9, 3.463130942778962*^9}, 
   3.472913814367242*^9, {3.4742245003881817`*^9, 3.474224523729516*^9}}],

Cell[TextData[{
 StyleBox["1-1-1 ",
  FontFamily->"Birka Bold"],
 StyleBox["This is h3 style.",
  FontFamily->"Birka"]
}], "h3",
 CellChangeTimes->{{3.463130951563962*^9, 3.463130958632962*^9}, 
   3.472913815166294*^9, {3.474224511899796*^9, 3.4742245136488132`*^9}, 
   3.474224575651804*^9}]
}, Open  ]],

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Transforming Notebooks into Other Forms"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{{3.4490005495625*^9, 3.44900062034375*^9}, 
   3.4679036816484203`*^9, {3.467933299916379*^9, 3.467933300362726*^9}, 
   3.472913820857374*^9},
 CellTags->"Transforming Notebooks Into Other Forms"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell[TextData[{
 "You want to extract content from notebooks to create other kinds of \
documents that Mathematica does not",
 StyleBox[" support as a straight export. ",
  FontTracking->"Plain"],
 StyleBox["You may also want to extract in",
  FontTracking->"Extended"],
 "formation from notebooks for other purposes."
}], "Text",
 CellChangeTimes->{{3.4656336720726*^9, 3.4656337595996*^9}, {
   3.4680144137771187`*^9, 3.4680144463167963`*^9}, 3.4686950610831842`*^9}]
}, Open  ]],

Cell["Solution", "Heading2"],

Cell[TextData[{
 "Like everything in Mathematica, notebooks are expressions and can be \
manipulated using the powerful expression",
 StyleBox[" manipulation facilities of Mathematica. Here is an ex",
  FontTracking->"Extended"],
 "ample that takes a chapter of ",
 StyleBox["Mathematica Cookboo", "Emphasis"],
 StyleBox["k", "Emphasis",
  FontTracking->"Extended"],
 StyleBox[" and creates a recipe cross-ref",
  FontTracking->"Extended"],
 "erence to native ",
 StyleBox["Mathematica symbols",
  FontSize->10.199996948242188`,
  FontSlant->"Plain"],
 " (those in the ",
 StyleBox["System`", "Literal"],
 " package)."
}], "Text",
 CellChangeTimes->{{3.4656347636446*^9, 3.4656348662406*^9}, {
   3.467903946961216*^9, 3.467903960657466*^9}, {3.467904602764263*^9, 
   3.467904633315674*^9}, {3.4679052670148487`*^9, 3.467905305198011*^9}, {
   3.467928154970806*^9, 3.467928205316781*^9}, 3.467933533821753*^9, {
   3.4729138299434013`*^9, 3.472913849208354*^9}, 3.474224605076064*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"crossRef", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", "code__"}], "}"}], ",", 
     RowBox[{"{", "recipe_", "}"}]}], "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"{", 
        RowBox[{"chapter", ",", "\"\<.\>\"", ",", 
         RowBox[{"recipe", "-", "1"}]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"Intersection", "[", 
      RowBox[{"native", ",", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"{", "code", "}"}], ",", "_String", ",", "Infinity"}], 
        "]"}]}], "]"}]}], "}"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"crossRefCookbookChapter", "[", 
    RowBox[{"ch_Integer", ",", "path_String"}], "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "nb", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"nb", " ", "=", " ", 
       RowBox[{"NotebookOpen", "[", 
        RowBox[{"path", ",", 
         RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"crossRefCookbookChapter", "[", 
       RowBox[{"ch", ",", 
        RowBox[{"NotebookGet", "[", "nb", "]"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"crossRefCookbookChapter", "[", 
   RowBox[{"ch_Integer", ",", "nb_Notebook"}], "]"}], " ", ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"native", ",", "chapter", ",", "cells", ",", " ", "recipes", ",", 
      RowBox[{"recipe", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"chapter", " ", "=", " ", "ch"}], ";", "\[IndentingNewLine]", 
     RowBox[{"native", " ", "=", " ", 
      RowBox[{"ToString", "/@", " ", 
       RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cells", " ", "=", " ", 
      RowBox[{"Cases", "[", 
       RowBox[{"nb", ",", " ", 
        RowBox[{"Cell", "[", 
         RowBox[{"_", ",", " ", 
          RowBox[{"\"\<Heading1\>\"", " ", "|", " ", "\"\<Input\>\""}], ",", 
          "___"}], "]"}], ",", " ", "Infinity"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"recipes", " ", "=", " ", 
      RowBox[{"GatherBy", "[", 
       RowBox[{"cells", ",", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"cell", ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MatchQ", "[", 
             RowBox[{"cell", ",", 
              RowBox[{"Cell", "[", 
               RowBox[{"_", ",", "\"\<Heading1\>\"", ",", "___"}], "]"}]}], 
             "]"}], ",", " ", 
            RowBox[{"++", "recipe"}], ",", "recipe"}], "]"}]}], "]"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "  ", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{"crossRef", ",", "recipes"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.46792824766321*^9, {3.4679291105574303`*^9, 3.4679291142675343`*^9}},
 CellLabel->"In[518]:="],

Cell["\<\
Here I run the transformation against Chapter 5\[CloseCurlyQuote]s notebook.\
\>", "Text",
 CellChangeTimes->{{3.467928256918614*^9, 3.4679283104885187`*^9}, 
   3.4729138591828117`*^9, 3.4729148600175133`*^9}],

Cell[BoxData[
 RowBox[{"crossRefCookbookChapter", "[", 
  RowBox[{"5", ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<Strings.nb\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.46792824766321*^9, {3.4679283151791077`*^9, 3.467928317555028*^9}, 
   3.472923382265862*^9},
 CellLabel->"In[521]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"5.0\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"CharacterEncoding\"\>", ",", "\<\"FromCharacterCode\"\>", 
       ",", "\<\"IgnoreCase\"\>", ",", "\<\"Input\"\>", 
       ",", "\<\"NumberString\"\>", ",", "\<\"Partition\"\>", 
       ",", "\<\"StringMatchQ\"\>", ",", "\<\"TableForm\"\>", 
       ",", "\<\"ToCharacterCode\"\>", ",", "\<\"ToString\"\>", 
       ",", "\<\"True\"\>", ",", "\<\"$CharacterEncoding\"\>", 
       ",", "\<\"$CharacterEncodings\"\>", 
       ",", "\<\"$SystemCharacterEncoding\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.1\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Greater\"\>", ",", "\<\"GreaterEqual\"\>", 
       ",", "\<\"Input\"\>", ",", "\<\"Less\"\>", ",", "\<\"LessEqual\"\>", 
       ",", "\<\"Order\"\>", ",", "\<\"Protect\"\>", 
       ",", "\<\"Unprotect\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.2\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Block\"\>", ",", "\<\"DateList\"\>", 
       ",", "\<\"DatePattern\"\>", ",", "\<\"DatePlus\"\>", 
       ",", "\<\"DateString\"\>", ",", "\<\"Except\"\>", 
       ",", "\<\"FileNameJoin\"\>", ",", "\<\"IgnoreCase\"\>", 
       ",", "\<\"Import\"\>", ",", "\<\"Input\"\>", ",", "\<\"InputForm\"\>", 
       ",", "\<\"N\"\>", ",", "\<\"NotebookDirectory\"\>", 
       ",", "\<\"NumberString\"\>", ",", "\<\"RegularExpression\"\>", 
       ",", "\<\"Riffle\"\>", ",", "\<\"Shortest\"\>", 
       ",", "\<\"ShortestMatch\"\>", ",", "\<\"StringCases\"\>", 
       ",", "\<\"StringDrop\"\>", ",", "\<\"StringJoin\"\>", 
       ",", "\<\"StringReplace\"\>", ",", "\<\"StringReplacePart\"\>", 
       ",", "\<\"ToExpression\"\>", ",", "\<\"ToString\"\>", 
       ",", "\<\"True\"\>", ",", "\<\"Whitespace\"\>"}], "}"}]}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"5.3\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"All\"\>", ",", "\<\"Except\"\>", ",", "\<\"False\"\>", 
       ",", "\<\"IgnoreCase\"\>", ",", "\<\"Input\"\>", 
       ",", "\<\"Overlaps\"\>", ",", "\<\"RegularExpression\"\>", 
       ",", "\<\"Repeated\"\>", ",", "\<\"Return\"\>", 
       ",", "\<\"Shortest\"\>", ",", "\<\"StringCases\"\>", 
       ",", "\<\"StringJoin\"\>", ",", "\<\"StringTake\"\>", 
       ",", "\<\"TableForm\"\>", ",", "\<\"True\"\>", 
       ",", "\<\"WordBoundary\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.4\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Array\"\>", ",", "\<\"Ceiling\"\>", ",", "\<\"Clear\"\>", 
       ",", "\<\"Input\"\>", ",", "\<\"InputForm\"\>", ",", "\<\"Log\"\>", 
       ",", "\<\"Mean\"\>", ",", "\<\"Nest\"\>", ",", "\<\"StringJoin\"\>", 
       ",", "\<\"StringTake\"\>", ",", "\<\"Table\"\>", 
       ",", "\<\"Timing\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.5\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"DatePattern\"\>", ",", "\<\"False\"\>", 
       ",", "\<\"FileNameJoin\"\>", ",", "\<\"FromDigits\"\>", 
       ",", "\<\"Import\"\>", ",", "\<\"Input\"\>", ",", "\<\"Length\"\>", 
       ",", "\<\"NotebookDirectory\"\>", ",", "\<\"NumberString\"\>", 
       ",", "\<\"OddQ\"\>", ",", "\<\"Overlaps\"\>", ",", "\<\"Pick\"\>", 
       ",", "\<\"Range\"\>", ",", "\<\"RegularExpression\"\>", 
       ",", "\<\"SpellingCorrection\"\>", ",", "\<\"StringDrop\"\>", 
       ",", "\<\"StringFreeQ\"\>", ",", "\<\"StringMatchQ\"\>", 
       ",", "\<\"StringPosition\"\>", ",", "\<\"StringTake\"\>", 
       ",", "\<\"TableForm\"\>", ",", "\<\"Transpose\"\>", 
       ",", "\<\"True\"\>", ",", "\<\"With\"\>"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.6\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Blue\"\>", ",", "\<\"Bold\"\>", ",", "\<\"Brown\"\>", 
       ",", "\<\"Except\"\>", ",", "\<\"FileNameJoin\"\>", 
       ",", "\<\"FontColor\"\>", ",", "\<\"FontSlant\"\>", 
       ",", "\<\"FontWeight\"\>", ",", "\<\"Import\"\>", ",", "\<\"Input\"\>",
        ",", "\<\"Italic\"\>", ",", "\<\"NotebookDirectory\"\>", 
       ",", "\<\"Red\"\>", ",", "\<\"Row\"\>", ",", "\<\"StringSplit\"\>", 
       ",", "\<\"Style\"\>", ",", "\<\"WhitespaceCharacter\"\>"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.7\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"And\"\>", ",", "\<\"Block\"\>", ",", "\<\"Characters\"\>", 
       ",", "\<\"Complement\"\>", ",", "\<\"DictionaryLookup\"\>", 
       ",", "\<\"DistanceFunction\"\>", ",", "\<\"EditDistance\"\>", 
       ",", "\<\"False\"\>", ",", "\<\"If\"\>", ",", "\<\"IgnoreCase\"\>", 
       ",", "\<\"Input\"\>", ",", "\<\"Intersection\"\>", 
       ",", "\<\"MapThread\"\>", ",", "\<\"MemberQ\"\>", 
       ",", "\<\"Module\"\>", ",", "\<\"Nearest\"\>", ",", "\<\"SameTest\"\>",
        ",", "\<\"StringCount\"\>", ",", "\<\"StringReplace\"\>", 
       ",", "\<\"StringReverse\"\>", ",", "\<\"Tally\"\>", 
       ",", "\<\"Timing\"\>", ",", "\<\"True\"\>", ",", "\<\"WordData\"\>"}], 
      "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.8\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Apply\"\>", ",", "\<\"Cases\"\>", 
       ",", "\<\"FileNameJoin\"\>", ",", "\<\"Head\"\>", 
       ",", "\<\"ImageSize\"\>", ",", "\<\"Import\"\>", 
       ",", "\<\"Infinity\"\>", ",", "\<\"Input\"\>", 
       ",", "\<\"InputForm\"\>", ",", "\<\"List\"\>", 
       ",", "\<\"NotebookDirectory\"\>", ",", "\<\"Symbol\"\>", 
       ",", "\<\"TableForm\"\>", ",", "\<\"TreeForm\"\>", 
       ",", "\<\"XMLElement\"\>", ",", "\<\"XMLObject\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.9\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Apply\"\>", ",", "\<\"Cases\"\>", 
       ",", "\<\"ExportString\"\>", ",", "\<\"FileNameJoin\"\>", 
       ",", "\<\"If\"\>", ",", "\<\"Import\"\>", ",", "\<\"Infinity\"\>", 
       ",", "\<\"Input\"\>", ",", "\<\"Join\"\>", ",", "\<\"List\"\>", 
       ",", "\<\"MatrixForm\"\>", ",", "\<\"NotebookDirectory\"\>", 
       ",", "\<\"NumberString\"\>", ",", "\<\"Rule\"\>", 
       ",", "\<\"StringMatchQ\"\>", ",", "\<\"StringReplace\"\>", 
       ",", "\<\"ToExpression\"\>", ",", "\<\"XMLElement\"\>"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.10\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"ClearAll\"\>", ",", "\<\"ExportString\"\>", 
       ",", "\<\"FileNameJoin\"\>", ",", "\<\"Import\"\>", 
       ",", "\<\"Input\"\>", ",", "\<\"List\"\>", ",", "\<\"Module\"\>", 
       ",", "\<\"NotebookDirectory\"\>", ",", "\<\"Order\"\>", 
       ",", "\<\"Rule\"\>", ",", "\<\"Sort\"\>", ",", "\<\"Split\"\>", 
       ",", "\<\"StringJoin\"\>", ",", "\<\"StringReplace\"\>", 
       ",", "\<\"ToExpression\"\>", ",", "\<\"ToString\"\>", 
       ",", "\<\"XMLElement\"\>", ",", "\<\"XMLObject\"\>"}], "}"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"5.11\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"Append\"\>", ",", "\<\"Apply\"\>", ",", "\<\"Ceiling\"\>", 
       ",", "\<\"Drop\"\>", ",", "\<\"First\"\>", ",", "\<\"Flatten\"\>", 
       ",", "\<\"FoldList\"\>", ",", "\<\"Format\"\>", ",", "\<\"Hold\"\>", 
       ",", "\<\"HoldAll\"\>", ",", "\<\"If\"\>", ",", "\<\"ImageSize\"\>", 
       ",", "\<\"Infinity\"\>", ",", "\<\"Input\"\>", 
       ",", "\<\"InputForm\"\>", ",", "\<\"Last\"\>", ",", "\<\"Length\"\>", 
       ",", "\<\"List\"\>", ",", "\<\"Map\"\>", ",", "\<\"MemberQ\"\>", 
       ",", "\<\"Module\"\>", ",", "\<\"N\"\>", ",", "\<\"Plus\"\>", 
       ",", "\<\"RandomInteger\"\>", ",", "\<\"RandomReal\"\>", 
       ",", "\<\"Rest\"\>", ",", "\<\"SeedRandom\"\>", 
       ",", "\<\"SetAttributes\"\>", ",", "\<\"StringJoin\"\>", 
       ",", "\<\"StringReplacePart\"\>", ",", "\<\"StringTake\"\>", 
       ",", "\<\"Table\"\>", ",", "\<\"TableForm\"\>", ",", "\<\"Top\"\>", 
       ",", "\<\"ToString\"\>", ",", "\<\"ToUpperCase\"\>", 
       ",", "\<\"TreeForm\"\>", ",", "\<\"Union\"\>", ",", "\<\"While\"\>"}], 
      "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.467928323111248*^9, 3.4679291248718643`*^9},
 CellLabel->"Out[521]="],

Cell["Discussion", "Heading2", "TopOfPage"],

Cell[TextData[{
 "The easiest way to get a notebook into another form is to leverage the \
conversions built into ",
 StyleBox["Save As", "Literal"],
 ". As of Mathematica 7, you can save a notebook as PDF, XHTML + MathML, \
plain text, Rich Text Format (RTF), and PostScript. However, if these formats \
are not what you\[CloseCurlyQuote]re after, you should not be afraid to take \
matters into your own hands as I did in the solution."
}], "Text",
 CellChangeTimes->{{3.4679036981996098`*^9, 3.4679038630855083`*^9}, {
   3.467928355170629*^9, 3.4679284168607073`*^9}, {3.4679335441906347`*^9, 
   3.467933568649583*^9}, {3.472913869242221*^9, 3.472913900882263*^9}, 
   3.472914692135833*^9, 3.4729148634532747`*^9}],

Cell[TextData[{
 "The command ",
 StyleBox["NotebookOpen", "Literal"],
 " is used to load the notebook from disk and produce a ",
 StyleBox["NotebookObject", "Literal"],
 ". You use the option ",
 StyleBox["Visible \[Rule] False", "Literal"],
 " to prevent the notebook from being opened in a new window. ",
 StyleBox["NotebookGet", "Literal"],
 " is applied to the ",
 StyleBox["Notebook\[DiscretionaryHyphen]Object", "Literal"],
 " to return the raw symbolic form of the notebook for manipulation. Here the \
bulk of the work is done by the second version of ",
 StyleBox["crossRefCookbookChapter", "Literal"],
 ". ",
 StyleBox["Cases", "Literal"],
 " is used to parse out ",
 StyleBox["Cell", "Literal"],
 " expressions with the style ",
 StyleBox["Heading1", "Literal"],
 " or ",
 StyleBox["Input", "Literal"],
 ". The ",
 StyleBox["Heading1", "Literal"],
 " cells represent the recipe titles, and the ",
 StyleBox["Input", "Literal"],
 " cells are the ones you want to cross reference. ",
 StyleBox["GatherBy", "Literal"],
 " groups input cells with their associated recipes, and then ",
 StyleBox["MapIndexed", "Literal"],
 " processes each recipe using the index and the chapter number to generate \
the recipe number. T",
 StyleBox["he mapped function, ",
  FontTracking->"SemiCondensed"],
 StyleBox["crossRef", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", extracts strings and",
  FontTracking->"SemiCondensed"],
 " uses ",
 StyleBox["Intersection", "Literal"],
 " to locate just tho",
 StyleBox["se strings that are in the set of native ",
  FontTracking->"SemiCondensed"],
 StyleBox["System`", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[" symbols.",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.4679284246688557`*^9, 3.467928821596333*^9}, {
   3.467928869110693*^9, 3.467929080286672*^9}, {3.467929133899913*^9, 
   3.46792916372194*^9}, {3.468014470873395*^9, 3.468014472551031*^9}, {
   3.4729139215817842`*^9, 3.472914012330768*^9}, 3.472914693949048*^9, {
   3.472921916192246*^9, 3.4729219225467777`*^9}}],

Cell["\<\
One of the handiest uses of notebook manipulation is to create small bulk \
conversion utilities. For example, imagine you had a large number of \
notebooks and you needed to change one style into another. This would be \
tedious to do by hand, but is a breeze with Mathematica. The converter would \
look something like this.\
\>", "Text",
 CellChangeTimes->{{3.467929426237277*^9, 3.46792958835394*^9}, {
   3.4679297736658287`*^9, 3.467929794922323*^9}, {3.4679335771352673`*^9, 
   3.467933582735572*^9}, {3.472914018103442*^9, 3.472914027142208*^9}, 
   3.472914695377928*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "convertStyle", "]"}], ";", 
   RowBox[{
    RowBox[{"convertStyle", "[", 
     RowBox[{
     "path_String", ",", " ", "saveAs_String", ",", " ", "fromStyle_String", 
      ",", "toStyle_String"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"NotebookSave", "[", 
       RowBox[{
        RowBox[{"convertStyle", "[", 
         RowBox[{
          RowBox[{"NotebookOpen", "[", 
           RowBox[{"path", ",", 
            RowBox[{"Visible", "\[Rule]", "False"}]}], "]"}], ",", 
          "fromStyle", ",", "toStyle"}], "]"}], ",", "saveAs"}], "]"}]}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"convertStyle", "[", 
    RowBox[{
    "nb_NotebookObject", ",", " ", "fromStyle_String", ",", 
     "toStyle_String"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", 
     RowBox[{"NotebookPut", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookGet", "[", "nb", "]"}], "/.", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"c_", ",", " ", "fromStyle", ",", "o___"}], "]"}], 
         "\[RuleDelayed]", 
         RowBox[{"Cell", "[", 
          RowBox[{"c", ",", "toStyle", ",", "o"}], "]"}]}]}], ",", "nb"}], 
      "]"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.4679296083267317`*^9, 3.467929756940536*^9}, {
   3.467929930886191*^9, 3.467930102916873*^9}, {3.467930592272208*^9, 
   3.467930665267906*^9}, 3.467930698846676*^9},
 CellLabel->"In[541]:="],

Cell[TextData[{
 "Here I introduce ",
 StyleBox["NotebookPut", "Literal"],
 " and ",
 StyleBox["NotebookSave", "Literal"],
 ", which are ",
 StyleBox["used to modify the orig",
  FontTracking->"Extended"],
 StyleBox["inal notebook object and save it back to disk, respectively. Here \
is an example of usage:",
  FontTracking->"Plain"]
}], "Text",
 CellChangeTimes->{{3.467929805146645*^9, 3.46792987002115*^9}, {
   3.467930115960363*^9, 3.467930167689118*^9}, {3.467930752864156*^9, 
   3.467930767673313*^9}, {3.4729140413389263`*^9, 3.472914046126837*^9}, 
   3.4729146976141233`*^9}],

Cell[BoxData[
 RowBox[{"convertStyle", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<TestStyleConvert.nb\>\""}], ",", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], " ", "<>", " ", 
    "\"\<TestStyleConvertOut.nb\>\""}], ",", "\"\<Section\>\"", ",", " ", 
   "\"\<Subsection\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.467930291544734*^9, 3.467930406415015*^9}},
 CellLabel->"In[543]:="],

Cell["See Also", "Heading2", "TopOfPage"],

Cell[TextData[{
 "Advanced notebook manipulations often require that you convert between \
strings, ",
 StyleBox["boxes, and expressions.",
  FontTracking->"Plain"],
 StyleBox[" See the ",
  FontTracking->"SemiCondensed"],
 StyleBox["tutorial/ConvertingBetweenStringsBoxes\[DiscretionaryHyphen]\
AndExpressions", "URL",
  FontTracking->"SemiCondensed"],
 " in the Mathematica documentation for details."
}], "Text",
 CellChangeTimes->{{3.467930945712658*^9, 3.467931088981173*^9}, 
   3.472914050945973*^9, {3.472922004832861*^9, 3.472922006393134*^9}, {
   3.4742246830622473`*^9, 3.474224712074183*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Calling into the Mathematica Frontend"
}], "Heading1",
 CellMargins->{{0, 72}, {2, 14}},
 CellChangeTimes->{{3.44917191965625*^9, 3.44917192890625*^9}, {
  3.4679311353840933`*^9, 3.467931154954761*^9}, {3.472914064312696*^9, 
  3.472914065599572*^9}},
 CellTags->"Calling into the Mathematica Front-End"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to programmatically invoke functionality that is provided by the \
frontend rather than the kernel.\
\>", "Text",
 CellChangeTimes->{{3.467931167128003*^9, 3.467931208577332*^9}, {
   3.467933599705161*^9, 3.4679336034557753`*^9}, {3.468014488198927*^9, 
   3.468014489142733*^9}, 3.472914069583704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2",
 CellMargins->{{0, 36}, {0, 13}}],

Cell[TextData[{
 "There are certain operations that are executed by the Mathematica frontend \
rather than the kernel. If you are running a program from the frontend, you \
generally don\[CloseCurlyQuote]t need to worry about the distinction, because \
Mathematica is designed to make the distinction appear seamless. ",
 "However",
 ", you can bypass the kernel when using the frontend with ",
 StyleBox["FrontEndExecute.", "Literal"],
 " "
}], "Text",
 CellChangeTimes->{
  3.4679982985284348`*^9, {3.467998368279049*^9, 3.467998374877605*^9}, {
   3.46800174600301*^9, 3.468001770938305*^9}, {3.468002133144092*^9, 
   3.4680021434272823`*^9}, {3.468002316458053*^9, 3.468002443124674*^9}, {
   3.468002486466115*^9, 3.4680025007210293`*^9}, {3.46858527497999*^9, 
   3.468585310196918*^9}, {3.4685877238996572`*^9, 3.468587884281225*^9}, {
   3.472914074321186*^9, 3.4729140983526077`*^9}, 3.472914866532372*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEnd`CellPrint", "[", 
   RowBox[{"Cell", "[", 
    RowBox[{"\"\<No Help From Kernel\>\"", ",", "\"\<Emphasis\>\""}], "]"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4680025400074663`*^9, 3.4680025588995*^9}, {
  3.4685879177486134`*^9, 3.468587926681438*^9}, {3.468588110612934*^9, 
  3.468588112660137*^9}, {3.4685881714140663`*^9, 3.468588272641555*^9}, {
  3.468588329548676*^9, 3.468588331524521*^9}, {3.4685885644693213`*^9, 
  3.468588568684928*^9}},
 CellLabel->"In[2]:="],

Cell[TextData[StyleBox["No Help From Kernel",
 FontFamily->"Birka Italic",
 FontSize->10.199996948242188`,
 FontSlant->"Plain"]], "Emphasis",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.4685885698372917`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
You can also invoke actions typically performed via interaction with the \
frontend\[CloseCurlyQuote]s menu. For example, the following will open the \
Font dialog.\
\>", "Text",
 CellChangeTimes->{{3.4685885042002707`*^9, 3.468588504463931*^9}, {
   3.46858858765289*^9, 3.4685885957233973`*^9}, {3.468588766204102*^9, 
   3.468588848013492*^9}, 3.468695075507093*^9, {3.472914108753055*^9, 
   3.4729141250737133`*^9}, 3.472914869417831*^9}],

Cell[BoxData[
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEndToken", "[", "\"\<FontPanel\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.468588752497558*^9},
 CellLabel->"In[5]:="],

Cell[TextData[{
 "Whereas ",
 StyleBox["FrontEndExecute", "Literal"],
 " is intended to be used in the",
 StyleBox[" frontend, ",
  FontTracking->"Extended"],
 StyleBox["UsingFrontEnd", "Literal",
  FontTracking->"Extended"],
 StyleBox[" is in",
  FontTracking->"Extended"],
 "tended to be executed from a kernel",
 StyleBox[" session to allow the kernel to invoke an oper",
  FontTracking->"Extended"],
 "ation in the frontend.",
 StyleBox[" The output here was created by executing the kernel di",
  FontTracking->"Extended"],
 "rectly on the command line."
}], "Text",
 CellChangeTimes->{{3.468004006674789*^9, 3.4680040343957*^9}, {
   3.46858788840904*^9, 3.468587889185417*^9}, {3.4685888764900627`*^9, 
   3.468589023372532*^9}, {3.46858920937178*^9, 3.468589326560115*^9}, 
   3.46869507721165*^9, {3.472914111865374*^9, 3.472914135098259*^9}, 
   3.4742247305719137`*^9}],

Cell["\<\
In[1]:= nb = UsingFrontEnd[NotebookCreate[]]

Out[1]= -NotebookObject-\
\>", "Code",
 CellChangeTimes->{{3.468589182245034*^9, 3.4685891982030077`*^9}}],

Cell["\<\
Note that a frontend must be installed on the system for this to work.\
\>", "Text",
 CellChangeTimes->{{3.468004006674789*^9, 3.4680040343957*^9}, {
   3.46858788840904*^9, 3.4685878891841917`*^9}, 3.468589271870121*^9, 
   3.472914139996632*^9}],

Cell["Discussion", "Heading2", "ProductionPageBreak",
 CellMargins->{{0, 36}, {0, 4}}],

Cell["\<\
You can see all the commands that can be executed directly in the frontend by \
executing\
\>", "Text",
 CellChangeTimes->{{3.4680030159662247`*^9, 3.468003069237815*^9}, 
   3.4680049462008457`*^9, {3.4685893823784037`*^9, 3.468589397003066*^9}, {
   3.472914144499611*^9, 3.472914146586506*^9}}],

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<FrontEnd`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.468003051183578*^9, 3.468003061575335*^9}}],

Cell[TextData[{
 "Sometimes you want to invoke features in the frontend that are",
 StyleBox[" not available via func",
  FontTracking->"SemiCondensed"],
 "tions. For example, while doing some notebook manipulations a la ",
 ButtonBox["Recipe 18.7",
  BaseStyle->"Hyperlink",
  ButtonData->"Transforming Notebooks Into Other Forms"],
 ", you wish to get the functionality available by selecting a cell and using \
CopyAs, Plain Text. You can do this like so:"
}], "Text",
 CellChangeTimes->{{3.4680029802742968`*^9, 3.468003008458982*^9}, {
   3.468003074309977*^9, 3.468003260869351*^9}, {3.4680049481134663`*^9, 
   3.468004962410244*^9}, {3.46869508621236*^9, 3.468695087930698*^9}, {
   3.472914150664919*^9, 3.472914198069878*^9}, 3.4742247435496683`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"someCell", " ", "=", " ", 
   RowBox[{"Cell", "[", 
    RowBox[{
     RowBox[{"BoxData", "[", 
      RowBox[{"RowBox", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<N\>\"", ",", "\"\<[\>\"", ",", 
         RowBox[{"FractionBox", "[", 
          RowBox[{"\"\<1\>\"", ",", "\"\<9999\>\""}], "]"}], ",", 
         "\"\<]\>\""}], "}"}], "]"}], "]"}], ",", "\"\<Input\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"First", "[", 
   RowBox[{"MathLink`CallFrontEnd", "[", "\[IndentingNewLine]", 
    RowBox[{"FrontEnd`ExportPacket", "[", 
     RowBox[{"someCell", ",", "\"\<PlainText\>\""}], "]"}], "]"}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.468003319539461*^9, 3.468003337556013*^9}, {
   3.468003398252701*^9, 3.468003417583651*^9}, {3.4680034593480463`*^9, 
   3.468003466041782*^9}, {3.468003509206359*^9, 3.4680035768525543`*^9}, 
   3.4680036626782722`*^9, {3.468003705572426*^9, 3.468003748586495*^9}, {
   3.468003832414083*^9, 3.468003851976451*^9}},
 CellLabel->"In[885]:="],

Cell[BoxData["\<\"N[1/9999]\"\>"], "Output",
 CellChangeTimes->{{3.4680037334983664`*^9, 3.468003749411104*^9}, 
   3.46800385281602*^9},
 CellLabel->"Out[886]="]
}, Open  ]],

Cell["See Also", "Heading2",
 CellChangeTimes->{{3.468589455965171*^9, 3.468589458149022*^9}}]
}, Open  ]],

Cell[TextData[{
 "See the tutorial ",
 StyleBox["ExecutingNotebookCommandsDirectly", "URL"],
 StyleBox["InTheFrontEnd", "URL",
  FontTracking->"SemiCondensed"],
 StyleBox[" for more de",
  FontTracking->"SemiCondensed"],
 "tails on frontend execution."
}], "Text",
 CellChangeTimes->{{3.468589472813724*^9, 3.4685894839018087`*^9}, {
   3.46858954745573*^9, 3.468589554272663*^9}, {3.4685896167474623`*^9, 
   3.468589626350213*^9}, 3.472914211373527*^9}],

Cell[TextData[{
 "S",
 StyleBox["ee ",
  FontTracking->"Extended"],
 StyleBox["guide/FrontEndTokens", "URL",
  FontTracking->"Extended"],
 StyleBox[" for tokens that can be used with ",
  FontTracking->"Extended"],
 StyleBox["FrontEnd\[DiscretionaryHyphen]Token", "Literal",
  FontTracking->"Extended"],
 " or ",
 StyleBox["FrontEndTokenExecute", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.46858962751022*^9, 3.468589645212187*^9}, {
   3.468589680814114*^9, 3.468589751392864*^9}, 3.4729142149340067`*^9, {
   3.472922276761047*^9, 3.472922278564452*^9}, 3.474224754897215*^9}],

Cell[TextData[{
 "Also consult ",
 StyleBox["tutorial/ManipulatingTheFront", "URL"],
 StyleBox["EndFromTheKernel", "URL",
  FontTracking->"SemiCondensed"],
 StyleBox[" for further commands ",
  FontTracking->"SemiCondensed"],
 "useful for controlling the frontend from the kernel."
}], "Text",
 CellChangeTimes->{{3.4685898395413313`*^9, 3.468589926759078*^9}, 
   3.468695107436639*^9, 3.472914223646201*^9}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]",
 "Initializing and Cleaning Up Automatically"
}], "Heading1",
 CellChangeTimes->{{3.467995571834264*^9, 3.467995584544907*^9}, {
  3.467997280819292*^9, 3.4679972846830873`*^9}},
 CellTags->"Initializing and Cleaning Up Automatically"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to automatically execute code whenever the kernel or frontend \
starts. You may also want to execute code when the kernel is terminated.\
\>", "Text",
 CellChangeTimes->{{3.4679955906334743`*^9, 3.467995705325819*^9}, 
   3.468004966153915*^9, {3.472914233332653*^9, 3.472914234446842*^9}, 
   3.472914352220603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solution", "Heading2"],

Cell[TextData[{
 "There are several ",
 StyleBox["init.m", "Emphasis"],
 " files in which you can place function definitions or code you want \
executed automatically."
}], "Text",
 CellChangeTimes->{{3.467997057659958*^9, 3.467997082723379*^9}, {
  3.467997146918088*^9, 3.467997197367847*^9}, {3.472914363061515*^9, 
  3.472914364156672*^9}, {3.4764623906801357`*^9, 3.476462393263623*^9}}],

Cell["\<\
To execute code on kernel start for every user, modify the file given by\
\>", "Text",
 CellChangeTimes->{{3.467996749512038*^9, 3.467996803456506*^9}, {
  3.467996844010338*^9, 3.467996853162491*^9}, {3.472914372484725*^9, 
  3.472914376324853*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToFileName", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$BaseDirectory", ",", "\"\<Kernel\>\""}], "}"}], ",", 
   "\"\<init.m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.46799682639491*^9, 3.4679968321555767`*^9}, {
  3.4679968660464973`*^9, 3.467996895886527*^9}},
 CellLabel->"In[865]:="],

Cell[BoxData["\<\"/Library/Mathematica/Kernel/init.m\"\>"], "Output",
 CellChangeTimes->{3.467996896712133*^9},
 CellLabel->"Out[865]="]
}, Open  ]],

Cell[TextData[{
 "To execute code on kernel start for the currently ",
 StyleBox["logged-in user, modify the file given by",
  FontTracking->"SemiCondensed"]
}], "Text",
 CellChangeTimes->{{3.467996919710585*^9, 3.4679969473821297`*^9}, {
  3.47291438792127*^9, 3.472914391077241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToFileName", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$UserBaseDirectory", ",", "\"\<Kernel\>\""}], "}"}], ",", 
   "\"\<init.m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.4679969564343443`*^9, 3.467996968081132*^9}},
 CellLabel->"In[866]:="],

Cell[BoxData["\<\"/Users/smangano/Library/Mathematica/Kernel/init.m\"\>"], \
"Output",
 CellChangeTimes->{3.4679969691167803`*^9},
 CellLabel->"Out[866]="]
}, Open  ]],

Cell["\<\
To execute code on frontend start for every user, modify the file given by\
\>", "Text",
 CellChangeTimes->{{3.467996749512038*^9, 3.467996803456506*^9}, {
  3.467996844010338*^9, 3.467996853162491*^9}, {3.46799699243274*^9, 
  3.4679969969520693`*^9}, {3.472914399174139*^9, 3.472914405537335*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToFileName", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$BaseDirectory", ",", "\"\<FrontEnd\>\""}], "}"}], ",", 
   "\"\<init.m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.46799682639491*^9, 3.4679968321555767`*^9}, {
  3.4679968660464973`*^9, 3.467996895886527*^9}, {3.467997014740142*^9, 
  3.46799701848391*^9}},
 CellLabel->"In[867]:="],

Cell[BoxData["\<\"/Library/Mathematica/FrontEnd/init.m\"\>"], "Output",
 CellChangeTimes->{3.4679970208984413`*^9},
 CellLabel->"Out[867]="]
}, Open  ]],

Cell["\<\
To execute code on frontend start for the currently logged-in user, modify \
the file given by\
\>", "Text",
 CellChangeTimes->{{3.467996919710585*^9, 3.4679969473821297`*^9}, {
  3.467997035482504*^9, 3.4679970388576593`*^9}, {3.472914400877892*^9, 
  3.472914410182248*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToFileName", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"$UserBaseDirectory", ",", "\"\<FrontEnd\>\""}], "}"}], ",", 
   "\"\<init.m\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.4679969564343443`*^9, 3.467996968081132*^9}, 
   3.467997045870982*^9},
 CellLabel->"In[868]:="],

Cell[BoxData["\<\"/Users/smangano/Library/Mathematica/FrontEnd/init.m\"\>"], \
"Output",
 CellChangeTimes->{3.4679969691167803`*^9, 3.467997047817218*^9},
 CellLabel->"Out[868]="]
}, Open  ]],

Cell["\<\
Clearly the results will vary depending on your particular OS.\
\>", "Text",
 CellChangeTimes->{{3.4680145299280787`*^9, 3.4680145575771112`*^9}, {
  3.4729144183428*^9, 3.472914424694996*^9}}],

Cell[TextData[{
 "Within these files, you can also modify the variable ",
 StyleBox["$Epilog", "Literal"],
 StyleBox[" to define code that exe",
  FontTracking->"SemiCondensed"],
 "cutes right before the kernel exits."
}], "Text",
 CellChangeTimes->{{3.4679972130484056`*^9, 3.4679972667225723`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Heading2"],

Cell[TextData[{
 "If you make frequent use of some utility functions or constants, you can \
make sure they are always available in every session. For example, if you \
always use a package called ",
 StyleBox["Essential`", "Literal"],
 ", you can add ",
 StyleBox["Needs[\"Essential`\"]", "Literal"],
 " to the user-level version of ",
 StyleBox["init.m", "Emphasis"],
 " for the kernel. "
}], "Text",
 CellChangeTimes->{{3.467997309036296*^9, 3.467997396239375*^9}, {
   3.467997426898337*^9, 3.467997540253126*^9}, {3.472914431851668*^9, 
   3.472914447342752*^9}, 3.476462411797711*^9}],

Cell["\<\
Note that user-level initializations come after system-wide ones, so if you \
want to override some system-level definition, you can do so.\
\>", "Text",
 CellChangeTimes->{{3.4679975823523073`*^9, 3.467997620808404*^9}, {
  3.4729144614848833`*^9, 3.4729144822040377`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["See Also", "Heading2"],

Cell[TextData[{
 ButtonBox["Recipe 18.10",
  BaseStyle->"Hyperlink",
  ButtonData->"Customizing Front-End User Interaction"],
 " shows a use case for ",
 StyleBox["init.m", "Emphasis"],
 " and ",
 StyleBox["$Epilog", "Literal"],
 "."
}], "Text",
 CellChangeTimes->{{3.467997652091312*^9, 3.467997689571093*^9}, {
  3.467997726777316*^9, 3.467997726799852*^9}, {3.4679980422261667`*^9, 
  3.4679980422281218`*^9}, {3.472914498803244*^9, 3.472914500938533*^9}}],

Cell[TextData[{
 "See ",
 StyleBox["ref/file/init.m", "URL"],
 " in the Mathematica documentation for more information."
}], "Text",
 CellChangeTimes->{{3.467998052626856*^9, 3.467998073505925*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["ChapterLabel"],
 ".",
 
 CounterBox["Heading1"],
 "\[ThickSpace]\[ThickSpace]Customizing Frontend User Interaction"
}], "Heading1", "ProductionPageBreak",
 CellChangeTimes->{{3.44917191965625*^9, 3.44917192890625*^9}, {
   3.4679311353840933`*^9, 3.467931154954761*^9}, {3.4679844198883123`*^9, 
   3.467984463744273*^9}, 3.474224804721614*^9, 3.474387559166196*^9},
 CellTags->"Customizing Front-End User Interaction"],

Cell[CellGroupData[{

Cell["Problem", "Heading2WithHeadAbove"],

Cell["\<\
You want to hook into the processing performed by the frontend as you type \
and evaluate expressions.\
\>", "Text",
 CellChangeTimes->{{3.467931167128003*^9, 3.467931208577332*^9}, {
  3.467933599705161*^9, 3.4679336034557753`*^9}, {3.467984516620245*^9, 
  3.467984567588422*^9}, {3.4729145332853107`*^9, 3.472914536613081*^9}}]
}, Open  ]],

Cell["Solution", "Heading2"],

Cell[TextData[{
 "You can intercept Mathematica\[CloseCurlyQuote]s message loop at various \
stages by defining functions for ",
 StyleBox["$PreRead", "Literal"],
 ", ",
 StyleBox["$Pre", "Literal"],
 ", ",
 StyleBox["$Post", "Literal"],
 ", ",
 StyleBox["$PrePrint", "Literal"],
 ", and ",
 StyleBox["$", "Literal"],
 StyleBox["SyntaxHandler", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[". For example, as an ed",
  FontTracking->"SemiCondensed"],
 "ucator, you might want to study students\[CloseCurlyQuote] ",
 StyleBox["experiences with learning ",
  FontTracking->"SemiCondensed"],
 StyleBox["Mathematica",
  FontSize->10.199996948242188`,
  FontTracking->"SemiCondensed"],
 " ",
 StyleBox["\[InvisibleSpace]",
  FontSize->0],
 "and log their interactions to a file. Here",
 StyleBox[" you can define ",
  FontTracking->"SemiCondensed"],
 StyleBox["$PreRead", "Literal",
  FontTracking->"SemiCondensed"],
 StyleBox[", which intercepts",
  FontTracking->"SemiCondensed"],
 " input before being fed to ",
 StyleBox["Mathematica",
  FontSize->10.199996948242188`],
 "; ",
 StyleBox["$SyntaxHandler", "Literal"],
 ", which is applied to lines with syntax errors; and ",
 StyleBox["$PrePrint", "Literal"],
 ", which gets the results before printing."
}], "Text",
 CellChangeTimes->{{3.4679845802542257`*^9, 3.467984618557989*^9}, {
   3.467984657953909*^9, 3.46798501794981*^9}, 3.468004848557364*^9, {
   3.472914544236168*^9, 3.472914604013111*^9}, {3.4729148721125927`*^9, 
   3.472914875191944*^9}, {3.4729224095736303`*^9, 3.4729224420822163`*^9}, {
   3.472922497703413*^9, 3.472922497842311*^9}, {3.472922968284972*^9, 
   3.472922973164851*^9}, 3.474224811150056*^9, 3.485529688008095*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InitializeStudentMonitoring", "[", "]"}], " ", ":=", " ", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"logFile", ",", "stream"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"logFile", " ", "=", " ", 
      RowBox[{"$UserName", " ", "<>", 
       RowBox[{"DateString", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Year\>\"", ",", "\"\<\>\"", ",", "\"\<Month\>\"", ",", 
          "\"\<\>\"", ",", "\"\<Day\>\"", ",", "\"\<-\>\"", ",", 
          "\"\<Hour24\>\"", ",", "\"\<\>\"", ",", "\"\<Minute\>\"", ",", 
          "\"\<\>\"", ",", "\"\<SecondExact\>\""}], "}"}], "]"}], " ", "<>", 
       " ", "\"\<.log\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stream", " ", "=", " ", 
      RowBox[{"OpenWrite", "[", "logFile", "]"}]}], " ", ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$PreRead", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Write", "[", 
          RowBox[{"stream", ",", "\"\<Input> \>\"", ",", " ", "#"}], "]"}], 
         ";", "#"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"$PrePrint", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Write", "[", 
          RowBox[{"stream", ",", "\"\<Output> \>\"", ",", " ", "#"}], "]"}], 
         ";", "#"}], ")"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"$SyntaxHandler", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Write", "[", 
          RowBox[{
          "stream", ",", "\"\<Syntax:\>\"", ",", "#2", ",", "\"\<> \>\"", " ",
            ",", " ", "#1"}], "]"}], ";", "$Failed"}], ")"}], "&"}]}], ";", 
     "\[IndentingNewLine]", "stream"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.467985041289802*^9, 3.467985073866332*^9}, {
  3.4679865746468763`*^9, 3.4679865987337437`*^9}, {3.4679894887766542`*^9, 
  3.467989497727016*^9}, {3.467989545146558*^9, 3.467989551473007*^9}, {
  3.467990007053874*^9, 3.467990168245503*^9}, {3.4679902371342583`*^9, 
  3.46799024351245*^9}, {3.467990273999002*^9, 3.467990292540042*^9}, {
  3.467990333791216*^9, 3.467990482333584*^9}, {3.4679906711229486`*^9, 
  3.467990733719079*^9}, {3.467990769680039*^9, 3.46799077056882*^9}, {
  3.46799135195265*^9, 3.467991352542767*^9}, {3.4679917205963373`*^9, 
  3.467991759022937*^9}, {3.4679919232233553`*^9, 3.4679919267656317`*^9}, {
  3.467992138319789*^9, 3.4679921390379257`*^9}, {3.46799444972976*^9, 
  3.4679944522402277`*^9}},
 CellLabel->"In[830]:="],

Cell[BoxData[
 RowBox[{
  RowBox[{"StopStudentMonitoring", "[", "stream_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"$PreRead", " ", "=."}], ";", "\[IndentingNewLine]", 
     RowBox[{"$PrePrint", " ", "=."}], ";", "\[IndentingNewLine]", 
     RowBox[{"$SyntaxHandler", " ", "=."}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "stream", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4679944809954777`*^9, 3.4679945756685658`*^9}},
 CellLabel->"In[845]:="],

Cell[TextData[{
 "You can then place a call to ",
 StyleBox["InitializeStudentMonitoring[]", "Literal"],
 " in the ",
 StyleBox["init.m", "Emphasis"],
 " file and set delayed ",
 StyleBox["$Epilog", "Literal"],
 " to ",
 StyleBox["StopStudentMonitoring[Evaluate[stream]]", "Literal"],
 ". "
}], "Text",
 CellChangeTimes->{{3.467990574784547*^9, 3.467990611391775*^9}, 
   3.467994628500352*^9, {3.4679946648952293`*^9, 3.4679947623531637`*^9}, {
   3.467995472802109*^9, 3.4679955230006847`*^9}, {3.468590190649867*^9, 
   3.468590196849765*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"stream", " ", "=", " ", 
   RowBox[{"InitializeStudentMonitoring", "[", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"$Epilog", " ", ":=", 
  RowBox[{"StopStudentMonitoring", "[", 
   RowBox[{"Evaluate", "[", "stream", "]"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.467990568993307*^9, 3.4679905692531424`*^9}, {
  3.467994458080566*^9, 3.467994461471142*^9}, {3.4679947870366507`*^9, 
  3.4679948171098022`*^9}, {3.4685901542599363`*^9, 3.468590161034712*^9}},
 CellLabel->"In[850]:="],

Cell["Discussion", "Heading2", "ProductionPageBreak"],

Cell[TextData[{
 "The solution shows a use case for capturing but not altering session input \
and output. However, you can also imagine advanced use cases where you want \
to use these hooks to do preprocessing or postprocessing. Here I use ",
 StyleBox["$PrePrint", "Literal"],
 " to force any string output into ",
 StyleBox["InputForm", "Literal"],
 " so I can see the quotes."
}], "Text",
 CellChangeTimes->{{3.4679948599411907`*^9, 3.4679949409998617`*^9}, {
   3.467995000363831*^9, 3.467995056997621*^9}, {3.4679952579659986`*^9, 
   3.467995290928823*^9}, 3.4679953684252853`*^9, 3.468004794858176*^9, 
   3.4680048518928633`*^9, {3.47291461473878*^9, 3.472914649872995*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PrePrint", " ", "=", " ", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringQ", "[", "#", "]"}], ",", 
      RowBox[{"InputForm", "[", "#", "]"}], ",", "#"}], "]"}], "&"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.467995083512966*^9, 3.4679951165370207`*^9}, {
  3.467995205694172*^9, 3.46799522586205*^9}},
 CellLabel->"In[859]:="],

Cell[CellGroupData[{

Cell[BoxData["\"\<SomeString\>\""], "Input",
 CellChangeTimes->{{3.467995119950248*^9, 3.4679951224725246`*^9}, {
  3.467995231605341*^9, 3.4679952355893297`*^9}},
 CellLabel->"In[860]:="],

Cell[TextData[StyleBox["\"SomeString\"",
 FontFamily->"WriTheSansMonoCond BoldItalic"]], "Output",
 CellChangeTimes->{3.46799512305591*^9, 3.4679952365400877`*^9},
 CellLabel->"Out[860]="]
}, Open  ]],

Cell["Now revert to default behavior.", "Text",
 CellChangeTimes->{{3.467995314480054*^9, 3.467995328775391*^9}, 
   3.468004857501206*^9}],

Cell[BoxData[
 RowBox[{"$PrePrint", " ", "=."}]], "Input",
 CellChangeTimes->{{3.4679953021612043`*^9, 3.467995305479766*^9}},
 CellLabel->"In[863]:="],

Cell[CellGroupData[{

Cell[BoxData["\"\<SomeString\>\""], "Input",
 CellChangeTimes->{{3.467995130936552*^9, 3.467995139721044*^9}, 
   3.467995341307497*^9},
 CellLabel->"In[864]:="],

Cell[BoxData["\<\"SomeString\"\>"], "Output",
 CellChangeTimes->{3.467995140139249*^9, 3.467995239963119*^9, 
  3.467995342392428*^9},
 CellLabel->"Out[864]="]
}, Open  ]],

Cell["See Also", "Heading2"]
}, Open  ]],

Cell[TextData[{
 "See the tutorial ",
 StyleBox["tutorial/TheMainLoop", "URL"],
 " for more information."
}], "Text",
 CellChangeTimes->{{3.472914657879757*^9, 3.472914660171624*^9}}]
},
AutoGeneratedPackage->None,
WindowToolbars->{"RulerBar", "EditBar"},
CellGrouping->Manual,
WindowSize->{903, 653},
WindowMargins->{{202, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingStartingPageNumber->719,
PrintingPageRange->{1, Automatic},
PageFooters->{{
   Cell[
    TextData[{
      CounterBox["Page"], 
      "\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]Chapter ", 
      CounterBox["ChapterLabel"], ":\[ThickSpace]\[ThickSpace]", 
      "Tricks of the Trade"}], "Footer"], None, None}, {None, None, 
   Cell[
    TextData[{
      CounterBox[
      "Page", CounterFunction :> (
        Part[{"", 
          "18.1\[ThickSpace]\[ThickSpace]Cleaning Up During Incremental \
Development\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.2\[ThickSpace]\[ThickSpace]Modifying Built-in Functions and \
Constants\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.2\[ThickSpace]\[ThickSpace]Modifying Built-in Functions and \
Constants\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.3\[ThickSpace]\[ThickSpace]Locating Undocumented Functions\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.3\[ThickSpace]\[ThickSpace]Locating Undocumented Functions\
\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.4\[ThickSpace]\[ThickSpace]Packaging Your Mathematica Solutions \
into Libraries for Others to Use\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.4\[ThickSpace]\[ThickSpace]Packaging Your Mathematica Solutions \
into Libraries for Others to Use\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.4\[ThickSpace]\[ThickSpace]Packaging Your Mathematica Solutions \
into Libraries for Others to Use\[ThickSpace]\[ThickSpace]\[ThickSpace]|\
\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.6\[ThickSpace]\[ThickSpace]Automating and Standardizing the \
Appearance of Notebooks Using Stylesheets\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.6\[ThickSpace]\[ThickSpace]Automating and Standardizing the \
Appearance of Notebooks Using Stylesheets\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.6\[ThickSpace]\[ThickSpace]Automating and Standardizing the \
Appearance of Notebooks Using Stylesheets\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.6\[ThickSpace]\[ThickSpace]Automating and Standardizing the \
Appearance of Notebooks Using Stylesheets\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.6\[ThickSpace]\[ThickSpace]Automating and Standardizing the \
Appearance of Notebooks Using Stylesheets\[ThickSpace]\[ThickSpace]\
\[ThickSpace]|\[ThickSpace]\[ThickSpace]\[ThickSpace]", 
          "18.7\[ThickSpace]\[ThickSpace]Transforming Notebooks into Other \
Forms\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.7\[ThickSpace]\[ThickSpace]Transforming Notebooks into Other \
Forms\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.7\[ThickSpace]\[ThickSpace]Transforming Notebooks into Other \
Forms\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.8\[ThickSpace]\[ThickSpace]Calling into the Mathematica \
Frontend\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.9\[ThickSpace]\[ThickSpace]Initializing and Cleaning Up \
Automatically\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "18.9\[ThickSpace]\[ThickSpace]Initializing and Cleaning Up \
Automatically\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\
\[ThickSpace]\[ThickSpace]", 
          "18.10\[ThickSpace]\[ThickSpace]Customizing Frontend User \
Interaction\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]", 
          "18.10\[ThickSpace]\[ThickSpace]Customizing Frontend User \
Interaction\[ThickSpace]\[ThickSpace]\[ThickSpace]|\[ThickSpace]\[ThickSpace]\
\[ThickSpace]"}, # - CurrentValue[
          InputNotebook[], PrintingStartingPageNumber] + 1]& )], 
      CounterBox["Page"]}], "Footer"]}},
ShowSelection->True,
CellLabelAutoDelete->False,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"ora.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "chAdvanced"->{
  Cell[618, 23, 148, 6, 52, "ChapterLabel",
   CounterAssignments->{{"ChapterLabel", 18}},
   CellTags->"chAdvanced"]},
 "Cleaning up"->{
  Cell[3218, 99, 335, 11, 52, "Heading1",
   CellTags->"Cleaning up"]},
 "Modifying Built-in Functions and Constants"->{
  Cell[13912, 403, 339, 12, 37, "Heading1",
   CellTags->"Modifying Built-in Functions and Constants"]},
 "Locating UnDocumented Functions"->{
  Cell[28423, 823, 334, 12, 28, "Heading1",
   CellTags->"Locating UnDocumented Functions"]},
 "Info3467913928-2917574"->{
  Cell[33598, 968, 4487, 70, 107, "Print",
   CellTags->"Info3467913928-2917574"],
  Cell[38088, 1040, 528, 15, 32, "Print",
   CellTags->"Info3467913928-2917574"]},
 "Info3467914425-5986742"->{
  Cell[39165, 1075, 196, 4, 31, "Print",
   CellTags->"Info3467914425-5986742"],
  Cell[39376, 1082, 1124, 32, 62, "Print",
   CellTags->"Info3467914425-5986742"]},
 "Packages"->{
  Cell[42717, 1170, 396, 13, 30, "Heading1",
   CellTags->"Packages"]},
 "Compiling"->{
  Cell[54012, 1484, 393, 14, 52, "Heading1",
   CellTags->"Compiling"]},
 "Stylesheets"->{
  Cell[61835, 1720, 478, 13, 52, "Heading1",
   CellTags->"Stylesheets"]},
 "fStylesheet1"->{
  Cell[101259, 2395, 219, 3, 34, "Figure Title",
   CellTags->"fStylesheet1"]},
 "fstylesheetEdit1"->{
  Cell[148722, 3191, 293, 6, 34, "Figure Title",
   CellTags->"fstylesheetEdit1"]},
 "fStyleshhetEdit2"->{
  Cell[212334, 4269, 203, 3, 34, "Figure Title",
   CellTags->"fStyleshhetEdit2"]},
 "fNumberedStyle"->{
  Cell[240414, 4779, 274, 5, 34, "Figure Title",
   CellTags->"fNumberedStyle"]},
 "fNumberedOptions1"->{
  Cell[307462, 5916, 324, 8, 34, "Figure Title",
   CellTags->"fNumberedOptions1"]},
 "fNumberedOptions2"->{
  Cell[353205, 6678, 227, 5, 34, "Figure Title",
   CellTags->"fNumberedOptions2"]},
 "Transforming Notebooks Into Other Forms"->{
  Cell[354630, 6722, 404, 11, 25, "Heading1",
   CellTags->"Transforming Notebooks Into Other Forms"]},
 "Calling into the Mathematica Front-End"->{
  Cell[375174, 7211, 413, 12, 35, "Heading1",
   CellTags->"Calling into the Mathematica Front-End"]},
 "Initializing and Cleaning Up Automatically"->{
  Cell[383943, 7454, 346, 11, 37, "Heading1",
   CellTags->"Initializing and Cleaning Up Automatically"]},
 "Customizing Front-End User Interaction"->{
  Cell[390577, 7666, 450, 11, 52, "Heading1",
   CellTags->"Customizing Front-End User Interaction"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"chAdvanced", 404720, 8014},
 {"Cleaning up", 404858, 8018},
 {"Modifying Built-in Functions and Constants", 404979, 8021},
 {"Locating UnDocumented Functions", 405122, 8024},
 {"Info3467913928-2917574", 405245, 8027},
 {"Info3467914425-5986742", 405440, 8032},
 {"Packages", 405620, 8037},
 {"Compiling", 405708, 8040},
 {"Stylesheets", 405799, 8043},
 {"fStylesheet1", 405893, 8046},
 {"fstylesheetEdit1", 405996, 8049},
 {"fStyleshhetEdit2", 406103, 8052},
 {"fNumberedStyle", 406208, 8055},
 {"fNumberedOptions1", 406314, 8058},
 {"fNumberedOptions2", 406423, 8061},
 {"Transforming Notebooks Into Other Forms", 406554, 8064},
 {"Calling into the Mathematica Front-End", 406703, 8067},
 {"Initializing and Cleaning Up Automatically", 406855, 8070},
 {"Customizing Front-End User Interaction", 407007, 8073}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 70, 1, 40, "Input"],
Cell[618, 23, 148, 6, 52, "ChapterLabel",
 CounterAssignments->{{"ChapterLabel", 18}},
 CellTags->"chAdvanced"],
Cell[769, 31, 158, 2, 51, "ChapterTitle"],
Cell[930, 35, 786, 23, 246, "Epigraph"],
Cell[1719, 60, 255, 4, 48, "EpigraphAuthor"],
Cell[CellGroupData[{
Cell[1999, 68, 208, 9, 52, "Heading1"],
Cell[2210, 79, 971, 15, 50, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3218, 99, 335, 11, 52, "Heading1",
 CellTags->"Cleaning up"],
Cell[CellGroupData[{
Cell[3578, 114, 40, 0, 61, "Heading2WithHeadAbove"],
Cell[3621, 116, 433, 7, 35, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4091, 128, 28, 0, 61, "Heading2"],
Cell[4122, 130, 538, 12, 39, "Text"],
Cell[4663, 144, 392, 8, 40, "Input"],
Cell[5058, 154, 596, 12, 37, "Text"],
Cell[5657, 168, 233, 6, 40, "Input"],
Cell[5893, 176, 294, 5, 20, "Text"],
Cell[CellGroupData[{
Cell[6212, 185, 118, 2, 40, "Input"],
Cell[6333, 189, 92, 1, 44, "Output"]
}, Open  ]],
Cell[6440, 193, 481, 9, 37, "Text"],
Cell[6924, 204, 291, 7, 60, "Input"]
}, Open  ]],
Cell[7230, 214, 30, 0, 61, "Heading2"],
Cell[7263, 216, 1471, 27, 67, "Text"],
Cell[8737, 245, 808, 14, 20, "Text"],
Cell[9548, 261, 138, 2, 40, "Input"],
Cell[9689, 265, 256, 7, 22, "Text"],
Cell[9948, 274, 423, 7, 20, "Text"],
Cell[CellGroupData[{
Cell[10396, 285, 152, 3, 40, "Input"],
Cell[10551, 290, 103, 2, 44, "Output"]
}, Open  ]],
Cell[10669, 295, 202, 2, 20, "Text"],
Cell[CellGroupData[{
Cell[10896, 301, 448, 12, 60, "Input"],
Cell[11347, 315, 103, 2, 44, "Output"]
}, Open  ]],
Cell[11465, 320, 259, 6, 22, "Text"],
Cell[CellGroupData[{
Cell[11749, 330, 225, 5, 60, "Input"],
Cell[11977, 337, 103, 2, 44, "Output"]
}, Open  ]],
Cell[12095, 342, 395, 12, 22, "Text"],
Cell[CellGroupData[{
Cell[12515, 358, 528, 13, 98, "Input"],
Cell[13046, 373, 103, 2, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13186, 380, 28, 0, 61, "Heading2"],
Cell[13217, 382, 668, 17, 19, "Text"]
}, Open  ]]
}, Open  ]],
Cell[13912, 403, 339, 12, 37, "Heading1",
 CellTags->"Modifying Built-in Functions and Constants"],
Cell[CellGroupData[{
Cell[14276, 419, 40, 0, 20, "Heading2WithHeadAbove"],
Cell[14319, 421, 536, 11, 45, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14892, 437, 41, 0, 20, "Heading2"],
Cell[14936, 439, 655, 10, 45, "Text"],
Cell[15594, 451, 471, 9, 45, "Text"],
Cell[CellGroupData[{
Cell[16090, 464, 199, 4, 16, "Input"],
Cell[16292, 470, 101, 1, 16, "Output"]
}, Open  ]],
Cell[16408, 474, 149, 2, 17, "Text"],
Cell[CellGroupData[{
Cell[16582, 480, 360, 10, 50, "Input"],
Cell[16945, 492, 69, 1, 16, "Output"]
}, Open  ]],
Cell[17029, 496, 647, 13, 43, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17713, 514, 64, 1, 27, "Heading2"],
Cell[17780, 517, 1071, 17, 97, "Text"],
Cell[CellGroupData[{
Cell[18876, 538, 259, 8, 16, "Input"],
Cell[19138, 548, 203, 3, 16, "Output"]
}, Open  ]],
Cell[19356, 554, 375, 6, 32, "Text"],
Cell[CellGroupData[{
Cell[19756, 564, 271, 7, 16, "Input"],
Cell[20030, 573, 580, 15, 16, "Output"]
}, Open  ]],
Cell[20625, 591, 514, 10, 45, "Text"],
Cell[21142, 603, 653, 18, 39, "Input"],
Cell[21798, 623, 171, 6, 16, "Input"],
Cell[21972, 631, 161, 4, 16, "Output"],
Cell[22136, 637, 303, 7, 17, "Text"],
Cell[CellGroupData[{
Cell[22464, 648, 205, 6, 16, "Input"],
Cell[22672, 656, 357, 12, 16, "Output"]
}, Open  ]],
Cell[23044, 671, 191, 3, 17, "Text"],
Cell[23238, 676, 157, 3, 16, "Input"],
Cell[CellGroupData[{
Cell[23420, 683, 205, 6, 16, "Input"],
Cell[23628, 691, 558, 15, 16, "Output"]
}, Open  ]],
Cell[24201, 709, 950, 20, 55, "Text"],
Cell[CellGroupData[{
Cell[25176, 733, 598, 15, 16, "Input"],
Cell[25777, 750, 279, 4, 16, "Output"]
}, Open  ]],
Cell[26071, 757, 864, 16, 56, "Text"],
Cell[CellGroupData[{
Cell[26960, 777, 1338, 39, 52, "Input"],
Cell[28301, 818, 95, 1, 16, "Output"]
}, Open  ]]
}, Open  ]],
Cell[28423, 823, 334, 12, 28, "Heading1",
 CellTags->"Locating UnDocumented Functions"],
Cell[28760, 837, 106, 1, 20, "Heading2WithHeadAbove"],
Cell[28869, 840, 193, 4, 32, "Text"],
Cell[29065, 846, 129, 2, 25, "Heading2"],
Cell[29197, 850, 542, 12, 32, "Text"],
Cell[29742, 864, 439, 9, 17, "Input"],
Cell[30184, 875, 908, 23, 35, "Output"],
Cell[CellGroupData[{
Cell[31117, 902, 396, 10, 36, "Input"],
Cell[31516, 914, 827, 21, 53, "Output"]
}, Open  ]],
Cell[32358, 938, 129, 2, 23, "Heading2"],
Cell[32490, 942, 865, 15, 54, "Text"],
Cell[CellGroupData[{
Cell[33380, 961, 215, 5, 33, "Input"],
Cell[33598, 968, 4487, 70, 107, "Print",
 CellTags->"Info3467913928-2917574"],
Cell[38088, 1040, 528, 15, 32, "Print",
 CellTags->"Info3467913928-2917574"]
}, Open  ]],
Cell[38631, 1058, 255, 6, 18, "Text"],
Cell[CellGroupData[{
Cell[38911, 1068, 251, 5, 33, "Input"],
Cell[39165, 1075, 196, 4, 31, "Print",
 CellTags->"Info3467914425-5986742"]
}, Open  ]],
Cell[39376, 1082, 1124, 32, 62, "Print",
 CellTags->"Info3467914425-5986742"],
Cell[40503, 1116, 809, 14, 36, "Text"],
Cell[CellGroupData[{
Cell[41337, 1134, 192, 4, 40, "Input",
 InitializationCell->False],
Cell[41532, 1140, 688, 12, 45, "Message"]
}, Open  ]],
Cell[42235, 1155, 94, 1, 61, "Heading2"],
Cell[42332, 1158, 382, 10, 22, "Text"],
Cell[42717, 1170, 396, 13, 30, "Heading1",
 CellTags->"Packages"],
Cell[CellGroupData[{
Cell[43138, 1187, 40, 0, 38, "Heading2WithHeadAbove"],
Cell[43181, 1189, 268, 5, 20, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43486, 1199, 62, 1, 31, "Heading2"],
Cell[43551, 1202, 375, 6, 35, "Text"],
Cell[43929, 1210, 1213, 35, 216, "Code"]
}, Open  ]],
Cell[45157, 1248, 86, 1, 20, "Heading2"],
Cell[45246, 1251, 1201, 24, 71, "Text"],
Cell[46450, 1277, 553, 16, 22, "Text"],
Cell[47006, 1295, 177, 2, 34, "Code"],
Cell[47186, 1299, 1307, 32, 34, "Text"],
Cell[48496, 1333, 1938, 48, 155, "Code"],
Cell[50437, 1383, 1738, 44, 235, "Code"],
Cell[CellGroupData[{
Cell[52200, 1431, 84, 1, 22, "Heading2"],
Cell[52287, 1434, 395, 10, 20, "Text"],
Cell[52685, 1446, 491, 13, 20, "Text"],
Cell[53179, 1461, 818, 20, 35, "Text"]
}, Open  ]],
Cell[54012, 1484, 393, 14, 52, "Heading1",
 CellTags->"Compiling"],
Cell[CellGroupData[{
Cell[54430, 1502, 40, 0, 38, "Heading2WithHeadAbove"],
Cell[54473, 1504, 272, 7, 20, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54782, 1516, 28, 0, 61, "Heading2"],
Cell[54813, 1518, 1154, 27, 39, "Text"],
Cell[55970, 1547, 749, 21, 60, "Input"],
Cell[CellGroupData[{
Cell[56744, 1572, 408, 11, 60, "Input"],
Cell[57155, 1585, 245, 6, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57437, 1596, 158, 3, 40, "Input"],
Cell[57598, 1601, 177, 4, 44, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57824, 1611, 30, 0, 61, "Heading2"],
Cell[57857, 1613, 1595, 40, 110, "Text"],
Cell[59455, 1655, 201, 3, 18, "TableTitle"],
Cell[59659, 1660, 1362, 40, 144, "Table"],
Cell[61024, 1702, 774, 13, 80, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61835, 1720, 478, 13, 52, "Heading1",
 CellTags->"Stylesheets"],
Cell[CellGroupData[{
Cell[62338, 1737, 40, 0, 21, "Heading2WithHeadAbove"],
Cell[62381, 1739, 576, 9, 58, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62994, 1753, 62, 1, 27, "Heading2"],
Cell[63059, 1756, 1115, 19, 84, "Text"]
}, Open  ]],
Cell[64189, 1778, 37067, 615, 141, "Figure"],
Cell[101259, 2395, 219, 3, 34, "Figure Title",
 CellTags->"fStylesheet1"],
Cell[101481, 2400, 2041, 40, 162, "Text"],
Cell[103525, 2442, 45194, 747, 162, "Figure"],
Cell[148722, 3191, 293, 6, 34, "Figure Title",
 CellTags->"fstylesheetEdit1"],
Cell[149018, 3199, 43, 0, 20, "Heading2"],
Cell[149064, 3201, 2053, 50, 123, "Text"],
Cell[151120, 3253, 947, 18, 71, "Text"],
Cell[152070, 3273, 60261, 994, 168, "Figure"],
Cell[212334, 4269, 203, 3, 34, "Figure Title",
 CellTags->"fStyleshhetEdit2"],
Cell[212540, 4274, 1903, 47, 118, "Text"],
Cell[214446, 4323, 2120, 43, 162, "Text"],
Cell[216569, 4368, 1341, 32, 71, "Text"],
Cell[217913, 4402, 22498, 375, 128, "Figure"],
Cell[240414, 4779, 274, 5, 34, "Figure Title",
 CellTags->"fNumberedStyle"],
Cell[240691, 4786, 2884, 72, 158, "Text"],
Cell[243578, 4860, 63881, 1054, 200, "Figure"],
Cell[307462, 5916, 324, 8, 34, "Figure Title",
 CellTags->"fNumberedOptions1"],
Cell[307789, 5926, 45413, 750, 124, "Figure"],
Cell[353205, 6678, 227, 5, 34, "Figure Title",
 CellTags->"fNumberedOptions2"],
Cell[353435, 6685, 263, 5, 19, "Text"],
Cell[353701, 6692, 343, 8, 24, "h1"],
Cell[354047, 6702, 271, 7, 24, "h2"],
Cell[354321, 6711, 294, 8, 24, "h3"]
}, Open  ]],
Cell[354630, 6722, 404, 11, 25, "Heading1",
 CellTags->"Transforming Notebooks Into Other Forms"],
Cell[CellGroupData[{
Cell[355059, 6737, 40, 0, 20, "Heading2WithHeadAbove"],
Cell[355102, 6739, 470, 10, 45, "Text"]
}, Open  ]],
Cell[355587, 6752, 28, 0, 31, "Heading2"],
Cell[355618, 6754, 986, 23, 58, "Text"],
Cell[356607, 6779, 3139, 81, 230, "Input"],
Cell[359749, 6862, 220, 4, 19, "Text"],
Cell[359972, 6868, 340, 9, 16, "Input"],
Cell[360315, 6879, 8069, 152, 533, "Output"],
Cell[368387, 7033, 43, 0, 20, "Heading2"],
Cell[368433, 7035, 720, 12, 71, "Text"],
Cell[369156, 7049, 2069, 52, 149, "Text"],
Cell[371228, 7103, 591, 10, 58, "Text"],
Cell[371822, 7115, 1625, 44, 119, "Input"],
Cell[373450, 7161, 588, 15, 45, "Text"],
Cell[374041, 7178, 456, 11, 28, "Input"],
Cell[374500, 7191, 41, 0, 20, "Heading2"],
Cell[374544, 7193, 605, 14, 45, "Text"],
Cell[CellGroupData[{
Cell[375174, 7211, 413, 12, 35, "Heading1",
 CellTags->"Calling into the Mathematica Front-End"],
Cell[CellGroupData[{
Cell[375612, 7227, 40, 0, 21, "Heading2WithHeadAbove"],
Cell[375655, 7229, 322, 6, 32, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376014, 7240, 62, 1, 29, "Heading2"],
Cell[376079, 7243, 916, 16, 71, "Text"],
Cell[CellGroupData[{
Cell[377020, 7263, 552, 11, 26, "Input"],
Cell[377575, 7276, 233, 6, 21, "Emphasis"]
}, Open  ]]
}, Open  ]],
Cell[377835, 7286, 453, 8, 32, "Text"],
Cell[378291, 7296, 189, 4, 16, "Input"],
Cell[378483, 7302, 880, 22, 58, "Text"],
Cell[379366, 7326, 162, 5, 39, "Code"],
Cell[379531, 7333, 257, 5, 19, "Text"],
Cell[379791, 7340, 86, 1, 20, "Heading2"],
Cell[379880, 7343, 307, 6, 32, "Text"],
Cell[380190, 7351, 141, 2, 16, "Input"],
Cell[380334, 7355, 760, 14, 58, "Text"],
Cell[CellGroupData[{
Cell[381119, 7373, 1054, 24, 50, "Input"],
Cell[382176, 7399, 162, 3, 16, "Output"]
}, Open  ]],
Cell[382353, 7405, 94, 1, 31, "Heading2"]
}, Open  ]],
Cell[382462, 7409, 455, 11, 32, "Text"],
Cell[382920, 7422, 586, 16, 32, "Text"],
Cell[383509, 7440, 409, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[383943, 7454, 346, 11, 37, "Heading1",
 CellTags->"Initializing and Cleaning Up Automatically"],
Cell[CellGroupData[{
Cell[384314, 7469, 40, 0, 21, "Heading2WithHeadAbove"],
Cell[384357, 7471, 335, 6, 32, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384729, 7482, 28, 0, 31, "Heading2"],
Cell[384760, 7484, 392, 8, 32, "Text"],
Cell[385155, 7494, 260, 5, 19, "Text"],
Cell[CellGroupData[{
Cell[385440, 7503, 321, 8, 16, "Input"],
Cell[385764, 7513, 136, 2, 16, "Output"]
}, Open  ]],
Cell[385915, 7518, 285, 6, 19, "Text"],
Cell[CellGroupData[{
Cell[386225, 7528, 275, 7, 16, "Input"],
Cell[386503, 7537, 155, 3, 16, "Output"]
}, Open  ]],
Cell[386673, 7543, 309, 5, 20, "Text"],
Cell[CellGroupData[{
Cell[387007, 7552, 371, 9, 40, "Input"],
Cell[387381, 7563, 140, 2, 44, "Output"]
}, Open  ]],
Cell[387536, 7568, 286, 6, 20, "Text"],
Cell[CellGroupData[{
Cell[387847, 7578, 303, 8, 40, "Input"],
Cell[388153, 7588, 179, 3, 44, "Output"]
}, Open  ]],
Cell[388347, 7594, 203, 4, 20, "Text"],
Cell[388553, 7600, 300, 7, 22, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388890, 7612, 30, 0, 61, "Heading2"],
Cell[388923, 7614, 590, 13, 37, "Text"],
Cell[389516, 7629, 284, 5, 20, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[389837, 7639, 28, 0, 61, "Heading2"],
Cell[389868, 7641, 459, 12, 22, "Text"],
Cell[390330, 7655, 198, 5, 20, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390577, 7666, 450, 11, 52, "Heading1",
 CellTags->"Customizing Front-End User Interaction"],
Cell[CellGroupData[{
Cell[391052, 7681, 40, 0, 61, "Heading2WithHeadAbove"],
Cell[391095, 7683, 340, 6, 20, "Text"]
}, Open  ]],
Cell[391450, 7692, 28, 0, 61, "Heading2"],
Cell[391481, 7694, 1709, 46, 71, "Text"],
Cell[393193, 7742, 2615, 57, 212, "Input"],
Cell[395811, 7801, 572, 12, 117, "Input"],
Cell[396386, 7815, 546, 14, 22, "Text"],
Cell[396935, 7831, 536, 11, 60, "Input"],
Cell[397474, 7844, 53, 0, 61, "Heading2"],
Cell[397530, 7846, 684, 12, 37, "Text"],
Cell[398217, 7860, 393, 11, 40, "Input"],
Cell[CellGroupData[{
Cell[398635, 7875, 188, 3, 40, "Input"],
Cell[398826, 7880, 188, 3, 43, "Output"]
}, Open  ]],
Cell[399029, 7886, 139, 2, 19, "Text"],
Cell[399171, 7890, 151, 3, 16, "Input"],
Cell[CellGroupData[{
Cell[399347, 7897, 161, 3, 16, "Input"],
Cell[399511, 7902, 159, 3, 16, "Output"]
}, Open  ]],
Cell[399685, 7908, 28, 0, 31, "Heading2"]
}, Open  ]],
Cell[399728, 7911, 183, 5, 19, "Text"]
}
]
*)
(* End of internal cache information *)
